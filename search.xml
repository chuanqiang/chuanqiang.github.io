<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[干杯，朋友]]></title>
      <url>http://chuanqiang.github.io/2018/06/17/%E5%B9%B2%E6%9D%AF%EF%BC%8C%E6%9C%8B%E5%8F%8B/</url>
      <content type="html"><![CDATA[<p><img src="http://oeckzejn4.bkt.clouddn.com/20180617152922829457807.png" alt=""></p>
<a id="more"></a>
<p>离职代表着离别，<br>诗人说，每一次告别是一次死亡。<br>看你消失在暮霭里，<br>连同一段春天的记忆。</p>
<p>短暂的午餐，<br>融洽的交谈，<br>吃的很少，犹如你的话语和矜持。<br>丝毫不像个东北汉子，<br>细致、单纯而又孩子气。</p>
<p>你走后，<br>宛如一阵风拂过<br>亦如一种味道的消散。<br>交点过后飞驰而过的直线，<br>有过焦点，<br>却又相去甚远。</p>
<p>某个发呆的午后，<br>思绪蔓延，<br>回忆里，<br>阳光映照我们的脸。</p>
<p>干杯，朋友！<br>喝下这杯酒，<br>味道消散，<br>时光永远。</p>
]]></content>
      
        <categories>
            
            <category> 为你写诗 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 诗 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[iPad 初体验]]></title>
      <url>http://chuanqiang.github.io/2018/06/04/iPad%20%E5%88%9D%E4%BD%93%E9%AA%8C/</url>
      <content type="html"><![CDATA[<p>趁着 618 的有活动，终于入手了 2018 new iPad ，至此我的 Apple 生态圈又壮大了一步：现在手中有 mac book pro、iPhone7、new iPad 2018 以及 Beats  Solo 3。不得不说苹果生态圈的强大，一旦你有超过两台的  apple 产品，你就会体会到苹果自家产品间的交互和共生互利的优质体验。不管在 App上，在云服务，数据的传输和共享方面都存在效率和体验上的升华。</p>
<p><img src="http://oeckzejn4.bkt.clouddn.com/20180604152809073239290.jpg" alt="iPad.jpg"></p>
<a id="more"></a>
<p>比如，我的新 iPad 刚到手一开机，我的iPhone 就有一个弹框，通过指纹确认的方式来把新 iPad 加入到你的 icloud，然后你的手机数据就会自动同步过去，不管是照片、软件、文件，哪怕是 WIFI 都会自动保存密码并连接。如此的便利性，让你上手 iPad 变得低成本化。同样的 ios 系统，我用起 ipad 来得心应手，当然有一些手势交互因为大屏幕的关系会有适配从而和 iPhone 不同。</p>
<p>iPad 用起来，就一个字：爽。那种大屏幕大视野带来的视觉冲击感，主要集中体现在阅读、视频和游戏。Retina 显示屏，一整块的玻璃宛如一汪清水，晶莹剔透，水下是一个精彩纷呈的互联网世界，鞠一捧清水，尝一口甘冽，就像刚换了座驾的机车爱好者，尽情享受耳旁呼啸而过的风和动人的风景。</p>
<p><img src="http://oeckzejn4.bkt.clouddn.com/20180604152809081247753.jpg" alt="iPad.jpg"></p>
<p>这款 iPad 是 9.7.英寸的 Retina 屏幕，配置是32G WLAN版/A10 芯片/银色，和以往的 iPad 相差无几，做工一流，一股浓浓的苹果风格。当然关于硬件上的缺点也是有的：</p>
<ol>
<li>没有 3D touch，这是一个用顺手就再也回不去的功能。</li>
<li>边框宽，尤其是额头和下巴，这几年被全面屏调教的审美已经看不惯这种大额头下巴的设计（此处心疼魅族一分钟）。</li>
</ol>
<p>当然，对于两千多的售价，也不能对它太苛刻，这样的性价比已经感觉很值了。</p>
<p>关于 iPad 的生产力之说，网上也是沸沸扬扬，莫衷一是。其实我觉得虽然这是一个『萝卜白菜各有所爱』的话题，但也并不是没有讨论的必要，通过这种探讨可以拓宽我们对 iPad 的使用场景的认知，以及对自己所需的生产力和生产工具的辩证思考。</p>
<p>现代人常常陷入到一种工具迷思中。所谓工具迷思，就是希望通过某个特定工具完成一系列任务的念想，然而在越来越复杂的现代社会里，即便是某个特定领域，一方面由于应用或工具自身的局限性，另一方面则是事件的复杂性，很难出现这样一个能够完成所有流程的工具。</p>
<p>所以不要陷入工具的迷思，任何工具的使用都应该从自身的需求出发，从而让工具服务于生活，再而延伸我们的生活场景。</p>
<p>相信通过一段时间的探索，我能找到这款设备在生活中最佳的适应点，然后让它最大化的发光发热，并且在上边发现和探索一些有趣有用有料的 APP ，让科技产品更好的为生活造就幸福感。</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 产品 </tag>
            
            <tag> iPad </tag>
            
            <tag> apple </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[大千世界 - 歌评]]></title>
      <url>http://chuanqiang.github.io/2018/06/01/%E5%A4%A7%E5%8D%83%E4%B8%96%E7%95%8C%20-%20%E6%AD%8C%E8%AF%84/</url>
      <content type="html"><![CDATA[<p>今天是 2018年6月1号，国际儿童节，当我们沉浸在儿童节的氛围中时（虽然我们都已不再是儿童，但并不妨碍我们过节日），许嵩已经在另一座山头像我们招手了。他选择在这一天发布一首新歌，叫做《大千世界》。开始没听懂，听了几遍才明白这不是一首普通的歌，而是这是一首献给叙利亚儿童的儿童节反战礼物。<br><img src="http://oeckzejn4.bkt.clouddn.com/20180601152782485610264.jpg" alt="大千世界 专辑封面.jpg"><br><a id="more"></a></p>
<p>歌词如下：</p>
<blockquote>
<p>大到有些滑稽，<br>像沙漠连夜大雨，<br>规则缺席，<br>亦真亦假的玩具，<br>还握在你手里，<br>吃透温柔的暴力就不称奇，<br>我的黑框眼镜在Assad湖边走火，<br>风马牛齐聚，<br>你被带走时我亲吻了你下颌的伤疤，<br>表情很平静，<br>你是大千世界一汪清泉，<br>还是泉边那只神秘孔雀，<br>在和你灵魂谋面之前，<br>让贪念趁火打劫，<br>你是大千世界尘埃等闲，<br>也是我仅有的风花雪月，<br>爱死或是恨终我都感谢，<br>万花筒里消受幻影碎片，<br>你穿着我的T恤，<br>大到有些滑稽，<br>像沙漠连夜大雨，<br>规则缺席，<br>亦真亦假的玩具，<br>还握在你手里，<br>吃透温柔的暴力就不称奇，<br>我的黑框眼镜在Assad湖边走火，<br>风马牛齐聚，<br>你被带走时我亲吻了你下颌的伤疤，<br>表情很平静，<br>你是大千世界一汪清泉，<br>还是泉边那只神秘孔雀，<br>在和你灵魂谋面之前，<br>让贪念趁火打劫，<br>你是大千世界尘埃等闲，<br>也是我仅有的风花雪月，<br>爱死或是恨终我都感谢，<br>万花筒里消受，<br>你是大千世界一汪清泉，<br>还是泉边那只神秘孔雀，<br>在和你灵魂谋面之前，<br>让贪念趁火打劫，<br>你是大千世界过眼云烟，<br>也是我仅有的夺目闪电，<br>躁动或是寡言我都奉献，<br>万花筒里留下真切纪念。</p>
</blockquote>
<p>歌词信息量大，像是一篇深刻的现代诗。歌词内容有许多映射和隐喻的东西，让人想起村上春树的小说。比如歌长4分15秒，映射17年4月15日致68名儿童死亡的叙利亚炸弹袭袭击事件。还有写『孔雀』的歌词，那是2月26日，在瑞士日内瓦联合国万国宫，一只孔雀落在正举行叙利亚和谈的建筑门上，之后25日发生在叙利亚中部城市霍姆斯的恐怖袭击案搅动了正在进行的日内瓦和谈。再有歌中颤音的失真处理是表达战火连天里那个失真世界的荒诞感。</p>
<p>大千世界寓意东方的禅意——但又以西方的音乐形态作为曲风基地，令人耳目一新。整首歌都以一种荒诞黑色的曲调来叙述一些荒诞和蒙太奇风格的场景，但是你能感受到一种讽刺、控诉和对现实的悲情以及无力感。</p>
<p>作品围绕一场救赎展开叙事，逐步推演至对『幻想与现实』、『大千世界与小我』展开思辨，在精心拣选的意向中传达多层次含义，这是许嵩标志性的一词多义的语言系统。他的作品总有鲜明的个人腔调和深刻的内核，他的作品已经不完全是一首歌本身，而是借助音乐的载体表达更多东西，那是每一个艺术家都在追求的。</p>
<p>总之，为歌点赞，同时也为战争中的儿童祈愿。</p>
<ul>
<li>参考资料：网易云音乐iPad 初体验</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 乐评 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 许嵩 </tag>
            
            <tag> 乐评 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[如何做一个优秀的开发工程师]]></title>
      <url>http://chuanqiang.github.io/2018/05/28/%E5%A6%82%E4%BD%95%E5%81%9A%E4%B8%80%E4%B8%AA%E4%BC%98%E7%A7%80%E7%9A%84%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/</url>
      <content type="html"><![CDATA[<p>写代码是一个程序员的本职工作，但是除了写出出色的代码，还有其他什么也是一个优秀工程师的必备？最近刚从百度离职的大牛陆奇有一个百度内部的分享 Engineering Leadership Talk，我觉得对自己很有启发。他提到五点：<br><img src="http://oeckzejn4.bkt.clouddn.com/20180528152752026159444.png" alt="陆奇.png"><br><a id="more"></a></p>
<h3 id="Believe-in-技术"><a href="#Believe-in-技术" class="headerlink" title="Believe in 技术"></a>Believe in 技术</h3><p>盖茨提到微软公司的宗旨就是：<strong>写软件代表的是世界的将来</strong>。未来任何一个工业都会变成软件工业。盖茨是对的，因为任何工业任何行业自动化的程度会越来越高，最后你所处理的就是信息和知识。但现在软件的做法又往前提了一次，因为在人工智能时代，不光是写代码，你必须懂算法，懂硬件，懂数据，整个人工智能的开发过程有一个很大程度的提高，但是，技术，特别是我们这个工业所代表的技术一定是将来任何工业的前沿。</p>
<p>所以我们一定要有一个坚定不移的深刻的理念，相信<strong>整个世界终究是为技术所驱动的。</strong></p>
<h3 id="站在巨人的肩膀上做创新"><a href="#站在巨人的肩膀上做创新" class="headerlink" title="站在巨人的肩膀上做创新"></a>站在巨人的肩膀上做创新</h3><p>为什么现在创新速度那么快？主要是起点高了。我们可以使用的代码模块，使用的服务的能力，都是大大的提升。</p>
<p>我现在的要求是，每一次你写一行新的代码，第一要做的，先想一想你这行代码值得不值得写，是不是有人已经做了同样的工作，可能做得比你还好一点。有没有其他人已经解决这个问题，然后你可以<strong>把你的时间放在更好的创新上</strong>。</p>
<p>我再强调，在大公司内部，你写代码之前想一想，你这行代码要不要写，是不是别人已经有了，站在别人的肩膀上去做这件事情。</p>
<h3 id="追求Engineering-Excellence"><a href="#追求Engineering-Excellence" class="headerlink" title="追求Engineering Excellence"></a>追求Engineering Excellence</h3><p>Engineering Excellence，工程的技术的卓越性和能力。</p>
<p>所以 Engineering Excellence 是一个永无止境的、个人的、团队的，能力的追求和工具平台的创新，综合在一起可以给我们带来的长期的、核心的竞争力，为社会创造价值，最终的目的是给每个用户、每个企业、整个社会创造价值。</p>
<p>我另外还要在这里强调的一点就是Relentless pursuit of excellence：永无止境的不断的持续的追求。</p>
<h3 id="每天学习"><a href="#每天学习" class="headerlink" title="每天学习"></a>每天学习</h3><p>每天学习，可能是对每个人都是最最重要的。</p>
<p>我今天分享一下，我自己怎么想我自己的。就很简单一个概念，<strong>我把自己想象是一个软件、一个代码，今天的版本一定要比昨天版本好，明天的版本肯定会比今天好</strong>，因为即使犯了错误，我里面有If statement，说如果见到这个错误，绝对不要再犯。英语，另外有一句说法就是Life is too short, don’t live the same day twice. 同样一天不要重活两次。每天都是不一样，每天为什么不一样，因为每天都变成最好，每天都变得更好。今天的版本一定要比昨天好，每个好的、杰出的工程师，杰出的技术领袖，一定要保持自己学习的能力，特别是学习的范围。</p>
<h3 id="Ownership"><a href="#Ownership" class="headerlink" title="Ownership"></a>Ownership</h3><p>最后是从我做起。</p>
<p>我们公司有个非常大的使命，用科技让复杂的世界更简单。整个世界非常非常复杂，人其实所做的事情基本上都是Reduce entropy。</p>
<p>因为从热力学第二定律来讲，世界是会变得越来越乱的，我们想做的事情就是把它变的更简单，让我们生活变得更美好。</p>
<hr>
<p>Believe in 技术、站在巨人的肩膀上做创新、追求Engineering Excellence、每天学习、Ownership，陆奇送给每一位工程师的建议，你 get 到了吗 ？</p>
<ul>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzAxNjc1OTc2Mg==&amp;mid=2653629370&amp;idx=1&amp;sn=24d58a79d7ac0cf30f6748ec6caa9898&amp;chksm=80306507b747ec11c0d3cfbea832d6a925d6e3873562018e1abfcadaed1f68c4962d0695fba4&amp;mpshare=1&amp;scene=1&amp;srcid=0528NpKUBXAUaOQNBqj83MZy#rd" target="_blank" rel="external">原文</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 成长 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 成长 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[我的第一块滑板]]></title>
      <url>http://chuanqiang.github.io/2018/05/26/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E5%9D%97%E6%BB%91%E6%9D%BF/</url>
      <content type="html"><![CDATA[<p>昨天我的滑板到了，是的，我买了一个滑板，在25岁的年纪。</p>
<p><img src="http://oeckzejn4.bkt.clouddn.com/20180526152732152825243.png" alt="滑板.png"></p>
<a id="more"></a>
<p>这是一个大鱼板，一豹大鲨鱼3，枫木鱼板。之所以买个滑板玩，是因为『冲动』。没错，一开始是偶然看到一款电动滑板——小飞板，想用来代步，但是转念一想，同样都是滑板，为什么不纯粹一点，直接买个普通滑板呢？此时脑海中出现了一幅幅旧时的画面。高中大学的时候，看到那些酷酷的少年划着滑板在街上飞驰，在人群中呼啸而过，看着这些自由自在的追风少年，当时我也是好生羡慕，也畅想自己要是也这样该多特么帅。然后，就没有然后了，到底什么时候把这些忘却了的呢？</p>
<p>现在，这点小火苗在心中摇曳，禁不住的想买一个滑板，完成旧时的愿望。这种想法如星星之火，终于以燎原之势，促使我『冲动』的买了这款滑板。决心多加练习，早起成为御风而行的『滑板少年』。</p>
<p>有时候冲动是魔鬼，有时候冲动也是勇气，抑制住自己往往可能会擦肩而过，而选择放心大胆干却能有不一样的结果。</p>
<p><img src="http://oeckzejn4.bkt.clouddn.com/20180526152732304011579.png" alt="滑板.png"><br>滑板 Skateboard 项目不但是刷街耍帅必备，也是极限运动历史的鼻祖，许多的极限运动项目均由滑板项目延伸而来。20世纪50年代末60年代初由冲浪运动演变而成的滑板运动。因为冲浪受地理和气候条件影响比较大，而滑板拥有非常大的自由性，所以在阳光明媚的南加州海滩社区就诞生了世界上第一块滑板。滑板等极限运动与传统的体育运动项目有着明显的区别，它不拘泥于单一形式，需要滑手发挥自己的想象力，在运动的过程中发挥自己的灵感，发挥潜力，注重身心的自由，从而体验创造的喜悦感。</p>
<p>上班后的生活枯燥而充满压力，滑板可以在刺激和挥汗如雨中排解压力，挑战自己的极限，挑战你本能上就惧怕的东西，就像我看到的一句话：</p>
<blockquote>
<p>滑板不仅仅是一种生活方式，更是一种追求自由与冒险的生活态度。超越地心引力和规则的束缚，才是真正玩滑板的魂。踏着一块四方板，怀揣着永不言败的信仰，书写着不羁的生活。在青春中张扬自我，在运动中不负韶光。</p>
</blockquote>
<p>希望通过滑板能够更多的发现生活中的乐趣，更加热爱自己的生活，找到另外一个真实的自己。</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 滑板 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[锤子新品发布会]]></title>
      <url>http://chuanqiang.github.io/2018/05/21/%E9%94%A4%E5%AD%90%E6%96%B0%E5%93%81%E5%8F%91%E5%B8%83%E4%BC%9A/</url>
      <content type="html"><![CDATA[<p>锤子终于发布了新产品，2018年5月15日，老罗在鸟巢发布新品。这次的发布会宣传空前，因为号称要发布革命性的产品，并且在官网上上架了成人纸尿裤，意思是『不要被吓尿』。这样的噱头当然也获得了万众瞩目，大麦网上一票难求，偌大的鸟巢体育场座无虚席。</p>
<p><img src="http://oeckzejn4.bkt.clouddn.com/20180521152691323158781.png" alt="20180521152691323158781.png"></p>
<a id="more"></a>
<p>发布会发布了两款产品，手机 R1 和 Smartisan  TNT 工作站。手机颜值很高，采用了『美人尖』异形屏，3499起，四曲面3D玻璃后壳带来的剔透感很难用言语来形容，从某种意义上讲，坚果R1的背部让我想起了曾经的T2。黑得纯粹、摸着舒服，配上红铜色的logo，使得其观感相当不俗。采用了6.17寸显示屏，长宽比为18.7:9，屏占比84%，分辨率为2242x1080，对比度1500:1，覆盖100% P3色域，外观十分优秀。遗憾的是仍旧没有把屏占比做到极致。另外，最高达1T的内存肯定不是只给手机用的，而是揭示了以后锤子科技要做生态的野心。之后发布的 TNT 工作站也同样有所映射。不同于 Windows 10、MacOS，锤子直接在这款工作站上启用了新的Smartisan OS 6.0系统，依然是基于Android系统，老罗称之为“次时代的Smartisan OS”，并由TNT、Crystal Ball和Poker Dealer 三大功能构成。采用触屏 + 语音控制的交互方式。<br><img src="http://oeckzejn4.bkt.clouddn.com/20180521152691301388839.png" alt="20180521152691301388839.png"></p>
<p>从心底说，TNT的产品形态并不具有颠覆性，也实在称不上是『革命性』的产品，原因只有一个，使用场景狭窄，不具备高效的生产力。它对普通用户来说，和一款大屏幕的可触摸操作的平板电脑、拓展坞并没有本质的不同，而对需要编程或者CAD、Photoshop 这样的用户来说，可以说是很鸡肋的产品，并且售价过高，很难笼络消费者。老罗最大的误区，在我看来，就是错把个人的需求当做大众用户的需求了。当然创新是有的，而且作为一家小公司，在摸爬滚打6年里，求生存立住脚跟的同时，竟然能有自己的追求和创新，这一点在日益同质化的当下科技圈实属珍贵。</p>
<p>这场发布会我认为在内容上是成功的，提升了锤子的影响力和观众认知度，开拓了新航线，展示了这家公司的实力和野心；但在运营上是失败的，开始给观众的期望值太高了，发布会看下来远远没有达到心理预期，这就会对市场造成很大的影响。</p>
<p>无论老罗这次发布会成功与否，我相信都不会影响锤子这家公司的命运，也不会影响老罗的命运，因为在我看来老罗正是海明威笔下只能被打到，不能被战胜的那类人，并且欣赏老罗这种想去改变一下这个世界并且真的为之付出努力的人，也愿意看着他颠覆世界。</p>
<p>老罗，加油。</p>
]]></content>
      
        <categories>
            
            <category> 科技 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 科技 </tag>
            
            <tag> 手机 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[唐人街探案 2]]></title>
      <url>http://chuanqiang.github.io/2018/04/16/%E5%94%90%E4%BA%BA%E8%A1%97%E6%8E%A2%E6%A1%88%202/</url>
      <content type="html"><![CDATA[<blockquote>
<p>世上没有真正完美的犯罪，其实真相一直就在我们眼前，只不过还没有被发现。</p>
</blockquote>
<p><img src="http://oeckzejn4.bkt.clouddn.com/20180416152387178896838.png" alt="唐人街探案海报.png"></p>
<a id="more"></a>
<p>因为『唐人街探案1』的惊艳，所以一直就想看陈思诚之后会给观众带来的什么惊喜。果然，《唐人街探案2》，更大的制作成本，更浓重的商业娱乐模式，更宏大的结构逻辑，也讲述了一副更复杂的牌局，是一部精心打磨的悬疑喜剧商业大片。</p>
<p>这次的故事发生在纽约，讲述的是一个杀人连环案，犯罪分子是一个拥有华人女友的美国法医，因为妻子癌症去世和自己也患上癌症而对科学和上帝都失去了信心，转而通过中国的『道』来拯救自己，策划了一个按照道家阴阳五行金木水火土来选择受害人、作案时间和地点来进行犯罪并活人取器官完成祭祀的行动。当然，案情肯定不止这么简单，局中局，骗中骗，案中案，一直是这个系列的招牌，这次也是，另一个主线是宋义借助这个连环杀人案进行了一次『顺风车』作案，杀死了贩卖自己妹妹的恶霸陆国富。这是两条案件并行一起走，一条是法医杀人取器官连环杀人案件，一条是Q主导的一场“完美犯罪”杀陆国富案件。看起来剧情是这样的，但是到最后却有许多地方让案件的真相有了迷雾，就像『盗梦空间』结尾旋转的陀螺，给了观众讨论展开的空间。</p>
<p>看了网上的一些深层推理，还是很有意思的:</p>
<h2 id="1：Q是谁"><a href="#1：Q是谁" class="headerlink" title="1：Q是谁"></a>1：Q是谁</h2><p>Q就目前的资料来看，是“侦探界ppt”的第一名，他有着贯穿始终的神秘感，他有着和这个案件千丝万缕的联系。</p>
<p>开始以为Q是宋义，看到最后发现并不是。首先影片最后蓝发女孩已经查过ip了，Q不在美国也不在加拿大，总而言之Q有完美的不在场证明。此外，如果Q是宋义，假设秦风推理正确，宋义想杀陆国富为妹妹报仇，那么凭借宋义是Q的智商，根本不会在案发现场被监控拍到，也不会在图书馆留下在场证据，所有的线索都在表明，宋义应该只是Q很重要的棋子。宋义和他妹妹是美国黑户，在唐人街没有地位没有身份，长期被陆国富地霸欺负，最终陆国富害死了宋义的妹妹，导致宋义怀恨在心。</p>
<p>同时宋义也有一颗当侦探的心，并把Q当成偶像，应该在这案件之前，宋义就时不时在Q下面留言或私信，来表达自己的仰慕之情。在这次案件发生的时候，Q当然也参与到了其中，但他和其他侦探不一样，他不露脸并始终保持神秘，那么他了解案情并推动案情，就必须找到一个有力并信得过的助手，Q首先想到的就是宋义。</p>
<p>等Q联系上宋义以后，Q同时还得知宋义妹妹的事情，于是Q告诉宋义，如果宋义能按照他的指示去做，在这个案件中，宋义就能顺手杀掉陆国富。</p>
<p>网上有人推测，Q是秦风的父亲，还有一种是第一部里的小女孩，都有一些道理，这个坑估计要到第三部中看陈导怎么填了。</p>
<h2 id="2-Q为什么要这么做"><a href="#2-Q为什么要这么做" class="headerlink" title="2: Q为什么要这么做"></a>2: Q为什么要这么做</h2><p>第一，Q对这些案件的探案很上瘾，并很有天赋，所以这是天性使然，秦风也一样，他们这些天生是侦探命的人，探案不是为了钱，而是为了真相。</p>
<p>第二，Q不光想要侦破这个案件，而且他还想在这个案件中插入一个自己的“完美犯罪”。</p>
<p>这个也正是秦风在《唐人街探案1》中，他考刑警学院面试的回答，秦风想制造一次完美犯罪。</p>
<p>所以说在侦探界另一个更高段位的侦探成就，就是自己制作一个完美犯罪。那么这一次Q的制作完美犯罪的原材料，正是宋义心中想要报的仇。</p>
<h2 id="3-秦风黑化？"><a href="#3-秦风黑化？" class="headerlink" title="3: 秦风黑化？"></a>3: 秦风黑化？</h2><p>一种黑化是说秦风完全变成坏人，为了达到“完美犯罪”也去做一些真正犯罪的事情，比如作出一些和Q一样的举动。</p>
<p>另一种黑化是秦风游走在“神性和兽性，还有人性”之间，最后他选择了“神性和兽性”的结合体，也就是最后在他心中，自成一套法律，他有自己对案件的判决书，摒弃掉社会的法律。</p>
<p>影片中宋义有说过：</p>
<blockquote>
<p>当你凝视深渊时，深渊也在凝视你。看可以，但别看太久。wo</p>
</blockquote>
<p>这里的深渊，其实就是人性的恶，也就是兽性。兽性有魔力，会让你对你着迷的东西上瘾，比如“完美犯罪”的瘾，比如找到真相的瘾，比如探案的瘾，比如杀人的瘾等等。</p>
<p>宋义他说他曾经凝视深渊很久，这是和他妹妹有关，所以他始终放不下这个恨，于是当Q愿意为他制造一次机会的时候，他愿意去做了。这就是宋义自己的“兽性”，明知道是犯罪，但他依然要去冒险。</p>
<p>而宋义之所以要对秦风说这些，很大的原因可能是秦风对他推理错了，也就是他把宋义说成是Q，秦风上瘾了。宋义从秦风的举动看到了Q的影子，所以以此来警醒秦风，不要看深渊太久。</p>
<p>从秦风的身世来看，也不难看出他也是一张半遮半掩的底牌，在《唐人街探案1》中，他的父亲为什么被抓，对他造成了什么影响，这些到了《唐人街探案2》都没有交代清楚。</p>
<p>而且秦风所说的制造一场“完美的犯罪”，和他的身世又有多少关系，我们几乎也不知道前因后果，所以秦风这个角色，还能继续深挖。</p>
<h2 id="一些经典台词"><a href="#一些经典台词" class="headerlink" title="一些经典台词"></a>一些经典台词</h2><blockquote>
<p>当你凝视深渊时，深渊也在凝视你。看可以，但别看太久。</p>
<p>一阴一阳谓之道，你白天救人，夜晚屠杀。无论是拯救生灵的神，还是夜晚屠杀的兽，都将阴阳割裂走向了极端。可二者之间，才是万物抱阴负阳冲气以为和的人性。</p>
<p>所谓推理，不过就是把重要的细节放大。</p>
<p>杀死员外的是狗，但把狗换成恶犬来杀人的，却是员外老婆，杀人的不是兽，是兽性。</p>
<p>一阴一阳谓之道，你白天救人,夜晚屠杀,无论是拯救生灵的神，还是嗜血屠杀的兽，都将阴阳割裂走向了极端，可二者之间，才是万物抱阴负阳，冲气以为和的人性，你曲解了道义，不是做神，就是做兽，却忘了怎么做人。</p>
<p>在侦探界另一个更高段位的侦探成就，就是自己制作一个完美犯罪。</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 电影 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 影评 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[春雪初融]]></title>
      <url>http://chuanqiang.github.io/2018/04/05/%E6%98%A5%E9%9B%AA%E5%88%9D%E8%9E%8D/</url>
      <content type="html"><![CDATA[<p><img src="http://oeckzejn4.bkt.clouddn.com/2018040515229279371558.jpg" alt="花一朵.jpg"></p>
<blockquote>
<p>万物生长此时，皆清洁而明净，故谓之清明。</p>
</blockquote>
<a id="more"></a>
<p>清明节又叫踏青节，在仲春与暮春之交，所以清明不只是祭祖扫墓的节日，也是踏青游玩的好时候。怎奈再好的风景架不住人潮人海的喧嚣，使美丽的景色打了折扣，所以建议这个时候出去游玩最好避开人多的旅游景点，与其人挤人走马观花还不如宅在家里休养生息。</p>
<p>另外，昨天北京竟然下雪了，是的，在『人间四月天』里俄而雪骤，去年北京可一年无雪，看来是要『雪债雪还』的。突如其来的降雪倒是给这个清明节带来了不一样的惊喜。虽然我不迷信，但总隐隐觉得这种奇怪的气候是年前北京发生一些不光彩的事招来的天谴。好吧，不能不承认降雪虽然让我一下地铁站就懵逼淋成雪人，但是也净化了北京的雾霾，让北京城『清洁而明净』。</p>
<p><img src="http://oeckzejn4.bkt.clouddn.com/20180405152292797947319.jpg" alt="穿衣指南.jpg"></p>
<p>这周看完了古龙的『绝代双骄』，第一次看是在高中，那时读古龙的小说是满满的快感和遗世独立的孤独，现在细细品味才发现里面的人性和温情。</p>
<p><img src="http://oeckzejn4.bkt.clouddn.com/20180405152292770083254.png" alt="绝代双骄.png"></p>
<p>花无缺虽然叫无缺，武功盖世、相貌英俊、彬彬有礼，看似也完美无瑕，但是却没有自由人性的一面，像是移花宫邀月宫主的提线木偶，因此虽然是主角却没小鱼儿刻画的那么出彩。小鱼儿虽然在恶人谷长大，混迹于市井，从小跟着十大恶人，但是依旧保留纯真和善良，人物性格也比花无缺丰富的多。从开始的用手段和计谋制敌，到最后明白『黑暗不能驱逐黑暗，但光明可以；仇恨不能驱逐仇恨，但爱可以』，不但冒死去救十大恶人，而且宽恕了罪行累累的江别鹤父子，把安排到了一个适合他们生存的『安全』地方，这是他成长之后的属于英雄的复仇方式。总之，古龙小说里从不缺少惊喜和意外，虽然有一些看上去像是喝酒断片儿写的，但是瑕不掩瑜，这已是古龙特色了。</p>
<blockquote>
<p>醉笑陪公三万场，这是古龙，也是他早夭的原因，他就是要活得无可替代，曾因酒醉鞭名马，生怕情多累美人，何等落拓又何等气概！这还不够吗？对于平平仄仄了无生趣的弱者，这是他们想也不敢想的广袤宇宙。 (摘自豆瓣影评)</p>
</blockquote>
<p>今天把房间收拾了一下，去了趟超市备了些粮食，然后下午就宅在家里美滋滋的看美剧。北极星小姐姐已经追完了，准备看部重口味的『行尸走肉』。最近还玩一个游戏，叫做『第五人格』，很有意思，这个游戏是荒诞哥特画风，悬疑烧脑剧情，玩家可以选择扮演监管者或求生者，展开激烈的对抗。<br><img src="http://oeckzejn4.bkt.clouddn.com/20180405152292879235004.png" alt="第五人格海报.png"></p>
<p>看吧，生活并没有那么无聊，虽然有时候枯燥而重复，但我们始终渴望将它过成诗，在这个属于我的小地方里，恬静怡然，没有灯红酒绿的浮躁，唯有安宁与舒心伴我左右。<br><img src="http://oeckzejn4.bkt.clouddn.com/20180405152292902655046.jpg" alt="卧室一角.jpg"></p>
<p>明天准备出去溜溜，因为春雪初融，明天定是个好天气!</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 小说 </tag>
            
            <tag> 随笔 </tag>
            
            <tag> 生活 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[春暖花开]]></title>
      <url>http://chuanqiang.github.io/2018/03/26/%E6%98%A5%E6%9A%96%E8%8A%B1%E5%BC%80/</url>
      <content type="html"><![CDATA[<p>有些东西放下了，就很难再拾起了。<br><img src="http://oeckzejn4.bkt.clouddn.com/20180326152207560388958.jpg" alt="pic.jpg"></p>
<a id="more"></a>
<p>经过一个春节的浸染，巨大的安逸像滔天巨浪把之前养成的好习惯一冲而去，一直到浑浑噩噩上班一段时间后才后知后觉。</p>
<p>生活有时候就是靠着惯性在一点一点前进的，从一百到一百零一容易，从零到一很难，因为一个东西一旦放下了，尤其是放下了一段时间之后再拾起，就相当于重新培养，心性、身体都需要新一轮的适应，难度自然增加。</p>
<p>后悔当初的『放下』，现在决定再次『拾起』。写作、阅读、学习，还有一直没做好的运动。无论做什么事，最晚的时间是『明天』，最合适的时间是『现在』。越来越觉得坚持和自律是最难做到的，精神和意志力的消磨是最不易克服的。做一个计划很容易，很亢奋，也斗志昂扬，但是保持做下去的动作却大多三天热度。有一种五部工作法：</p>
<blockquote>
<p>第一，设定目标<br>第二，发现通向目标的障碍<br>第三，诊断问题所在并制定计划<br>第四，列出解决问题的任务清单<br>第五，坚决执行任务</p>
</blockquote>
<p>最重要的是第五步的『坚决』俩字，最难的也是它。要想克服，别无他法，只能不断告诫自己，管控自己，对自己狠一点。</p>
<blockquote>
<p>你有多自律，就有多自由。</p>
</blockquote>
<p>春分了，三月二十一日，太阳直射赤道的日子，昼夜相等，黑白均分。天气也愈来愈暖，万物复苏，人也充满了活力，好像无论做什么都能比其他时候拥有更大的信心和乐观的心情。</p>
<blockquote>
<p>忧郁的日子里需要镇定，<br>相信吧，快乐的日子将会来临。<br>心儿永远向往着未来；<br>现在却常是忧郁。<br>一切都是瞬息，<br>一切都将会过去；<br>而那过去了的，<br>就会成为亲切的怀恋。</p>
</blockquote>
<p>北京和济南一样，春天美好但短暂，从雪落到花开，倏然而至，紧接着就气温陡升，忽的奔向炎夏。早穿皮袄午穿纱的不一定只是新疆，温差高达20度，大街上羽绒服与短袖齐飞，昆明四季如春，北京春如四季。<br><img src="http://oeckzejn4.bkt.clouddn.com/2018032615220773153828.jpg" alt="pic.jpg"><br>把卧室换到主卧了，宽敞了不少，越来越有家的味道，房子是租来的，但生活是自己的，人生苦短，干嘛不让自己过得舒服一点。去花卉市场买了绿植，给卧室点缀 一点生机，感受一抹春意。生活虽然枯燥而重复，但我们始终渴望将它过成诗，既文艺又不失追求。在这个属于我的小地方里，恬静怡然，没有灯红酒绿的浮躁，唯有安宁与舒心伴我左右。</p>
<p>周一到周五的繁忙，周末两天的安逸和消遣，一周也是一个轮回，所以不必在工作日翘首以盼周末的到来，也不必在周末过度放浪。没有什么生活是永恒的，唯有生命滚滚向前。</p>
<p>生活开始步入正轨，并逐渐加速。成长是相对运动的，相对于周围的人、相对于世界。你的脚步相对慢了，你就是在退步。这或许有点『人在江湖，身不由己』的悲凉。</p>
<p>最近一直在读古龙的小说，虽然不是第一遍了，但依旧痴迷，痴迷于古龙笔下人物透露出的对世间万物满满的善意，永远的乐观和巨大的同情心。古龙笔下没有完全的恶人，只有潇潇洒洒的江湖。</p>
<p>喜欢牛仔在决斗时的潇洒与严肃，喜欢浪子行走在天涯尽头时拖着长长的背影，喜欢让自己的血液滴在中原一点红的剑尖上，喜欢用一支笔来塑造一把剑能够刺穿的世界。</p>
<p>春光正好，微风不燥，生命自由缱绻，这是属于我们的春暖花开。</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 生活 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[胡适精选集 文摘]]></title>
      <url>http://chuanqiang.github.io/2018/02/14/%E8%83%A1%E9%80%82%E7%B2%BE%E9%80%89%E9%9B%86%20%E6%96%87%E6%91%98/</url>
      <content type="html"><![CDATA[<p>胡适（1891年12月17日—1962年2月24日），原名嗣穈，学名洪骍，字希疆，笔名胡适，字适之。著名思想家、文学家、哲学家。 徽州绩溪人，以倡导“白话文”、领导新文化运动闻名于世。</p>
<a id="more"></a>
<hr>
<ul>
<li><p>生命本身不过是一件生物学的事实，有什么意义可说？一个人与一只猫，一只狗，有什么分别？人生的意义不在于何以有生，而在自己怎样生活。你若情愿把这六尺之躯葬送在白昼作梦之上，那就是你这一生的意义。你若发愤振作起来，决心去寻求生命的意义，去创造自己的生命的意义，那么，你活一日便有一日的意义，作一事便添一事的意义，生命无穷，生命的意义也无穷了。</p>
</li>
<li><p>总之，生命本没有意义，你要能给他什么意义，他就有什么意义。与其终日冥想人生有何意义，不如试用此生作点有意义的事……</p>
</li>
<li><p>一个人应该把自己培养成器，使自己有了足够的知识、能力与感情之后，才能再去为别人。</p>
</li>
<li><p>人生的快乐，就是知识的快乐，做研究的快乐，找真理的快乐，求证据的快乐。</p>
</li>
<li><p>人生观不过是一个人对于世界万物同人类的态度，这种态度是随着人的神经构造，经验，知识等而变的。</p>
</li>
<li><p>『易经』“系辞”里面几句话翻成外国文给外国人看。这几句话是：“见乃谓之象；形乃谓之器；制而用之谓之法；利用出人，民咸用之，谓之神。”看见一个意思，叫做象；把这个意象变成一种东西——形，叫做器；大规模的制造出来，叫做法；老百姓用工程师制造出来的这些器具，都说好呀！好呀！但是不晓得这器具是从一种意象来的，所以看见工程师便叫做神。</p>
</li>
<li><p>社会的不朽论”的大旨是：我这个“小我”不是独立存在的，是和无量数小我有直接或间接的交互关系的；是和社会的全体和世界的全体都有互为影响的关系的；是和社会世界的过去和未来都有因果关系的。</p>
</li>
<li><p>拜金主义只有三个信条： 第一，要自己能挣饭吃。 第二，不可抢别人的饭吃。 第三，要能想出法子来，开出生路来，叫别人有挣饭吃的机会。</p>
</li>
<li><p>贫穷便是一切罪恶的来源。《珠砂痣》里那个男子因为贫穷，便肯卖妻子，卖妻子便是一桩罪恶。你仔细想想，哪一件罪恶不是由于贫穷的？小偷、大盗、扒儿手、绑票、卖姐、贪赃、卖国，哪一件不是由于贫穷？ 所以古人说：衣食足而后知荣辱，仓廪实而后知礼节。 这便是拜金主义的人生观。</p>
</li>
<li><p>一个头脑受过训练的人在看一件事时用批判和客观的态度，而且也用适当的知识学问为凭依。他不容许偏见和个人的利益来影响他的判断，左右他的观点。他一直都是好奇的，但是他绝对不会轻易相信人。他并不仓促的下结论，也不轻易的附合他人的意见，他宁愿耽搁一段时间，一直等到他有充分的时间来查事实和证据后，才下结论。</p>
</li>
<li><p>有责任心的思考至少含着三个主要的要求：第一，把我们的事实加以证明，把证据加以考查；第二，如有差错，谦虚的承认错误，慎防偏见和武断；第三，愿意尽量彻底获致一切会随着我们的观点和理论而来的可能后果，并且道德上对这些后果负责任。</p>
</li>
<li><p>渺小的个人在那强烈的社会炉火里，往往经不起长时期的烤炼就镕化了，一点高尚的理想不久就幻灭了。</p>
</li>
<li><p>一个人应该有他的职业，又应该有他的非职业的玩艺儿，可以叫做业余活动。凡一个人用他的闲暇来做的事业，都是他的业余活动。往往他的业余活动比他的职业还更重要，因为一个人的前程往往全靠他怎样用他的闲暇时间。</p>
</li>
<li><p>特别在这个组织不健全的中国社会，职业不容易适合我们性情，我们要想生活不苦痛或不堕落，只有多方发展业余的兴趣，使我们的精神有所寄托，使我们的剩余精力有所施展。</p>
</li>
<li><p>佛典里有一句话：“福不唐捐。”唐捐就是白白的丢了。我们也应该说：“功不唐捐！”没有一点努力是会白白的丢了的。</p>
</li>
<li><p>不到二十年前，那些老先生们，如叶德辉、王益吾之流，出了死力去驳康有为，所以这书叫做《翼教丛编》。我们今日也痛骂康有为。但二十年前的中国，骂康有为太新；二十年后的中国，却骂康有为太旧。如今康有为没有皇帝可保了，很可以做一部《翼教续编》来骂陈独秀了。这两部“翼教”的书的不同之处，便是中国二十年来的进步了。</p>
</li>
<li><p>古时小孩生下地之后，要请一位专门术家来听小孩的哭声，声中某律，然后取名字。魂怎么叫呢？到那跌跤的地方，撒把米，高叫小孩子的名字，一路叫回家。叫名便是叫魂了。</p>
</li>
<li><p>现在大多数喊口号，贴标语的，也不外这两种理由：一是心理上的过瘾，一是无意义的盲从。</p>
</li>
<li><p>少年人抱着一腔热沸的血，无处发泄，只好在墙上大书“打倒卖国贼”或“打倒日本帝国主义”。写完之后，那二尺见方的大字，那颜鲁公的书法，个个挺出来，好生威武，他自己看着，血也不沸了，气也稍稍平了，心里觉得舒服的多，可以坦然回去休息了。于是他的一腔义愤，不曾收敛回去，在他的行为上与人格上发生有益的影响，却轻轻地发泄在墙头的标语上面了。</p>
</li>
<li><p>格涅夫的人性观是二元论，认定这二元论是一个人生的全部生活的根本法则。他说：“人的全部生活，是不外乎继续不断忽分忽合的两个原则的永久的冲突和永久的调解。”</p>
</li>
<li><p>安阳是商朝最后一个都邑的遗址，</p>
</li>
<li><p>伟大的每年周而复始的日祀——周祭也消逝了，大规模的人殉也消逝了。博学的皇家祭祀阶级也贬降为职业的巫史阶级（Professional Class of Scribes and Priests），而靠着在大多数平民和少数统治贵族的家庭中表演和协助殡葬和祭祀讨生活，国家的灾患和个人的贫困已经深深地给他们灌输了谦逊温顺的教训。因此这一巫史阶级便获得了“儒”的统称，意思就是温顺和懦弱。他们仍然传授和表演殡丧和祖先崇拜的传统仪式。</p>
</li>
<li><p>鲁国的一个聪明人叔孙豹曾说过几句名言，即所谓有三个不朽：“大上有立德；其次有立功；其次有立言。虽久不废，此之谓不朽。”</p>
</li>
<li><p>我的思想受两个人的影响最大：一个是赫胥黎，一个是杜威先生。赫胥黎教我怎样怀疑，教我不信任一切没有充分证据的东西。杜威先生教我怎样思想，教我处处顾到当前的问题，教我把一切学说理想都看作待证的假设，教我处处顾到思想的结果。</p>
</li>
<li><p>但狭义的共产主义者却似乎忘了这个原则，所以武断的虚悬一个共产共有的理想境界，以为可以用阶级斗争的方法一蹴即到，既到之后又可以用一阶级专政方法把持不变。这样的化复杂为简单，这样的根本否定演变的继续便是十足的达尔文以前的武断思想，比那顽固的黑格尔更顽固了。</p>
</li>
<li><p>人同畜生的分别，就在这个“为什么”上。</p>
</li>
<li><p>救出自己的唯一法子便是把你自己这块材料铸造成器。</p>
</li>
<li><p>现在有人对你们说：“牺牲你们个人的自由，去求国家的自由！”我对你们说：“争你们个人的自由，便是为国家争自由！争你们自己的人格，便是为国家争人格！自由平等的国家不是一群奴才建造得起来的！”</p>
</li>
<li><p>他也许“一言可以兴邦，一言可以丧邦”。善亦不朽，恶亦不朽；功盖万世固然不朽，种一担谷子也可以不朽，喝一杯酒，吐一口痰也可以不朽。古人说：“一出言而不敢忘父母，一举足而不敢忘父母。”我们应该说：“说一句话而不敢忘这句话的社会影响，走一步路而不敢忘这步路的社会影响。”这才是对于大我负责任。能如此做，便是道德，便是宗教。</p>
</li>
<li><p>美国开国前期争自由的名言“不自由，毋宁死”（原文是Patric Henry在1775年的“给我自由，否则给我死”“Give me liberty，or give me death”），</p>
</li>
<li><p>范文正《灵乌赋》曰：“宁鸣而死，不默而生。”其言可以立儒。</p>
</li>
<li><p>我实在不要儿子， 儿子自己来了。 “无后主义”的招牌， 于今挂不起来了！ 譬如树上开花， 花落偶然结果。 那果便是你， 那树便是我。 树本无心结子， 我也无恩于你。 但是你既来了， 我不能不养你教你， 那是我对人道的义务， 并不是待你的恩谊。 将来你长大时， 莫忘了我怎样教训儿子： 我要你做一个堂堂的人， 不要你做我的孝顺儿子。</p>
</li>
<li><p>年纪越大，越觉得容忍比自由还更重要”</p>
</li>
<li><p>当年我要“杀”人，后来人要“杀”我，动机是一样的：都只因为动了一点正义的火气，就都失掉容忍的度量了。</p>
</li>
<li><p>我自己不信神，但我能诚心地谅解一切信神的人，也能诚心地容忍并且敬重一切信仰有神的宗教。</p>
</li>
<li><p>人类的习惯总是喜同而恶异的，总不喜欢和自己不同的信仰、思想、行为。这就是不容忍的根源。</p>
</li>
<li><p>一切对异端的迫害，一切对“异己”的摧残，一切宗教自由的禁止，一切思想言论的被压迫，都由于这一点深信自己是不会错的心理。因为深信自己是不会错的，所以不能容忍任何和自己不同的思想信仰了。</p>
</li>
<li><p>容忍是一切自由的根本；没有容忍“异己”的雅量，就不会承认“异己”的宗教信仰可以享受自由。但因为不容忍的态度是基于“我的信念不会错”的心理习惯，所以容忍“异己”是最难得，最不容易养成的雅量。</p>
</li>
<li><p>我们若想别人容忍谅解我们的见解，我们必须先养成能够容忍谅解别人的见解的度量。</p>
</li>
<li><p>哲学是研究人生切要的问题，从意义上着想，去找一个比较可普遍适用的意义。”</p>
</li>
<li><p>我们再举一个例：譬如我们睡到夜半醒来，听见贼来偷东西，我那就将他捉住，送县究办。假如我们没有哲性，就这么了事，再想不到“人为什么要作贼”等等的问题；或者那贼竟苦苦哀求起来，说他所以作贼的原故，因为母老，妻病，子女待哺，无处谋生，迫于不得已而为之。假如没哲性的人，对于这种吁求，也不见有甚良心上的反动。至于富于哲性的人就要问了，为什么不得已而为之？天下不得已而为之的事有多少？为什么社会没得给他做工？为什么子女这样多？为什么老病死？这种偷窃的行为，是由于社会的驱策，还是由于个人的堕落？为什么不给穷人偷？为什么他没有我有？他没有我有是否应该？拿这种问题，逐一推思下去，就成为哲学。由此看来，哲学是由小事放大，从意义着想而得来的，并非空说高谈能够了解的。</p>
</li>
<li><p>据我看来，欲求意义唯一的方法，只有走笨路，就是日积月累地去做刻苦的工夫，直觉不过是熟能生巧的结果，所以直觉是积累最后的境界，而不是豁然贯通的。</p>
</li>
<li><p>如若欲过理性生活，必得将从前积得的知识，一件一件用怀疑的态度去评估他们的价值，重新建设一个理性的是非。</p>
</li>
<li><p>自由”在中国古文里的意思是：“由于自己”，就是不由于外力，是“自己作主”。</p>
</li>
<li><p>我们现在说的“自由”，是不受外力拘束压迫的权利，是在某一方面的生活不受外力限制束缚的权利。</p>
</li>
<li><p>在宗教信仰方面不受外力限制，就是宗教信仰自由；在思想方面就是思想自由；在著作出版方面，就是言论自由，出版自由。这些自由都不是天生的，不是上帝赐给我们的，是一些先进民族用长期的奋斗努力争出来的。</p>
</li>
<li><p>唐朝后期的韩愈出来，大胆地批评佛教，攻击那在当时气焰熏天的佛教。大家都还记得韩愈攻击佛教的结果是：“一封朝奏九重天，夕贬潮阳路八千”。</p>
</li>
<li><p>容忍反对党，尊重少数人权利，正是和平的政治社会改革的唯一基础。反对党的对立，第一是为政府树立最严格的批评监督机关，第二是使人民可以有选择的机会，使国家可以用法定的和平方式来转移政权。</p>
</li>
<li><p>近代一百六七十年的历史，很清楚地指示我们，凡主张彻底改革的人，在政治上没有一个不走上绝对专制的路，这是很自然的，只有绝对的专制政权可以铲除一切反对党，消灭一切阻力；也只有绝对的专制政治可以不择手段，不惜代价，用最残酷的方法做到他们认为根本改革的目的。他们不承认他们的见解会有错误，他们也不能承认反对的人会有值得考虑的理由，所以他们绝对不能容忍异己，也绝对不能容许自由的思想与言论。所以我很坦白地说，自由主义为了尊重自由与容忍，当然反对暴力革命与暴力革命必然引起来的暴力专制政治。</p>
</li>
<li><p>自由主义的第一个意义是自由，第二个意义是民主，第三个意义是容忍——容忍反对党，第四个意义是和平的渐进的改革。</p>
</li>
<li><p>勿可专读死书，却去教实在的事物，勿可专被书中意思所束缚，却当估量这种意思是否有实际的效果，勿可专信仰前人的说话，却当去推求这些信条是否合于实情。</p>
</li>
<li><p>宋朝王安石有首白话诗： 风吹屋顶瓦， 正打破我头。 我终不恨瓦， 此瓦不自由。</p>
</li>
<li><p>在东汉到南北朝佛教极盛的时候，其中的一位君王梁武帝也迷信佛教。当时有个范缜，他著述几篇重要文章，其中一篇《神灭论》，就是驳斥当时盛行的灵魂不灭，认为“身体”与“灵魂”，有如“刀”之与“利”。假如刀不存在，则无所谓利不利。</p>
</li>
<li><p>多研究些问题，少谈些“主义”</p>
</li>
<li><p>高谈主义，不研究问题的人，只是畏难求易，只是懒。</p>
</li>
<li><p>我们由历史方面看，国家是一种最有用的工具，用的好就可以替社会造福。社会改良家一定要利用它，因为它可以帮助我们做好些事。</p>
</li>
<li><p>新生活就是有意思的生活。</p>
</li>
<li><p>凡是自己说不出“为什么这样做”的事，都是没有意思的生活。</p>
</li>
<li><p>生活的“为什么”，就是生活的意思。</p>
</li>
<li><p>假的个人主义——就是为我主义（Egoism）。他的性质是自私自利：只顾自己的利益，不管群众的利益。 （2）真的个人主义——就是个性主义（Individuality）。他的特性有两种：一是独立思想，不肯把别人的耳朵当耳朵，不肯把别人的眼睛当眼睛，不肯把别人的脑力当自己的脑力；二是个人对于自己思想信仰的结果要负完全责任，不怕权威，不怕监禁杀身，只认得真理，不认得个人的利害。</p>
</li>
<li><p>人人都是一个无冠的帝王，人人都可以做一些改良社会的事。</p>
</li>
<li><p>孔子说：“修己以敬，修己以安人，修己以安百姓。”修己就是把自己弄好。我们应当先把自己弄好，然后帮助别人；独善其身然后能兼善天下。</p>
</li>
<li><p>我这“社会的不朽论”的大旨是： 我这个“小我”不是独立存在的，是和无量数小我有直接或间接的交互关系的，是和社会的全体和世界的全体都有互为影响的关系的，是和社会世界的过去和未来都有因果关系的。</p>
</li>
<li><p>那边“一座低低的土墙，遮着一个弹三弦的人。”那三弦的声浪，在空间起了无数波澜；那被冲动的空气质点，直接间接冲动无数旁的空气质点；这种波澜，由近而远，至于无穷空间；由现在而将来，由此刹那以至于无量刹那，至于无穷时间：这已是不灭不朽了。那时间，那“低低的土墙”外边来了一位诗人，听见那三弦的声音，忽然起了一个念头；由这一个念头，就成了一首好诗；这首好诗传诵了许多人；人读了这诗，各起种种念头；由这种种念头，更发生无量数的念头，更发生无数的动作，以至于无穷。然而那“低低的土墙”里面那个弹三弦的人又如何知道他所发生的影响呢？</p>
</li>
<li><p>人世的大悲剧是无数的人们终身做血汗的生活，而不能得着最低限度的人生幸福，不能避免冻与饿。人世的更大悲剧是人类的先知先觉者眼看无数人们的冻饿，不能设法增进他们的幸福，却把“乐天”、“安命”、“知足”、“安贫”种种催眠药给他们吃，叫他们自己欺骗自己，安慰自己。</p>
</li>
<li><p>自然（Nature）是一个最狡猾的妖魔，只有敲打逼拶可以逼她吐露真情。不思不虑的懒人只好永永作愚昧的人，永永走不进真理之门。</p>
</li>
<li><p>中国八百年的理学工夫居然看不见二万万妇女缠足的惨无人道！明心见性，何补于人道的苦痛困穷！坐禅主敬，不过造成许多“四体不勤，五谷不分”的废物！</p>
</li>
<li><p>然而人的阅历就像一座穹门， 从那里露出那不曾走过的世界， 越走越远，永永望不到他的尽头。</p>
</li>
<li><p>孔夫子不说过吗？“制而用之谓之器。利用出入，民咸用之，谓之神。”孔老先生还嫌“圣”字不够，他简直要尊他们为“神”呢！</p>
</li>
<li><p>但是你若把这班老百姓请到上海来，请他们从先施公司走到永安公司去，他们便不能不用耳目手足了。走过大马路的人，真如《封神传》上黄天化说的“须要眼观四处，耳听八方”。你若眼不明，耳不听，手足不灵动，必难免危险。这便是摩托车文明的训练。</p>
</li>
<li><p>这种开车的训练真是“胜读十年书”！你开着汽车，两手各有职务，两脚也各有职务，眼要观四处，耳要听八方，还要手足眼耳一时并用，同力合作。你不但要会开车，还要会修车；随你是什么大学教授、诗人诗哲，到了半路车坏的时候，也不能不卷起袖管，替机器医病。什么书呆子、书踱头、傻瓜，若受了这种训练，都不会四体不勤，五官不灵了。</p>
</li>
<li><p>社会革命的目的就是要做到向来被压迫的社会分子能站在大庭广众之中歌颂他的时代为人类有史以来最好的时代。</p>
</li>
<li><p>只有这第四害，麻将，还是日兴月盛，没有一点衰歇的样子，没有人说它是可以亡国的大害。新近麻将先生居然大摇大抛地跑到西洋去招摇一次，几乎做了鸦片与杨梅疮的还敬礼物。但如今它仍旧缩回来了，仍旧回来做东方精神文明的国家的国粹，国戏！</p>
</li>
<li><p>三百年以前，培根说了句很聪明的话，他说，世上治学的人可分为三种，那就是，第一蜘蛛式的，亦是靠自己肚子里分泌出丝来，把网作得很美很漂亮，也很有经纬，下点雨的时候，网上挂着雨丝，从侧面看过去，那种斜光也是很美。但是虽然好，那点学问却只是从他自己的肚子造出来的。第二种是蚂蚁式的，只知道集聚，这里有一颗米，把上三三两两的抬了去，死了一个苍蝇，也把他抬了去，在地洞里堆起很多东西，能消化不能消化却不管，有用没有用也是不管，这是勤力而理解不足。第三种是蜜蜂式的，这种最高，蜜蜂采了花去，更加上一度制造，取其精华而去其糟粕，是经过改造制造出新的成绩的。孔子说过，学而不思则罔，思而不学则殆。蜜蜂的方法，是又学又思，是理想的作学方法。</p>
</li>
<li><p>就是说受过教育，就认识清社会的恶习，而发不满意的批评。这种不满意社会的批评，最容易引起社会的反感。但是人受教育，求知识，原是为发现社会的弊端，若是受了教育，而对于社会仍是处处觉得满意，那就是你的眼镜配错了光了，应该返回去审查一审查，重配一副光度合适的才好。</p>
</li>
<li><p>老子是“儒”，孔子也是“儒”。“儒”的职业是替人家主持丧礼、葬礼、祭礼的。有人认为“儒”是到孔子时才有的，这是错误的观念。</p>
</li>
<li><p>而老子最有名的一句话，就是“太上，下知有之”。就是说：最高的政府，使下面的人仅仅知道这个政府。另外一个本子把这句话多加了一个字，作“太上下不知有之”。就是说：上面有个政府，下面的人民还不知道有政府的存在。下面又说：“其次，亲之誉之；其次，畏之；其次，侮之。”就是，比较次一等的政府，人民亲近他，称誉他；第三等政府，人民畏惧他；第四等政府，人民看不起他。所以第一句“太上，下知有之”六个字是很了不得的，是人类政治思想史上最早有这个观念。</p>
</li>
<li><p>论语》中有“性相近也，习相远也，唯上智与下愚不移。”就是说，除了绝顶聪明与绝顶笨的人没有法教育以外，其他都是平等的，</p>
</li>
<li><p>孔子提出四个字，可以说是中国的民主主义教育哲学，就是：“有教无类”。“类”是种类，是阶级。若是看了墨子讲的“类”和荀子讲的“类”，然后再来解释孔子的“有教无类”，可以知道此处的“类”就是种类，就是阶级。有了教育就没有种类，就没有阶级。后世的考试制度，可以说是根据这种教育哲学为背景的。</p>
</li>
<li><p>（一）白话文学是起来替古文发丧的，下讣文的。 （二）二千年中之白话文学有许多有价值的作品，什么人也不能否认。 （三）中国将来之一切著作，切应当用白话去作。 白话是活的，用白话去作，成绩一定好，死文字不能产生活文学，要创造活文学，所以就要用白话。</p>
</li>
<li><p>白话是活的，用白话去作，成绩一定好，死文字不能产生活文学，要创造活文学，所以就要用白话。</p>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 读书 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 书摘 </tag>
            
            <tag> 胡适 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第二十六周 - 回家]]></title>
      <url>http://chuanqiang.github.io/2018/02/12/%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AD%E5%91%A8%20-%20%E5%9B%9E%E5%AE%B6/</url>
      <content type="html"><![CDATA[<p>终于挨到放年假了，这周一直充斥着一种幸福来临前的焦躁和急迫。人们面对即将到来的幸福生活，总会过早的沉浸，从而忽视身边的小确幸，但是到来的生活真如你所料的那么幸福吗？被爸妈从『亲的了不得』到『嫌弃』的转换能超过三天吗？😂</p>
<a id="more"></a>
<p>早上一早就睡不着了，内心比行李打包的更快，迫不及待要奔回济南。起床整理要带的东西，一边听歌一边收拾行李和整理屋子，秋阳甚暖，阳光挥洒进卧室，晒的屋里暖意浓浓，心底突然一刹那涌出了浓浓的不舍，对北京这个城市突然有了感情。毕竟在北京待了也有快两年了，可以说北京是我的第二个故乡，虽然平时嫌弃她的拥堵、她的快节奏、她的不近人情，但是毕竟在时间长河的流淌中沉淀下了一些东西，一些感情，和这座城市相处了两年，已经习惯了她的性情和脾气。有时候我想，如果当时没下决心来北京，现在的我会是怎样的斑驳光景，我一直觉得来北京是我毕业之后做出的最正确的事情之一。歌放的是陈升的《北京一夜》，结合中国风的曲调很是动听，也很应景。<br><img src="http://upload-images.jianshu.io/upload_images/763193-e878547bb2bab208.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="北京一夜"></p>
<p>整理了一下要带的东西，心血来潮把他们一一摆开，弄了一个 EDC Show，算做是一个仪式，一个对北京的这一段生活和对这些日夜陪伴我的老朋友的纪念吧。这些个电子用品和小东西，不光是生活的物件，更是组成我生活的一部分，他们承载了我的时光，陪伴了我的成长，所以他们对于我来说有着特殊的意义。马克思说：『人的本质在其现实性上是一切社会关系的总和』，但是我总觉得这样说否定了人本身的主体性和物质性，<strong>我们人是物质和精神的总和，精神依托于物质，但不只是我们的肉体，还有我们生活的环境和使用的一切物质，所以我相信这些生活中朝夕相处的物件，也是我们精神的延伸，使我们生命得以完整和延续的一部分</strong><br><img src="http://upload-images.jianshu.io/upload_images/763193-b2cac75ce9e207f8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="My EDC"></p>
<p>北京南站，熙熙攘攘，大包小包满是归乡的游子。年，确实是一个独具意味的东西，年是地球绕太阳一周的时间，也是辞旧迎新，代表旧一年的结束，迎接新一年开始的节点，更是具有让中华大地的子民相约在同一个时段跨过千山万水，把他们送到亲人身边的魔力。这种盛大的『回归』，是任何节日都取代不了的。<br><img src="http://upload-images.jianshu.io/upload_images/763193-a3fbfc1382f0cdb5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="北京南站"></p>
<p>在高铁上一直看古龙的小说，感觉没一会就到济南了，经常和家住在河北的同事开玩笑说，别看你近，你都没我回家快。的确，从北京南站做高铁到济南西站，快的话一个半小时就到了，等今年房子下来，下了南站回家也就十几分钟，总共两个小时就能从北京到济南新房子里，确实特方便。这也是当初选择去北京而没有去上海的一个理由。最近两次回来发现济南边干净了，发展也挺快，只是城市规模还是太小，交通也不完善，重要的是牛逼的互联网公司还是太少，相信过几年等济南这边发展发展还是会选择会济南的。<br><img src="http://upload-images.jianshu.io/upload_images/763193-c93f8d4c1fc96ef1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="济南西站"></p>
<p>有了远行，才会凸显故乡的可贵，毕竟再美的风景和财富都比不过家乡的默默温情。故乡承载了太多美好的回忆，等着我再次去重温。过年了，在家多陪陪父母，毕竟亲人比什么都重要。以前古人说，『父母在，不远行』，现在交通发达了，也要『父母在，勤回家』。</p>
]]></content>
      
        <categories>
            
            <category> 周志 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 独白 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[工作中的时间管理]]></title>
      <url>http://chuanqiang.github.io/2018/01/30/%E5%B7%A5%E4%BD%9C%E4%B8%AD%E7%9A%84%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86/</url>
      <content type="html"><![CDATA[<p>今天看到一篇文章，是左耳朵耗子写的一篇公众号，是讲如何进行时间管理的。与其他时间管理的文章不同，作者提出<strong>你要主动管理的不是你的时间，而是管理你的同事，管理你的信息。</strong> 我总结了下文章的观点和内容。如下。</p>
<a id="more"></a>
<h3 id="主动管理"><a href="#主动管理" class="headerlink" title="主动管理"></a>主动管理</h3><p>首先，不要做一个被动的人，要学会『反转控制』，化被动为主动，把握自己。如果在工作中老是被人打断，作者分享了三个解决的方法：</p>
<ol>
<li>在自己的工位上挂了一个条幅，上面写着“正在努力写代码中，请勿打断……</li>
<li>跑到公司别的空闲工位上工作。</li>
<li>把你的工作安排预先设置到一个可以共享的日历上，然后分享给大家，让大家了解你的日程。</li>
<li>要求你的同事，重要的事，不要发微信，而是要发邮件，因为微信会有很大概率看不到。信息管理真的非常重要，因为将信息做好分类，才方便检索，方便你通过自己的优先级来处理信息。而目前看来，这些只有邮件才能够更好地完成（邮件可以帮你通过邮件标题聚合，你可以设置很多规则来自动化分类邮件，还可以帮你设置自动化回复）。</li>
</ol>
<h3 id="学会说“不”"><a href="#学会说“不”" class="headerlink" title="学会说“不”"></a>学会说“不”</h3><p>当你面对做不到的需求时，你不要说这个需求做不到。尤其是，你不要马上说做不到，你要先想一下，这样让别人觉得你是想做的，但是，在认真思考过后，你觉得做不到，并且给出一个你觉得做得到的方案。这里的诀窍是——给出另一个你可以做到的方案，而不是把对方的方案直接回绝掉。</p>
<p>当你面对过于复杂的需求时，你不要说不。你要反问一下，为什么要这样做？这样做的目的是什么？当了解完目的以后，你可以给出一个自己的方案，或是和对方讨论一个性价比更好的方案。你可以回复说，这个需求好复杂，我们能不能先干这个，再做那个，这样会更经济一些。这里的诀窍是——我不说我不能完全满足你，但我说我可以部分满足你。</p>
<p>当你面对时间完全不够的需求时，你也不要说不。既然对方把压力给你，你要想办法把这个压力还回去，或是让对方来和你一同分担这个压力。</p>
<p>惯用的方式是给回三个选择：</p>
<ol>
<li>我可以加班加点完成，但是我不保证好的质量，有 bug 你得认，而且事后你要给我 1 个月的时间还债。</li>
<li>我可以加班加点，还能保证质量，但我没办法完成这么多需求，能不能减少一些？</li>
<li>我可以保质保量地完成所有的需求，但是，能不能多给我 2 周时间？</li>
</ol>
<p>这里的诀窍是——我不能说不，但是我要有条件地说是。 而且，我要把你给我的压力再反过来还给你，看似我给了需求方选择，实际上，我掌握了主动。</p>
<h3 id="加班和开会"><a href="#加班和开会" class="headerlink" title="加班和开会"></a>加班和开会</h3><p>国内的公司之所以会有这么多的加班和会议，主要原因还是管理者在管理上只会使用低级的通过劳动密集型的方式来做事。在国内的公司，老板们看到团队在拼命加班，会很高兴，而在国外的公司，老板看到团队在拼命加班，会觉得这个团队一定是哪里出了问题，老板会比较焦虑。</p>
<p>加班干出来了质量不好的软件，于是线上故障很多，要花时间处理，而后面的需求也过来了，发现复杂代码的扩展性很差，越干越慢，越干越烂，越干故障越多。于是，你会被抱怨得越来越多。果怎么做都要受伤害，那么两害相权取其轻。在项目延期和线上故障两者选择前者。</p>
<p>开会，不是讨论问题，而是讨论方案，开会不是要有议题，而是要有议案。所以，作为与会者，如果你发现没有议案，大家海了去说，那么你有两种选择，跳出来帮大家理一理，或者也可以说一下，如果会上讨论不清，要不先线下讨论，有了方案再来评审。也许在一些会上你不敢这么干，但是有些会你是可以这么干的。能影响的这些都能为你争取到很多时间。</p>
<p>只有将使用时间的主动权掌握在自己手上，才能更好地利用时间，才能更为高效率的工作。所以，这是时间管理中非常关键的事！</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 管理 </tag>
            
            <tag> 时间 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Redis 基础 一]]></title>
      <url>http://chuanqiang.github.io/2018/01/29/Redis%20%E5%9F%BA%E7%A1%80%20%E4%B8%80/</url>
      <content type="html"><![CDATA[<p>本文主要介绍了 Redis 的简介、安装、常用命令和基础类型。</p>
<a id="more"></a>
<h2 id="简介和安装"><a href="#简介和安装" class="headerlink" title="简介和安装"></a>简介和安装</h2><h3 id="1-NoSQL-简介"><a href="#1-NoSQL-简介" class="headerlink" title="1. NoSQL 简介"></a>1. NoSQL 简介</h3><p>NoSQL，泛指非关系型数据库，NoSQL数据库分四类</p>
<ol>
<li>键值(key-value)存储数据库，这一类数据库会使用一个哈希表，这个表中一个特定的键和一个指针指向特定的数据，如Redis，Voldmort，Oracle BDB</li>
<li>列存储数据库，通常用来因对分布式存储的海量诗句，键仍然存在，但是它们的特点是指向多个列。如HBASE，Riak。</li>
<li>文档型数据库，数据模型是版本化的文档，半结构化的文档以特定的格式存储，比如JSON。文档型数据库可以看做是键值数据库的升级版，允许之间嵌套键值。而且文档数据库比键值数据库的查询效率更高。如:CouchDB，MongoDB。</li>
<li>图形数据库，与其他行列以及刚性结构的SQL数据库不同，它是使用灵活的图形模型，能够扩展到过个服务器上。</li>
</ol>
<p>NoSQL数据库没有表中的查询语言(SQL)，因此进行数据查询需要定制数据模型。许多NoSQL数据库都有TEST式的数据接口或者API。如:Neo4J，InfoGrid，Infinite Graph。</p>
<h3 id="2-非关系型数据库的特点"><a href="#2-非关系型数据库的特点" class="headerlink" title="2. 非关系型数据库的特点"></a>2. 非关系型数据库的特点</h3><ol>
<li>数据模型比较简单</li>
<li>需要灵活性更强的IT系统</li>
<li>对数据库性能要求较高</li>
<li>不需要高度的数据一致性</li>
<li>对于给定的key，比较容易映射复杂值得环境</li>
</ol>
<h2 id="Redis-简介"><a href="#Redis-简介" class="headerlink" title="Redis 简介"></a>Redis 简介</h2><p>是以key-value形式存储，data structure service 数据结构服务器。键可以包含:(String) 字符串，哈希，(list)链表，(set)集合，(zset)有序集合。这些数据集合都支持push/pop、add/remove级取交集、并集已经更复杂的操作。Redis支持各种不同的方式排序。为了保证效率，数据都是缓存在内存中，它可以周期性的把更新的数据写入磁盘或者把修改的操作追加到文件中。</p>
<ul>
<li>优点<ul>
<li>对数据高并发读写</li>
<li>对海量数据的高效率存储和访问</li>
<li>对数据的可扩展性和高可用性</li>
</ul>
</li>
<li>缺点<ul>
<li>redis 无法做到太复杂的关系数据库模型</li>
</ul>
</li>
</ul>
<h3 id="3-一些特性"><a href="#3-一些特性" class="headerlink" title="3. 一些特性"></a>3. 一些特性</h3><ul>
<li>扩展性<ul>
<li>水平扩展。在原有的主（可读可写）从（只读）服务器集群（读写分离的），横向的扩充，增加主从节点</li>
<li>垂直扩展。把原有的主从服务器上加硬件来增加容量</li>
</ul>
</li>
<li>高可用：在原来的主节点挂掉时，从节点连接到其他的主节点。</li>
<li>可靠性：持久化后的数据不丢失（同步到硬盘）<ul>
<li>RDB: 周期性的把内存中的数据同步到硬盘上</li>
<li>只要DML操作，把持久化操作记录到日志<code>appendonly.aof</code>中（相当于Oracle中的undo的概念）。主要。</li>
</ul>
</li>
</ul>
<h3 id="4-Redis-的三种内容解决方案"><a href="#4-Redis-的三种内容解决方案" class="headerlink" title="4. Redis 的三种内容解决方案"></a>4. Redis 的三种内容解决方案</h3><ol>
<li><strong>主从形式</strong>: 普通的一个主节点，多个从节点。当主节点挂掉的话，整个集群挂掉。</li>
<li>哨兵形式（redis 2.x）：在主从的基础上增加一个哨兵节点，来监视主从节点的状态。当主节点挂掉的时候，在从节点里通过选举方式选择一个从节点来当主节点。当主节点修复，会默认变成从节点。</li>
<li>集群模式（redis 3.x）:多主多从，可以做数据的分布（把数据均摊到多台机器）</li>
</ol>
<h3 id="5-关于Redis的面试问题"><a href="#5-关于Redis的面试问题" class="headerlink" title="5. 关于Redis的面试问题"></a>5. 关于Redis的面试问题</h3><h4 id="1-Redis-慢"><a href="#1-Redis-慢" class="headerlink" title="1. Redis 慢"></a>1. Redis 慢</h4><p><strong>原因</strong>：在写入的时候，redis 使用AOF模式来维持高可用，因此要不断的记录日志。导致写慢读快（读自内存）。</p>
<p><strong>解决方法</strong>：2.0时候可以调节虚拟机的参数；3.0集群后参数不可调，多加服务器；增加结合SSDB，来增加写的速度。</p>
<h4 id="2-如何综合的解决高并发问题"><a href="#2-如何综合的解决高并发问题" class="headerlink" title="2. 如何综合的解决高并发问题"></a>2. 如何综合的解决高并发问题</h4><p><strong>前端</strong>：lvs（负载兼容器） + nginx（业务拆分）</p>
<p><strong>后台</strong>：数据库的分表分库 / redis缓存（提高性能，给数据库降压）</p>
<h4 id="3-业务场景"><a href="#3-业务场景" class="headerlink" title="3. 业务场景"></a>3. 业务场景</h4><p>不需要实时返回数据，不需要强一致性 </p>
<ul>
<li>缓存（应用最多，功能是秒杀，抢购，抢红包）</li>
<li>任务队列（聊天多条消息）</li>
<li>应用排行榜</li>
<li>网站访问统计</li>
<li>投票数、微博转发,评论、浏览量</li>
<li>数据过期处理</li>
<li>分布式集群架构中的session 分离</li>
</ul>
<h2 id="Redis-安装和常用命令"><a href="#Redis-安装和常用命令" class="headerlink" title="Redis 安装和常用命令"></a>Redis 安装和常用命令</h2><h3 id="1-Linux-系统"><a href="#1-Linux-系统" class="headerlink" title="1. Linux 系统"></a>1. Linux 系统</h3><h4 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a><a href="http://redis.io/download" target="_blank" rel="external">下载地址</a></h4><h4 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h4><ol>
<li>首先安装 gcc，把下载好的<code>redis-3.0.0-rc2.tar.gz</code>放到 Linux <code>/usr/local</code>文件夹下；</li>
<li>进行解压 <code>tar -zxvf redis-3.0.0-rc2.tar.gz</code>；</li>
<li>进入到 <code>redis-3.0.0</code>目录下，进行编译 <code>make</code>；</li>
<li>进入到<code>src</code>下进行安装 <code>make install</code> ，验证(查看 src 目录下，有<code>redis-server</code>、<code>redis-cli</code>即可)；</li>
<li>建立两个文件夹存放 redis 命令和配置文件。<ul>
<li><code>mkdir -p /usr/local/redis/etc</code></li>
<li><code>mkdir -p /usr/local/redis/bin</code></li>
</ul>
</li>
<li>把<code>redis-3.0.0</code>下的<code>redis.conf</code>移动到<code>/usr/local/redis/etc</code>下。<ul>
<li><code>cp redis.conf /usr/local/redis/etc</code></li>
</ul>
</li>
<li>把<code>redis-3.0.0/src</code>里的以下文件移动到 <code>bin</code> 下。<ul>
<li><code>mv mkreleasehdr.sh redis-benchmark redis-check-aof redis-check-dump redis-cli redis-server /usr/local/redis/bin</code></li>
</ul>
</li>
<li>启动时并制定配置文件=: <code>./redis-server /usr/local/redis/etc/redis.conf</code>。(注意使用后台启动，所以修改<code>redis.conf</code>里的<code>9 daemonize</code> 改为<code>yes</code>)</li>
<li>验证是否启动成功<ul>
<li><code>ps -ef | grep redis</code> 或查看端口号<code>netstat -tunpl | grep 6379</code></li>
<li>进入redis客户端<code>redis-cli</code>，退出客户端<code>quit</code></li>
<li>退出redis服务<code>pkill redis-server</code>，或kill进程号，或<code>/usr/local/redis/bin/redis cli shutdown</code></li>
</ul>
</li>
</ol>
<h4 id="安装命令补充"><a href="#安装命令补充" class="headerlink" title="安装命令补充"></a>安装命令补充</h4><ol>
<li><code>linux yum rz</code>安装(使可以上传下载文件): <code>sudo yum install lrzsz -y</code></li>
<li>上传文件 <code>rz</code>(<code>sc</code>: 下载文件)</li>
<li>gcc 安装: <code>sudo yum install gcc-c++</code></li>
<li>进入redis加压后的文件夹，执行<code>make</code>，报错的话执行<code>make MALLOC=libc</code></li>
<li>启动redis服务器:<code>/usr/local/redis/bin/redis-server /usr/local/redis/etc/redis.conf</code>；启动客户端<code>/usr/local/redis/bin/redis-cli</code></li>
<li>格式解压<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">.tar.gz     格式解压为          tar   -zxvf   xx.tar.gz</div><div class="line">.tar.bz2   格式解压为          tar   -jxvf    xx.tar.bz2</div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="2-Mac-系统"><a href="#2-Mac-系统" class="headerlink" title="2. Mac 系统"></a>2. Mac 系统</h3><p>使用<code>Homebrew</code>安装 Redis<br>安装命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install redis</div></pre></td></tr></table></figure></p>
<p>安装完成后的提示信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">To have launchd start redis at login: </div><div class="line">ln -sfv /usr/local/opt/redis/*.plist ~/Library/LaunchAgents </div><div class="line">Then to load redis now: </div><div class="line">launchctl load ~/Library/LaunchAgents/homebrew.mxcl.redis.plist </div><div class="line">Or, if you don’t want/need launchctl, you can just run: </div><div class="line">redis-server /usr/local/etc/redis.conf</div></pre></td></tr></table></figure></p>
<h3 id="3-常用命令"><a href="#3-常用命令" class="headerlink" title="3. 常用命令"></a>3. 常用命令</h3><p>开机启动 Redis 命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ln -sfv /usr/local/opt/redis/*.plist ~/Library/LaunchAgents</div></pre></td></tr></table></figure></p>
<p>检查服务是否启动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ redis-cli ping 返回 PONG 启动</div><div class="line">$ ps aux | grep redis // 查看redis进程</div></pre></td></tr></table></figure></p>
<p>使用配置文件启动 Redis 命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ redis-server /usr/local/etc/redis.conf</div><div class="line">或 $ redis-server</div><div class="line">另 $ redis-server &amp; // 后台程序式运行</div></pre></td></tr></table></figure></p>
<p>停止 Redis 服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ redis-cli shutdown</div><div class="line">// Redis收到命令后，服务端会断开所有客户端的连接，然后根据配置执行持久化，最后退出</div></pre></td></tr></table></figure></p>
<p>启动客户端<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">// 1. 按照默认配置连接Redis（127.0.0.1:6379）</div><div class="line">$ redis-cli</div><div class="line">// 2. 指定地址和端口号</div><div class="line">redis-cli -h 127.0.0.1 -p 6379</div></pre></td></tr></table></figure></p>
<p>停止客户端<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ctrl + c 或 quit</div></pre></td></tr></table></figure></p>
<p>redis 配置文件的位置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/local/etc/redis.conf</div></pre></td></tr></table></figure></p>
<p>卸载redis和它的文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brewuninstall redis rm ~/Library/LaunchAgents/homebrew.mxcl.redis.plist</div></pre></td></tr></table></figure></p>
<h3 id="4-其他命令"><a href="#4-其他命令" class="headerlink" title="4. 其他命令"></a>4. 其他命令</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="comment">-- 修改为守护模式</span></div><div class="line">daemonize yes</div><div class="line"></div><div class="line"><span class="comment">-- 设置进程锁文件</span></div><div class="line">pidfile /usr/local/redis/redis.pid</div><div class="line"></div><div class="line"><span class="comment">-- 端口</span></div><div class="line">port 6379</div><div class="line"></div><div class="line"><span class="comment">-- 客户端超时时间</span></div><div class="line">timeout 300</div><div class="line"></div><div class="line"><span class="comment">-- 日志级别</span></div><div class="line">loglevel debug</div><div class="line"></div><div class="line"><span class="comment">-- 日志文件位置</span></div><div class="line">logfile /usr/local/redis/log-redis.log</div><div class="line"></div><div class="line"><span class="comment">-- 设置数据库的数量，默认数据库为16，可以使用SELECT 命令在连接上指定数据库id</span></div><div class="line">databases 16</div><div class="line"></div><div class="line"><span class="comment">-- 指定在多长时间内，有多少次更新操作，就将数据同步到数据文件，可以多个条件配合</span></div><div class="line"><span class="comment">-- save</span></div><div class="line"></div><div class="line"><span class="comment">-- Redis默认配置文件中提供了三个条件：</span></div><div class="line">save 900 1</div><div class="line">save 300 10</div><div class="line">save 60 10000</div><div class="line"></div><div class="line"><span class="comment">-- 指定存储至本地数据库时是否压缩数据，默认为yes，Redis采用LZF压缩，如果为了节省CPU时间，</span></div><div class="line"><span class="comment">-- 可以关闭该#选项，但会导致数据库文件变的巨大</span></div><div class="line">rdbcompression yes</div><div class="line"></div><div class="line"><span class="comment">-- 指定本地数据库文件名</span></div><div class="line">dbfilename dump.rdb</div><div class="line"></div><div class="line"><span class="comment">-- 指定本地数据库路径</span></div><div class="line">dir /usr/local/redis/db/</div><div class="line"></div><div class="line"><span class="comment">-- 指定是否在每次更新操作后进行日志记录，Redis在默认情况下是异步的把数据写入磁盘，如果不开启，可能</span></div><div class="line"><span class="comment">-- 会在断电时导致一段时间内的数据丢失。因为 redis本身同步数据文件是按上面save条件来同步的，所以有</span></div><div class="line"><span class="comment">-- 的数据会在一段时间内只存在于内存中</span></div><div class="line">appendonly no</div><div class="line"><span class="comment">-- 指定更新日志条件，共有3个可选值：</span></div><div class="line"><span class="comment">-- no：表示等操作系统进行数据缓存同步到磁盘（快）</span></div><div class="line"><span class="comment">-- always：表示每次更新操作后手动调用fsync()将数据写到磁盘（慢，安全）</span></div><div class="line"><span class="comment">-- everysec：表示每秒同步一次（折衷，默认值）</span></div><div class="line">appendfsync everysec</div></pre></td></tr></table></figure>
<h2 id="Redis-基础类型讲解"><a href="#Redis-基础类型讲解" class="headerlink" title="Redis 基础类型讲解"></a>Redis 基础类型讲解</h2><p>redis 一共5种基本数据类型: String、Hash、List、Set、ZSet</p>
<ul>
<li><p><code>flushdb</code>，直接清空</p>
<h3 id="1-String-类型"><a href="#1-String-类型" class="headerlink" title="1. String 类型"></a>1. String 类型</h3><p>String 类型是包含很多种类型的特殊类型，并且是二进制安全的。比如序列化对象进行存储，比如一张二进制图片进行二进制存储，比如一个简单的字符串、数值等。</p>
</li>
<li><p>设置值 <code>set name zcq</code></p>
</li>
<li>取值 <code>get name</code>(设置name多次会覆盖)</li>
<li>删除值 <code>del name</code></li>
<li><code>setnx(not exist) name</code>: 如果不存在进行设置，就不需要设置了，返回零</li>
<li><code>setex(expired)</code>，<code>setex color 10 red</code>设置color的有效期为10秒，10秒后返回nil(redis中nil表示空)</li>
<li>使用<code>setrange</code>替换字符串<ul>
<li><code>set email 123456789@qq.com</code></li>
<li><code>setrange email 10 ww</code>(表示从第10位开始替换，后面跟上替换的字符串)</li>
</ul>
</li>
<li>mset 、mget 一次性设置和获取多个值<ul>
<li><code>mset k1 v1 k2 v2</code></li>
<li><code>mget k1 k2</code></li>
</ul>
</li>
<li>一次性设置和取值 <code>getset</code> 方法<ul>
<li>getset key value</li>
</ul>
</li>
<li><code>incr</code>和<code>decr</code>方法: 对某一值进行递增和递减<code>incr  int_a</code></li>
<li><code>incrby</code>和<code>decrby</code>方法: 对某个值进行指定长度的递增和递减<ul>
<li><code>incrby int_a 4</code></li>
</ul>
</li>
<li><code>append key value</code>: 为某个值追加方法<ul>
<li><code>append name chuanqiang</code></li>
</ul>
</li>
<li><code>strlen key</code> 获取字符串的长度 </li>
</ul>
<h3 id="2-Hash-类型"><a href="#2-Hash-类型" class="headerlink" title="2. Hash 类型"></a>2. Hash 类型</h3><p>Hash 类型是 String 类型的 field 和 value 的映射，或者说一个 String 几何，适合存储对象，会比把一个对象类型存储到String 中更减少空间，并方便存储整个对象。</p>
<ul>
<li><code>hset myhash field1 hello</code> 存储值</li>
<li><code>hget myhash field1</code> 获取内容</li>
<li><code>hmset myhash field1 v1 field v2</code> 批量存储多个键值对</li>
<li><code>hmget myhash field1 field2</code> 批量获取键值对</li>
<li><code>hincrby</code>、<code>hdecrby</code> 几何递增和递减</li>
<li><code>hexists</code> 是否存在 key，如果存在返回，不存在返回 0 </li>
<li><code>hlen</code> 返回 Hash 集合里所有的键数值</li>
<li><code>hdel</code> 删除指定 hash 里所有的字段</li>
<li><code>hkeys</code> 返回 Hash 里所有的字段</li>
<li><code>hvals</code> 返回 Hash 的所有 value</li>
<li><code>hgetall</code> 返回 Hash 里所有的 key 和 value</li>
</ul>
<h3 id="3-List-类型"><a href="#3-List-类型" class="headerlink" title="3. List 类型"></a>3. List 类型</h3><p>List 类型是一个链表结构的集合，其主要功能有 <code>push</code>、<code>pop</code>、获取元素等。List类是一个双端链表结构。我们可以进行集合的头部和尾部添加或删除元素。List 可以作为栈，又可以作为队列。</p>
<ul>
<li><code>lpush</code>: 从头部加入元素(栈)，先进后出<ul>
<li><code>lpush list1 &quot;hello&quot;; lpush list1 &quot;world&quot;</code></li>
<li><code>lrange list1 0 -1</code>: 表示从头取到尾。结果是<code>world hello</code></li>
</ul>
</li>
<li><code>rpush</code>: 从尾部加入元素(队列)，先进先出<ul>
<li><code>rpush list2 &quot;one; rpush list2&quot;</code></li>
<li><code>lrange list2 0 -1</code> 结果是<code>hello world</code></li>
</ul>
</li>
<li><code>linsert</code> 方法: 插入元素<ul>
<li><code>linsert list3 before[集合的元素][插入的元素]</code></li>
<li>如<code>linsert list2 before &quot;world&quot; &quot;hi&quot;</code>，结果是<code>hello hi world</code></li>
</ul>
</li>
<li><code>lset</code> 方法: 将指定下标的元素替换掉<ul>
<li><code>lset list1 0 &quot;aaa&quot;</code>，把list1 的第一个数据替换为 aaa</li>
</ul>
</li>
<li><code>lrem</code> 方法: 删除元素，返回删除的个数<ul>
<li><code>lrem list1 2 aaa</code>，删除两个 aaa</li>
</ul>
</li>
<li><code>ltrim</code> 方法: 保留指定 key 的值范围内的数据<ul>
<li>eg <code>ltrim list1 1 5</code>，保留第2到第6的值，删除第一个值</li>
</ul>
</li>
<li><code>lpop</code>: 从list 的头部删除元素，并返回删除元素<code>lpop list1</code></li>
<li><code>rpop</code>: 从list 的尾部删除元素，并返回删除元素<code>rpop list1</code></li>
<li><code>rpoplpush</code>: 移除列表的最后一个元素，并将该元素添加到另一个列表并返回</li>
<li><code>lindex</code>: 通过索引获取列表中的元素。也可以使用负数下标，以 -1 表示列表的最后一个元素， -2 表示列表的倒数第二个元素，以此类推。</li>
<li><code>llen</code>: 返回元素的个数</li>
</ul>
<h3 id="4-Set-类型和-Zset-类型"><a href="#4-Set-类型和-Zset-类型" class="headerlink" title="4. Set 类型和 Zset 类型"></a>4. Set 类型和 Zset 类型</h3><p>set 集合是 String 类型的无序集合，set 是通过<code>hashtable</code>实现的，对集合我们可以取交集、并集、差集。</p>
<h4 id="set-类型"><a href="#set-类型" class="headerlink" title="set 类型"></a>set 类型</h4><ul>
<li><code>sadd set1 name</code>: 向集合中添加元素。</li>
<li><code>smembers set:</code> 查看set集合中的元素</li>
<li><code>srem set name</code>: 删除set中name元素</li>
<li><code>spop set:</code> 随机返回删除的key</li>
<li><code>sdiff set1 set2:</code> 返回两个集合的不同元素(以前面的集合为标准)</li>
<li><code>sdiffstore set3 set1 set2</code>: 将返回的不同元素存储到set3中</li>
<li><code>sinter set1 set2</code>: 返回集合的交集</li>
<li><code>sinterstroe set3 set1 set2</code>: 返回交集结果，存储到set3中</li>
<li><code>sunion set1 set2</code>: 取并集</li>
<li><code>sunionstore set3 set1 set2</code>: 取并集，存到set3中</li>
<li><code>smove set1 set2 a</code>: 将set1中的元素移动到set2中去</li>
<li><code>scard set</code>: 查看集合里面的元素个数</li>
<li><code>sismember set name</code>: 判断某元素是否为集合中的元素。返回1代表是，0代表否</li>
<li><code>srandmember set</code>: 随机返回一个元素</li>
</ul>
<h4 id="zset-类型"><a href="#zset-类型" class="headerlink" title="zset 类型"></a>zset 类型</h4><ul>
<li><code>zadd</code>向有序集合中添加一个元素，该元素如果存在，则更新顺序。<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">zadd zset1 3 five;</div><div class="line">zadd zset1 1 one;</div><div class="line">zadd zset1 2 two;</div><div class="line"></div><div class="line">zrange zset1 0 -1 withscores;  -- 展示所有元素</div></pre></td></tr></table></figure>
</li>
</ul>
<p>zset可以做搜索排行</p>
<ul>
<li><code>zrem zset1 one</code>: 删除名称为key的zset中的元素</li>
<li><code>zincrby</code>: 以指定去自动递增或减少</li>
<li><code>zrangebyscore</code>: 找到指定区间范围的拘束进行返回</li>
<li><code>zremrangebyrank</code>: 只删除索引1</li>
<li><code>zremrangebyscore</code>: 删除指定序列号</li>
<li><code>zrank zset1 three</code>: 升序排序后再找到索引值返回</li>
<li><code>zrevrank zset1 tow</code>: 降序排序后再找到索引值返回</li>
<li><code>zrangebyscore zset1 2 3 withscores</code>: 找到指定区间范围的数据尽兴返回</li>
<li><code>zcard zset</code>: 返回集合里所有的元素个数</li>
<li><code>zcount zset1 1 4</code>: 返回集合中给定区间中的数量</li>
<li><code>zremrangebyrank zset1 0 1</code>:删除索引从0到1的元素</li>
<li>[x] <code>zremrangebyscore zset1  5 5</code>: 删除指定序号</li>
</ul>
<h2 id="Redis-高级命令"><a href="#Redis-高级命令" class="headerlink" title="Redis 高级命令"></a>Redis 高级命令</h2><h3 id="1-Redis高级命令及特性"><a href="#1-Redis高级命令及特性" class="headerlink" title="1. Redis高级命令及特性"></a>1. Redis高级命令及特性</h3><ul>
<li><code>keys *</code>: 返回满足的所有键(可以模糊匹配)</li>
<li><code>exists key</code>: 是否存在指定的key</li>
<li><code>expire name 5</code>: 设置过期时间</li>
<li><code>persist name</code>: 取消过期时间</li>
<li><code>move name 1</code>: 将当前数据库中的key转移到其他数据库中</li>
<li><code>randomkey</code>: 随机返回数据库的一个key</li>
<li><code>rename</code>: 重命名key</li>
<li><code>echo</code>: 打印命令</li>
<li><code>dbsize</code>: 查看数据库的key数量</li>
<li><code>info</code>: 获取数据库的信息</li>
<li><code>config get</code>: 实时存储收到的请求(返回相关的配置信息<ul>
<li><code>config get *</code>: 返回所有配置(其实就是redis.config的缩影)</li>
</ul>
</li>
<li><code>flushdb</code>: 清空当前数据库</li>
<li><code>flushall</code>: 清空所有数据库<br>redis 分为16个数据库，单只是逻辑上的概念，不是物理上的划分</li>
</ul>
<p>###2. Redis 的安全性<br>因为Redis的速度相当快，一个外部用户1秒内可以进行15w次的密码尝试，这意味着需要设定非常强大的密码来防止暴力破解。</p>
<p><code>vi</code>编辑<code>redis.conf</code>文件，找到下面进行保存修改<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#requirepass foobared</div><div class="line">requirepass ****</div></pre></td></tr></table></figure></p>
<p>重启服务器<code>pkill redis-server</code>，再次进入<code>keys *</code>，会发型没有权限进行查询<code>(erro)NOAUTH Authentication required</code>。输入密码则能成功进入<code>auth bhz</code>。</p>
<p>每次进入的时候都需要输入密码，有种简单的方式直接登录授权:<code>#/usr/local/redis/bin/redis-cli -a bhz</code></p>
<h3 id="3-主从复制"><a href="#3-主从复制" class="headerlink" title="3. 主从复制"></a>3. 主从复制</h3><p><strong>主从复制</strong></p>
<ol>
<li>Master可以拥有多个slave(层服务器)</li>
<li>多个slave可以连接同一个master外，还可以连接到其他slave</li>
<li>主从复制不会阻塞master，在同步时master可以继续处理client请求</li>
<li>提供系统的伸缩性<br><strong>主从复制过程</strong></li>
<li>slave与master建立连接，发送sync同步命令</li>
<li>master会开启一个后台进程，将数据库快照保存到文件中，同时master主进程会开始收集新的命令并缓存。</li>
<li>后台完成保存后，就将文件发送给slave</li>
<li>slave将此文件保存到硬盘上<br><strong>主从复制配置</strong></li>
<li>clone 服务器之后修改 slave 的 IP 地址</li>
<li>修改配置文件:<code>/usr/local/redis/etc/redis.conf</code><ul>
<li>第一步，<code>slaveof&lt;masterip&gt;&lt;mastport&gt;</code></li>
<li>第二部，<code>masterauth&lt;master-password&gt;</code><br>使用<code>info</code>查看 role 角色即可知道是主服务或从服务</li>
</ul>
</li>
</ol>
<h4 id="克隆服务器"><a href="#克隆服务器" class="headerlink" title="克隆服务器"></a>克隆服务器</h4><ol>
<li>关掉当前的虚拟机</li>
<li>VMware 在当前服务器上右键『管理』–『克隆』– 『下一步，下一步』–『创建完整克隆』</li>
<li>克隆出的新服务的『网络适配器』–右边的『高级』–『确定』</li>
</ol>
<h4 id="设置IP"><a href="#设置IP" class="headerlink" title="设置IP"></a>设置IP</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># ifconfig eth0  192.168.149.129 netmask 255.255.255.0</div></pre></td></tr></table></figure>
<p><strong>其他方式资料参考</strong></p>
<ul>
<li><a href="http://biancheng.dnbcw.net/linux/293227.html" target="_blank" rel="external">资料1</a></li>
<li><a href="http://www.jb51.net/LINUXjishu/64000.html" target="_blank" rel="external">资料2</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 编程技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Redis </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第二十五周 - 年会和第二技能]]></title>
      <url>http://chuanqiang.github.io/2018/01/21/%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%94%E5%91%A8%20-%20%E5%B9%B4%E4%BC%9A%E5%92%8C%E7%AC%AC%E4%BA%8C%E6%8A%80%E8%83%BD/</url>
      <content type="html"><![CDATA[<p>年会临近，同事们都开始准备节目。在同事的威逼利诱下，我也无奈的参加了他们准备的小品《吃面》，在里面试演员『会计』一角色。这个角色台词少，另外可以和同事们一块乐呵乐呵，不然以为我尿性肯定玩不来。另一个更重要的原因是，看他们确实找不到人了，眼看节目就夭折了，想作为朋友帮他们一把。既然踏入贼船，就尽量把节目准备好吧。</p>
<a id="more"></a>
<p><img src="http://oeckzejn4.bkt.clouddn.com/20180121151654632445262.jpg" alt="积极准备节目的小伙伴"><br>我好像真的不适合演戏，不能游刃有余的控制自己的表情和动作，经常能自己感觉到面部的僵硬。我感觉自己是内心挺丰富一人啊，难道大隐隐身于内心，不轻易流露于表面？周末去了北京棕榈泉国际俱乐部，我们年会的宴会厅就在这里，今天是去排练年会的节目。<br><img src="http://oeckzejn4.bkt.clouddn.com/20180121151654635728305.jpg" alt="相当认真"><br>通过这个事，有一个感悟，人还是要多准备第二第三技能。不论是生存生活还是怡情交际，多一门技能，多一个特长都能极大的扩展你的生活面，提高生活的幸福感。比如，多一门技能，如写作、理财，完全可以成为创收的另一途径，此所谓『技多不压力身』，因为面对风起云涌的社会发展，不一定什么时候，你的本业就不保，那时你的副业很可能成为你安身立命之本。也要多些特长，比如绘画、唱歌、舞蹈，乐器。你可以发现，你身边有某种特长的人更比较自信和受欢迎，不但可以闲暇之时，怡情自乐，陶冶自己，也能关键时候，登临舞台，绽放自己，赢得关注。特长的培养不要当做小时候做的事情，长大后一样可以从头学习一样东西。人生的可能性可以自己塑造，不要拘泥于一些外接环境和消极的心态。我就是那种没什么特长的人，但是我已经做了自己的『孵化』项目，所谓『孵化』就是培养兴趣，练习技能，暗帝规划自己的潜力股。<br><img src="http://oeckzejn4.bkt.clouddn.com/2018012115165469937725.jpg" alt="感觉这图很溜"></p>
<p>从俱乐部出来，看到一栋建筑很有气势，赶忙按下快门。<br><img src="http://oeckzejn4.bkt.clouddn.com/20180121151654710637407.jpg" alt="建筑"></p>
]]></content>
      
        <categories>
            
            <category> 周志 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 独白 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[胡适四十自述 - 书摘]]></title>
      <url>http://chuanqiang.github.io/2018/01/21/%E8%83%A1%E9%80%82%E5%9B%9B%E5%8D%81%E8%87%AA%E8%BF%B0%20-%20%E4%B9%A6%E6%91%98/</url>
      <content type="html"><![CDATA[<h3 id="内容简介"><a href="#内容简介" class="headerlink" title="内容简介"></a>内容简介</h3><p>《胡适四十自述》是胡适生前唯一亲笔撰写的记录其早年经历和心路历程的自传，也是中国现代传记文学的名篇之作。在《胡适:四十自述(图文典藏版)》中，胡适回顾了自己童年、少年与青年时代的人生经历，全面总结了自己早年的心路成长历程。</p>
<a id="more"></a>
<p>《胡适:四十自述》是胡适先生与自己的过去进行的“心灵对话”，读《胡适:四十自述》我们可以从中感受胡适先生特有的睿智、幽默与文化气质，有助于我们了解一个真实的胡适，特别是胡适青少年时代的心路成长历程。</p>
<h3 id="作者简介"><a href="#作者简介" class="headerlink" title="作者简介"></a>作者简介</h3><p>胡适（1891—1962），安徽绩溪人。现代著名学者、诗人、历史家、文学家、哲学家，因提倡文学革命而成为新文化运动的领袖之一。曾任北京大学校长、台湾“中央研究院”院长等。有《胡适全集》44卷存世。</p>
<h3 id="关于为什么写传记"><a href="#关于为什么写传记" class="headerlink" title="关于为什么写传记"></a>关于为什么写传记</h3><p>我在这十几年中，因为深深的感觉中国最缺乏传记的文学，所以到处劝我的老辈朋友写他们的自传。不幸得很，这班老辈朋友虽然都答应了，终不肯下笔。最可悲的一个例子是林长民先生，他答应了写他的五十自述作他五十岁生日的纪念；到了生日那一天，他对我说：“适之，今年实在太忙了，自述写不成了；明年生日我一定补写出来。”不幸他庆祝了五十岁的生日之后，不上半年，他就死在郭松龄的战役里，他那富于浪漫意味的一生就成了一部人间永不能读的逸书了！</p>
<p>我们赤裸裸的叙述我们少年时代的琐碎生活，为的是希望社会上做过一番事业的人也会赤裸裸的记载他们的生活，给史家做材料，给文学开生路。</p>
<p>我在学堂里的名字是胡洪骍。有一天的早晨，我请我二哥代我想一个表字，二哥一面洗脸，一面说：“就用‘物竞天择，适者生存’的‘适’字。(胡适名字的来源)</p>
<h3 id="关于文学革命"><a href="#关于文学革命" class="headerlink" title="关于文学革命"></a>关于文学革命</h3><p>你这与奴才做奴才的奴才！我们若把这句话改作古文，“汝奴之奴”或他种译法，总不能有原文的力量。这岂不是因为死的文字不能表现活的话语？此种例证，何止千百？所以我们可以说：历史上的“文学革命”全是文学工具的革命。叔永诸人全不知道工具的重要，所以说“徒于文字形式上讨论，无当也”。他们忘了欧洲近代文学史的大教训！若没有各国的活语言作新工具，若近代欧洲文人都还须用那已死的拉丁文作工具，欧洲近代文学的勃兴是可能的吗？欧洲各国的文学革命只是文学工具的革命。中国文学史上几番革命也都是文学工具的革命。这是我的新觉悟。</p>
<p>国文要旨在通解普通语言文字，能自由发表思想，并使略解高深文字，涵养文学之兴趣，兼以启发智德。</p>
<h3 id="关于读书"><a href="#关于读书" class="headerlink" title="关于读书"></a>关于读书</h3><p>为什么要读书？有三点可以讲：第一，因为书是过去已经知道的智识学问和经验的一种记录，我们读书便是要接受这人类的遗产；第二，为要读书而读书，读了书便可以多读书；第三，读书可以帮助我们解决困难，应付环境，并可获得思想材料的来源。</p>
<h3 id="关于民气"><a href="#关于民气" class="headerlink" title="关于民气"></a>关于民气</h3><p>但群众的运动总是不能持久的。这并非中国人的“虎头蛇尾”“五分钟的热度”。这是世界人类的通病。所谓“民气”，所谓“群众运动”，都只是一时的大问题刺激起来的一种感情上的反应。感情的冲动是没有持久性的；无组织又无领袖的群众行动是最容易松散的。我们不看见北京大街的墙上大书着“打倒英日”“不要五分钟的热度”吗？其实写那些大字的人，写成之后，自己看着很满意，他的“热度”早已消除大半了；他回到家里，坐也坐得下了，睡也睡得着了。所谓“民气”，无论在中国在欧美，都是这样：突然而来，悠然而去。几天一次的公民大会，几天一次的示威游行，虽然可以勉强多维持一会儿，然而那回天安门打架之后，国民大会也就不容易召集了。</p>
<p>民气可以督促政府，政府可以利用民气：民气与政府相为声援方才可以收效。没有一个像样的政府，虽有民气，终不能单独成功。因为外国政府决不能直接和我们的群众办交涉；民众运动的影响（无论是一时的示威或是较有组织的经济抵制），终是间接的。一个健全的政府可以利用民气作后盾，在外交上可以多得胜利，至少也可以少吃点亏。若没有一个能运用民气的政府，我们可以断定民众运动的牺牲的大部分是白白地糟蹋了的。</p>
<h3 id="关于救国"><a href="#关于救国" class="headerlink" title="关于救国"></a>关于救国</h3><p>救国是一件顶大的事业：排队游街，高喊着“打倒英日强盗”，算不得救国事业；甚至于砍下手指写血书，甚至于蹈海投江，杀身殉国，都算不得救国的事业。救国的事业须要有各色各样的人才；真正的救国的预备在于把自己造成一个有用的人才。</p>
<p>易卜生说的好：真正的个人主义在于把你自己这块材料铸造成个东西。他又说：有时候我觉得这个世界就好像大海上翻了船，最要紧的是救出我自己。在这个高唱国家主义的时期，我们要很诚恳的指出：易卜生说的“真正的个人主义”正是到国家主义的唯一大路。救国须从救出你自己下手！</p>
<p>今日最大的危险是当国的人不明白他们干的事是一件绝大繁难的事。以一班没有现代学术训练的人，统治一个没有现代物质基础的大国家，天下的事有比这个更繁难的吗？要把这件大事办的好，没有别的法子，只有充分请教专家，充分运用科学。然而“行易”之说可以作一班不学无术的军人政客的护身符！此说不修正，专家政治决不会实现。</p>
<h3 id="关于做人"><a href="#关于做人" class="headerlink" title="关于做人"></a>关于做人</h3><p>为人之道，在率其性。子臣弟友，循理之正；谨乎庸言，勉乎庸行；以学为人，以期作圣。</p>
<p>范缜盛称无佛。子良曰，“君不信因果，何得有富贵贫贱？”缜曰，“人生如树花同发，随风而散，或拂帘幌，坠茵席之上；或关篱墙，落粪溷之中。坠茵席者，殿下是也。落粪溷者，下官是也。贵贱虽复殊途，因果竟在何处？”子良无以难。</p>
<p>世间最可厌恶的事莫如一张生气的脸；世间最下流的事莫如把生气的脸摆给旁人看。这比打骂还难受。</p>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>『金瓶梅』这一部书，大家以为淫书，在禁止之列，其实也是极好的历史材料。日本的佛教大学，还把他当做课本呢，这个就可见他有历史的眼光。</p>
<p>未有四肢已断，五脏已瘵，筋脉已伤，血轮已涸，而身犹能存者；则亦未有其民愚陋怯弱涣散混浊而国犹能立者……苟有新民，何患无新制度，无新政府，无新国家！——《新民说》叙论他的根本主张是：吾思之，吾重思之，今日中国群治之现象殆无一不当从根柢处摧陷廓清，除旧而布新者也。——《新民议》</p>
]]></content>
      
        <categories>
            
            <category> 读书 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 书摘 </tag>
            
            <tag> 传记 </tag>
            
            <tag> 胡适 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第二十四周 - 时间利用理想值]]></title>
      <url>http://chuanqiang.github.io/2018/01/14/%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%9B%9B%E5%91%A8%20-%20%E6%97%B6%E9%97%B4%E5%88%A9%E7%94%A8%E7%90%86%E6%83%B3%E5%80%BC/</url>
      <content type="html"><![CDATA[<p>随着假期临近，心开始变得漂浮。就像飞行员坠机频率最高的时候恰恰是快要任务完成回国着陆的时候，面对即将迎面而来的美好时光，心潮澎湃，不能自已。告诉自己，别嘚瑟。</p>
<a id="more"></a>
<p>每周末，会眼巴巴的看着自己一周的耕耘和收获，像一个盼收的老农。而这一周，可以说是失败的一周，具体内容如下:</p>
<ul>
<li>影视 -  7小时30分钟 - 1小时4分钟/天<ul>
<li>动画『瑞克和莫蒂』第三季</li>
<li>纪录片『极地』</li>
<li>综艺『圆桌派』</li>
<li>电影『猫妖传』</li>
<li>其他</li>
</ul>
</li>
<li>阅读 - 6小时 30分钟 - 56分钟/天<ul>
<li>『北方的空地』</li>
<li>公众号文章</li>
<li>博客</li>
</ul>
</li>
<li>运动 - 4小时 - 34分钟/天<ul>
<li>快走</li>
<li>哑铃</li>
<li>腹肌撕裂者</li>
<li>跳绳</li>
</ul>
</li>
<li>写作 - 3小时 - 26分钟/天<ul>
<li>北方的空地 - 书摘</li>
<li>北方的空地 - 书评</li>
<li>中国国民性演变历程</li>
<li>第二十四周 - 浮躁</li>
</ul>
</li>
</ul>
<p>由于初用『时间块』这款软件，还没有养成时间记录的习惯，所以数据不尽完善。比如『音频』、『学习』和『工作』这三个板块的时间就十分残缺，以至没有列出。另外每个板块下的类目没有添加，使得时间的使用不细致。相信以后会记录的日臻完善，然后再进行统计、归纳、分析、评判的时候就更加有依据性。<br><img src="http://oeckzejn4.bkt.clouddn.com/20180114151594216645057.png" alt="时间块 APP.png"><br>通过上面的归纳，也能看出，『正能量』的时间段太少，除去影视栏，总共才只有13个小时。我理想的时间利用计算如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">时间利用的理想值 = 24*7 - 10*5 - 10*7 = 48h</div><div class="line">(可利用时间 = 一周总时间 - 工作时间 - 睡眠、饮食等必要时间)</div></pre></td></tr></table></figure></p>
<p>但是，因为一些事情，肯定是达不到这个理想值的，我的当下目标是30小时，也就是 62.5%，这也就是一个及格的分数，可以说是对自己的要求并不高。但是这一周只有13小时，分数是27%，显示这是一个令人失望的不及格的分数。</p>
<p>虽然有一部分是统计上的问题，这个是工具上的完善。但是失败的本质是掩盖不住的。</p>
]]></content>
      
        <categories>
            
            <category> 周志 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 独白 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[北方的空地 - 书评]]></title>
      <url>http://chuanqiang.github.io/2018/01/14/%E5%8C%97%E6%96%B9%E7%9A%84%E7%A9%BA%E5%9C%B0%20-%20%E4%B9%A6%E8%AF%84/</url>
      <content type="html"><![CDATA[<p>最近有一部电影<a href="https://movie.douban.com/subject/26426026/" target="_blank" rel="external">《77天》</a>，讲述一个探险者在荒原独自旅行的故事。我以为电影是虚构的，没想到改编自真人真事。2010年，一个名叫<a href="https://baike.baidu.com/item/%E6%9D%A8%E6%9F%B3%E6%9D%BE/7055298" target="_blank" rel="external">杨柳松</a>的青年，徒步穿越羌塘，1400公里的无人区，平均海拔5000米，走了77天。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/763193-7b23fb141e2972b6.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p>他把这段经历，写成了一本书<a href="https://baike.baidu.com/item/%E5%8C%97%E6%96%B9%E7%9A%84%E7%A9%BA%E5%9C%B0" target="_blank" rel="external">《北方的空地》</a>。</p>
<a id="more"></a>
<p><img src="http://upload-images.jianshu.io/upload_images/763193-93b395ba21749d64.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p>我读了，越读越佩服。这完全不是普通的冒险，跟川藏线的骑行是两个概念。不仅仅需要勇气和意志，还需要广博的知识，以及准确的现场判断，一个决定错误可能就会送命了。我惊叹，杨柳松是什么人啊，怎么知道这么多？！</p>
<p>电影《77天》挺一般的，可以不看。但是，热爱旅行和大自然的朋友都应该读一下这本书。它的雏形是杨柳松发在8624论坛的一个<a href="http://bbs.8264.com/thread-512349-1-1.html" target="_blank" rel="external">长篇连载</a>，现在还能读到。</p>
<h2 id="一、羌塘"><a href="#一、羌塘" class="headerlink" title="一、羌塘"></a>一、羌塘</h2><p><img src="http://upload-images.jianshu.io/upload_images/763193-89b526471b467183.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p>杨柳松穿越的羌塘位于西藏的北部，藏语的意思是”北方的未知之地”。它的北面是昆仑山脉和可可西里山脉，南面是冈底斯山脉和念青唐古拉山脉，属于高山之间的一块高原盆地。</p>
<blockquote>
<p>……南北最宽760公里，东西长约1200公里。面积59.70万平方公里，占青藏高原总面积的1/4。 行政上属西藏自治区的那曲与阿里两地区管辖。</p>
</blockquote>
<p>羌塘高原日照强烈，天气变化无常，风力强劲，十一级大风是家常便饭。冬季极寒缺水，雨季沼泽遍布，是地球上最大的无人区之一。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/763193-7e961226417bd5f8.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p>（图片说明：杨柳松的实际路线）</p>
<p>没有后援，没有补给，与外界断绝联系，几十天不遇人，一个人徒步横穿羌塘，谈何容易。此前，还没有人完成过。</p>
<blockquote>
<p>最大困惑有三个方面。一是食物补给，在如此长的天数里完全靠自给确无先例，我到底能承受怎样的饥饿状态？二是体能，在海拔五千米的恶劣环境中超负重推行能坚持多久？三是心理状态，孤身荒原中，面对周而复始的困顿何以应对？</p>
</blockquote>
<p>由于太多天没有消息，杨柳松的朋友都以为他遇难了。2014年，<a href="http://www.doyouhike.net/forum/safety/2372479,0,0,0.html" target="_blank" rel="external">另一个网友</a>沿着这条路线进入羌塘，就失踪了，没有走出来。</p>
<h2 id="二、物资准备"><a href="#二、物资准备" class="headerlink" title="二、物资准备"></a>二、物资准备</h2><p><img src="http://upload-images.jianshu.io/upload_images/763193-23fd450c5be4e61d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p>1400公里的路程，预计80天左右完成，平均每天推进20公里左右。</p>
<blockquote>
<p>我必须达到均速二十公里才有可能完成计划中的旅行。二十公里是理想值，比较安全。但算上大雪封路、地貌巨糟、无端生病、洪水卷地、偷懒睡觉、外星人突访等事件，所以每天行距必须超过二十公里才稳妥。十八公里是危险值，最低均速，底线，咬咬牙能接受。低于十八公里，马克思会很想念我。回顾，在遇人救助前的七十五天独行中，每天均速差那么一点到十八公里，悬而又悬的速度。</p>
</blockquote>
<p>20公里看上去并不快，但不要忘记这是在5000米的高原。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/763193-066fd097cad88250.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<blockquote>
<p>有过高原经历的人就知道，每天近二十公里的速度是怎么来的。除了极少的路可小骑过个瘾，其余路况很少能一次推百米不停下喘口气的。硬草地一般推个五十米喘口气，寒漠土二十米喘口气，沙土路十米喘口气，重沙地三五米喘口气，陡坡半个轮圈喘口气。这羌塘就是这么一口口气喘过来的。</p>
</blockquote>
<p>既然预计80天，那么就需要准备足够的食物。</p>
<blockquote>
<p>此行，食物约有一百斤，其中主食七十七斤，包括五十斤糌粑、二十五斤压缩饼干、二斤麦片，实际使用七十五斤，前期糟蹋了二斤主食。辅食二十五斤，大蒜、酥油、花生米三样就占了一半。其余是少量的盐、紫菜、辣椒粉、茶叶等，以及一点打牙祭的奶粉和白糖。全程无肉，吃过一次蔬菜，微量元素靠金施尔康药片。</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/763193-52cc909f396061d0.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p>这些食物根本不够提供足够的热量和营养，但也没法带更多了。</p>
<blockquote>
<p>前四十五天日均摄取热量在一千四百大卡左右，大致四两多糌粑和二点五两压缩饼干，一些汤料为辅。热量摄取水平属于联合国认定的中度饥饿状态，下午四点以后基本就无力了。</p>
</blockquote>
<p>为了加热食物和取暖，还需要携带汽油。</p>
<blockquote>
<p>此行带了8.6升93号汽油，两个锅，1.5升的大锅主要用于烧水。经过几天实测，烧水需时如下：液体水，早晨要用十六分钟左右烧开，晚上则快些；化冰三十五至四十分钟；化雪耗时最长，四十五至五十分钟。为了节省汽油，所以在雪和轻度盐碱水同存的情况下，我多数会选择后者作为饮用水。汽油同样计划八十天用量，理论上是够了，但实际环境中无法准确计算，它包括化冰雪的次数、高原缺氧对汽油燃烧效率的影响，低温下的散温系数、炉头积碳导致的热量损耗等等。唯一有利因素就是低压环境中水的沸点低，只有80℃左右。因此，汽油使用非常节约，每天就是烧两锅水，早晚各一锅，便是所有生活所需了。</p>
</blockquote>
<p>除了这些，其他的物品还有许多。</p>
<blockquote>
<p>就拿此行束缚类装备来说，就有六毫米登山辅力绳、四毫米登山辅力绳、一点五毫米魔术贴捆扎带、一米魔术贴捆扎带、二十厘米魔术贴捆扎带、硅胶弹力带、普通松紧绳、红头风筝绳、凯夫拉鱼线、两色缝补线、五号铁丝、二号铁丝、大号长尾夹、小号长尾夹、橡皮筋、别针、小快扣、主锁……所有装备乱七八糟地加起来，到底有多少，我现在也没法记清了。</p>
</blockquote>
<h2 id="三、自行车"><a href="#三、自行车" class="headerlink" title="三、自行车"></a>三、自行车</h2><p>所有行李一共200斤，背是背不动的，必须带上自行车。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/763193-76879e9aede8526f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<blockquote>
<p>从徒步角度看，推行速度确实太低了，一半都达不到。选择自行车作为穿越工具并非为骑，它只是一个驮货工具。四个驮包分别置于前后轮两侧，相机包挂在车头，一个二十五升的骑行包随身背着。后货架上还有一个六十升防水驮包，用弹性松紧绳捆绑，其间夹塞着防潮垫、水袋、拖鞋等。驮包总容量一百八十五升左右，不包括外置的盛水容器、闲杂物品等，所有装备总重二百斤左右。试想，推着一辆二百斤的自行车在海拔五千米的沙地里推行，实在是一件令人沮丧的事情。</p>
</blockquote>
<p>大部分路段，自行车没法骑，只能推着走。为了提速，杨柳松用伞做了一个帆，利用风力推动自行车。可惜风太大了，只用了两天，伞就被吹坏了。</p>
<p>为了解决用电问题，他带了太阳能电池。</p>
<blockquote>
<p>由于单独采用了一块轻薄的太阳能板给GPS供电，使得GPS高耗电成为历史，七十多天里只因故障换过一次电池，节省了需携带的大量干电池。同时备了一块功率5.4瓦的太阳能板，给7.4伏的相机、DV及其他数码设备供电，路上没缺过电只缺过水。</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/763193-2e283d279733f52a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<h2 id="四、出发"><a href="#四、出发" class="headerlink" title="四、出发"></a>四、出发</h2><p>原定4月1日进入荒原。这个日期是精心选择的。</p>
<blockquote>
<p>太早过于寒冷与干旱，人扛不住，水的问题也没法解决。太晚会推迟进入东羌塘的时间，雨季来临，冻土消融，几乎没有通过的可能性。所以四月初进入荒原是个最折中选择，可以使我吃一个半月的西风和冻土路面，剩下时间则在雨季变得强势前迅速撤离。</p>
</blockquote>
<p>但是遇到了许多意外，比如在江孜县丢了一个包，不得不重回拉萨采购装备，导致比预定日期推迟了20天，注定后期遭遇雨季，几乎困死于沼泽。</p>
<p>2010年4月20日，他进入羌塘。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/763193-db99ab13b9654b6b.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<h2 id="五、无人区"><a href="#五、无人区" class="headerlink" title="五、无人区"></a>五、无人区</h2><p>羌塘是无人区，地理和气候都不适合人类生存。首先，高海拔对生理产生巨大影响。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/763193-6d3c75bfbcaa6bf2.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<blockquote>
<p>在海拔五千米荒原行路，相当于在平原地区背负十五公斤物品。高海拔对身体的伤害，首先是视力衰退，所以把狼看成外星人，不仅只是端不稳望远镜。其次是听力，海拔越高影响越大，不仅听力急剧减弱，连声音方位也难辨别，这也是高海拔登山容易发生事故的原因之一。高海拔对大脑的伤害尤为大，记忆力会明显下降，譬如，刚向你借钱就忘了，真不是我想赖账。甚者，导致严重的思维障碍。</p>
</blockquote>
<p>然后，终日大风，风声足以致聋。</p>
<blockquote>
<p>风大到只敢以屁股相对。风，也是羌塘唯一的声音。时常一整天，耳畔都是巨大的轰鸣声，即便饿狼贴着后脑勺，大声喊”我想你”，也决然感觉不到半点危机。曾经有位边防战士，独自巡逻两天，被荒原大风吹得失聪。</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/763193-4b68177a367a6a9f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p>遇到暴风雪，只能躲在自行车后面。</p>
<blockquote>
<p>我猥琐地蜷缩在自行车后面，躲避着狂风冰雹。这是标准姿势，面对恶劣天气，将自行车横风倒下，整个人团成个肉球，趴在隆起的驮包后面。远处看，则脑袋不见，屁股半撅，有如鸵鸟。</p>
<p>……狂风大作，沙尘滚滚，眼前一片昏黄，视野近无。测量，瞬间最高风速达到了27.8m/s，接近十一级。蜷缩在自行车后面，用一个防雨罩把脑袋完全包住，蓦然，不知什么东西击中了屁股，被人踢了一脚似的。理智思量，不会有人路过，并这么无聊地踢我屁股吧。过了一会儿，屁股又被踢了一下，又一下……后背有点发凉，决定用手摸摸，到底何物。摸到屁股位置有根带子，噼里啪啦地风中乱抽。胡思乱想，难不成恶人不是用脚，而是用鞭子抽我屁股？顺着摸，是车首包的背带。</p>
</blockquote>
<p>气候极度寒冷，有时帐篷搭得慢一点就没命了。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/763193-992171030e8d5847.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<blockquote>
<p>搭好帐篷去打水，溪流表面已结了薄冰，破之取水。格外酷寒，水杯捞起转瞬间，杯壁上便结了冰。手冷得不行，几秒钟就冻僵。……羌塘冻死，唯雨季风险最大，因为来不及防范，就可能在一场猛烈的冻雨湿雪中失尽体温。</p>
</blockquote>
<p>长时间野外行走，手指和脚趾都会冻伤。</p>
<blockquote>
<p>一只手握在车座下的竖管上，使劲地往前拉，这也是手指关节处裂口长达几十天不愈的原因。有几次拉车，感觉不到手指，以为被拉断了。脱下手套看看，还在，继续拉。</p>
</blockquote>
<p>遇到大雪，甚至会不知不觉窒息而死。</p>
<blockquote>
<p>昨夜，睡得很不踏实，中途迷迷糊糊闷醒多次，胸口如压巨石，喘不过气来。再次被闷醒时，见天亮了，但帐篷上明下黑，难道陷到沼泽里了？用手一推才知被大雪埋了。这是此行遭遇的最大一场雪，深度四十厘米左右，最深处一米。后怕，帐篷被大雪完全封死，内部只有一个小透气窗，半掩着，且冰雪又封了一些。简单计算，夜里帐内氧气含量比珠峰峰顶还低，这还不算体内呼出的二氧化碳的致命影响。半夜闷醒多次，居然浑然不觉大难临头。</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/763193-5a85b8a61037a909.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<h2 id="六、野生动物"><a href="#六、野生动物" class="headerlink" title="六、野生动物"></a>六、野生动物</h2><p>荒原里面有很多危险的野生动物，遇到狼是家常便饭。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/763193-4c7b1acc064f5033.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<blockquote>
<p>此次遇狼七次，其中五次是直面。这是指看清脸的，幽魂般闪烁的不配我记录在案。</p>
<p>……先是一只狼从前方沿着土埂小跑，又觉得眼花，土埂后有一黑物闪烁，果然也是只狼，便盯着隐狼看它去向。隐狼完全现身一会儿后又不见了，再看前狼朝我直奔而来。先是放倒车子，故意和车保持一点距离，是想传达我可不是一个人孤军奋战。这招貌似不管用，如果自行车能弯弯车把，向狼打个招呼就好了。我又扶起车子，用身体靠住，万一时刻还能充当下防弹衣。</p>
</blockquote>
<p>有时早上起床，发现帐篷外面都是狼的脚印。</p>
<blockquote>
<p>帐篷周边发现了一些兽迹，应该是狼的。脚印从戈壁深处来，围了帐篷一圈，在头部位置零散纷乱，估计在判断我的气息，然后脚印沿着湖岸远去。</p>
</blockquote>
<p>其他比较危险的，主要是棕熊和野牦牛。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/763193-4e42e369da6b897d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<blockquote>
<p>此次旅行遇熊五次，同样，那些小脸都不让我看清的不配记录在案。</p>
<p>有两次刻骨地与野牦牛对峙的经历，距离之近，仿若能看见牛眼里的红血丝，我脊背上的寒气也足以给一间客厅降温避暑了。</p>
</blockquote>
<p>再怎么防备，都难以保证百分之百的安全。</p>
<blockquote>
<p>晚上宿营没有过任何防范，觉得实在没有必要，睡在哪里不是睡在黑夜里？白天遇野兽连贴身小刀也没摸过，徒步探路时基本无防范。羌塘真的很大，有什么东西早发现了。如果棕熊、野牦牛之类的真攻击你，恐怕带枪也不行，所以说心态最重要，学会相处比学会打架管用。</p>
</blockquote>
<p>比野生动物更危险的，其实是人。荒原遇到人，比遇狼还令人担心。</p>
<blockquote>
<p>凡是能进入荒原的人，大半我都惹不起，譬如杀人灭口的盗猎者，见财起意的淘金人，恪尽职守的巡山队……</p>
</blockquote>
<h2 id="七、断水"><a href="#七、断水" class="headerlink" title="七、断水"></a>七、断水</h2><p>二分之一的路段都缺水，即使有水，也是盐碱水，不喝渴死，喝了毒死。</p>
<blockquote>
<p>晚上，唯一的水就是前日为以防万一、灌在保温杯里的碱水。一打开盖子，恶臭扑鼻，捂了几天，水质更恶化了。喝是不喝，是个问题。</p>
</blockquote>
<p>整个旅程最危险的时候是第40天，已经连续三天断水，滴水不存。必须在一天内找到水。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/763193-b559827ff8e0db28.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<blockquote>
<p>找水有几个方向，一是附近可能有水的地方，二是回到两天前的营地，三是标准求生方式—-挖坑蒸水。先排除最后一点，挖坑蒸水对地貌要求极高，我周遭环境至少挖坑半米才能见到湿土。假使挖坑还没把我累死，假使一整天都是艳阳高照，我所得到的水够不够我继续挖下一个坑的力气都不好说。回到两天前的地方，往返八十公里寻水太纠结了，且以当下身体状态，这不是一件靠意志力就能胜任的工作，远水解不了近渴。</p>
</blockquote>
<p>他不得不停止行程，专程找水，依然一无所获，只能用尿液解渴。</p>
<blockquote>
<p>用尿液伴着饼干，勉强吃了一点，明天还得要有体力继续找水。</p>
</blockquote>
<p>眼看即将渴死在这个极旱的盐碱地，所幸第41天早上下雪了。</p>
<blockquote>
<p>听见打在帐篷上的沙沙声，以为又是风沙作祟，一整夜都是这样。微明，掀开帐篷一角，地上散落着小雪籽，再看了眼天际，灰云铺顶。不喜不悲，白天下雪很难积蓄，雪落无痕。心中也并无打算今天如何找水，身体透支太多，再难强打精神。也无祈祷，该怎样怎样。再次醒来，掀开帐门，雪越下越大，才清醒些，认为是生机。随后，三两分钟掀帐查看一下雪情，生怕老天赏赐的大礼会长脚溜走。待雪稍有积淀，便赶紧用纸片掠雪盛在锅里，沾上的沙土也舍不得丢弃。</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/763193-71337ca6ba6f9d72.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<h2 id="八、雨季"><a href="#八、雨季" class="headerlink" title="八、雨季"></a>八、雨季</h2><p>六月以后，雨季到来，雪水融化，冻土变成沼泽和湖泊。对于旅行者来说，这时才是真正的噩梦开始。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/763193-6582bedb83ff7183.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<blockquote>
<p>鞋子早就破了，虽然尽量控制不要灌水，但依然是最煎熬的体感。试想，脚上套着两坨沉重的冰行路是何等苦楚，而这种苦楚将一直伴随我走出荒原。</p>
</blockquote>
<p>第57天 原定的南下路线被雪水汇成的大河阻断，走不过去了。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/763193-da2821b92520db34.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<blockquote>
<p>晚上考量许久，何去何从？两天来只推行了十多公里，这沼泽路没法走。眼前又是条大河阻挡，豁命也不是没有过去的可能，但过去之后呢？至少还要横切汇入多格错仁强错的三条大河以及大片湖盆沼泽。</p>
</blockquote>
<p>最后决定走回头路，掉头北上，穿越阿尔金无人区求生，因为那里的地势高，不易积水。但是，粮食是肯定不够了，只能寄望于路上遇到人。</p>
<blockquote>
<p>从阿尔金出去，这是最后一个选择，没法拒绝。从地理上分析，或许北上是条出路，因为要翻越数道山脉，属山地貌，沼泽大河会少很多。北上的最大障碍是线路太长，食物肯定是不够了，且又是”未知”区域。我的打算是尽量赶到鲸鱼湖，传说，那里有获得补给的可能。</p>
</blockquote>
<h2 id="九、弹尽粮绝"><a href="#九、弹尽粮绝" class="headerlink" title="九、弹尽粮绝"></a>九、弹尽粮绝</h2><p><img src="http://upload-images.jianshu.io/upload_images/763193-f106208c6b921a9f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p>第55天，蔬菜只剩下最后四瓣大蒜，吃光。</p>
<p>第59天，盐和粮食所剩无几</p>
<p>第64天，吃光了最后一包压缩饼干。</p>
<blockquote>
<p>再次清点粮食，只剩下五斤左右糌粑，比乒乓球大小还少的盐，一点茶叶，三两左右酥油，再无其他了。</p>
</blockquote>
<p>后面的路，都是冻土融化的沼泽地带。</p>
<blockquote>
<p>一陷到膝盖，立马倒地匍匐爬出来。不能往前倒，而是后仰，往前倒，如果沼泽过稠，速度过快会折断小腿，如果沼泽过稀，会一下子把脸给埋住，无法呼吸，错失转身时机。后仰的好处是安全，抽腿也容易。</p>
</blockquote>
<p>自行车也惨遭灭顶。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/763193-8a0f451b08e9a348.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<blockquote>
<p>自行车再度陷入沼泽，一脚陷脚踝，二脚陷半小腿，三脚弃车跑人。黏性太大了，再不撤来不及了。随后试着拖车，地越踩越烂，地下水都踩了出来，最后连自行车的边都摸不上了。都考虑弃车了，但装备总得要弄出来。用那十块钱的救生膜和两个防雨罩铺在烂泥上，人趴在上面，一番折腾，好歹把驮包给弄了出来。再看垫脚物早没影了，光救生膜铺开可就两平方米。再一会儿，放驮包的地方也无法立足了。也就是说，即便很硬实的地，多踩上几脚，也变成了沼泽嘴脸。转移驮包后，思量着怎么把自行车弄出来，现在弃车毕竟很不理智。用铁丝套上绳子圈在自行车上，拉拽，车子勉强移动一点，再用力，居然把后轮生生地拽掉了，最终和沼泽打了个平手。</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/763193-e6a8eda98e6ffe60.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p>第73天，丢弃自行车，徒步逃生。为了减轻负重，把望远镜和水袋也扔了。</p>
<p>第75天，只剩最后一口粮食。幸运的是，在这一天遇见了探矿者。</p>
<p>第77天，走出荒原。</p>
<h2 id="十、动机"><a href="#十、动机" class="headerlink" title="十、动机"></a>十、动机</h2><p>很多人都有这样的问题：他究竟为什么要进入荒原，如此危险，难道只是为了探险吗？</p>
<p><img src="http://upload-images.jianshu.io/upload_images/763193-fef99b487197acab.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p>杨柳松这样解释，对于城市生活，他始终不太适应。</p>
<blockquote>
<p>身体每天都被什么东西紧紧束缚似的，那种感觉就像每天衣服都小一号，每天都必须换上大一号衣服，身体才会舒畅。</p>
</blockquote>
<p>每年春天，只要在西藏，他都要去雅鲁藏布江大峡谷看桃花。最喜欢的是下面这样的景色。</p>
<blockquote>
<p>最喜孤立的某处，一树粉红桃花与世无争地怒放。</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/763193-2a174e360cc35e11.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p>三年前，他第一次见到荒原，就下决心要深入这片土地。这个刹那的闪念，让他长久酝酿，一定要付诸行动。荒原更适合那一颗自由自在的心。</p>
<blockquote>
<p>始终没有逃离荒原的心，这样一片神奇土地，怎舍得轻易离去。只要不是毫无生机的绝境，在我的意识里，荒原彼端将是没有尽头的远方。远方，依然是那永远也到达不了的地方。</p>
</blockquote>
<p>旅途中，每一次艰难时刻，选择继续前进还是放弃，他都选择前进，始终没有放弃。</p>
<blockquote>
<p>事实上，选择北上的真正原因，是自己还没玩够。如果，世界上再无有意思的事，为之无条件追求的事，那活着多没趣。如果真得撑不住了，我就南下徒步逃命去了，三四天时间就可找到牧民，终结这痛苦的旅程。甚至，过河办法都想好了，就是抱着那空油桶，漂啊漂过河，像八仙成员之一似的。</p>
</blockquote>
<p>那是一种从骨头里，对喧嚣的平庸生活的厌倦。</p>
<blockquote>
<p>这是一个浮躁的时代，很拥挤，很冷漠，不管你愿不愿意，都必须随流而动，因此旅行成了一部分人变相的逃离，而非遵循内心的渴望。就我而言，为何旅行，同样没有一个靠谱的答案，热爱是最接近的答案，去追寻荒野的旷寂。</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/763193-67d0c5c243ab8bbe.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<p>人生就像没有尽头的荒原，如果不找到一点乐趣，如何坚持着走完？</p>
<blockquote>
<p>人生就是一场漫无目的的旅行，之所以茫然，是因生与死限定了旅行的终与结。有些人乐此不疲地怀揣梦想继续前行，没有目标，没有问题，只是收获一路感受。</p>
</blockquote>
<p>他写道，自己很享受在荒野中看云。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/763193-f4f9b0ff9dcb740f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<blockquote>
<p>困守的唯一好处，就是有足够时间凝视一朵云的万般变化，生成，绚烂，湮灭。</p>
</blockquote>
<p>人生难道不是这样吗？我们都是飘荡在天空中的云，匆匆涌起，转眼消散得无影无踪，那么为什么不索性飘荡得远一点呢？</p>
<h2 id="十一、未来"><a href="#十一、未来" class="headerlink" title="十一、未来"></a>十一、未来</h2><p><img src="http://upload-images.jianshu.io/upload_images/763193-0678c22beb60f25f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p>
<blockquote>
<p>许多友人问，走出荒原是什么感觉？</p>
<p>事实上，走出荒原没有想象的幸福感，或是什么成就感，甚至是一种轻度的抑郁和迷茫。巨大的幸福并未如期而至，偶尔的幸福也是短暂。生命是一条贯通的河流，一切皆是没有开始的复始。我们所期望的终点并不存在。</p>
<p>如果我拥有足够的热情，如果这片荒原对我有足够的诱惑，那我就继续往前。如果激情退却，诱惑不再，我就哪来哪回。如果激情与诱惑从未真实存在，所有问题也就不是问题了。暮色中，面对荒原，我必须做出抉择，明日之路是前行，还是后退。这个抉择其实从未存在，只是一个矫情的过程，从心底深处再次认识到自己究竟在做些什么。</p>
<p>虽然，路的尽头什么也没有，但不能因此停止步履，因为你就是路本身。</p>
<p>– 摘自杨柳松的公众号《逆流之河》（ID： s7s7s777）</p>
</blockquote>
<p>（完）</p>
<hr>
<ul>
<li>摘自：<a href="http://www.ruanyifeng.com/blog/2017/12/qiang-tang.html" target="_blank" rel="external">北方的空地 - 阮一峰博客</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 读书 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 书评 </tag>
            
            <tag> 游记 </tag>
            
            <tag> 羌塘 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[北方的空地 - 书摘]]></title>
      <url>http://chuanqiang.github.io/2018/01/14/%E5%8C%97%E6%96%B9%E7%9A%84%E7%A9%BA%E5%9C%B0%20-%20%E4%B9%A6%E6%91%98/</url>
      <content type="html"><![CDATA[<p>因为这是一个没有探险的时代，头顶波音，地上宝马，通过网络瞬间走向世界。中国人的角度，很难理解这种过于冒险的行为，功利眼光左右判断外，更重要的是几千年来安于现状的中庸思维。<br><img src="http://upload-images.jianshu.io/upload_images/763193-f8bf964b6b3389b5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<a id="more"></a>
<p>荒原在哪里？它可以是一片广袤的无人区，也可以是小区里夜深人静的花园，甚至是野草滋长的内心。荒原真正的含义，是一片心灵自由放逐之地。那里有久违星空，只随意地仰望一眼，就知自己的位置，既没想象的那么高尚，也没想象的那么卑微。那里有单纯，模糊的道德边缘是分外明晰的善恶边界。那里有安静，可以毫无顾忌地打量自己，只有独我的时候，才无视那些形形色色的标签。<br><img src="http://upload-images.jianshu.io/upload_images/763193-38cea3256cd84b2b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>开始，进入荒原不要问为什么，如果足够喜欢也不要索取答案。每个人对生命的理解都不一样。</p>
<p>羌塘，藏语意即北方未知的空地。</p>
<p>对酥油的营养价值只需了解一点，它就是黄油，几十斤牛奶才能提炼出一斤的脂肪。</p>
<p>我曾试图理解这种恶劣的生活状态，得到的答案只有寂寞和顺从。如果心有欲念，你无法生存下去，如果心如死灰，你同样无法生存下去。</p>
<p>胜利的公牦牛则愈发狂妄，为了强大基因不被无尽岁月消弱，通常将自己的长子作为继承人，其他小公牛则被肉刺舌头舐去睾丸，从而保证种群的纯洁与优秀，颇具法西斯作风。因此，野牦牛的遗传特征超常稳定，体型、外貌是那般一致。</p>
<p>野牦牛将是地球上最具杀伤力的动物，没有什么能够阻挡，一般步枪子弹打在它的皮上根本穿不透，顶多一个小眼。以往，无人区边缘的牧民会把捕获到的野牦牛皮切下来做菜板，几十年都剁不坏。<br><img src="http://upload-images.jianshu.io/upload_images/763193-fe030ff99d9ea6d8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>野牦牛的两件致命武器，一是头顶硕大的犄角，可轻易刺穿汽车铁皮外壳。二是生满坚硬肉刺的舌头，若舔人，只一下，脸就没了。牧民则喜欢拿生满坚硬肉刺的舌头作为梳子，一把肉梳黑丝梳到银发。母牦牛寻到前日打死小牛犊的盗猎者，钢刀般的犄角穿过那人胸膛，顶在头上，十几天不放下来。母子之情，撼动人心。</p>
<p>母牦牛寻到前日打死小牛犊的盗猎者，钢刀般的犄角穿过那人胸膛，顶在头上，十几天不放下来。母子之情，撼动人心。</p>
<p>隐性盗猎比显性盗猎更加难以提防，就是用汽车追死野生动物。野生动物在亡命中会跑炸肺，外表与自然死亡无异，对于这种“自然死亡”的野生动物在管理上很模糊，别有用心的人便钻了空子。有些外来者和牧民称兄道弟喝个大醉，诱之赌博，输不起了就教授牧民用此法追死野生动物还债。有些则是精通此道的高级人士，亲自开车追死野生动物。更多的是无知者，不少驾驶越野车的旅行者因好奇追逐野生动物，虽未致死，但由于心脏过载其寿命也大大缩短了。</p>
<p>若是分分秒秒遥看荒原彼端，那压力会瞬间摧垮心智。即便每天短促的行程，也是由无数个点组成，它们或是一棵草，一块石头，相距几米至几十米，一定在我眼睛能清晰看见的范围内。如此，那每天漫长的时光里，才能坚持。旅行的艰辛，不敢放眼二十公里以外的地方，甚至一片绵软沙滩。人生亦如此，眼高手低，到头来一事无成，还迷了方向。人生，便是由无数个小事组成，做好每一件小事，就是做好了一生。看远方，是为了确定方向，然后埋头前行。</p>
<p>记忆很深刻，暮色荒原中没有归宿的感觉。直至发现一堆动物白骨，才清醒，顺着盐湖找到昏暗中静静躺着的自行车。当夜无一滴水，但还是吃了一包压缩饼干，因为明天还得继续，没力气可不行。</p>
<p>如果爱一个人，送他到这里来推车。如果恨一个人，送他到这里来推车。如果不爱不恨，送他到这里来推车，你将收获他的又爱又恨。</p>
<p>我不是宗教皈依者，念经，就如同有人面对困境时爆粗口表达情绪。咒语的宗教解释和原始寓意，我也理解得并不深刻，但这句咒语是藏北牧民最常挂在嘴边的声音，是他们面对恶劣荒原的精神出口。我同样如生活在这里的人，用这种独特的方式敬重上天，祈求自己卑微的躯体不受伤害。</p>
<p>信仰成为专卖店里的商品，伤害和被伤害时买一副贴在胸膛，便自以为解脱。</p>
<p>身在河中央，不见水底面貌，水至肚脐，脚踩淤泥，躯体冻僵，十分的无助感。下一步，也许就踩进了深渊，没有悔棋重来的机会。</p>
<p>蜗牛的慢行是背上的壳，我的慢行是沉重的自行车，但我和蜗牛都清醒地明白，背着壳至少能慢慢爬，扔了壳跑不了多远就得完蛋。</p>
<p>四周高山，只有可可西里山脉的几座高山有雪覆盖。看似近在眼前，实际上至少相当于直线三十公里加六百米的攀登，这就是现实与理想的差距，真实地摆在眼前。如果，视野中没有雪山，我或许更加幸福与坦然些。城市生活中，这般可望不可即的诱惑，充斥在周遭。大多人的不快乐，是心灵无法穿透围裹自己的眩晕视场，看清要去的远方，是否有比眼前更令人眩晕的事物等待。我明白，所以我更多低头行走，不去远望那横亘天际的耀眼雪山。</p>
<p>江湖是孤独的，在于内心。艰苦的旅行，极少与人结伴，表面上是担心相互妥协，影响效率。在内心深处，是不愿失去那份独处。人与天地融在一处，相互慰藉，相互温暖。而两个人就足以形成一个社会，使人深陷一堆琐碎，无法直面天地。</p>
<p>站在人群之外看人群，才知自我。远离规则，看着规则，才知一场游戏。世界的本质就是虚无，唯意识自由地飘荡。这个雪色清晨，给予我难以忘却的体验，荒原旅行中最完美的境界。</p>
<p>迷信科学和迷信鬼神，本质是一样的，就是对未知事物的无限放大。</p>
<p>清苦的直行，更不易把握，它需要摒弃那些冠冕堂皇的借口，需要忍受无边的孤苦，需要不断阻挡红尘中的诱惑，需要不时眼望前方提醒自己该去的地方。结果，并不重要，把握了自我，就是把握了短暂的一生。</p>
<p>我像个怀春少年，躺在微风轻抚的山顶，看着无法企及的对岸，内心既茫然着也静谧着。所有的爱情故事，仅仅只是个故事，我在故事外，也在故事里。些许孤独，孤独不是一个人的时候，而是一个人的时候，所爱的人遥遥向你招手。</p>
<p>一次艰苦的旅行，有两种准备必不可少，那就是可能的极限状态和应对方案。极限状态永远无法认定，所以某种程度上它并不存在。就像后期每次经遇逃生路线时，都是最艰难时刻，但始终没有选择放弃。我以为再也撑不住了，真到绝境时反而激情喷涌，所谓的极限状态也不过如此。而应对方案更多是心理层面的，是一种惨到底还有更惨的心理铺垫。就像帐篷被吹走了，果真就可裹着简易睡袋熬过寒夜吗？如果炉子彻底报废了，果真就可用冷水泡糌粑走出荒原吗？如果饿狼扑来，果真就可在短暂的三秒之内用匕首化解危机吗？<br><img src="http://upload-images.jianshu.io/upload_images/763193-87a6db7fd1a34ebf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p>遇水，倒车，观察，确定路径，脱鞋，脱袜，鞋袜叠加，鞋子摆放位置，鞋带固定，扶车，过河步骤，倒车，擦脚，穿袜子，穿鞋，扶车，往前，再次遇水 …… 久之，控制这一流程的不再是有意识，而是无意识。就像跳水运动员在空中所做动作，大脑是无法在这么短的时间内，控制每一块肌肉的变化，以确保形体的准确性的。控制这一切的是潜意识，是艰苦训练下磨砺出的习惯，跳下瞬间，不用去想，自然而然地就完成了一系列标准动作。如果，在跳落过程中，还想着每一个动作，要么脑袋撞跳板，要么水花惊如海啸。</p>
<p>“车辙”是野牦牛的安全通道。它们同样惧怕冻土消融和沼泽，巨型身材比人更容易陷落，所以一条坚实可行的通道是生存必需。</p>
<p>泥土芬芳”不是形容词，它是暴雨过后，泥土中的植物孢子被释放而产生的怡人气味，这是春天到来的显著标志。这些曾游走在荒原里的生命，即便化骨为泥，依然值得深深尊重。它们是荒原的过去，荒原的现在，荒原的未来，生生不息，不断轮回。而我，仅仅是个稍具野心的过客，自然，尽量什么也不带走。</p>
<p>这些曾游走在荒原里的生命，即便化骨为泥，依然值得深深尊重。它们是荒原的过去，荒原的现在，荒原的未来，生生不息，不断轮回。而我，仅仅是个稍具野心的过客，自然，尽量什么也不带走。</p>
<p>羌塘，便如此，给我最深刻的感觉不是荒芜的外表，不是偶然间闯进眼帘的奇异地貌，不是梦幻般在此生息的动物，而是苍茫天地间的孤寂身影。我来过，我走过，带来与带走的都只是关于自己的记忆，荒原还是那荒原。</p>
<p>对人生，佛陀有一套说法，穆罕默德有一套说法，耶稣有一套说法，连许三多他爹都有一套说法。何为人生，何为看透，不过是一种妥协，不想再让脆弱心灵瞎折腾了。把握短暂的一生，便是对自己生命最大的追问。我义无反顾，走进一直渴望着的生活。</p>
<p>喀斯特地貌充满隐秘的地坑、裂缝，一不小心人就没了。有一个真实故事，两口子在后山散步，走着走着，老公一回头发现老婆不见了，以为怄气又跑了。一个月后，有人在山上听见微弱的呼救声，原来那人老婆掉进了一个洞里，靠岩壁水珠和洞穴寄生虫活了一个月。</p>
<p>没有坚持，也就无所谓选择</p>
<p>大脑的想象力使人类飞跃，但更多人因大脑的想象力成为恐惧的根源。当认为自己做不到时，那就真的做不到了。</p>
<p>恐怕得在几间房间大小的滩涂上，做个真正的孤家寡人了。</p>
<p>人生就是一场漫无目的的旅行，之所以茫然，是因生与死限定了旅行的终与结。于是，我们在芜杂的宗教光辉下，意淫着人生的旅行无止尽地蔓延。</p>
<p>不可否认，这是一个浮躁的时代，缺乏均衡的多元化价值观，主流意识把所有人都推向创富的路上，这条路很拥挤，很冷漠，不管你愿不愿意，都必须随流而动，因此旅行成了一部分人变相的逃离，而非遵循内心的渴望</p>
<p>困守的唯一好处，就是有足够时间凝视一朵云的万般变化，生成，绚烂，湮灭。</p>
<p>困在帐篷里，百无聊赖，很难控制情绪，觉得自己随时会手抓头发，发出吱吱呀呀的怪叫声，然后冲进雪地里，一边脱衣服，一边歇斯底里地大喊：“我是世界之王！”实在无法控制情绪时，只能舔糌粑粉去平衡。</p>
<p>反而清醒了，这是场持久战，像高手对决，活得长的人才是最终胜利者。心态，神奇般地从极度躁狂变得异常冷静。我必须再度以旁观者的角度，客观缕析事物的本质，否则我将成为荒原里的一个疯子，或者一具随时倒下的行尸走肉。</p>
<p>人生的走向充满危机，有些事情不是靠防范就能避免，否则，命运便失去了意义。不要过多去设想无法应变的明天，而是是否做好了果真如此的心理准备，单纯而执著地前行。</p>
<p>我对装备的态度，它永远是消耗品，不能被装备玩，沦为装备的奴隶。一分价格一分货自然不错，但大多旅行远未达到装备精益求精的地步，实用就好。对装备要有包容，没有什么装备能让人变成超人。有必要，就稍加改装，也没有什么装备是特意为每个旅行量身定做的。对装备要有感情，要像对待自己老婆孩子一样，别以为它们没有生命，只是一堆冰冷机器。</p>
<p>漫漫长夜，辗转反侧，最现实的食物是那点可怜的糌粑，几次按捺不住诱惑，手都伸进糌粑袋里了，还是隐忍。耐不住寂寞的人，势必经不起诱惑。很多时候，诱惑和死亡是画等号的。所以，也顶多把手指插在糌粑粉里意淫一下，以此慰藉无眠的清苦长夜。现在很多人没有吃过食物的苦了，以往听别人说当年饿得吃树皮，吃观音土，吃猪槽里的剩糠，我能理解，但并不能感同身受。</p>
<p>许多友人问，走出荒原是什么感觉？很少回答。事实上，走出荒原没有想象的幸福感，或是什么成就感，甚至是一种轻度的抑郁和迷茫。巨大的幸福并未如期而至，偶尔的幸福也是短暂。生命是一条贯通的河流，一切皆是没有开始的复始。我们所期望的终点并不存在。</p>
<p>现代人越发依赖机器，这不是什么坏事，却丢了很多本能。人的本能足以让一个健康的成年人完成无数艰苦的旅行，我们的祖先不就是这样吗，也不过几千年前石器时代的事。假使人类灭亡，绝不会是温室效应引发的气候灾难，而是人躲在空调房、暖气室里憋的，丧失了进化中的适应能力。回首人类进化的几百万年，气候如过山车般起伏，但人类没有消亡，反而更加美艳与拥有智慧。如今，人与自然割裂，依靠着一堆机器生活，一个冷空气南下，一个酷暑日的到来，医院里立马就涌满了人。过去，没有空调的日子，躺在凉席上，边摇着芭蕉扇，边仰望着星空，是何等美妙。所以，旅行，不仅仅只为看风景。</p>
<p>荒原彼端，云之落处远方是永远到达不了的地方。</p>
]]></content>
      
        <categories>
            
            <category> 读书 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 游记 </tag>
            
            <tag> 书摘 </tag>
            
            <tag> 羌塘 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[中国国民性演变历程]]></title>
      <url>http://chuanqiang.github.io/2018/01/08/%E4%B8%AD%E5%9B%BD%E5%9B%BD%E6%B0%91%E6%80%A7%E6%BC%94%E5%8F%98%E5%8E%86%E7%A8%8B/</url>
      <content type="html"><![CDATA[<h3 id="关于作者"><a href="#关于作者" class="headerlink" title="关于作者"></a>关于作者</h3><p>张宏杰，清华大学的历史学博士后，师从著名历史学家葛剑雄先生。他原本是辽宁一家银行的普通工作人员，是中国民间著名的历史写手之一。作品有《大明王朝的七张面孔》、《曾国藩的正面与侧面》、《饥饿的盛世：乾隆时代的得与失》等，本本畅销。</p>
<h3 id="关于本书"><a href="#关于本书" class="headerlink" title="关于本书"></a>关于本书</h3><p>这是一本深入剖析中国国民性的书，与同类书籍相比，它没有满足于在抽象意义上谈论一般的国民性，而是在历史发展的宏观视野下，透视国民性演变的历史脉络，试图把握其中的规律，并且勾勒出这种演变历程和中国古代制度演进过程的因果关系，兼具历史的厚重感和纵深感。</p>
<a id="more"></a>
<h3 id="核心内容"><a href="#核心内容" class="headerlink" title="核心内容"></a>核心内容</h3><p>中国国民性并非一成不变，而是经历了从春秋时期的贵族文化、魏晋时期的士族文化、宋元时期的平民文化、元明时期的流氓文化，再到后来清朝的奴隶文化这五个发展阶段以及四次转折，每次国民性格的转换都和古代制度的发展具有直接的关系。<br><img src="http://oeckzejn4.bkt.clouddn.com/20180108151542668147116.png" alt="核心内容.png"></p>
<h3 id="一、春秋时期的贵族文化"><a href="#一、春秋时期的贵族文化" class="headerlink" title="一、春秋时期的贵族文化"></a>一、春秋时期的贵族文化</h3><p>春秋时期的贵族文化主要表现在三个方面：</p>
<ol>
<li>遵守信义<br>比如，春秋时期贵族之间打仗，很讲究战争规范：不能攻击已经受伤的敌人、不能擒获须发斑白的敌人、敌人处于险地时不能乘人之危、敌人陷入困境时不能落井下石、敌军没有做好准备时不能实施偷袭等等。这些都是春秋时期贵族文化的体现。</li>
<li>珍惜荣誉<br>1793年1月21日，法国大革命正值高峰，路易十六和皇后被送上了断头台。在皇后上断头台的那一刻，不小心踩到了刽子手的脚，她下意识地说了句：对不起，先生。这就是贵族文化的首要特质——优雅。此刻她的丈夫路易十六，面对杀气腾腾的刽子手，留下的也是一段坦然的遗言：“我清白死去，我原谅我的敌人，但愿我的血能平息怨恨的怒火。”可见贵族对自己荣誉和风度的珍视。几分钟后，路易十六和皇后便身首异处了。<br>其实，珍惜荣誉的人在中国的春秋时期很常见。比如孔子的学生子路，在战争中阵亡，临死前做的最后一件事竟然是系好被对手砍断的帽缨，正冠而死。</li>
<li>崇尚勇敢<br>春秋时期的贵族特别崇尚武力，上古贵族几乎都是武士，贵族男子也都以当兵为职业。要求学生掌握的“六艺”，就包括射箭这一项。楚康王继位五年没有战事，竟然认为是自己的重大失职。这种尚武的精神影响了后代很久，一直到唐朝都还存在，所以唐代的边塞诗很发达。</li>
</ol>
<p>不过这种尚武的精神到了宋代以后就慢慢消失了。宋朝对武力的贬抑，导致中国人在历史上第一次不再以立功疆场为荣耀，“做人莫做军，做铁莫做针”。有人甚至说，即使“率兵数十万收复燕云十六州”，也赶不上状元及第时候的荣耀。宋代男人开始失去尚武精神，不再追求强健体魄、立功疆场、马革裹尸，而是沉醉在案头书牍之中，浅吟低唱。整个民族，开始朝文雅方向发展。</p>
<p>春秋时代的贵族精神到了后来就慢慢衰落了，开始和西方的贵族精神分道扬镳，走上了一条截然相反的道路。主要的原因就在于，贵族阶层在西方一直保留了下来，一直延续到17世纪，而中国的贵族社会在公元前3世纪就已经基本消亡了。</p>
<p>西方贵族阶层之所以能够延续，主要在于他们分家的方式。西方贵族实行的是“长子继承制”，爵位、财产都只传递给一个儿子，保证了贵族家族的地位、财产的高度稳定。但是中国社会不同，秦始皇在建立皇帝制度以后，就必须要彻底消灭贵族阶级，他采用“诸子均分制”，贵族阶层由此消亡。</p>
<h3 id="二、魏晋时期的士族社会"><a href="#二、魏晋时期的士族社会" class="headerlink" title="二、魏晋时期的士族社会"></a>二、魏晋时期的士族社会</h3><p>贵族社会并不会一夜之间就消亡，强大的历史惯性决定了汉代不可能一步跨入平民社会，贵族制借着汉代的“荐举制”借尸还魂。所谓荐举，就是地方官推荐地方上的人才来当官。</p>
<p>地方官在荐举人才的时候，自然会从自己最熟悉的上层社会中寻找，这就导致了官位基本上仍被上层社会垄断，阶层之间形成了一种非常封闭的、不流动的状态。</p>
<p>这时，中国社会开始出现贵族精神的第一次下行，出现了整个社会的士族文化面貌，这个时代的士族文化有三个重要的特点： </p>
<ol>
<li>重视门第<br>在士族社会里，既然没有贵族阶级的世袭制度，出身家教森严的豪门大户就变得十分重要了。平民仍然没有机会登上历史舞台，整个社会的阶层基本是固化的。一个家族的文化积累和门风传统是评价一个人的最重要标准，所以士族对家族教育非常的重视，家书、家训在魏晋南北朝时期特别的兴盛。<br>南北朝集大成者——《颜氏家训》，就是士族家族教育的经典。</li>
<li>蔑视权贵<br>魏晋南北朝时期，整个社会处在大动荡、大变革的时代。在皇权不断更迭的背景之下，社会上的世家大族却保持了相对的稳定性。很多士族的富贵程度远胜于皇族，这也导致了天子只能和士族分享权力，有的世家大族甚至可以罢黜天子。王权变得不再具有权威，士家大族反而变得更加有独立性，最终导致了蔑视权贵这样的社会风气。</li>
<li>挑战名教<br>因为当时政治权威崩溃，当初所确立的儒家也就不可能再是唯一的价值体系。既然儒家学说不能一统天下，又没有什么政治前途可以追寻，当时的文人就开始思考人生的意义。这些人认为生命不应该被伦理教条束缚，因此冲破名教约束就成了士人普遍的精神风貌。</li>
</ol>
<h3 id="三、宋元时期的平民文化"><a href="#三、宋元时期的平民文化" class="headerlink" title="三、宋元时期的平民文化"></a>三、宋元时期的平民文化</h3><p>任何文化的转换都不可能是一蹴而就的，贵族文化不可能一下就过渡到平民文化，所以汉代发明了荐举制，贵族文化“借尸还魂”，这才形成了士族文化。同样，尽管科举制在隋朝就已经被发明出来，但“百足之虫，死而不僵”，汉代荐举制的做法还有强大的历史惯性，也不可能一夜之间突然消亡，所以，隋唐时期基本上还是一个半世袭的士族社会。</p>
<p>宋代尊文抑武，把读书人的注意力都集中在科举考试上，让社会各个阶层可以通过考试自由流动，从而打消他们叛乱的动机，以达到更好地控制社会的目的。宋代统治者对科举制相当地重视，并把它作为唯一的选官途径，宋代平民才真正有机会通过考试进入上流社会，并最终形成一个阶层流动的平民社会。</p>
<p>这种平民文化有以下三个特点：</p>
<ol>
<li>皇权独尊<br>宋代政治权力高度统一，再也没有世家大族可以和皇帝抗衡，所以，宋代皇帝才可以对政治制度进行大幅度修改，而不会遇到什么阻力。贵族和士族阶层消失的直接后果就是皇权独尊。</li>
<li>民间自由<br>宋代以前，中国社会等级极为森严；宋代之后，整个社会弥漫着浓厚的生活气息，比前朝更加自由和平等。国家不再利用阶级、户籍把人固定在一个地方，人口开始大面积流动。之前中国社会出现的所谓“游侠”，还都是很个体化的，宋代平民获得了远远超过前代的人身自由，整个社会开始自由流动，既有纵向的阶层流动，也有横向的地域流动，原本分层的固定等级秩序被废除了，开始出现江湖世界。</li>
<li>市民文化<br>宋元时期的平民文化促进了“俗文化”的发展，为平民喜闻乐见的白话小说和戏剧艺术开始出现。因为民间教育的普及，平民百姓通过科举不断涌入上层社会，富于生活气息的底层文化与高雅的上层文化开始大面积接触，雅俗之间没有了严格界限，中国文学终于开始在宋代开了以“口语化”为标志的民间语言写作的先河。<br>以元朝为例。在唐宋时期一直处在主流地位的诗歌散文，到了元代一下子就失掉了主要优势。突然一下，“俗文化”开始取代“雅文化”成为主流。汉族精致的上层文化诗词歌赋对蒙古人没有吸引力，但他们能看懂戏的内容，读书人既然不能参加科举，当然会大量投身于剧本创作。正因如此，元朝的戏曲获得了空前繁荣。</li>
</ol>
<h3 id="四、平民文化向流氓文化的转换逻辑"><a href="#四、平民文化向流氓文化的转换逻辑" class="headerlink" title="四、平民文化向流氓文化的转换逻辑"></a>四、平民文化向流氓文化的转换逻辑</h3><p>平民文化过渡到流氓文化的原因有以下几点：</p>
<ol>
<li>中国文化精英阶层的消失<br>汉民族几十年的抗元战争，带来了可怕的后果：大量的文化典籍被毁掉、名臣儒士被残杀、精英文化阶层整体消失。元朝建立以后，统治者出于对汉文化的畏惧心理，切断了汉族士大夫的人生前途，科举制一度被取消，当时汉族知识分子的地位，第一次从“四民之首”跌到了“十丐九儒”的地步。</li>
<li>统治阶层的精神基因<br>元明时期的统治者在整体文化素质上远逊于宋朝和清朝。明朝有个皇帝叫朱厚照，“流氓皇帝”是他的专有标签。在位短短十几年，收了一百多个流氓做义子，在扬州到处追逐处女和寡妇。他的继承者明世宗则是性变态，公开要大臣们进献春药，有时候一天临幸数十人。明朝官员以向皇帝进献房事秘术来争宠。胡宗宪因贪污被指控后，“献秘术十四，帝大悦”。</li>
<li>流氓阶层和权力的结合<br>元朝作为异族，没有自己的一套意识形态，儒家礼义又被废弃不用，结果全国上下道德水平迅速滑落，社会风气持续恶化。越来越多的汉人由于社会地位极为低下，开始选择攀附权贵，出现了流氓阶层和专制权力之间的高度结合。当时元代的泼皮无赖，多到连元朝皇帝都不得不专门派人研究对流氓横行的处理意见。中国人的精神层面开始出现流氓化的趋势。</li>
</ol>
<h3 id="五、清朝的奴隶文化"><a href="#五、清朝的奴隶文化" class="headerlink" title="五、清朝的奴隶文化"></a>五、清朝的奴隶文化</h3><p>中国国民性经由贵族文化、士族文化、平民文化、流氓文化，而最终演化为清朝的奴隶文化，成为中国国民性演变过程中的最低谷。</p>
<p>贵族文化的对立面不是平民文化，而是奴隶文化。因为平民文化尚可以讲究独立人格，但奴隶文化之下，贵族精神里强调的遵守信义、珍视荣誉和勇敢尚武的精神内核完全被抽空，丧失了起码的人格尊严。</p>
<p>为了将整个社会都纳入自己的严密控制体系之下，清朝统治者连儒学的人格追求，都作为打击对象。清代皇帝就认为，一个大臣如果过于注重自身修养，过于在乎自身的名誉，就会妨碍他全新全意地为皇帝服务，妨碍他成为一个听话的奴才。为了彻底把大臣改造成奴才，雍正皇帝甚至提出一个重要观点，那就是大臣们不但不能图利，也不能好名，否则就很可能招来杀身之祸。这在清朝绝不是偶然现象。</p>
<p>久而久之，很多大臣干脆不做思想者，只做执行人，成为一个有才干、有风度、没思想、没坚守的奴才。春秋时期讲究人格尊严、珍视荣誉信义的贵族精神到了这个时候，才算完成了一次彻底的堕落。</p>
<h3 id="六、国民性演变和专制权力的关系"><a href="#六、国民性演变和专制权力的关系" class="headerlink" title="六、国民性演变和专制权力的关系"></a>六、国民性演变和专制权力的关系</h3><p>中国国民性的每一次转换，都与中国社会的权力性质和专制制度有着密切的关系。比如，第一次从贵族社会到士族社会的转换，就是因为秦始皇建立了皇帝制度，需要废除贵族阶层；第二次从士族社会到平民社会的转换，就是因为科举制的建立和普及，造成了社会阶层的自由流动；第三次平民社会到流氓社会的转换，则主要是因为统治阶级的精神基因以及专制制度对流氓阶层的利用。</p>
<p>国民精神的演变并不是一个孤立的现象，它的背后其实投射出的是一个国家权力性质和专制制度的发展脉络。有什么样的权力，就会有什么样的国民。</p>
<h3 id="金句："><a href="#金句：" class="headerlink" title="金句："></a>金句：</h3><ol>
<li>整个宋代社会是一个扬文抑武的朝代。正是因为宋代对武力的贬抑，导致了中国人在历史上第一次不再以立功疆场为荣耀。宋代甚至流传这样一句话：“做人莫做军，做铁莫做针。”</li>
<li>在秦始皇统一中国的时候，社会就提前进入了大一统，基于统治的需要，必须通过“诸子均分制”消灭贵族阶层，让皇权直接面对平民；而西方因为“长子继承制”的影响，得以一直保留了贵族制度。所以，中国贵族比西方要早消失两千多年。 </li>
<li>汉朝以后，一方面，官位都由皇帝任命，不再是贵族继承；另一方面，荐举制又导致皇帝和平民之间产生了一个新的士族阶层，虽然高级官位不再是世袭的贵族，但是却由上层社会垄断，下层社会人才很难跻身上层社会。中国社会开始出现贵族精神的第一次下行，出现了整个社会的士族文化面貌。</li>
<li>士族为了传承家族的精神，对家族教育非常重视。世家大族为了保持自己的文化优势，会制定各种各样的家规，所以家书、家训在魏晋南北朝时期特别兴盛。</li>
<li>魏晋时期，大一统的政治秩序被打破，很多的旧门人借门第的资本，不再对权力俯首帖耳：反正皇帝换来换去的，而他们却一直都是世家大族。王权变得不再具有权威，士家大族反而变得更加独立，才会产生蔑视权贵的社会风气。</li>
<li>尽管隋朝就发明了科举制，但任何文化的转变都需要一个过程，直到宋代科举制才真正成为唯一的选官途径，宋代平民才真正有机会通过考试进入上流社会，并最终形成一个阶层流动的平民社会。</li>
<li>宋代的平民文化打破了森严固化的社会等级，整个社会开始自由流动，既有纵向的阶层流动，也有横向的地域流动，从而出现了江湖世界。 </li>
<li>因为民间教育的普及，宋代民间书院非常之多，平民百姓接受教育之后，通过科举不断涌入上层社会。富于生活气息的底层文化与高雅的上层文化开始大面积接触，雅俗之间没有了严格的界限，中国文学终于开始在宋代开了以“口语化”为标志的民间语言写作的先河。</li>
<li>贵族文化的对立面不是平民文化，而是奴隶文化。因为平民文化尚可以讲究独立人格，但奴隶文化之下，贵族精神里强调遵守信义、珍视荣誉和勇敢尚武的精神内核完全被抽空，丧失了起码的人格尊严。</li>
<li>国民精神的演变并不是一个孤立的现象，它的背后其实投射出的是一个国家权力性质和专制制度的发展脉络。有什么样的权力，就会有什么样的国民。</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 读书 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 历史 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第二十三周 - 生活的细节]]></title>
      <url>http://chuanqiang.github.io/2018/01/08/%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%89%E5%91%A8%20-%20%E7%94%9F%E6%B4%BB%E7%9A%84%E7%BB%86%E8%8A%82/</url>
      <content type="html"><![CDATA[<p>新年伊始，许多公司开始总结用户一年的数据，支付宝2017账单公布，网易云音乐也一样，总结了用户一年的听歌数据。这些东西迅速在朋友圈刷屏，所以你看，数据成了更关心你的人。</p>
<a id="more"></a>
<p><img src="http://oeckzejn4.bkt.clouddn.com/20180108151542406252805.png" alt="支付宝数据.png"></p>
<p>这种推广方式很新潮，也很有『温度』，大众的接受度很高，容易增强与用户的『情感关联』，从而增强用户的粘性。文案我一直很佩服网易和阿里。不过我很意外怎么我的一年消费这么高，心里偷偷怀疑这数据准不准。该好好攒钱了，快到了花钱的时候，要开源节流。<br><img src="http://oeckzejn4.bkt.clouddn.com/20180108151542410416549.jpg" alt="支付宝预测的新年词汇.jpg"><br>最近运动和减肥成了优先级很高的项目，特意买了一副哑铃，来练肌肉。<br><img src="http://oeckzejn4.bkt.clouddn.com/2018010815154241692412.jpg" alt="哑铃.jpg"></p>
<p>另外，把上下班，从下地铁到家的通勤，换成了步行，每天早晚二十多分钟，大约多走五公里，这样每天可以多消耗一部分脂肪，路上还能一个人静静的听听音乐，听听播客和其他音频节目，也是很悠然自得，就是这两天气温很低，2到零下8度，空气清冷，只能全副武装了，不过好在天朗气清，冬阳甚好，一路走来，一路感受每天居住的城市，也就不觉得什么了。</p>
<p>最近在找优秀的音频节目，目前发现的有极客时间，得到，还有播客节目。其中极客时间的内容量少，太过技术流筛掉了太多的受众。播客类是听别人闲扯淡，可以开阔下眼界，属于闲着的时候听来消遣，比较喜欢的有『一天世界』、『黑水公园』。『得到』这款APP还不错，尤其是『听书』栏目，可以二十分钟左右听一本书的的精华，十分『效率』，但对于这种模式的效果和吸收成都，还是持怀疑态度，准备试试看下效果。</p>
<p>碎片化时间的利用，是一个值得思考的话题，网上对于『碎片化学习』的看法莫衷一是。如何利用，利用来后干什么，效果能有多少，都是要因人而异的，而现在还在试水和探索阶段。但总觉得时间宝贵，要好好把握。</p>
<blockquote>
<p>喜欢深入到生活的每一个细节，精细化生活，把自己过成一个精致的艺术品。</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 周志 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 独白 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第二十二周 - 抓住年末的尾巴]]></title>
      <url>http://chuanqiang.github.io/2018/01/01/%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%8C%E5%91%A8%20-%20%E6%8A%93%E4%BD%8F%E5%B9%B4%E6%9C%AB%E7%9A%84%E5%B0%BE%E5%B7%B4/</url>
      <content type="html"><![CDATA[<blockquote>
<p>每一个不曾起舞的日子，都是对生命的辜负。    —— 尼采</p>
</blockquote>
<p>2017，在不知不觉中就谢下了帷幕。今天是2018.01.01，2018年的第一天，并没有感觉和昨天也就是2017年的最后一天有什么不同，但朋友圈和商场的促销语在提醒我:你又逝去了一年，你又年老了一岁。</p>
<a id="more"></a>
<p>按照我的尿性，肯定是要写一篇年终总结的，反思这一年的愚蠢和收获，再播撒一下来年的种子。但是思来想去，还是放到春节吧，一来，总觉得年三十才是一年的终结，因为年岁的结束怎能不伴随一个盛大的节日来欢送呢；二来，自己懒，又怕时间仓促，写不满意和尽兴。所以综上，还是 Do it later 吧。</p>
<p>另外今年有一个特别的地方，过完了2017年，意味着最后一名九零后也满18岁了，所以朋友圈都在晒自己的十八岁，回忆满满啊。<br><img src="http://oeckzejn4.bkt.clouddn.com/20180101151477962338761.jpg" alt="我的十八岁"><br><img src="http://oeckzejn4.bkt.clouddn.com/20180101151477985299626.png" alt="2019年高中毕业"><br>对于他们，不知道这个是该欢喜还是该悲伤。何其芳在『燕泥集』中写道:</p>
<blockquote>
<p>从此始感到成人的寂寞，更喜欢梦中道路的迷离。</p>
</blockquote>
<p>迷离中是对前方未知却美好的向往。想象和憧憬的，大都是美好的，而当现实的铁锤落下，听到的往往都是梦破碎的声音。</p>
<p>我总觉得人生在17岁时是最好的年华，刚好到我们身心成熟，足以欣赏这个世界的美丽，又没有踏入成年而忍受这个世界的羁绊。那时的我们和我们眼中的世界都是纯净剔透的。</p>
<p>其实，接下来的一个多月才是17年的尾巴，也是用来弥补这一年纰漏的最后时光。到了除夕当夜，自己躺在床头，外面礼花绽放，回想自己的这一年，细数星星点点的时候，如果不想有些许遗憾，那么久紧紧抓住最后的一个多月的时光吧，把想读没有读的书读了，把想学没有学的课程学了，把想做没有做的事情做了。一个多月，看似在时光匆匆里眨眼即逝，但如果善加利用，足以弥补一年拉下的纰漏，这样等到年夜，相信礼花绽放的会更璀璨。</p>
<p>滴答清单里的条目还有许多在哪里伫立，等到着我在最后的时光中一一勾上，就像给2017勾上一个完美的✔️</p>
]]></content>
      
        <categories>
            
            <category> 周志 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 独白 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[未来世界的幸存者]]></title>
      <url>http://chuanqiang.github.io/2017/12/30/%E6%9C%AA%E6%9D%A5%E4%B8%96%E7%95%8C%E7%9A%84%E5%B9%B8%E5%AD%98%E8%80%85/</url>
      <content type="html"><![CDATA[<p>作者阮一峰看到 AlphaGo 战胜围棋冠军，猛然意识到『机器人、自动化、人工智能正在变得比人类更强大。在可预见的将来，技术最终将淘汰人类。』技术变革导致了人类社会的重构。作者说，绝大部分的人没机会参与这个进程，只能被动接受其他人安排自己的命运。在这个剧烈变化的年代，怎么才能成为一个可以把握自己命运的幸存者？</p>
<a id="more"></a>
<h2 id="旧世界的坍塌"><a href="#旧世界的坍塌" class="headerlink" title="旧世界的坍塌"></a>旧世界的坍塌</h2><h3 id="1-世界走向哪里"><a href="#1-世界走向哪里" class="headerlink" title="1.世界走向哪里"></a>1.世界走向哪里</h3><p>围棋可能是世界上最复杂的游戏，在一个19根横线乘19根竖线的棋盘上面，有着无穷多种的变化。根据计算，围棋可能的下法共有2.08 x 10170种。一个 3G HZ 的 CPU 内核，每秒可以运算3 x 109次，这意味着即使1万个CPU同时运算，也需要 2.3 x 1086 年才能走完所有下法。因此，计算机无法使用穷举法处理围棋。(谷歌的AlphaGo使用的是特殊算法实现)</p>
<p>真的很可能，机器驾驶汽车比人类驾驶得好。如果这项技术成功，十年以后，就没人去学开车了，驾校也会关门。终有一天，因为人类不如机器可靠，法律规定，人类不得驾驶汽车，只能由机器驾驶。如果你还想开车过过瘾，必须去专门的游乐场，就好像现在骑马只能去马场一样。</p>
<p>新技术会创造出新的工作岗位，但与之前工业革命不同的是，信息技术革命创造出的职业，远远小于它消灭掉的职位。尤其是人工智能和大数据，它们的技术目标就是不需要人的参与！因此技术在动摇人类社会的结构，将整个社会一分为二:有技术的人和没有技术的人，他们之间的贫富差距越来越大，人类束手无策。</p>
<p>《华盛顿邮报》做过一个统计，1978年到2011年，美国工人的平均工资只增长了6%，CEO 的平均收入增长了727%。这就是说，计算机革命出现后，穷人的收入根本不增长，而富人正变得越来越有钱。这种趋势将来只会增强，不会逆转。因为它是技术造成的，而技术变革的速度一点都没有放缓。技术正在不断替代劳动力，那些被替代的人们根本没有办法得到补偿。</p>
<p>更可怕的是，社会流动性正在减弱。穷人不可能通过努力，晋升到更高的社会阶层，改变自己的命运，因为跟你竞争的是你所竞争不过的机器人。一个收入差距越来越大、流动性僵化的社会，意味着什么？我很难想象。在经济上，持续繁荣需要购买力支持，必须让大多数人具有购买力；在政治上，不让底层人民看到翻身的机会，就是政治自杀。2016年的美国大选，传统风格的候选人都得不到支持，反倒是极端的、大肆批评现行秩序的特朗普大受欢迎，可能就是这个原因，是技术变革带来的经济政治动荡的体现。人们失去出人头地的希望，社会秩序也会瓦解。</p>
<p>技术虽然带来了收入不平等，但也带来了前所未有的平等，主要是在享受技术成果方面。风险投资家 Paul Graham 说，19世纪时，你只要有一辆马车，就是富人，根本没人在乎马车的牌子。现在不同了，人们不得不强调汽车的品牌，区分谁更有钱。这就是技术进步带来的影响，技术使得人人都可以拥有自己的代步工具，于是技术以外的因素（牌子）成了展示人类不平等的主要载体。</p>
<h4 id="关于VR"><a href="#关于VR" class="headerlink" title="关于VR"></a>关于VR</h4><blockquote>
<p>如果VR真的能模拟大多数实际生活，而且成本降到每个人负担得起，那人类就离真正的平等不远了。</p>
<p>VR技术把材料的触觉和质感的传达，提高到建材的地步，人类也就根本不需要什么实体空间了，大家一起找个床躺着，全部生活都在VR里过是最省成本的了。以后名车美女豪宅飞机都变成便宜的数据，每个人戴上头盔就能拥有的时候，人生的奋斗还有什么意义呢，人类传统社会必然就崩溃了。</p>
<p>假使欲望的满足变得轻而易举，那么整个人类存在的意义都值得怀疑。就像黑客帝国里的红蓝药丸，如果技术真的来临，有多少人还愿意选择令人痛苦的真实。抑或真实这个词的含义都变得不一样了</p>
</blockquote>
<p>人类社会究竟走向哪里：忍受现实的不平等，还是在虚拟中重构平等？未来从来没有像现在这般扑朔迷离，令人琢磨不透。</p>
<h3 id="2-那些无用的人"><a href="#2-那些无用的人" class="headerlink" title="2. 那些无用的人"></a>2. 那些无用的人</h3><p>今天，人类正在让许多物种灭绝，甚至可能包括自己。如果今天发生核灾而让世界末日降临，人类将毁灭，而老鼠和蟑螂很可能继续生存下去。或许6500万年后，会有一群高智商的老鼠心怀感激地回顾人类造成的这场灾难。(–『人类简史』)</p>
<p>技术造成的人力精简，将在今后5年内，导致全球发达国家失去710万个工作岗位，但在科技、专业服务及媒体领域，将创造210万个工作岗位。两相抵销之下，未来五年内，将会净损失500万个工作岗位，其中以行政工作与白领阶级为主。” (– 摘自世界经济论坛『未来的工作』)</p>
<p>尤瓦尔·赫拉利说，人工智能取代了那些简单技能的工作岗位以后，人类当中会出现一个庞大的、无用的无产阶级。</p>
<blockquote>
<p>未来，人类可能会分化为两个主要的等级：一个全新的更先进的精英阶级，很聪明，很富有，有更好的基因和更长的寿命；还有一个全新的一无用处的无产阶级，他们将越来越穷地等待死亡，可能变成没有工作、没有目标、整日靠吸毒度日、戴着VR头盔消磨时光的乌合之众。”</p>
</blockquote>
<p>现在断言，人类在未来几百年里要灭亡，或许还太早。但是，人类社会即将发生天翻地覆的变化，却是不争的事实。这种变化已经开始了，我们这代人就会亲历这场变化。它也许是人类最后一次的技术革命，希望你能够成为这场革命的幸存者。</p>
<h3 id="3-为什么世界上没有安全的工作？"><a href="#3-为什么世界上没有安全的工作？" class="headerlink" title="3. 为什么世界上没有安全的工作？"></a>3. 为什么世界上没有安全的工作？</h3><p>当一种技术消亡的时候，与它相关的工作岗位也就消亡了。这种事情在技术行业特别多，因为技术的升级换代太快了。</p>
<p><strong>注</strong>:这一部分我认为作者观点有失偏颇。个人认为只有一成不变才会被新技术带来的冲击击垮，终身学习的人不会没有立足之地的。</p>
<h3 id="4-白领岗位的消失"><a href="#4-白领岗位的消失" class="headerlink" title="4. 白领岗位的消失"></a>4. 白领岗位的消失</h3><p>以前，技术革命只是对蓝领工人不利，贸易全球化和自动化技术使得低技能工人，失去工作或者一直拿着低工资。而现在，技术革命开始威胁那些有技能的人了，人工智能、大数据、办公自动化正在快速地消灭办公室职位。</p>
<p>作家吴晓波把难以被机器替代的能力，称为『柔软的能力』</p>
<blockquote>
<ol>
<li><p>人性化和人格魅力。机器提供的服务是没有人性的，也不会有人格魅力，更不会感动人心。这注定了，有些感受是机器无法提供的。最简单的一个例子，老奶奶在街上突然摔倒了，你会感到心痛和惊慌，要是一台机器突然故障了，你大概不会对机器产生同情心。所以，一个富有人格魅力和人性的人，在计算机主导的时代，是有优势的；相反的，一个没有个性、人云亦云、千面一律、会消失在流水线上的人，则天然具有竞争劣势。</p>
</li>
<li><p>创意。计算机只能根据算法，做出下一步行为，没法超出算法的范围。这意味着，只要掌握了算法，就掌握了计算机的一举一动。人类则是难以预测的，常常会有天马行空的创意。机器最难以与人类竞争的，就是创造力。目前，还没有一种软件，能够写出一部人类爱看的小说，估计将来也难有。另外，科学家曾经有过争论，计算机会不会“顿悟”？目前看上去，大概也是不会的。</p>
</li>
<li><p>决策和领导力（即企业家能力）。美国经济学家熊彼得曾经说过，生产力增加的主要原因，除了资本和劳动力，就是企业家能力。一个优秀的领导者，可以团结所有资源，创造出超额利润，最典型的就是乔布斯那样的人物。计算机没有办法团结领导一群人，齐心协力完成一个使命。</p>
</li>
</ol>
</blockquote>
<p>作为个人来说，人生规划的时候，应该尽量发展这些能力，才能避免与机器『抢工作』。</p>
<h3 id="5-为什么你不应该读大学"><a href="#5-为什么你不应该读大学" class="headerlink" title="5. 为什么你不应该读大学"></a>5. 为什么你不应该读大学</h3><p>2016年四月，Udacity 进入中国，推出了中文版“优达学城”，一下子引起了我的兴趣。因为它干了一件没有先例的事情：颁发网络文凭。它办了一个网上的“硅谷大学”，自己发文凭，名称是“纳米学位”。纳米学位（Nanodegree）是优达学城此前与 Google、Facebook、亚马逊等互联网公司联合推出的学历认证项目。学员在线学习，所有项目考核合格之后即可获得纳米学位。</p>
<p><strong>当代的大学起源于欧洲修道院的模式。</strong>学生要经过多年的苦修，经过考核，才能毕业。如果想成为高级僧侣，就必须再多熬几年。另外，还有导师作为监督人，防止你学到歪门邪说。</p>
<p>这种模式的两大弊端，演变到今天，已经越来越严重了：<strong>一个是传授的知识老化，另一个是极其浪费学生的时间。</strong></p>
<p>退一步说，就算你在大学里能学到了真正的知识，那也不应该在那里待四年。如果只学最需要学习的东西，一年就够了。</p>
<p>四年时间足以让一个人在任何领域成为资深业者，甚至专家。可是我们的大学生呢，经过本科四年，不要说领域专家，甚至能力强的学生都寥寥无几。我们的大学制度用了四年时间，培养出了大量一无所长的、迷茫困惑的、市场滞销的年轻人。</p>
<p>18岁是人生最有热情和精力投入一项事业的时候，但是，大学将你一连四年关在教室和图书馆里，把考试和绩点伪装成你奋斗的目标，人为将你与真实世界隔离，引导你去关注那些对未来人生毫不重要的事情。经过这样四年的歧途，等你真正走上社会、要跟全世界竞争的时候，你的竞争力不是变强了，而是变弱了。换句话说，四年制大学很可能是削弱你，而不是让你变得更强。</p>
<p>世界著名程序员 Jamie Zawinski 曾经解释，为什么他只读了一个学期的大学就退学。</p>
<blockquote>
<p>进了大学以后，每天8点就要起床，开始训练记忆力。有一门课我早就会了，想申请免修。教务长说不行，你必须上，这是政策。见鬼，我为什么要自己付钱，来这种地方。我就退学了，从来没后悔过。</p>
</blockquote>
<p>我们时代的很多成功者—-乔布斯、比尔盖茨、扎克伯格等等—-都是退学生，这绝不是偶然的。不是他们在大学待不下去，而是他们发现，没必要在那个地方待四年。如果他们咬着牙忍受下去，熬到拿到文凭的那一天，苹果公司和微软公司可能都不会有了。</p>
<p>德国和瑞士的中学生毕业后，要选择走学术道路还是职业道路。只有不到30%的人，会去读大学，其余的人都接受职业培训，为职业生涯做准备。</p>
<p>我认为，这才是更合理的制度。毕竟大多数人不会从事学术研究，而要靠某种职业谋生。你要知道，大学课程是为学术生涯打基础的，不是为职业生涯设计的。所以，你确定要投入某个职业，合理的选择不是先上大学，然后再找工作，而是一开始就接受职业培训，然后一边工作，一边学习各种对职业生涯有帮助的课程。</p>
<p>理论上，一个人只要接受了中等教育，就可以进社会了。大学的本意是为那些走学术生涯的人开设的，后来慢慢变味了，以至于现在社会上居然有一种说法，”大学是素质教育“。不是这样的，任何时间地点，你都有机会提高素质。</p>
<p>注意，我不是说知识无用，而是说知识（尤其是非学术的知识）不一定要通过大学获得，通过互联网一样可以接受高等教育，而且更高效和便宜。</p>
<p>技术已经成为人类社会发展的主导性力量，学习和教育变得比以往更重要、更关键。但是很不幸，我们的学习和教育制度已经完全过时，传授的知识有用的少，没用的多；传授方法仍然依靠灌输和记忆，而不是启发和理解，极其低效，浪费学生的时间，打击学习热情，磨灭对知识的兴趣；对年轻人的成长，正面影响少，负面影响大，而且看不到改变的希望。</p>
<p>但是，时代已经变了，文凭正变得越来越不重要。那些与文凭挂钩的东西，正在一项项脱钩。</p>
<p>互联网将教育的自主权，交到了每个人自己手里。上什么课程、什么时间上，都完全由你决定。你可以一边工作，一边利用夜晚和周末，学习网络课程。这样的话，不仅早早就会有收入，而且只学那些对自己最有用、最感兴趣的内容，学习的效率很高。如果发现对学术有兴趣，将来再回大学，攻读更高的学位，也是完全可以的。</p>
<p>对于那些正在大学里面苦苦努力、不知道方向何在的年轻人，我有一点建议。</p>
<p>大学课程是为了那些不知道学什么的人设计的，千万不要因为自己找不到方向，而被这些课程”画地为牢“限制住。你要主动去接触和学习，那些自己感兴趣的东西。引用一个网友的话，『你要做的就是自主、跨界、终身学习』。</p>
<h3 id="6-为什么上班下班已经过时"><a href="#6-为什么上班下班已经过时" class="headerlink" title="6. 为什么上班下班已经过时"></a>6. 为什么上班下班已经过时</h3><p>它的好处很多，上班族可以节省交通费和上下班时间，公司可以节省租用办公空间和后勤支持的费用，城市可以降低交通堵塞和碳排放。更重要的是，远程办公可以提高生产力，聚集更多高质量的员工，并且提高员工的满意度。携程公司与斯坦福大学教授尼古拉斯•布鲁姆（Nicholas Bloom）进行过为期9个月在家工作试验，结果表明在家工作绩效大幅上升，离职率大幅下降，同时每位在家办公的员工每年可为公司节省成本2000美元。</p>
<p>“经济组织方式正在发生变革，那种在固定时间把人集中在固定场所的传统工作方式将逐渐被松散的，合作式的方式所取代。资本经济时代的管理理念是，人是懒惰的，因此雇员们需要被严格管理，于是他们被安排在固定的时间和固定的场所做着无聊的重复劳动。这套管理和企业组织方式在知识和创造力时代是行不通的，因为人只有在自主和自我驱动的状态下才能拥有最大的创造力。”</p>
<p>正如这句话所预测的那样“你再也雇不到优秀的人才，除非你跟他合作”。</p>
<blockquote>
<p>“未来，一个人越优秀（优秀的定义为“拥有很难被替代的知识或技能”），受到的限制就越低，他将有足够的权利来选择如何工作，利润如何分配，每天工作多长时间等，也就是说，他将同时拥有自由和财富。远程工作将会成为更多年轻人的选择。”</p>
</blockquote>
<h2 id="人生的B计划"><a href="#人生的B计划" class="headerlink" title="人生的B计划"></a>人生的B计划</h2><p>我们不应该把现在的雇佣制度，视为理所当然。它不是人类社会运行的唯一模式，过去不是，将来也未必是。</p>
<p>雇佣制度是一种有倾向性的制度：对资方有利，对劳方不利。</p>
<h3 id="1-你的命运不是一头骡子"><a href="#1-你的命运不是一头骡子" class="headerlink" title="1. 你的命运不是一头骡子"></a>1. 你的命运不是一头骡子</h3><p>当然，在生存面前，一切都是合理的。骡子为了生存，必须俯首听命。但是，21世纪的中国青年，生存本身似乎已经不是问题了。在这样一个产能和资本过剩的时代，除了赚钱以外，是不是应该对自己的人生做一些认真的思考，不要让”赚钱”成为思想懒惰的借口。退一步说，就算你像骡子那样活着，真的赚到了很多钱，是否可以就此认定，当一头骡子是正确的事情？</p>
<p>黑客与画家》的作者保罗•格雷厄姆，做过一个非常好的概括。</p>
<blockquote>
<p>“……（你）只是一个负责实现领导意志的技术工人，职责就是根据规格说明书写出代码，其实与一个挖水沟的工人是一样的，从这头挖到那头，仅此而已，从事的都是机械性的工作。”</p>
</blockquote>
<p>骡子只是施工队的工具，跟锄头或者扁担没有本质区别。但你不是他人的工具，你活着不是为了被动地被他人使用，而是应该要有自己的价值。我觉得，人应该过一种有乐趣、有追求、自己做主的生活，而不能像骡子那样被推着走。</p>
<h3 id="2-母鸡与前端工程师"><a href="#2-母鸡与前端工程师" class="headerlink" title="2. 母鸡与前端工程师"></a>2. 母鸡与前端工程师</h3><h3 id="3-为什么退休金是靠不住的"><a href="#3-为什么退休金是靠不住的" class="headerlink" title="3. 为什么退休金是靠不住的"></a>3. 为什么退休金是靠不住的</h3><p>。。。(退休年龄延长)表面上，这是因为人的寿命变长了，可以工作到更老。但是，直接的原因是人口老龄化加速，我们国家的养老金不够了。公开的报道这样写道：</p>
<blockquote>
<p>2016年2月，人社部部长尹蔚民称，2015年底全国养老的平均支付能力达到17个月。其中，黑龙江、吉林、青海、河北等8个省份的可支付月数低于10个月。黑龙江的可支付月数仅为1个月。</p>
</blockquote>
<p><strong>用现在还没退休的人的养老金，发给已经退休的人。</strong>如果就业人口一年比一年多，这种方法可以奏效。我们国家的现实却是，青壮年劳动力正在一年年变少，每月新增的基金已经快要不够发放了。所以，一定要推迟退休，而且必须尽快地实施，原因就很清楚了。因为只有到了法定退休年龄，你才能领养老金。哪怕只是推迟一年退休，全国因此省下来的养老金就是一大笔钱，至少几千亿。<br><img src="http://oeckzejn4.bkt.clouddn.com/blog/170611/GE47icDhD7.jpg?imageslim" alt=""><br>台湾是一个现成的例子。它是世界上生育率最低的地区之一，所以他们的养老金早就不够用了，破产在即，不得不立刻改革，减少养老金发放规模。台湾年轻人的薪水并不高，台北房价却直逼香港东京，现在养老金又要减少，年轻人的郁闷和绝望可想而知。</p>
<h3 id="4-你的B计划在哪里"><a href="#4-你的B计划在哪里" class="headerlink" title="4. 你的B计划在哪里"></a>4. 你的B计划在哪里</h3><p>军事行动至少要准备两套计划：A计划在正常情况下执行，B计划是应急计划，在A计划落空时执行。这就好比电话打到一半，突然手机没电了，要是你随身携带第二块电池，就能应急。B计划就是那备用的第二块电池。正常情况下，B计划可能不会立即带来经济上的成功，但是你可以从中获得自由、自我认同和成就感，以及从此不用忍受大公司晋升阶梯上面挤破头的压力和窒息。即使初期没有成功，你也可以借此获得转型的其他机会。最理想的情况是，你通过B计划，实现了自己真正想要的生活。美国的”家政女王”玛莎·斯图尔特，正是因为在食品店当经理被解雇了，才不得不自己开店的。</p>
<h3 id="5-为什么创业"><a href="#5-为什么创业" class="headerlink" title="5. 为什么创业"></a>5. 为什么创业</h3><p>“创业”这个词太正式了，“自我雇佣”更准确，就是你为自己工作。<br>创业不一定与资本、技术这些东西联系在一起，只要为自己工作，靠利润而不是靠工资生存，就是创业。</p>
<p>我的想法是，底层的人没有出路，或者说所有的路都是九死一生，那么也无所谓了，选择一条让自己尽兴的路，至少不会被人像垃圾一样扔掉。<br>美国风险投资家 Paul Graham 一直鼓吹创业，他的观点对我影响很大。</p>
<blockquote>
<p>”创业是艰难的，但是一份早9晚5的工作也是艰难的，在某种意义上，甚至比创业还艰难。你自己开公司，你会因为很多事情担惊受怕，但是你不会感到虚度生命，在一家大公司里打工，常常会有这种感觉。而且，创业可能会使得你挣来多得多的钱。“<br>”眼下，我们觉得有一份工作是正常的生活模式，但是这是最不可靠的历史假象。现在所谓的工业化国家里，仅仅二三代人之前，大多数人都是靠务农为生。如果将来许许多多人改变谋生的方式，这也许会令人感到惊讶，但是如果没有发生这种改变，会令人感到更惊讶。“</p>
</blockquote>
<p>什么时候创业呢？现在不是经济的高峰期，你也许会想，等到景气好一点的时候再动手。Paul Graham 说这种想法是不对的，因为旧事物衰败的时候，就是新事物崛起的良机。对于那些注定要发生的变革，宏观经济不景气正是最好的机会。</p>
<blockquote>
<p>经济衰退的时期，投资者和顾客都感到手头拮据。但是，顾客感到手头拮据，其实不是问题，反而你可以从中获利，因为顾客需要更便宜的商品。一般来说，创业公司的产品，总是比原有产品更便宜。所以从这个角度看，经济危机中，小的创业公司比大公司更容易成功。</p>
</blockquote>
<h3 id="6-如何确定创业方向"><a href="#6-如何确定创业方向" class="headerlink" title="6. 如何确定创业方向"></a>6. 如何确定创业方向</h3><p>Michael Moritz 是美国风险投资家，著名的风投公司Sequoia Capital（红杉资本）的合伙人。他有几条创业建议，我觉得很有启发，可以当作我们的原则。</p>
<ol>
<li>创业的核心问题是你能为你的客户做什么。你的产品能为客户提供什么？这是最重要的问题。只要有人需要你的产品，你就能活下去；越多的人需要，创业就越可能成功。</li>
<li>你要创造一些不一样的东西。如果你跟别人生产一模一样的产品，就很难吸引顾客，你只能诉诸于低价。真正成功的创业者，都是创造了不一样的东西，苹果公司的口号就是叫 Think Different（与众不同）。</li>
<li>不要好高骛远。第一件事就是确保今天能生存下来，然后生存一个月，接下来一个季度，然后全年，然后担心来年的事情。</li>
<li>你要注重细节，这是所有成功者的特质。许多成功的创业者，都对各自行业的技术和生意具有巨大的兴趣和深刻的理解，他们往往都是沉浸在这个领域的细节之中的人。对于那些只想“捞一把”的人，细节看起来太琐碎了，很难令他们产生兴趣，或者感到兴奋。</li>
<li>如果你的公司不能产生利润，就不要去借钱。过去，太多的企业采用投资驱动的模式，借钱运作，赚取差价，比如那些杠杆收购。它们只有尽可能多地借钱，才能赚到更多的钱。这种方式最终必然会发生崩溃。</li>
<li>你要保持热情。创业将是一次困难的历险，所以最好是你自己真的想去做它，但也不要头脑发热，冲动行事。</li>
</ol>
<p>拉卡拉和蓝色光标的创始人孙陶然，也说过类似的观点。他开发一个产品的时候，总是问自己五个问题。</p>
<blockquote>
<p>1、给谁用？<br>2、他们用这个产品来解决什么问题？<br>3、这个问题对他们而言有多重要？<br>4、我们的方法是否足够简单方便？<br>5、他们要付出的代价与所得是否匹配？</p>
</blockquote>
<p>具体来说，就是使用倒推法，从最终消费者开始一步步倒推到生产阶段。</p>
<blockquote>
<p>第一步：谁来购买你的产品？为什么购买？市场有多大？<br>第二步：客户愿意付多少钱购买你的产品？竞争对手是什么价格？<br>第三步：客户在什么地方能买到你的产品？<br>第四步：为了让客户买到你的产品，你要付出多少销售成本？<br>第五步：你要生产出这些产品，能够负担的最高生产成本是多少？</p>
</blockquote>
<p>通过这一系列的步骤，你就可以整理出你的创业的大概轮廓，其中包括这样几个要点：产品定位（最终消费者如何看待你的该产品）、原料（你的上游厂商是谁）、生产过程（产品如何生产出来）、定价（你卖给批发商、零售商、消费者的价格分别是多少）、经销渠道（你怎样向最终消费者出售你的产品？存在哪些中间商？你如何向他们付酬？）、营销（你如何让消费者了解你的产品）、市场的进入壁垒（你的竞争对手会不会轻易地复制你的经营模式）、规模的扩大（如何扩大业务）等等。</p>
<p>Facebook 的办公室就贴着下面的标语，作为行动准则，激励员工。它们都可以当作创业的行为准则。   </p>
<blockquote>
<p>比完美更重要的是完成。（Done is better than perfect.）<br>快速行动，破除陈规。（Move fast and break things.）<br>保持专注，持续发布。（Stay focused and keep shipping.）</p>
</blockquote>
<h3 id="不要在功能上竞争"><a href="#不要在功能上竞争" class="headerlink" title="不要在功能上竞争"></a>不要在功能上竞争</h3><p>很难让一件产品保持简单易用，同时还具备大量的新功能。开发新产品的时候，哪一个取向优先，多功能还是易用性？</p>
<p>正确的做法，就是不要在功能上竞争。如果你的产品的核心概念行不通，那就重新定位这个产品，而不是为它添加新功能。你必须牢记在心，创造一个有竞争力的新产品，不要着眼于它的功能比别人多，而要着眼于它有一个截然不同的市场定位。</p>
<p>如果市场上都是复杂的企业级工具，那就开发一个针对个人用户的简化版；如果市场上都是很正式的高端葡萄酒，那就开发一种便宜的、针对年轻人的、更休闲的酒精饮料；如果市场上都是提供长篇Blog服务的网站，那就开发一个很简单的、每次只能写140个字的网站；如果市场上都是技术性的、廉价的电子设备，那就开发人性化的、高价的电子设备。</p>
<p>总之，你要做的不是添加功能，而是做一个市场定位不同的产品。</p>
<p>下面是开发新产品时，几点可行的做法：</p>
<p>（1）你不是做一个比竞争对手“更好”的产品，而是做一个“不同”的产品。</p>
<p>（2）你只提供部分功能，但是很好地满足了用户的需求。</p>
<p>（3）如果新产品的市场反响不好，增加新功能并不能解决问题。你应该重新定位你的产品，想想它能向消费者提供哪些不同的价值。</p>
<p>（4）在产品设计和推广的每一个环节，都突出它的不同定位。</p>
<h3 id="大坑和小铲子"><a href="#大坑和小铲子" class="headerlink" title="大坑和小铲子"></a>大坑和小铲子</h3><p>你一个人，加上一把铲子，开始了寻找黄金之旅。长途漫漫。</p>
<p>现在，你有两种选择。<br>选择一：留在一个地点，挖一个大坑，但是不知道何年何月才能挖到地下的金子。<br>选择二：每个地点挖5米，如果找不到金子，就换个地方再挖。结果你挖了几百个小坑，而不是一个大坑。</p>
<p>请问你会如何选择？</p>
<p>换一种方式思考。你在推销一种产品。你给一个客户打10个电话，他可能就会买，也有可能还是不买。换成给10个客户每人打一个电话，你可能会得到10次拒绝，也可能某人一个电话就被说动了。</p>
<p>你会如何做？</p>
<p>推而广之，如果你在经营一项事业，你就有两种策略。</p>
<p>策略一：单一化策略。认准一个方向，不断地挖坑，通过长期重复性的付出，创造价值，赢得他人的信任，把产品销售出去。</p>
<p>策略二：多元化策略。你四处出击，到处挖坑，将有限的资源分散使用。这时，你最好期望你的眼光很准，能找对地方，一旦将产品投入市场，就立刻能打开销路。因为你的铲子很小，如果金子埋得很深，你就不会有第二次机会。</p>
<p>你必须认识到，不是你一个人在找金子，是所有人都在找金子。那些容易找到的金子，几乎可以肯定，一定已经被别人捡走了。那些有高级设备的人，把埋得浅的金子，也挖得差不多了。这就是说，第二种策略实际上是无效的，就算你挖一千个小坑，也找不到金子。</p>
<p>你唯一的策略，就是认定一个方向，坚持不懈往下挖，直到挖成。你很可能还是不会找到金子，但是在往下挖的过程中，你可能会找到其他有用的矿物。而且，由于长期地在这个领域奋斗，你会对周围一切极其熟悉，变成这个领域的专家。附近的人遇到各种问题，也会来找你征求意见。</p>
<p>另一方面，风沙来临的时候，那些小坑都会被掩埋，只有你的大坑会留下来，成为地面上难以磨灭的印记。或者，随着时间流逝，那些小坑都会慢慢荒芜，野草覆盖，人们再也无从发现它们，只有你的大坑还能被后代的人们辨识出来。举例来说，古罗马都是石头建筑，建造起来非常困难和昂贵，可能一年只能造一幢，但是两千年过去了，很多建筑都留到了今天；古代中国都是木建筑或砖瓦建筑，建造起来比较容易和廉价，可能一年可以造几十幢，但是根本留存不下来，完整的唐朝和唐以前的建筑，现在完全找不到，就连许多清朝的房子，现在都腐烂得不像样子。</p>
<p>最后，如果你想人生中留下一些东西，那么因为你挖了一个大坑，人们会记得你。这就是你留下的痕迹。</p>
<h2 id="方法案例与未来"><a href="#方法案例与未来" class="headerlink" title="方法案例与未来"></a>方法案例与未来</h2><h3 id="Dan-计划：重新定义人生的10000个小时"><a href="#Dan-计划：重新定义人生的10000个小时" class="headerlink" title="Dan 计划：重新定义人生的10000个小时"></a>Dan 计划：重新定义人生的10000个小时</h3><p>畅销书作家 Malcolm Gladwell 将这篇论文写进了他的新书《异类：成功人士的故事》（Outliers: The Story of Success）。</p>
<p>他概念化了原始论文的结论，宣称存在一个“10000小时规则”（10000 hour rule），即成功至少需要10000个小时的投入。走红之前，甲壳虫乐队在酒吧中演出过10000个小时。创立微软公司之前，比尔·盖茨编程超过10000个小时。画家毕加索、音乐家莫扎特、篮球运动员乔丹，都有超过10000小时的训练。</p>
<h3 id="为什么起床后不能收邮件？"><a href="#为什么起床后不能收邮件？" class="headerlink" title="为什么起床后不能收邮件？"></a>为什么起床后不能收邮件？</h3><p>英国作家 Richard Whately 说过：</p>
<blockquote>
<p>“在早晨浪费一小时，你得花一整天来弥补。”</p>
</blockquote>
<h3 id="个性也是一种竞争力"><a href="#个性也是一种竞争力" class="headerlink" title="个性也是一种竞争力"></a>个性也是一种竞争力</h3><p>papi 酱的案例告诉我们</p>
<blockquote>
<p>我们正在进入一个”后技术时代”，特征就是技术无所不在，成为整个社会的基础设施，不再具有使用门槛，一个人就可以运作一家企业或者一家媒体。以前创业是比技术、比功能，今后创业可能就是比特色、比个性。</p>
</blockquote>
<p>今后，产品竞争的重点，很可能就不是技术了（因为大家的基本技术都差不多），而是产品的服务、外观设计、文化等非技术方面。其中很重要的一项，就是产品的个性。因为其他方面都容易复制，但个性最难复制。如果一个产品充斥着非常浓郁的个性，这样的产品最难被取代。</p>
<p>当个性变成了产品的一部分，就成了一种竞争力。以后，你需要两样东西，帮助你成功。一样是你的能力，还有一样是你的个性。它们互相配合，造就出独一无二的产品，令其难以被其他产品或技术取代。考虑到人的能力很难大幅超出其他人，那么个性的重要性就更加凸显。</p>
<p>经济学告诉我们，物品的价格由其供给的稀缺决定。比如，水和钻石，前者是生命的必需，但到处都是，因此价格很低，5元一立方；后者只是一块漂亮的小矿石，可有可无，但因为供给少，价格就奇高。</p>
<p>个性变成竞争力，还有一个原因是技术造成的。技术发展的一大结果就是差异消失。凡是技术主导的领域，生产出来的往往都是标准化产品。当你和其他人用的都是一样的产品时，你就开始怀念差异和个性了。举例来说，很多女孩子喜欢购买各种各样的手机套。总之，技术在消灭差异、拉近人们的生活方式和生活水平的同时，也在加大消费者对个性的重视。</p>
<p>papi 酱获得投资，本质上就是个性商品化、个性企业化。这样的事情，今后将会越来越多。更深层次来说，技术是冰冷和没有人性的，技术越是主导人类社会的发展方向，就越需要人性作为平衡和纠正。技术正在很多方面胜过人类，而人性作为一种竞争优势，因而变得更明显了。</p>
<h3 id="要聊天，先付费"><a href="#要聊天，先付费" class="headerlink" title="要聊天，先付费"></a>要聊天，先付费</h3><p>2015年底，李笑来老师众筹他的新书，每份金额2555元。但是，那本书已经开源了，任何人都可以免费阅读。你缴了钱，唯一的权利就是可以加入专属的聊天群。也就是说，这其实不是众筹，而是出售聊天群的会员资格。</p>
<p>池建强老师建了一个”工程师技术分享群”，会员费是1024元/年，现在也有700多个会员了。</p>
<p><strong>现代化工业的流水线模式，要求非常细的专业分工，这造成劳动者社交圈的狭窄</strong>。另一方面，当代都市的规模越来越大，带来的孤独感、疏离感和压力感，也是空前的。这些因素造成了大量的社交需求，各种社交软件的流行（比如Facebook、微信）绝不是偶然的。</p>
<p>因此，收费群的商业模式是可行的，背后有真实需求。而且，网络社交比传统社交更便宜。线下的社交活动，比如吃饭、出游、娱乐的成本都不低。</p>
<p>1989年，美国社会学家奥登伯格（Ray Oldenburg）出版了一本著名的书《绝好的地方》（The Great Good Place）。他提出，人类的日常生活主要分布于三个空间：</p>
<blockquote>
<p>第一空间是居住空间（也就是家），第二空间是工作空间，第三空间是休闲娱乐空间，在那里会见朋友、喝啤酒、谈天说地，享受人际交往的乐趣。典型的第三空间是咖啡馆、酒吧、美发店、露天啤酒店、桌球房、俱乐部这一类地方。</p>
</blockquote>
<p>奥登伯格认为，人的生活质量与这三个空间都相关。其中，第三空间的质量和逗留时间长短，决定了你的生活是否丰富多彩。当代社会的问题是，第三空间正在逐渐丧失。</p>
<p>这本书出版后，第三空间这个概念受到了极大的重视。但是此前，第三空间只被当作实体空间，现在我们终于可以说，<strong>网络也是第三空间，聊天群就是最好的例子。一个运行良好的聊天群，也可以对参与者的生活质量产生重大影响。</strong></p>
<p><strong>社交需求是一个极大的市场，网络社交才刚刚起步，潜力无限，现有软件根本没有很好地满足这些需求。</strong>收费的聊天群，只是一个非常初级的应用，各方面都还很简陋。将来付费的网络社交将是常态，那些高质量社交群的会员费，一定是很贵的。</p>
<h3 id="即将来临的卖文时代"><a href="#即将来临的卖文时代" class="headerlink" title="即将来临的卖文时代"></a>即将来临的卖文时代</h3><p>内容付费成了互联网行业的一大热点。</p>
<p>以前，内容付费之所以没有成为主流，主要原因还是收费不方便。如果我想为自己的网站加上收费功能，读一篇文章收费一元钱，成本很高。这一类小额支付（或称微支付），收到的钱有时都不足以弥补手续费。而且，即使读者有意愿付费，流程也很麻烦，可能要在多个网页之间跳转，几分钟也不一定能搞定。此外、盗版问题、PC的阅读体验不好、缺乏互动手段都是原因。</p>
<p>现在不一样了，智能手机的普及改变了一切。正是由于支付技术的进步，使得内容付费成为可能，让生产者有办法为单个内容定价一元（或者其他很低廉的价格）进行销售。</p>
<p>我想，网上今后将免费内容和收费内容并存。那些热点的、受欢迎的内容，很可能都会收费，因为既然可以变现，为什么不这样做呢？另一方面，免费内容仍然将是主流，传统的商业模式——<strong>免费内容换取流量，流量转化广告</strong>——依然有效，而且收费内容也会让用户更珍惜免费内容，促进对它的消费。</p>
<h3 id="微媒体时代"><a href="#微媒体时代" class="headerlink" title="微媒体时代"></a>微媒体时代</h3><p>传统的电视台，一个人肯定办不起来。三个最基本的岗位——采访、编辑、播出——一个人是搞不定的。我国最基层的县级电视台，哪怕消息都靠通讯员，也往往有几十人的编制。</p>
<p>互联网不一样：播出不用操心，只要摄像头对准自己就可以；节目内容就是直播主题加上旁白（歌舞类直播还要唱歌跳舞）；提前做一些准备，当然最好，没有任何准备，想到哪里说到哪里，问题也不大。所以，互联网直播完全可以一个人包办。事实上，很多人已经把直播当职业了，每天晚上都开台，从晚饭后一直直播到半夜，靠粉丝打赏来赚钱。这种情况下，就等于一个人做了一个频道，不仅采、编、播集于一身，还集成了广告部门。从功能上来讲，一个互联网直播间就是一个微型的网络电视台了。</p>
<p>美国有一部电影《楚门的世界》，讲的是主人公楚门生活在一个巨大的摄影棚里面，每天24小时的生活都被制作成肥皂剧，向全世界播出。上文的那位谭洁姑娘，已经把这段情节变成了活生生的现实。不同的是，楚门的背后是一个上百人的团队，而谭洁只有一个人。</p>
<p>如果每个人都是一个微型媒体，就像无数座移动的小电视台，每时每刻向外界发送着信号，那么媒体的生态就完全不一样了。</p>
<p>以前是大媒体时代，一个城市只有几家媒体，所有人从这些媒体获取消息。现在是微媒体时代，周围到处是形形色色的媒体。你不仅消费别人提供的消息，自己也在源源不断地“播放”消息。用计算机术语来说，以前的媒体生态是“中央集中式”，现在是“网状分布式”，媒体分子化了。</p>
<h4 id="这种媒体生态的根本性变化，意味着什么呢？"><a href="#这种媒体生态的根本性变化，意味着什么呢？" class="headerlink" title="这种媒体生态的根本性变化，意味着什么呢？"></a>这种媒体生态的根本性变化，意味着什么呢？</h4><ul>
<li>统的大媒体公司将会遭遇生存危机。许多传统媒体会死去，那些最优秀的媒体还会继续生存下去，因为它们是公认的可靠消息来源。</li>
<li>微媒体会变得比大媒体更受欢迎，其中一些会走上商业化运营的道路，最终变成大型媒体公司。那些大媒体的广告客户，完全可能变成你的广告客户。</li>
<li>媒体的节目导向将发生变化。总体上，大媒体的节目虽然制作更精良，但是成本较高（用户不得不看广告），有更多商业化的成分，它们的目标是生产出来的内容，给尽可能多的人看。</li>
<li>微媒体不一样，它根本不是商业驱动的，而是以兴趣和自我展示为主要诉求。你收看微媒体，其实就是在收看主播的个性和想法。所以，微媒体兴起后，媒体的视角将由宏观（社会、经济、政治、历史等等）转向更微观、更自我。</li>
<li>以后不会再有超大型的媒体公司，只会有超大型的媒体平台。这已经是互联网时代的普遍趋势了：世界最大出租车公司 Uber 不拥有任何出租车，最大内容提供商 Facebook 不生产任何内容，最大网商阿里巴巴不拥有任何商店，最大旅馆 Airbnb 不拥有任何房间。同样的，未来最大的媒体将不生产任何内容，只提供内容的消费和交易的平台，现在的 Youtube 已经初具这样的雏形了。</li>
<li>媒体会变得极度廉价化，以前是每个人都拥有个人主页（Facebook、微信、微博都是个人主页平台），将来是每个人都有一个媒体。微媒体为个人带来了极大机会，让你把自己传播出去。以前，人们盼着上电视，让别人知道自己是谁；将来你的个人媒体上，你永远都是主角。问题是如何吸引别人来看，媒体推广将成为每个人的必修课。微媒体的时代，你必须学会如何把自己传播出去。</li>
</ul>
<h3 id="未来的娱乐业"><a href="#未来的娱乐业" class="headerlink" title="未来的娱乐业"></a>未来的娱乐业</h3><p>2012年1月份，美国风险投资家 Paul Graham 发表了一封<img src="http://www.businessinsider.com/y-combinator-startups-please-hurry-up-and-kill-hollywood-2012-1?IR=T&amp;r=US&amp;IR=T" alt="公开信">，题目很夸张，叫做“摧毁好莱坞”（kill Hollywood）。他希望创业公司投入娱乐行业的创新，跟好莱坞一比高下，甚至取代它。</p>
<p>Paul Graham 的核心观点是下面这句话。</p>
<blockquote>
<p>电影行业正在死亡，互联网蓬勃兴起。未来会有更好的娱乐方式，让人们乐在其中，杀死电影和电视。</p>
</blockquote>
<p>娱乐业的发展史，就是让用户越来越多地参与进来。举例来说，你无法参与演唱会，只能坐在台下听歌星唱，人家唱什么，你听什么。于是出现了卡拉OK，让普通人也过一把高歌一曲的瘾，结果卡拉OK变成了比演唱会更大的行业。广场舞也是如此，自己跳舞比看别人跳舞过瘾多了。</p>
<p>为了让球迷参与球赛，出现了足球彩票。为了让观众参与网络视频，出现了弹幕。</p>
<p>任何一种活动，可以让普通人参与进来的门槛越低、程度越深，就越会大受欢迎。迪斯尼乐园总结出来的一条经营原则就是，“如果娱乐节目少一些被动性和纯观赏性，多一些亲身参与，游客就会停留地久一些。”</p>
<p><strong>一句话，娱乐业的发展方向，就是让消费者更多地参与进来。现在的电影模式做不到这一点，所以会被淘汰；VR 游戏允许消费者全身心参与，这才是未来的方向，VR 电影应该很快就会出现。</strong></p>
<p>马云说，十年以后中国最大的两个产业，是健康产业（Health）和文娱产业（Happy），简称“双H产业”。前者让人民更健康，后者让人民更快乐。</p>
<p>也许未来，你在网上订购了一段情节，就能进入一个全新的故事世界，这个世界有可能是真实的，也有可能是 VR 的，对你来说都一样，因为它们看上去几乎完全相同。你只知道，你在街头遇到的每个人、每件事，都是游戏安排好的。</p>
<h3 id="技术教育的兴起"><a href="#技术教育的兴起" class="headerlink" title="技术教育的兴起"></a>技术教育的兴起</h3><p>未来的形势远比我们想象的严峻，技术会取代越来越多的人工。展望未来，大部分人，甚至90%以上的人，终其一生只是在社会的底层挣扎，拿着小康或比温饱线略高的工资。</p>
<p>只有技术，才有可能让你翻身。比特币就是一个例子，过去几年中，价格上涨了几百万倍。我知道的许多技术人都通过比特币发了财，而这只是技术带来的财富浪潮之中的一个突出案例。如果你了解技术，你就会看到有这样的机会。现在看上去，只有技术才能提供这样的从底层快速上升的机会。</p>
<p>我有一种悲观的预感。未来只有两种途径可以改变人生，一种是学习技术，另一种是购买彩票。</p>
]]></content>
      
        <categories>
            
            <category> 读书 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 科技 </tag>
            
            <tag> 书摘 </tag>
            
            <tag> 未来 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第二十一周 - 当年岁逝去，我们总该抓住些什么]]></title>
      <url>http://chuanqiang.github.io/2017/12/24/%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%80%E5%91%A8%20-%20%E5%BD%93%E5%B9%B4%E5%B2%81%E9%80%9D%E5%8E%BB%EF%BC%8C%E6%88%91%E4%BB%AC%E6%80%BB%E8%AF%A5%E6%8A%93%E4%BD%8F%E4%BA%9B%E4%BB%80%E4%B9%88/</url>
      <content type="html"><![CDATA[<p>一进十二月份，过节的气氛愈发浓厚。圣诞节、元旦、春节一个接着一个，岁末的狂欢，也意味着又一年岁的终结。已经记不得去年年末的光景。我们总嘲笑鱼儿只有七秒钟的记忆，但对比我们的记忆和生命的尺度，人类又何尝不是充满着苟活于当下的无奈。幸好有文字可以充当记忆的载体，让记忆烙印在岁月的长河中，不被生活的滚滚洪流冲泻掉。</p>
<a id="more"></a>
<p>上周继续着 crm 的第二期开发，逐渐完善整个销售跟进流程。开发的本质是什么，我认为一部分是为了用程序和机器替代我们宝贵的劳动力，把重复、规律、可归纳的部分封装起来交给给机器去执行。所以开发的本质也是人类进化的本质，都是为了满足人类的惰性，让智慧打败生活的桎梏，才能有时间敲击着我们心中奔放的鼓点奔向另一个世界。</p>
<p>我是喜欢过节的，这样我才可以正大光明的卸下一身的疲惫，享受生活短暂的别样以及惊喜。<br><img src="http://oeckzejn4.bkt.clouddn.com/20171224151404628329269.jpg" alt="20171224151404628329269.jpg"></p>
<p>往儿不了追者，年也。越到岁末，越易回想，回想之后，开始思考一些近乎玄学的问题，面对岁月的逝去，总会有苍白的无力感。地铁呼啸而过，就像这匆忙的岁月，窗外的广告牌换了颜色，车厢里人来人往，我静静的坐在那里，不断问自己:在时光倏然而逝中，我们应该抓住些什么呢？</p>
<p>金钱吗？金钱是通往自由路上的硬通货，是获取自由的手段。王尔德说，</p>
<blockquote>
<p>年轻的时候，我以为钱就是一切；现在老了我才知道，确实如此。</p>
</blockquote>
<p>似乎鲁迅的话更值得深思，</p>
<blockquote>
<p>自由固不是钱所能买到的，但能够为钱而卖掉。</p>
</blockquote>
<p>成长吗？我一直有个信条，成功不是目的，成长才是，而成功只是成长路上的附属品。因为成长是没有终点的，它伴随着我们生命的终始。成长并不是让我们变得更聪明、更睿智，甚至更善良，只是让我们经历的更多，看到的更多，体会的更多，理解的更多，让我们的生命更加丰富。直至我们正视死亡，安然离世。</p>
<p>是温情吗？脉脉温情是治愈尘世间的良药，能让我们在纷纷扰扰中获得慰藉和力量。我们只身降落人间，孤单活着，独自死去。只有借着爱情和友谊，我们才制造了一时的幻觉，觉得自己并不孤单。</p>
<p>还应该抓住什么呢？还有一颗本心。遗世而独立，不受蝇营狗苟，保持自己本真，保持人格独立。既然不能改变世界的话，那就努力不让世界改变你。外接的改变是很迅速而有效的，没有人接受不了的生活，尤其是当他看到别人也这样活着的时候，但往往难得的不是接受，而是拒绝。拒绝政治的洗脑，拒绝信息洪流的扰乱视听，拒绝低俗风潮的洗礼，拒绝所有心里告诫自己不想要和不能要的糟粕，让内心变得晶莹。</p>
<p>所有的上述都是我想抓住的，生命经受岁月的洗礼，使记忆不再，韶华逝去，芳容易改，但总有一些东西能在时间长河中沉淀，而这些，就是我们应该牢牢抓住的。</p>
]]></content>
      
        <categories>
            
            <category> 周志 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 独白 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第二十周 - 絮叨絮叨]]></title>
      <url>http://chuanqiang.github.io/2017/12/16/%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%91%A8%20-%20%E7%B5%AE%E5%8F%A8%E7%B5%AE%E5%8F%A8/</url>
      <content type="html"><![CDATA[<p>这几天的天气格外的冷，尤其是有风的时候。冬天降临，但却仍旧未下一场雪。我总觉得凡是不以下雪为目的的降温都是耍流氓。天干物燥，容易生病感冒，告诫自己和身边的人多喝水，适量运动。</p>
<a id="more"></a>
<p>这段时间，脖子酸痛，眼睛干涩。知道是上班长时间低头伏案所致，但是有没有好的解决办法。不禁对自己开玩笑，难道我的职业生涯就快要结束了？在如何避免职业病的前提下有效的工作是我这段时间需要思考的一个问题。</p>
<p>时间的不够用和兴趣泛滥成了现阶段的主要矛盾。想学习，想看书，想学习英语，想看美剧，想听播客，想玩游戏，想出去旅游，想睡懒觉，想陪芝芝。但是一个人的时间和精力都是有限的，经常因为想做的事情没法做而感到失落。目前想到的是提高精力值和效率，做事强分清主次，区别对待，顺序处理。整个工作流需要优化。</p>
<p>北京政府又愚蠢了一次，推出『最美天际线』整治活动，把所谓的不符合广告牌管理规范的统统撤掉。问题是这个规范既没有相关的法律作为依据，有没有民意参与，是一个彻彻底底的政府专断意淫出的一个愚蠢之极的产物。但是在政府机器面前，人民也只能无奈的遵从，搞的怨声载道，口诛笔伐。几天之后，可能执政者也发现这次的行动搞的确实欠考虑，于是又在今天发出通知：不用摘牌子了，你们想挂就再挂回去吧，摘的时候虽然是政府找人摘的，但是得要你们自己挂回去了。商家和企业：😤，你大爷的！！!</p>
<p>周三举办了一月一度的生日趴，冬季是出生率高发的季节，这个月有许多个寿星。我猜测是因为冬季农活闲置，天气寒冷，人们百无聊赖，只有在家造小人了😂<br><img src="http://oeckzejn4.bkt.clouddn.com/2017121615134394419515.jpg" alt="生日趴.jpg"></p>
<p>人很多，显得蛋糕很小，不过幸运的分了一块。我从小特别喜欢吃蛋糕，尤其是奶油。小时候，最期望过得日子，一个是过年，另一个就是我姥爷的寿辰，因为举家相聚，并且会买一个特大的蛋糕，作为孩子的我们往往受宠会分到的很多，剩下的刀叉也会玩的不亦乐乎。</p>
<p>周四晚上，拖了很久的 crm 终于发版了，搞到后半夜三点多，才疲惫的打车回家。回去的路上一直听周董的歌，诺发的北京，夜深人静，只剩下霓虹灯闪烁，窗外的夜色飞逝，就像一去不回的过往。周董的歌声响起，旋律熟悉，耳机里荡漾的不光有歌，更是一段回忆。</p>
<p>余光中说：</p>
<blockquote>
<p>人生有许多事情，正如船后的波纹，总要过后才觉得美的</p>
</blockquote>
<p>世上本没有思念的，只是因为有了别理。人们本没有人生，只是因为有了回忆。</p>
]]></content>
      
        <categories>
            
            <category> 周志 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 独白 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[生成二维码]]></title>
      <url>http://chuanqiang.github.io/2017/12/16/%E7%94%9F%E6%88%90%E4%BA%8C%E7%BB%B4%E7%A0%81/</url>
      <content type="html"><![CDATA[<p>本文介绍了二维码的相关知识，并给出了通过 Java 和 jsp 两种方式来生成二维码的实例。</p>
<a id="more"></a>
<h2 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h2><ul>
<li>一维码：一维条码是由一组粗细不同、黑白（或彩色）相间的条、空及其相应的字符（数字字母）组成的标记，即传统条码。</li>
<li>二维码：用某种特定的几何形状按一定规律在平面（二维方向）上分布的条、空相间的图形来记录数据符号信息。</li>
</ul>
<p>二维条码有许多不同的码制，就码制的原理而言，通常分为三种类型：</p>
<ul>
<li>线性堆叠式二维码</li>
<li>矩阵式二维码</li>
<li>邮政码</li>
</ul>
<p>其中，矩阵式二维码为主要使用类型：<br><img src="http://oeckzejn4.bkt.clouddn.com/20171216151343701753361.png" alt="矩阵二维码类型.png"></p>
<h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><p><img src="http://oeckzejn4.bkt.clouddn.com/20171216151343709448054.png" alt="优点.png"></p>
<h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><ul>
<li>二维码技术成为手机病毒、钓鱼网站传播的新渠道</li>
<li>信息泄露</li>
</ul>
<h4 id="目前流行的三大国际标准："><a href="#目前流行的三大国际标准：" class="headerlink" title="目前流行的三大国际标准："></a>目前流行的三大国际标准：</h4><ul>
<li>PDF417：不支持中文</li>
<li>MD：专利未公开，需支付专利费用</li>
<li>QR code：专利公开，支持中文</li>
</ul>
<p>其中，QR code 是日本 Denso 公司研制一种矩阵二维码符号码，全称是 Quick Response Code。</p>
<p>相比其他二维码，具有识别读取速度快，数据密度大，占用空间小的优势</p>
<p><img src="http://oeckzejn4.bkt.clouddn.com/20171216151343722087111.png" alt="结构.png"></p>
<h2 id="二、生成二维码的方法"><a href="#二、生成二维码的方法" class="headerlink" title="二、生成二维码的方法"></a>二、生成二维码的方法</h2><h3 id="1-Java-后台通过-zxing"><a href="#1-Java-后台通过-zxing" class="headerlink" title="1.  Java 后台通过 zxing"></a>1.  Java 后台通过 zxing</h3><p>ZXing Project： <a href="https://github.com/zxing" target="_blank" rel="external">https://github.com/zxing</a><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> com.google.zxing.*;</div><div class="line"><span class="keyword">import</span> com.google.zxing.client.j2se.BufferedImageLuminanceSource;</div><div class="line"><span class="keyword">import</span> com.google.zxing.client.j2se.MatrixToImageWriter;</div><div class="line"><span class="keyword">import</span> com.google.zxing.common.BitMatrix;</div><div class="line"><span class="keyword">import</span> com.google.zxing.common.HybridBinarizer;</div><div class="line"><span class="keyword">import</span> com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;</div><div class="line"></div><div class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</div><div class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</div><div class="line"><span class="keyword">import</span> java.io.File;</div><div class="line"><span class="keyword">import</span> java.nio.file.Path;</div><div class="line"><span class="keyword">import</span> java.util.HashMap;</div><div class="line"><span class="keyword">import</span> java.util.Map;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment">* <span class="doctag">@Description</span>:二维码相关</span></div><div class="line"><span class="comment">* <span class="doctag">@Authod</span>:zhang_cq</span></div><div class="line"><span class="comment">* <span class="doctag">@Date</span>:2017/12/16 下午4:38</span></div><div class="line"><span class="comment">*/</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CreateQRCodeUtil</span> </span>&#123;</div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">	 * <span class="doctag">@Description</span>:生成二维码</span></div><div class="line"><span class="comment">	 * <span class="doctag">@Authod</span>:zhang_cq</span></div><div class="line"><span class="comment">	 * <span class="doctag">@Method</span>:createQRCode</span></div><div class="line"><span class="comment">	 * <span class="doctag">@Date</span>:2017/12/16 下午4:38</span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">createQRCode</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">int</span> width = <span class="number">300</span>;</div><div class="line">		<span class="keyword">int</span> height = <span class="number">300</span>;</div><div class="line">		String format = <span class="string">"png"</span>;</div><div class="line">		String content = <span class="string">"www.qixiantong.info"</span>;</div><div class="line">		Path file = <span class="keyword">new</span> File(<span class="string">"/Users/zhangchuanqiang/IdeaProjects/springboot/target/img.png"</span>).toPath();</div><div class="line"></div><div class="line">		<span class="comment">// 定义二维码的参数</span></div><div class="line">		Map hints = <span class="keyword">new</span> HashMap();</div><div class="line">		hints.put(EncodeHintType.CHARACTER_SET, <span class="string">"utf-8"</span>); <span class="comment">// 编码格式</span></div><div class="line">		hints.put(EncodeHintType.ERROR_CORRECTION, ErrorCorrectionLevel.M); <span class="comment">// 纠错等级</span></div><div class="line">		hints.put(EncodeHintType.MARGIN, <span class="number">2</span>); <span class="comment">// 边框</span></div><div class="line"></div><div class="line">		<span class="keyword">try</span> &#123;</div><div class="line">			BitMatrix bitMatrix = <span class="keyword">new</span> MultiFormatWriter().encode(content, BarcodeFormat.QR_CODE, width, height, hints);</div><div class="line">			MatrixToImageWriter.writeToPath(bitMatrix, format, file);</div><div class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">			e.printStackTrace();</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">	* <span class="doctag">@Description</span>:读取二维码</span></div><div class="line"><span class="comment">	* <span class="doctag">@Method</span>:ReadQRCode</span></div><div class="line"><span class="comment">	* <span class="doctag">@Authod</span>:zhang_cq</span></div><div class="line"><span class="comment">	* <span class="doctag">@Date</span>:2017/12/16 下午4:58</span></div><div class="line"><span class="comment">	*/</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ReadQRCode</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">try</span> &#123;</div><div class="line">			MultiFormatReader formatReader = <span class="keyword">new</span> MultiFormatReader();</div><div class="line">			File file = <span class="keyword">new</span> File(<span class="string">"/Users/zhangchuanqiang/IdeaProjects/springboot/target/img.png"</span>);</div><div class="line">			BufferedImage image = ImageIO.read(file);</div><div class="line">			BinaryBitmap binaryBitmap = <span class="keyword">new</span> BinaryBitmap(<span class="keyword">new</span> HybridBinarizer(<span class="keyword">new</span> BufferedImageLuminanceSource(image)));</div><div class="line">			<span class="comment">// 定义二维码的参数</span></div><div class="line">			Map hints = <span class="keyword">new</span> HashMap();</div><div class="line">			hints.put(EncodeHintType.CHARACTER_SET, <span class="string">"utf-8"</span>); <span class="comment">// 编码格式</span></div><div class="line">			Result result = formatReader.decode(binaryBitmap, hints);</div><div class="line">			System.out.println(<span class="string">"解析结果："</span> + result.toString());</div><div class="line">			System.out.println(<span class="string">"二维码格式类型："</span> + result.getBarcodeFormat());</div><div class="line">			System.out.println(<span class="string">"二维码格式内容："</span> + result.getText());</div><div class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">			e.printStackTrace();</div><div class="line">		&#125;</div><div class="line"></div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">		ReadQRCode();</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<ol>
<li>页面通过 jquery.qrcode.js 生成<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>生成二维码<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"&lt;%=request.getContextPath()%&gt;/javascripts/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"&lt;%=request.getContextPath()%&gt;/javascripts/jquery.qrcode.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">生成的二维码如下：<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"qrcode"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">    jQuery(<span class="string">'qrcode'</span>).qrcode(<span class="string">"www.qixiantong.info"</span>);</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ol>
<p>相关 jar 包和 js 的分享如下：</p>
<blockquote>
<p><a href="https://pan.baidu.com/s/1dF1x1kP" target="_blank" rel="external">百度云链接</a></p>
<p>密码 ：crif</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 工具 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 二维码 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第十九周 - Bear 和英语学习]]></title>
      <url>http://chuanqiang.github.io/2017/12/10/%E7%AC%AC%E5%8D%81%E4%B9%9D%E5%91%A8%20-%20Bear%20%E5%92%8C%E8%8B%B1%E8%AF%AD%E5%AD%A6%E4%B9%A0/</url>
      <content type="html"><![CDATA[<p>一款软件的跨平台性将会是我使用它与否的一个理由，尤其是在 PC 端和移动端的无缝使用。随着移动设备的进步和性能的提升，移动办公和处理事情已经成了不可或缺的一部分。基于这个前提，寻找一款好的文本编辑类的 APP 就不那么容易，为此我选择了 Bear，文本编辑类的瑞士军刀。</p>
<a id="more"></a>
<p>前段时间，购买了 Bear 会员，为的就是能够和 Mac 版本的实时同步，无缝使用，但是后来发现手机端和 mac 端无法同步。这是什么鬼，一阵折腾，但也没起什么作用。无奈只能试着给开发者发邮件反馈问题，看能不能得到些帮助。本来是没有抱希望的，毕竟是国外的开发者，不知道售后做的咋样。以国内的经验来看是多半没什么作用。出乎意料的是，我很快收到了回复，还给了一些建议，不过没有什么作用。我不甘心，又回复邮件，那边建议我把 Bear运行的日志文件发过去，让那边的工程师看看，于是我就发了过去，过了几天，收到了回复，对方很友好的说了对这个问题的关注，并且给了一个办法，把同步的文件删掉，再重启 Bear。按照他的方式，果然成功了。本来不抱希望的事情得到了解决，自然十分高兴。<br><img src="http://oeckzejn4.bkt.clouddn.com/20171210151290642014368.png" alt="Bear 回复邮件.png"><br>通过这个小事情，也有几点思考:</p>
<ol>
<li>遇到问题不能放弃，先想方设法的去解决，凡事都要去试试行不行。</li>
<li>对国外APP开发者的服务工作刮目相看。包括之前的亚马逊的反馈都能看出来，国外这批互联网公司，对于用户的反馈还是十分重视的，从Bear回复邮件的措辞和意见叙述的清晰调理，还有礼貌的用语，都能看出这家公司的文化和专业。</li>
<li>英语的重要性。这个问题愈来愈感到急迫。英语不好可以说是一个屏障，一个限制你和世界沟通的屏障。所以，拾起英语</li>
</ol>
<h3 id="学好英语的好处"><a href="#学好英语的好处" class="headerlink" title="学好英语的好处"></a>学好英语的好处</h3><p>学好英语你可以直接阅读各种经典书籍的原文版。程序员这个行业之所以特殊，就是因为它所有的技术全部来自欧美，所以最主流，最新鲜，最正确的技术文章都是英文，大部分还没有译本，有些译文还比较差。与其等待别人的翻译，不如直接阅读原文。</p>
<p>学好英语你可以直接观看来自世界最著名学校的网上课程或编程高手的教学视频。较之汉语教学视频，不知道高到哪里去了，而这些视频通常都没有任何翻译可寻。</p>
<p>学好英语你可以和世界各地的程序员在Stack overflow，Reddit和Github进行交流，以码会友。</p>
<p>学好英语，你的代码中变量的命名不会太差，让人摸不着头脑（甚至有人变量使用汉语拼音进行命名）。假设别人写一个方法演示反射的使用，你看到那方法名不是ReflectionDemo，甚至不是ShowReflection，而是FanSheYanShi时，你什么心情？</p>
<p>学好英语也可以为你的前途打开一扇门，你可以考虑到大陆以外工作生活，领略不同于神州大地的风土人情，感受西方文化。</p>
<h3 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h3><blockquote>
<p><a href="https://www.cnblogs.com/hdic/p/5996282.html" target="_blank" rel="external">程序员必须掌握的600个英语单词</a><br><a href="https://www.cnblogs.com/hdic/p/5996282.html" target="_blank" rel="external">https://www.cnblogs.com/hdic/p/5996282.html</a><br>浅谈程序员的英语学习<br><a href="https://www.cnblogs.com/haoyifei/p/5687235.html" target="_blank" rel="external">https://www.cnblogs.com/haoyifei/p/5687235.html</a><br>程序原则怎样提高英语阅读水平<br><a href="https://www.zhihu.com/question/20306040" target="_blank" rel="external">https://www.zhihu.com/question/20306040</a></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 周志 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 英语 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[稀缺]]></title>
      <url>http://chuanqiang.github.io/2017/12/09/%E7%A8%80%E7%BC%BA/</url>
      <content type="html"><![CDATA[<h2 id="关于本书"><a href="#关于本书" class="headerlink" title="关于本书"></a>关于本书</h2><p>本书告诉我们为什么穷人会越来越穷，富人会越来越富。带我们了解稀缺心态是如何导致贫困的，如何做才能摆脱贫困。</p>
<a id="more"></a>
<h2 id="关于作者"><a href="#关于作者" class="headerlink" title="关于作者"></a>关于作者</h2><p>塞德希尔·穆来纳森，美国哈佛大学经济学教授，麦克阿瑟天才奖获得者。<br>埃尔德·沙菲尔，普林斯顿大学的心理学教授。</p>
<h2 id="核心内容"><a href="#核心内容" class="headerlink" title="核心内容"></a>核心内容</h2><blockquote>
<p>一、稀缺的构成；<br>二、稀缺的危害；<br>三、防止稀缺产生的方法</p>
</blockquote>
<p><img src="http://oeckzejn4.bkt.clouddn.com/20171209151282955162905.jpg" alt="稀缺 导图.jpg"></p>
<h3 id="一、稀缺的构成"><a href="#一、稀缺的构成" class="headerlink" title="一、稀缺的构成"></a>一、稀缺的构成</h3><p>稀缺不是客观上的物质稀缺，而指一种会让人产生急迫感的稀缺心态。稀缺可以让我们更有效地完成任务，带来专注红利，在短时间内集中精力爆发出高度的注意力，让我们高产出地工作。<br>虽然稀缺短期内能够带来一定的好处，但是长时间处在稀缺心态中，会把一个人拖向贫穷，进入一个匮乏的恶性循环。</p>
<h3 id="二、稀缺的危害"><a href="#二、稀缺的危害" class="headerlink" title="二、稀缺的危害"></a>二、稀缺的危害</h3><p>稀缺会产生四种效应：</p>
<p>####1. 稀缺会导致管窥效应<br>面对稀缺，我们就更倾向于把注意力集中在最需要关注的事儿上面，这么一来，我们往往会忽视那些真正重要的事情。<br>【案例】<br>美国的消防员80%都是死在了去火场的路上，因为没有系安全带，在急转弯的时候被甩出车外殉职的。他们在接到出警通知的时候，就会进入时间稀缺的状态，他们要在很短的时间里做大量准备工作，导致一些重要但平常的事情被疏忽了。<br>管窥效应会改变我们做出决策的方式。<br>【案例1】<br>因为工作任务多而中断每天跑步，在这个稀缺状态下，就会做出损害长期价值的决定。<br>【案例2】<br>一个思想实验，请你想一想，除了牛奶之外，还有哪些白色的东西？你想出的答案可能不会超过十种。但是换一种问法“什么东西是白色的”，答案就简单得多。因为限定词“牛奶”会抑制你的想法。</p>
<h4 id="2-稀缺会导致借用"><a href="#2-稀缺会导致借用" class="headerlink" title="2. 稀缺会导致借用"></a>2. 稀缺会导致借用</h4><p>稀缺会导致一个人习惯性地透支未来的资源，长期来看，借用会让一个人更加匮乏。<br>【案例】<br>透支信用卡、借高利贷都是在透支未来的金钱，来解决当前的紧急状况。<br>时间也经常被借用，这周的工作没有做完要拖到下一周，下周的事再拖到下下周，一直拖会长期处在稀缺状态里，让人彻底忽视时间管理、精力管理等提高工作效率的方法。</p>
<h4 id="3-稀缺会导致没有余闲"><a href="#3-稀缺会导致没有余闲" class="headerlink" title="3. 稀缺会导致没有余闲"></a>3. 稀缺会导致没有余闲</h4><p>余闲就是我们剩余下来的、没有利用上的时间和空间。穷人为什么感觉生活特别累，是因为权衡的思维过程太多，导致没有余闲。<br>【案例】<br>有一家医院共有32间手术室，每年接待3万多次手术，手术室经常不够用。为了应付突发性手术，医院就要将安排好的手术往后推迟，医生每天做手术都是在补上个礼拜留下的、没做完的手术，整个医院就一直处在一种紧急的稀缺状态。顾问建议他们留出一间备用手术室，专门用来应对突发性的手术，结果医院的手术的接诊率上涨了5%，手术失误率也是大幅下降。<br>手术室的稀缺并不是空间的稀缺，而是没有能力用现有的手术室来处理紧急情况。这种状态和负债累累的穷人特别像，穷人的抗风险能力特别低，容易进入稀缺状态。<br>稀缺的本质就是没有余闲，余闲可能会让一个人的效率不是那么高，但是它带来的正向收益却是非常高的，是一种奢侈的心理享受。任何系统留一定的余闲都非常重要，它不是对资源的浪费，而是让系统更加高效运转的保证。</p>
<h4 id="4-稀缺会引发带宽的不足"><a href="#4-稀缺会引发带宽的不足" class="headerlink" title="4. 稀缺会引发带宽的不足"></a>4. 稀缺会引发带宽的不足</h4><p>带宽是我们的计算能力、关注能力、决策能力、执行能力和抵制诱惑能力的统称。我们平时最多只能关注七件事，如果超过了七件事就会引起带宽负担。而穷人之所以穷，很大程度上就是因为带宽不足，他们通常会忽视一些很重要的事情。<br>【案例】<br>实验结果发现，美国的穷人普遍更胖，他们也不怎么让孩子接受教育，不会去买保险，也不会打疫苗，不会定期储蓄，更不会投资。这些事对他们来说不是不重要，而是穷人每天遇到的事情占据了大多数的带宽，没有精力去关注长期来说很重要的事。<br>带宽不足还会引起他们认知能力的下降。<br>【案例】<br>实验者第一次测试，让他们什么都不想地去做测试题，第二次测试提前对他们进行诱导，让他们想一想自己的经济状况，让他们关注自己缺乏的东西。这两组测试结果显示，第一组的分数要高很多。</p>
<h3 id="三、防止稀缺产生的方法"><a href="#三、防止稀缺产生的方法" class="headerlink" title="三、防止稀缺产生的方法"></a>三、防止稀缺产生的方法</h3><h4 id="1-节约带宽"><a href="#1-节约带宽" class="headerlink" title="1. 节约带宽"></a>1. 节约带宽</h4><p>减少日常生活中需要做决定的琐事，不要为了省钱去浪费大把的时间，不要老想着自己缺的东西，把注意力放在真正值得的事情上。</p>
<h4 id="2-留有余闲"><a href="#2-留有余闲" class="headerlink" title="2. 留有余闲"></a>2. 留有余闲</h4><p>金钱上再穷也要留一小部分出来投资，可以定期储蓄，也可以投资在学习上，提高自己的技能和认知水平，尽量不要透支、不要借用，不到万不得已千万不要借高利贷。时间上再紧张也不要透支未来的时间，当天的工作当天完成，时刻要记得未来还有未来的事情要做。<br>别把自己的工作排得太满，按时的休息是让自己保持持续高效必须要做的事情。</p>
<h4 id="3-设置提醒"><a href="#3-设置提醒" class="headerlink" title="3. 设置提醒"></a>3. 设置提醒</h4><p>通过设置提醒把重要的事情拉回到视野当中，避免忽视重要但不紧急的事情。<br>【案例】<br>想要健身可以设置定时提醒；想要存钱可以设置从工资卡中自动转账储蓄。</p>
<h2 id="金句"><a href="#金句" class="headerlink" title="金句"></a>金句</h2><ol>
<li>虽然稀缺短期内能够带来专注红利，但是如果长时间处在这种稀缺心态中，并不是什么好事儿，它会把一个人拖向贫穷，进入一个匮乏的恶性循环。</li>
<li>一旦我们面对稀缺，我们就更倾向于把注意力集中在最需要关注的事儿上面，这么一来，我们往往会忽视那些能把我们从贫困中拉出来的重要事情。</li>
<li>稀缺会导致管窥效应，让我们只关注眼前狭窄范围内的紧急事情，从而一直陷入一个紧急的状态。</li>
<li>任何系统留一定的余闲都非常重要，它不是对资源的浪费，而是让系统更加高效运转的保证。</li>
<li>稀缺的资源一点都不可怕，这个世界不缺资源，最可怕的是稀缺心态。</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 书摘 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 管理 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[食面]]></title>
      <url>http://chuanqiang.github.io/2017/12/03/%E9%A3%9F%E9%9D%A2/</url>
      <content type="html"><![CDATA[<p>一直以来，我和我的同事小伙伴们都在极力寻找价格合适，饭菜可口的午餐去处。奈何公司周遭『穷山恶水』，满意的甚少。为此我们还成立了一个『饭否』群，以研讨午餐之去处而适时结伴往之。</p>
<a id="more"></a>
<p>吾常去之处有『安贞门地下美食城』和『大亨小厨』。前者是一个在地下的大排档，四周是各色饮食，中间自由找位子落座而食。优点在于价格便宜，选择丰富；缺点是没有wifi，气氛喧嚣和距离远。后者是一个饭店，距离不远，环境尚可，有米粥和泡菜相赠。缺点是适合价位只有盖饭，菜色单一。食之日久，味之寡淡，益欲寻摸一新天地，变换口味，犒劳肠胃，振兴精神。<br><img src="http://oeckzejn4.bkt.clouddn.com/20171203151227214173965.jpg" alt="老大同刀削面.jpg"><br>然苍天庇佑，功夫不负，偶得一尚佳去处，夹道数百步，穿过车水马龙的街道，过一个路口，方窥见一面馆，招牌熠熠，『大同人家』几个豆大的字苍劲有力。老木门两旁一副对联悬挂：『领悟家乡风味，重温故里人情』。里面人声鼎沸，面香扑鼻，格调质朴，方凳方桌。待就坐，点『羊杂面』一碗，豆干两条，卤蛋一枚，盛上店家免费提供的面汤一碗，泡菜一碟，大蒜多头，丰富实惠，顿生好感。面呈毕，香味四喷，碗大面足，羊杂充沛。忙尝之，味道浓郁，汤汁够味，面骨劲道，羊杂鲜嫩，放上辣子陈醋，拌宜极匀，汤红面白，油而不腻。吃一口，浑身发热，直冲脑际，不禁让人大呼一口：够劲！</p>
<p>呲溜声响，常有汤汁飞溅，热辣逼人，面香为底，羊膻香附。古语道:『女子不骚，羊不膻，皆无味』，羊杂之香，自成风味。面食毕，然精粹之物尽在汤中，吸一口，各色味道，划过喉咙，掠过肠胃，使背脊发热，心底生暖。玄冬猛寒，冷风凛冽，涕冻鼻中，霜成口外。充虚解战驱寒保暖，此面为最。</p>
<p>始于碌碌饥肠盼等其面，止于意犹未尽咀咂其汤。生活如水，无需饕餮，仅朋友几许，谈笑有伴，闲适午间，于平凡之间，多几许滋味即可。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 美食 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第十八周 - 理想]]></title>
      <url>http://chuanqiang.github.io/2017/12/02/%E7%AC%AC%E5%8D%81%E5%85%AB%E5%91%A8%20-%20%E7%90%86%E6%83%B3/</url>
      <content type="html"><![CDATA[<p>昨晚没睡好，早上醒来莫名的焦躁。本来打算上午调个休算了，但是想到尚未解决的 Bug，只好一咬牙出了门。风出奇的大，伴着入冬的凛冽，不仅想起杜甫那句『八月秋高峰景风怒号，卷我屋上三重茅』，尽管现在适值冬季。</p>
<a id="more"></a>
<p>终于到了八宝山地铁站，破旧的一号线是从西到东横穿北京中部，是中国最早开通的铁路线路，起初是为军事战略防备、防空而建的。在公主坟进行十号线换乘的时候，听到广播喊十号线列车事故，行车缓慢。一查公交过不知狗年马月了，无奈只能挨着人群的拥挤，上了地铁。十号线中途停了好一会，百无聊赖的听着网易云音乐里的歌，刚好放着赵雷的『理想』，他的烟嗓呲着毛边却干净质朴。歌声里满是『理想的丰满和现实的无奈』，看着周围一车人低头玩着手机，满面的麻木和迟到的叹息，感觉这歌好应景。<br><img src="/image/IMG_2297.JPG?r=61" alt=""><br>一首歌，当和你心情匹配的时候才最为好听。旋律婉转，诉说着城市的流彩繁华和自己的微不足道。</p>
<blockquote>
<p>阳光之中 到处可见奔忙的人们<br>被拥挤着 被一晃而飞的光阴忽略过</p>
</blockquote>
<p>听着听着，歌声穿过内心的柔软，我忍不住写下我的『理想』：</p>
<blockquote>
<p>十号线的地铁上<br>满载迟到的叹息<br>或许他只是停下来<br>让你静心想想</p>
<p>欢乐总在下班后的晚上<br>虚拟的世界才有翱翔<br>偶尔失眠<br>才想起角落里的理想</p>
<p>理想总是离乡<br>霓虹灯下的影子微茫<br>城市繁华<br>却来不及仔细端详</p>
<p>岁月总是匆忙<br>床头的闹钟在响<br>日复一日<br>这样的日子可是曾经希望</p>
<p>生命永远向上<br>在黎明和夜里奔忙<br>时刻不息<br>生活总要看着前方</p>
<p>我们仍在路上<br>希望我们血气方刚<br>不去管它<br>天寒地动，路远马亡</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 周志 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 理想 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第十七周 - 吃鸡游戏]]></title>
      <url>http://chuanqiang.github.io/2017/11/26/%E7%AC%AC%E5%8D%81%E4%B8%83%E5%91%A8%20-%20%E5%90%83%E9%B8%A1%E6%B8%B8%E6%88%8F/</url>
      <content type="html"><![CDATA[<p><img src="http://oeckzejn4.bkt.clouddn.com/20171126151170073157412.png" alt="吃鸡游戏"></p>
<a id="more"></a>
<p>最近有一个游戏很火，叫做『绝地求生-大逃杀』，俗称吃鸡，是 Bluehole与《H1Z1》、《武装突袭3》『大逃杀』模式制作人Playerunknown联合开发的第一人称射击游戏，采用虚幻4引擎制作。这款游戏是一款大逃杀类型的游戏，每一局游戏将有最多100名玩家参与，他们将被投放在绝地岛(battlegrounds)上，在游戏的开始时所有人都一无所有。玩家需要在岛上收集各种资源，在不断缩小的安全区域内对抗其他玩家，让自己生存到最后。本作拥有很高的自由度，玩家可以体验飞机跳伞、开越野车、丛林射击、抢夺战利品等玩法，小心四周埋伏的敌人，尽可能成为最后1个存活的人。好玩是肯定的，但是游戏和加速器需要购买，并且对电脑配置要求很高，望着我身边身材纤薄的 mac 叹了口气。</p>
<p>接着这种游戏的模式被很快的引入了国内，腾讯、网易等一大批游戏厂商迅速发行了一系列的『吃鸡』游戏，但都选择移植到了手游上，这或许是手游的开发难度远远低于PC开发，能更快的拿下市场，然后再进军PC端。纵观国内的游戏厂商，它们出的这类游戏，完全是在效仿『绝地求生』，不论是在游戏规则和玩法都和绝地求生基本相同。唯一不同且可笑的是，他们都被本土化了，为了通过审批，加入了一些弘扬社会主义核心价值观的主题。国内的效仿者也是良莠不齐的，我试过网易和腾讯出的两款，最终选择了腾讯家的『穿越火线』，里面新增的荒岛模式还是不错的，画面效果尚可，可玩性很高。游戏是很多人生活的一部分，从孩童时期，人类就痴迷于游戏，这种天性植根于我们内心深处，所以绝大部分人手机上总会装个游戏。对于商家来说，这是很大的一块蛋糕。其实腾讯的收入很大一部分都是来自游戏，用户为游戏付费的行为比重一直在软件付费行为中占有相当大的比重，爆款游戏带来的利润往往很是惊人。</p>
<p>对于这次的反应，国内游戏厂商的反应可谓兵贵神速，比的就是抢先先机，迅速获取用户，占领市场，然后再优化质量。从这个意义上说，时间的优先级可能要高于游戏质量的优先级。不过从首发的几家公司来看，游戏的质量也是超出意料的，这一方面反映出像网易，腾讯这些企业巨头的技术实力雄厚，另一方面也看出他们敏锐的嗅觉和市场的前瞻性，我相信他们肯定不是从『大逃杀』火起来之后才开始研发创作的，他们肯定时刻关注行业动态，有风吹草动的时候，就已经分析市场，进行布局和开发了，否则不可能在这么短的时间内发行。这种警觉和面对猎物的迅速反应充分映射出了互联网企业中的狼性特质。</p>
]]></content>
      
        <categories>
            
            <category> 周志 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 游戏 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第十六周 - 双十一与消费主义]]></title>
      <url>http://chuanqiang.github.io/2017/11/18/%E7%AC%AC%E5%8D%81%E5%85%AD%E5%91%A8%20-%20%E5%8F%8C%E5%8D%81%E4%B8%80%E4%B8%8E%E6%B6%88%E8%B4%B9%E4%B8%BB%E4%B9%89/</url>
      <content type="html"><![CDATA[<p>双十一拉下了帷幕，一个本应属于单身人士来纪念自己单身生活的节日，硬是被商家炒成了疯狂购物节和剁手日。铺天盖地的双十一广告早已盖过光棍节的本意，演变成商业消费的狂欢。</p>
<a id="more"></a>
<p>今年的天猫双十一交易额冲到1682亿元，京东猛追。与之同步的还有各种峰值和交易笔数的刷新。但 京东正在双十一这个日子猛烈追赶阿里。这是京东第一年公布双十一金额，1271亿元，往年京东只是公布订单增长率和销售增长率。不过，双方对于双十一交易的统计口径有所差异。京东公布的下单金额是指11月1日开始的双十一期间（11天）；而天猫双十一的金额指的是11月11日当天。这一度引起了京东和阿里巴巴两位高管关于数字的隔空争论。</p>
<p>今年的双十一又一次创造了新零售史上的奇迹，造成这一辉煌结果的原因有很多，其中很重要的是互联网技术在零售行业中的应用和国民经济发展过程中消费主义的兴盛。</p>
<p>伴随着电商的兴起，线上消费成了人们日常消费的主要内容，它以充分的便捷性赢得了人们的青睐。我们在电脑或者手机上动动手指头就能买到心仪的物品，节省了时间和交通成本，并且伴随着快递行业的兴起，我们可以足不出户很方便的进行消费行为，并且完善的商品售后机制也保障了我们购买商品的质量。电商也有足够的号召力和影响力来举办这么一次声势浩大席卷全国的集体消费活动。</p>
<p>经济的发展必然会伴随着消费主义的兴起，反过来消费主义影响下持续增加消费活动有助于经济的意识形态。创造出在生活态度上对商品的可欲及需求可以提高消费并作用于经济，所以国家是提倡消费的。但作为个体的我们，面对这种消费主义浪潮，应该怎么办？之前看过一句很极端的话：买家和卖家的关系，就如同骗子和傻子的对话。买的永远没有卖的精，当我们的消费欲望被商人拿捏住，被轰轰烈烈的进行炒作，我们便如同打了鸡血一般冲向屠宰场，面对营营小利，浪费大量的时间和经历，在网上购买一些我们根本不是很需要的东西——如果某个东西你需要等到打折促销再买，那么多半情况是你根本不需要这个东西。这种得不偿失的行为满足了我们的消费快感和一定的虚荣心，是的，往往他们会很有优越感的自嘲为『剁手』，假装的哭诉自己多么『败家』，实则为畸形的炫耀。这是经济为导向的社会里总是会出现的风气。然而，我相信理智的人总能保持自己的本心和生活价值观的独立，不轻易被煽动，能主动对抗消费主义的导向的论述。正如不鸟万如一所说：</p>
<blockquote>
<p>消费是每个人都躲不开的行为，正是因为躲不开，才更应该引起警惕。从购物可以让人释放压力解除精神紧张这一点上说，它的确具备宗教的部分功能，单另一方面，没有人认为购物就是一劳永逸的仙丹，他只具备相当短暂的临时功效。这种每个人不得不做，单本质上又是徒劳的行为就是现代人的原罪之一。原罪，很可能是人一辈子都摆脱不了的东西，单你在谈论这个原罪时，缺乏起码的自省，反倒洋洋自得，甚至顾盼神飞，那么人类什么时候才能获得救赎呢？一边消费，一边反对关于消费主义的论述，恰恰就是一种对抗。  </p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 周志 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 观点 </tag>
            
            <tag> 消费主义 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[被掩埋的巨人 - 石黑一雄]]></title>
      <url>http://chuanqiang.github.io/2017/11/18/%E8%A2%AB%E6%8E%A9%E5%9F%8B%E7%9A%84%E5%B7%A8%E4%BA%BA%20-%20%E7%9F%B3%E9%BB%91%E4%B8%80%E9%9B%84/</url>
      <content type="html"><![CDATA[<p><img src="http://oeckzejn4.bkt.clouddn.com/20171118151100501644717.jpg" alt="被掩埋的巨人.jpg"></p>
<a id="more"></a>
<h2 id="作者简介"><a href="#作者简介" class="headerlink" title="作者简介"></a>作者简介</h2><p>石黑一雄，日裔英国小说家。1954年11月8日，石黑一雄生于日本长崎，1960年随家人移居英国，先后毕业于肯特大学和东安格利亚大学，并于1982年获得英国国籍。1983年开始发表小说，其主要作品有《<a href="https://baike.baidu.com/item/%E7%BE%A4%E5%B1%B1%E6%B7%A1%E6%99%AF" target="_blank" rel="external">群山淡景</a>》、《<a href="https://baike.baidu.com/item/%E6%B5%AE%E4%B8%96%E7%94%BB%E5%AE%B6" target="_blank" rel="external">浮世画家</a>》和《<a href="https://baike.baidu.com/item/%E9%95%BF%E6%97%A5%E5%B0%86%E5%B0%BD" target="_blank" rel="external">长日将尽</a>》等。曾获得1989年布克奖、2017年<a href="https://baike.baidu.com/item/%E8%AF%BA%E8%B4%9D%E5%B0%94%E6%96%87%E5%AD%A6%E5%A5%96" target="_blank" rel="external">诺贝尔文学奖</a>、大英帝国勋章、法国艺术及文学骑士勋章等多个奖项，与鲁西迪、<a href="https://baike.baidu.com/item/%E5%A5%88%E4%BF%9D%E5%B0%94" target="_blank" rel="external">奈保尔</a>被称为“英国文坛移民三雄”。</p>
<h2 id="内容简介"><a href="#内容简介" class="headerlink" title="内容简介"></a>内容简介</h2><p>石黑将故事伪托于英国后亚瑟王时代的传说。不列颠人埃克索夫妇出门寻子，路遇两位屠龙骑士：不列颠亚瑟王骑士高文，和撒克逊人维斯坦。他们所要讨伐的母龙魁瑞格常年喷吐一种能致人失忆的迷雾。旅途中，由于海拔渐高迷雾趋薄，加之交谈与行动上的磨合，众人的记忆开始复苏——— 原来所谓亚瑟王留下的两族和谐共存的历史遗产完全是假象，真实状况是不列颠人通过迷雾掩盖了屠杀撒克逊人进而取得统治权的血腥事实。于是众人在屠龙问题上产生分歧，最终以拔剑相向收场。</p>
<h2 id="书摘"><a href="#书摘" class="headerlink" title="书摘"></a>书摘</h2><ul>
<li><p>需要两人之间，有罕见的深爱紧紧相连。偶尔会有，这我不否认，所以如果遇到夫妻，甚至是还没有结婚的情人，要我们渡过去，我们就有责任仔细盘问他们。判断两人之间的爱是不是深到可以一起过去，这是我们的责任。</p>
</li>
<li><p>你说得对，我有责任盘问所有渡海上岛的人。如果像你说的那样，碰到的是一对夫妻，又自称深爱着对方，那我就必须让他们说出最珍贵的记忆。我先问一个，再问另外一个。两人要分开回答。这样，他们关系的实质就会显露出来。”</p>
</li>
<li><p>是啊，埃克索。可是，我又想，我们心里的感受，会不会像今天这雨滴一样呢？天上的雨早就停了，不过树上浸满了水，所以还有些雨滴落在我们身上。我在想，没有了记忆，就没有了源头，我们的爱会不会慢慢枯萎、死亡。”</p>
</li>
<li><p>“那是件斗篷，埃克索，和别的斗篷一样，这么多年肯定穿破啦。” “我们不是丢在哪儿了吗？也许丢在某块有阳光的石头上？”</p>
</li>
<li><p>他感觉好像站在冬天河面上的一艘船里，在浓雾中眺望，心里知道大雾随时会分开，露出前方陆地的清晰轮廓来。而且，当时他有一种恐惧感，与此同时却又感到好奇——或者是种比好奇更强烈、更阴暗的感觉——他心里坚定地告诉自己：“无论前方是什么，让我看看，让我看看。”</p>
</li>
<li><p>被人夺走那些记忆的感觉就像一个小偷晚上进来，拿走了我们最宝贵的东西。” “可迷雾笼罩着所有的记忆啊，好的坏的都包括。不是吗，夫人？” “我们也愿意让坏的记忆回来，哪怕会让我们哭泣，或者气得发抖。因为，那不就是我们共同度过的一生吗？”</p>
</li>
<li>“事情过去很久了，死者安息于地下，地上早已覆盖着怡人的绿草。年轻一代对他们一无所知。”“愚蠢啊，先生。蛆虫越活越肥，旧伤口怎么可能愈合？和平建立在屠杀与魔法师的骗术之上，怎么能够持久？我明白这是你虔诚的渴望，渴望你那些恐怖的往事像尘土一样消于无形。但是，它们却在泥土中蛰伏，像死者的白骨一样，等着人们发掘。”</li>
<li>你们有些人会有隆重的纪念碑，让活着的人记住你们受的罪。有些人只会有粗糙的木头十字架或者彩色石块，其他的人呢，就只能藏匿在历史的阴影中。<br>多少古老的仇恨将在这块土地上复活，谁又知道呢？我们只好希望上帝能找到办法，维系两族之间的纽带，可习俗与猜忌一直让我们难以团结。如果对土地和征服的新欲望，被巧舌之辈嫁接到古老的怨恨之上，谁知道会带来什么灾祸呢？</li>
</ul>
<h2 id="艺术特色"><a href="#艺术特色" class="headerlink" title="艺术特色"></a>艺术特色</h2><p>这本小说的叙事口吻呈现出这样两个方面，一是纯粹的失忆，一是刻意的失忆。这两种失忆相互交织，在石黑优雅、细腻的语言刻画下，显得恍兮惚兮、错综复杂，又居心叵测、玄机重重。高文向不列颠领主告密，读者原以为他担心维斯坦屠龙会打草惊蛇，顺便撩走头功，不想他正是阻止屠龙的最大幕后黑手。维斯坦拯救和保护同族男孩埃德温，不料他看中的是男孩的“诱龙”体质。埃德温听任被利用，其实他的本意是借助维斯坦拯救被不列颠人掳走的母亲。甚至恩爱如埃克索这样的夫妇，当记忆恢复有把两人早年糗事一件件打捞上来这样的危险时，也变得支吾其词，同床异梦。[1] </p>
<p>在整个写作过程中，石黑一雄强压内心的愤怒，只以平淡的语气来讲述，但他忘不了作家的职责是说出真相并守护之。因此，字里行间自有一种沉郁的调子，拉扯着读者往历史的迷雾中奔去。比如他一直在追问，既然“我们的土地下面，埋着过去屠杀留下的遗骸”，为何我们不选择直面过去，而是遮遮掩掩地回避。显然回避于事无补，只不过是“为最邪恶的行为罩上面纱”。好比大雾之后一片朦胧，你以为看到了什么，其实什么也没有看到。换言之，杀戮之后本以为正义必将得到伸张，没想到却是被上帝那只无形的手轻轻一划，强行抹去了记忆，泯灭了恩仇。</p>
<p>然而恩仇并没有真正消失。于是，骑士维斯坦质问高文爵士的话，听起来就有了那么一点超越文本、超越历史的现实意味了。他一语中的地道出了战争（杀戮）的残酷：“我说的那些人走过了一条残暴之路，亲眼见过自己的孩子和亲人残肢断臂、惨遭蹂躏。他们经历了漫长的苦难，一路上死神就在身后……他们知道，他们终将面对自己的末日。他们知道，现在被抱在怀里的婴儿，不久将成为血淋淋的玩具，在这鹅卵石上被踢来踢去。他们知道，因为他们已经见过，他们是从那儿逃出来的。他们见过敌人烧杀劫掠，见过已经受伤、即将死去的年轻女孩，惨遭敌人轮奸。”[6]<br>在《被掩埋的巨人》中，石黑一雄展现出他对叙事的高度自觉。小说依照情节发展的不同阶段，准确地变换着相应的叙事节奏。在小说的开头，读者追随一对老夫妻来到公元六世纪左右的一座英国村庄，为了躲避危险，人们如矮人一样生活在地下，拒绝与外界发生任何联系。在这片土地上，每个人都患上了失忆症，无法记住几分钟以前的事，使得每个人都丧失了历史，时间似乎也已经停滞不前。此时的叙事节奏异常缓慢，读者能够模糊地感到故事中隐藏着某种危险、某种魔幻的东西，但却无法把握故事的基本轮廓，对应了小说人物只能生活在当下的情景。</p>
<p>而当老夫妻凭借脑海中对儿子的模糊记忆，决定离开村庄寻找儿子之后，叙事节奏也应和着冒险的开始而逐渐加快。伴随老夫妻遭遇撒克逊武士维斯坦、受伤的撒克逊少年以及高文爵士等人，小说像按了快进键似的，各种意外和冲突纷至沓来，事件的真相也渐渐从浓雾中浮现出来。原来，亚瑟王经过长时间的战争，终于击败撒克逊人，将和平带给了英格兰。为避免撒克逊人东山再起，亚瑟王决定对不列颠的异族村庄进行种族清洗，派人专门屠杀撒克逊的妇女儿童。事后，魔法师梅林担心不列颠人与撒克逊人会陷入持久的相互仇杀，让巨龙魁瑞格喷出“遗忘之雾”，使生活在英格兰山谷中的人只能记住眼前的事情，从而让两个对立的种族忘记了彼此之间的世仇。而神秘武士维斯坦的使命就是杀死巨龙，驱散“遗忘之雾”，鼓动撒克逊人向不列颠人寻衅复仇。</p>
<p>最终，维斯坦击败了守护魁瑞格的高文爵士，杀死了巨龙，曾经比邻而居、相安无事的不列颠人和撒克逊人将回忆起逝去的往事，陷入无止境的仇杀当中。在小说的结尾处，那对老夫妻要到一座小岛上寻找儿子，他们必须分别向摆渡人讲述生活中最甜蜜的事，只有讲了相同的故事，才能证明彼此真正相爱，共同登岛，否则就只能天各一方。可当这对相濡以沫的夫妻分别在记忆中打捞往事，浮现出的却是各种口角与冲突，他们是否讲述了相同的故事，他们能否携手渡海，安度晚年，成了小说留给读者的悬念。</p>
]]></content>
      
        <categories>
            
            <category> 书评 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 石黑一雄 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[关于信息泛滥和碎片化]]></title>
      <url>http://chuanqiang.github.io/2017/11/04/%E5%85%B3%E4%BA%8E%E4%BF%A1%E6%81%AF%E6%B3%9B%E6%BB%A5%E5%92%8C%E7%A2%8E%E7%89%87%E5%8C%96/</url>
      <content type="html"><![CDATA[<p>在后稀缺时代，信息泛滥，无用或低廉信息横行于网络，这就加大了我们甄别有用信息的难度，也阻碍我们吸收高质量信息的行为。</p>
<a id="more"></a>
<p>懒惰是人的天性，当我们习惯于刷微博、朋友圈、公众号的时候，我们只是被动接受信息，没有自己的思考，当然也提炼不出什么有价值的信息。更由于这些知识结构的碎片化，信息缺乏逻辑和上下文，让我们逐渐失去了深度思考的能力。深度思考是件难事，也是件需要时间和空间的事，它远远比迅速点开另一个同样标题很好玩、内容很逗比的标题的文章难得多也长得多——但这个时候，90%的人会选择点开下一个话题——你的浅薄之路也从此开始。</p>
<p>这也形成一个上瘾机制——瞬间点开新话题能让你获得“哇我懂了”的廉价快感，但看的信息越多，就见到越多牛人的思想高度，你却无法越无法深度思考。为了抵御这种焦虑，你只好继续打开更多窗口，见证更多顶峰，然后更多焦虑。</p>
<p>饮鸩止渴，一直到瘫痪。<br><img src="http://oeckzejn4.bkt.clouddn.com/20171104150978485193728.png" alt="两种学习方式"></p>
<p>知识如同砂砾，即使你拿回来一百万个砂砾，也只是沙漠，人们爱看的，是沙子集合成的金字塔——有组织的知识才是核心竞争力。有高度的知识，才有知识压强。当你具有三个能力: 在某个专业领域的专注力，与热点、痛点和经典结合的搜索力，以及重新架构的链接能力，你的金字塔才能盖的坚固高大。</p>
<p>我们应该抵御知识的碎片化，抵御的意思并不是不可以进行网络社交，刷微博看公众号，而是带着思考和主动性行进这一行为，让知识『零存整取』。</p>
<ol>
<li>学习的七点不是焦虑，而是问题<br>学习的起点不是某人在朋友圈晒的一本书、推荐的一个微信文、或者这个行业的一个经典教材引发你的焦虑，而应该是你真实遇到的一个问题：</li>
</ol>
<ul>
<li>通过不断的思考和对话，一直到能清晰的提出一个明确具体的问题——这时候，已经解决了一半。</li>
<li>把问题拆分出关键字，然后开始搜索认知资源。</li>
<li>找到你要到资源。</li>
</ul>
<ol>
<li><p>提升自我筛选能力，进行多余的知识剔除<br>信息爆炸时代，最重要的不是增加信息，而是筛选和删除信息。善于利用身边可以获取信息的渠道，衡量各个途径的成本和效率。这一问题也是需要经验和积累的。</p>
</li>
<li><p>721法则：留出足够多的时间练习、思考和讨论<br>行动学习理论认为，人要掌握一门技能，需要有10%的时间学习知识和信息，70%的时间练习和践行，还有20%的时间与人沟通和讨论。这个原则叫做721原则。<br>碎片化学习对于10%的信息接收非常有用，而剩下独处练习的70%和讨论的20%，则需要留出大量时间来系统学习——碎片化学习永远只是系统化学习的辅助。你需要留出足够多整块时间学习。</p>
</li>
<li><p>输出倒逼输入<br>如何能保证让自己思考有体系？输出倒逼输入。<br>你可以写文章、讲课、做PPT、做读书笔记、导图……只有一个要求——你的输出有结构。你要先搭好图纸，设计出一个承重结构，然后铺钢筋，最后才放水泥和沙子。先建立一个结构，你的知识和信息量会自动吸附在结构之上。时间一长，你会成为一个能根据结构链接知识的人。<br>很多人会说，我不会写该怎么办？<br>研究新建构主义的王竹立老师有一个观点——把知识零存整取：</p>
<blockquote>
<p>第一步，叫做积件式写作，就是用ctrlc加ctrlV的方法，先拼出一篇符合逻辑的文字。（引用别人东西记得注明来源哈）<br>第二步，进入个性化改写阶段，在第一步的基础上，你可以根据自己的个性化，写出自己的案例，自己的风格，自己的侧重点——现在网络上大部分的写作和讲课都是此类。<br>第三步，创造性重构，在持续的前两步积累下，创造出全新的思路和模型。</p>
</blockquote>
</li>
</ol>
<p>大部分人的问题，都是看了第二第三步的文章，下结论说自己完全不适合写作，然后放弃。其实每个人都应该动笔从第一步做起——写作不是为了传播，至少为了思考和学习。</p>
<p>希望你建立一座自己的金字塔。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 干货 </tag>
            
            <tag> 碎片化 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[大人物 - 古龙]]></title>
      <url>http://chuanqiang.github.io/2017/10/29/%E5%A4%A7%E4%BA%BA%E7%89%A9%20-%20%E5%8F%A4%E9%BE%99/</url>
      <content type="html"><![CDATA[<h2 id="简介web"><a href="#简介web" class="headerlink" title="简介web"></a>简介web</h2><p>《大人物》一书塑造了古龙笔下最可爱的大小姐，以及最贴近古龙本人的平凡英雄。除了闯祸，什么都不会的大小姐田思思，一直仰慕大英雄秦歌，却将被许配给貌不惊人的杨凡。于是她女扮男装，离家出走，去寻找心目中的如意郎君。一路上，她行李被窃，与丫环走失，甚至被人卖到了妓院，闹出了许多笑话，也遇到了各式各样的奇人怪事。历经种种艰难，她终于找到了秦歌，与他成为朋友。但她发现自己对秦歌了解得越多，越觉得眼前的秦歌与想象中的大英雄并不一样。而平凡的杨凡却也有令人意外的一面。</p>
<a id="more"></a>
<h2 id="书摘"><a href="#书摘" class="headerlink" title="书摘"></a>书摘</h2><p>无论谁都总该学会先责备自己 ，然后才能责备别人 ，否则就表示他只不过还是个没有长大的小孩子 。 ”</p>
<p>其实杨凡并不奇怪 ，一点也不奇怪 。他只不过是个很平凡的人 。唯一跟别人不大一样的是 ，他不但相信别人 ，也相信自己 。他做事总喜欢用他自己的法子 ，但那也是很普通的法子 。公平 ，但却并不严峻 。</p>
<p>男人喜欢到些什么地方去呢 ？有趣的地方 。那地方不一定要有很美丽的风景 ，很堂皇的房子 ，只要有好酒 、好菜 、好看的女人 、公平的赌博 ，十个男人中或至少有九个喜欢去 。无论是不是单身的男人都一样 。</p>
<p>你若是男人 ，最好懂得一件事 。若有别的男人在你面前称赞你 ，不是已将你佩服得五体投地 ，就是将你看成一文不值的呆子 ，而且通常都另有目的 。但他若在你背后称赞你 ，就是真的称赞了 。女人却不同 。你若是女人 ，也最好明白这一件事 ：若有别的女人不管是在你面前称赞你也好 ，在你背后称赞你也好 ，通常却只有一种意思 ─ ─那意思就是她根本看不起你 。她若在你背后骂你 ，你反而应该觉得高兴才是 。还有件事很妙 。当一个男人和女人单独相处时 ，问话的通常都是女人 。这种情况男人并不喜欢 ，却应该觉得高兴 。因为女人若不停地问一个男人各种奇奇怪怪的问题 ，无论她问得多愚蠢 ，都表示她至少并不讨厌你 。</p>
<p>秦歌道 ： “你若经历过很多事 ，忽然发觉所有的事都已成了过去 ；你若得到过很多东西 ，忽然发觉那也全是一场空 ；到了夜深人静时 ，只剩下你一个人 … … ”他语声更轻 、更慢 ，缓缓地接着道 ： “到了那时 ，你才会懂得什么叫寂寞 。 ”田思思眨了眨眼 ，道 ： “你懂得 ？ ”秦歌好像没有听到她在说什么 ，又痴痴地怔了半天 ，才接着道 ： “那时你也许什么都没有想 ，只是一个人坐在那里发怔 ，只觉得心里空荡荡的 ，找不到着落 ，有时甚至会想大叫 ，想发疯 … … ”田思思道 ： “那时你就应该去想些有趣的事 。 ”秦歌又道 ： “人类最大的痛苦 ，也许就是永远无法控制自己的思想 ，你若拼命想去回忆过去那些有趣的事 ，但想到的却偏偏总是那些辛酸和痛苦 ，那时你心里就会觉得好像有根针在刺着 。 ”</p>
<p>江南 。江南春浓 。长堤翠柳 ，水绿如蓝 。</p>
<p>说谎最初的动机只不过是保护自己，一个人要说过很多次谎之后，才懂得如何用谎话来欺骗别人。 </p>
<p>这就是派头。男人们简直快疯了。女人喜欢有派头的男人，男人又何尝不喜欢有派头的女人？ </p>
<p>秦歌道：“每个人站着的地方，本来都是平等的，只看你肯不肯往上爬，你若站在那里乘风凉，看着别人爬得满头大汗，等别人爬上去之后，再说这世界上不平等、不公平，那才是真正的不公平。” </p>
<p>当一个男人和女人单独相处时，问话的通常是女人。这种情况男人并不喜欢，却应该觉得高兴。因为女人若肯不停地问一个男人各种奇奇怪怪的问题，无论她问得多愚蠢，都表示她至少并不讨厌你。她问的问题越愚蠢，就表示她越喜欢你。但她若连一句话都不问你，你反而在不停地问她，那就糟了。因为那只表示你很喜欢她，她对你却没有太大的兴趣。也许连一点兴趣都没有——一个女人如果连问你话的兴趣都没有了，那她对你还会有什么别的兴趣呢？ </p>
<h2 id="评语"><a href="#评语" class="headerlink" title="评语"></a>评语</h2><blockquote>
<p>『真正的大人物，往往看起来，都很平凡』</p>
</blockquote>
<p> 杨凡这个人，其实是古龙在写自己。<br> 矮矮胖胖，普普通通。<br>三教九流，无所不交。<br>吃喝嫖赌，一样不落。<br>怎么看，都不像一个大人物。但后来，古龙也是个大人物。所以，杨凡也是个大人物。所以他才说：『真正的大人物，往往看起来，都很平凡。』</p>
<p>看到别人平凡中的不平凡，也看到不平凡中的平凡，也许是古龙写《大人物》的本来用意。</p>
]]></content>
      
        <categories>
            
            <category> 书摘 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 古龙 </tag>
            
            <tag> 武侠 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第十五周 - 漫谈程序员]]></title>
      <url>http://chuanqiang.github.io/2017/10/27/%E7%AC%AC%E5%8D%81%E4%BA%94%E5%91%A8%20-%20%E6%BC%AB%E8%B0%88%E7%A8%8B%E5%BA%8F%E5%91%98/</url>
      <content type="html"><![CDATA[<p>本周的周二是10月24日，也被称为程序员日，不知道什么时候这个毫无意义的日子被中国的程序员定义成了中国程序员的节日。</p>
<a id="more"></a>
<p>网上搜集了关于这个节日的由来：</p>
<blockquote>
<p>1024Byte 等于 1KB，1024KB 等于 1MB，1024MB 等于 1GB，1024GB 等于 1TB，所以1024这个数字对程序员来说是一个常常要用到的计量单位，那10月24日被大家无中生有的设为程序员节，也就不足为奇了。</p>
<p>草榴社区，一个非常有格调的、管理严格的社区。当年我作为一个新人初入草榴的时候，经常发现大家在回复中留言「1024」，于是百思不得其解，问前辈得来的答案是：1024M = 1G，而1G是「一级的」谐音，回复1024的意思就是「一级棒」。后来我才知道这个前辈也是个半瓶子醋，真实的原因是，在草榴社区，每隔1024秒才能回复一个帖子，在1024秒内回复的内容会统统显示成为1024。很多新手看到帖子激动不已，不管不顾1024的规定不停的回复新内容以表达鸡冻的心情，于是你就会看到很多1024的回帖，久而久之，1024就成了「支持」和「顶」的意思。</p>
</blockquote>
<p>不管怎么说，有一个属于我们程序员的节日还是很开心的，公司在下班后也组织了节日活动：打CS和斗地主，这果然很『程序员』。公司也发了礼物，当然也是十分『程序猿』的 :<br><img src="http://oeckzejn4.bkt.clouddn.com/20171027150911348453566.jpg" alt="程序猿节 礼物"></p>
<p>程序员，其实是一个很特别的群体。大部分人知道有这个群体的存在，但并不了解他们。在他们的视野中，程序员是精通电脑技术并以此为生的一群人，他们穿着随意，标配的是大裤衩、套头衫、人字拖；他们木讷，不善言谈；总是加班，单身狗居多。。。<br><img src="http://oeckzejn4.bkt.clouddn.com/20171027150911654369033.png" alt="程序员穿着外形"><br>其实，面对这些，我想说 :『总结的真他妈对，除了精通电脑那项!』，最烦让我去帮着维修电脑了，被告知不会之后还一脸不可思议的反问:『你不是程序员嘛，怎么这个还搞不定 ？!』大哥，程序员(英文Programmer)是从事程序开发、维护的专业人员，并不是电脑维修工啊，囧。。。</p>
<p>其实除了上面那些，程序员还有以下暗黑特质:</p>
<ul>
<li>夜猫子，零点以前基本不睡觉，因为经常熬夜加班形成了固定的生物钟，导致不加班的时候也睡得很晚。</li>
<li>大多程序猿没有女朋友，程序猿每天对着电脑敲代码，哪有时间谈恋爱啊！更何况女程序猿少之又少！使得程序猿们更加缺少接触女性的机会。</li>
<li>喜好数码产品，爱电脑胜过爱媳妇！程序猿跟什么接触的时间最多？电脑！时间长了对电脑产生了一种强烈的依赖。</li>
<li>抽烟的人占很大比例，程序猿工作压力大，上班时间去天台抽根香烟成了最常见的一种放松方式。</li>
<li>肚子大，一般都有颈椎病。</li>
<li>不爱运动，多为宅男，喜欢在家打游戏或者看球赛。</li>
<li>必备双肩包</li>
<li>大多戴眼镜</li>
<li>情商极低</li>
</ul>
<p>网上流行着许多关于程序员的段子，比如最经典的那句:『钱多话少死的早』，其实许多的段子都是程序员自我调侃发到网上的，程序员是最具有自我调侃精神的，我们是乐观的一群人，经常聊一些只有我们才懂的梗。比如下面这几个:</p>
<blockquote>
<p>女神：你能让这个论坛的人都吵起来，我今晚就跟你走。<br>程序猿：PHP语言是最好的语言！<br>论坛炸锅了，各种吵架。<br>女神：服了你了，我们走吧，你想干啥都行。<br>程序猿：今天不行，我一定要说服他们，PHP语言是最好的语言。</p>
<p>老婆给当程序员的老公打电话：“下班顺路买一斤包子带回来，如果看到卖西瓜的，就买一个。”<br>当晚，程序员老公手捧一个包子进了家门……<br>老婆怒道：“你怎么就买了一个包子？！”<br>老公答曰：“因为看到了卖西瓜的。”</p>
<p>某程序员退休后决定练习书法，于是重金购买文房四宝。一日，饭后突生雅兴，一番研墨拟纸，并点上上好檀香。定神片刻，泼墨挥毫，郑重地写下一行字：hello world！</p>
</blockquote>
<p>当然，除了上面的暗黑特质，程序员还是有不为人知的很阳光积极的一面的:</p>
<ul>
<li>做事理智严谨认真。经过代码的熏陶获得的习惯，你要知道成千上万行的代码里是容不得一个标点符般 bug 的，写代码的过程就是严谨的逻辑推理的过程，所以足以训练出这样的心智。</li>
<li>人很单纯，没有心机。由于寡于交际，没有那些个花花肠子，大多聪明讲逻辑，不虚浮，不事故圆滑但也不会上当受骗。</li>
<li>具有好奇心，在工作中总是会遇到解决不了的问题，凡是遇到问题，首先就是：Baidu或Google！没有搜索就没有发言权。</li>
<li>热爱分享，他们会热衷于写技术文章记录和分享自己学到的技术或者遇到的坑，并且乐于教授别人知识。</li>
<li>物欲很低，不热衷于买衣物和炫耀，愿意守着自己的世界乐滋滋地活着，买个机械键盘就开心得不行。</li>
<li>睡午觉的习惯，由于高强度的脑力劳动，所以程序员喜欢中午打个盹儿，补充一下精神。</li>
</ul>
<p>虽然程序员有这样那样的优点和缺点，但是程序员确实是一个充满创造力的职业。在互联网时代，程序员更成了时代的宠儿，不可否认一些程序员在空调房里就冷不丁改变了世界，他们成了马斯克、扎克伯格、马化腾这样的人。我坚信程序员改变世界，为什么呢？因为我就是一个程序员啊😆</p>
]]></content>
      
        <categories>
            
            <category> 周志 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 程序员 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[血族 - 影评]]></title>
      <url>http://chuanqiang.github.io/2017/10/22/%E8%A1%80%E6%97%8F%20-%20%E5%BD%B1%E8%AF%84/</url>
      <content type="html"><![CDATA[<p>诗人曾言，饥渴是我们所知最重要之事，也是我们所学之初，但饥渴易被压抑，被满足。仍有一种力量，不同类型的饥渴，一种无法被浇灭的饥渴，它的存在造就了人类，那即是爱。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/763193-3d917123c3d09522.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="血族海报"></p>
<a id="more"></a>
<p>『血族』里的吸血鬼没有英俊的面庞，没有浪漫的爱情故事，它们嗜血成性，惨无人道，所以这部剧也不是披着魔幻外衣的爱情戏，而是一部充满杀戮和毁灭的重口味的恐怖片。然而这部剧并不只是为了满足感官猎奇，更有末世里人性的展露。当人类被从食物链的顶端一脚踹下，当人类被当做牲口来圈养，当毁灭和死亡降临人世，你要做的是奋起反抗还是缩起头来苟活？</p>
<p>血族之于人类，就如同人类之于动物一般。血族必须依靠人类的血液才能存活，天性中对人类的血液有着本能的、无可抵抗的生存需求，就好像人类必须依靠吞食低等生物（动物和植物）才能维系生命一般。</p>
<p>一开始，血族是分散行动的，没有系统的组织和高等的智力与行动力来统率这一族，如同游牧民族和冷兵器时代的人类，依靠四散的狩猎来生存繁衍。血族中有的听命于后来的神、有的则守候在古老的神，就又好像人类的宗教里有新教和旧教一样。</p>
<p>而当全球遭受辐射以后，大气中来自太阳的UV光被扫除干净，人类失去了对抗血族的法宝，血族也失去了天敌不必再躲藏徘徊在阴暗的角落里，他们得以光明正大地在白日的地面上横行。而血族的统领人占据了人类的身体、那个拥有庞大家产资源、丰厚财产人脉，只手可以遮天的傀儡。他开始系统地组织和管理血族，剔除野性的部分，用强制的铁链来控制容易暴走不听指令遵从野性的血族；同时，他利用人类的外皮，用人类可以接受的方式来管理人类因为他懂得人性和政治。最关键的，他意识到，如果人类再被血族随便随性地猎捕，终有一天所有的人类都会被吸噬干净，那么从人类转变为血族的同类族人最终全部都会互相残杀，争夺资源，最终死亡殆尽。所以这些系统化管理人类的方式真正的目的还是为了血族一族的强大和延续。这就好像人类对动物进行圈养，农场化培育，禁止违法的猎杀猎捕一样。</p>
<p>血族强大吗？当然！TA们强大的理由是急剧进化的猎捕器官，单挑的时候不用依靠身外的武器便可使其他生物毙命的舌头。同时，TA们只保留人类时期的记忆和对至亲之人的强烈情感，对于杀戮其他人类没有任何的同情、怜悯、与愧疚。血族没有性器官，所以不能也不需要交配，自然也不会产生社会性的婚配问题来损害族群内的统一、团结、和稳定；当然也不会继承任何的基因遗传病来降低族群生命体的质量与寿命。血族里有阶层吗？有，人类时期如果拥有强大的资源和地位，转变成血族后如果能保留人类的智商和理智的话，无疑会成为较高阶层的统帅，至少不会是任“神”摆布没有自我意志和思考能力，或无法抗拒自我天性与本能、缺乏自制自律的低等生物。无论生为人类时模样如何得不同（五官、肤色、发色等）、交流如何得不便（语言、文化、宗教、政治信仰等），转变为血族后外表会有接近的统一性，彼此之间的交流依靠声波和超声也不成问题。大部分低等的血族依靠本能行动，因为不具备人类时期的智商所以没有自由思考的意识和自主独立的意志，当然也不会产生任何反抗叛逆的思想。所以血族这一类生物，从生物性和社会性的角度来看，非常善于管理、便于统治，所以其稳定性、忠诚度、效率产出都很高。所以，TA们能成为比人类更强大的统治者也不足为怪。但是，因为血族的单一性，要灭绝TA们也并非不可能。</p>
<p>我曾经幻想过，如果有一天外星人统领地球的那一天到来、如果有一天有比人类强大千万倍的生物降临而人类沦为食物 … 那一天到来的时候，全世界的人类是否会团结一心，抛却各自在文化、语言、宗教、政治等立场和信仰的不同，超越国家主义、民族主义、种族主义地去抵御并泯灭外敌？那一天，人类之间所有的隔阂是否都会消失干净？… 我想 … 不会。因为人性决定了绝大部分的人类只会抢先争夺自己的利益、不惜踩烂他人的尸骨，毫无愧疚感地为利己主义而活，或事后自识善良地挤出几滴伪善的毫无泪意和反省的泪珠。而那些善良、温和、和敦厚的人，几乎永远都会为自己的善良、温和、和敦厚付出极其惨烈的代价。如果这个世界到最后剩下的王者都是能瞬时适应环境，但毫无人性温良可言的人类的话，那么人类这一个种族也就不配称之为人了，那么最后无论是进化、退化、还是被灭亡，也全都无所谓了。人类因为人类独有的人性而弱、也因为人性而强。人性，是弱点、也是力量；有卑劣、也存温直。而血族，并没有人性。从某种意义上，血族比人类更单纯，更直白，但也更残忍，更强大。</p>
<hr>
<h3 id="一些台词"><a href="#一些台词" class="headerlink" title="一些台词"></a>一些台词</h3><p>爱是一种无法解释的力量，无法用化学方式来理解，它是指引我们回家的明灯，就算没有人在那里，那道光也会照亮前方迷途的路，爱的缺失会剥夺我们感知快乐的能力，会让黑夜更加黑暗，白昼黯淡无光，但当我们找到爱，不管多畸形 多悲伤 多恶劣，我们紧紧抓住不放，爱给我们力量，爱使我们屹立不倒，我们以爱而生，爱以我们而生。爱是恩赐，爱是陷落。</p>
<p>从经济学的角度来说，大多数人无动于衷，等待着“老 大 哥”来处理，等待着别人先行行动是常态，因为这样才能最大化自己的利益。从社会学的角度来看，这也是可以预测的人性。</p>
<p>你有梦想吗？你有野心吗？你有欲望吗？你有强烈的食欲、性欲、睡欲等等吗？你有喜欢、热爱、尊敬、仰慕、羡慕、嫉妒、憎恨、厌恶的人、事、物吗？如果是的话，那些统统和所有都是、也都能成为你的力量、同时也会是、也终将成为你的弱点。所以你会无可避免地被挑衅、刺激、玩弄，所以你会甘愿付出、牺牲、奉献，甚至不惜被欺骗、利用、和操控。</p>
<p>六千年的文明，我们现在又退化为了狩猎，采集，和躲避捕食者的日子了。血祖将我们从食物链上打了下来。</p>
<p>我的儿子，斯科特，以前很喜欢帮我煮饭。那孩子和食物之间的关系十分复杂。他在三年级时写了一篇文章，叫《肉卷让我难过》。他发现我只在秋天做肉卷。你懂的，冷天的安慰食物。当他闻到肉卷，他就知道夏季结束了。</p>
<p>数千年来，人类总是在互相争斗。宗教、马克思主义、法西斯主义、资本主义，美好的理想主义理论，但每一个都被人类心中的关键缺陷所打败。人类本性中的自私和虚荣，是根深蒂固、死性难改的。我知道这些，是因为数百万人类的思想集中在我的体内。每个被我手下转化的人的意识都归我所有。在自然界的所有生物中，人类这种动物是最危险的，常常一冲动就犯下暴行。</p>
]]></content>
      
        <categories>
            
            <category> 电视剧 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 影评 </tag>
            
            <tag> 美剧 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第十四周 - 一周琐事]]></title>
      <url>http://chuanqiang.github.io/2017/10/21/%E7%AC%AC%E5%8D%81%E5%9B%9B%E5%91%A8%20-%20%E4%B8%80%E5%91%A8%E7%90%90%E4%BA%8B/</url>
      <content type="html"><![CDATA[<p>上帝为了补偿人间诸般烦恼事，给了我们希望和睡眠。<br><img src="http://upload-images.jianshu.io/upload_images/763193-46668f4e5a42e152.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>天气微凉，睡梦香甜，近来平淡无事。就记录下琐事吧。</p>
<a id="more"></a>
<p>把『血族』四季全部都追完了，大 boss 血祖终于被干掉了，万恶的 Thomas 也终于挂了，晚上再也不会因看剧投入而梦到和返魂者拼死搏斗了。总得来说，这是一部还不错的美剧，算不上出色，但演技加特效加光怪陆离的剧情设定让这部剧增色不少。虽然这是一部脑浆飞溅重口味的感官猎奇的美剧，但丝毫不影响本剧反应人性和爱的内核。</p>
<blockquote>
<p>饥渴是我们所知最重要之事，也是我们所学之初，但饥渴易被压抑，被满足。仍有一种力量，不同类型的饥渴，一种无法被浇灭的饥渴，它的存在造就了人类，那即是爱。</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/763193-d347b9283bb0a6f5.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="血族 海报"></p>
<p>去了『天坛』，来北京这么久了还是第一次去这里。天坛为明、清两代帝王祭祀皇天、祈五谷丰登之场所。天坛是圜丘、祈谷两坛的总称，有坛墙两重，形成内外坛，坛墙南方北圆，象征天圆地方。主要建筑在内坛，圜丘坛在南、祈谷坛在北，二坛同在一条南北轴线上，中间有墙相隔。圜丘坛内主要建筑有圜丘坛、皇穹宇等等，祈谷坛内主要建筑有祈年殿、皇乾殿、祈年门等。由于没有买联票，像祈年殿、回音壁这样的景点没法观看，准备下次爸妈来北京的时候再好好逛逛。去的时候游客量还好，不是特别多，天坛里面风景不错，建筑气势宏伟，到处都是古柏苍郁，是一个游玩放松的好去处。时常听到一些在北京工作的外地人抱怨，说北京作为首都也没有好玩的地方，还不如北京周边的去处多。这种评价是不恰当的，北京是全国的政治文化中心，更是首批国家历史文化名城和世界上拥有世界文化遗产数最多的城市，其深厚的历史文化底蕴独树一帜，在北京游玩，首先你要明确一点，<strong>游北京游的是文化！胡同文化、历史文化和园林文化。</strong>在北京你能欣赏到的是历史和建筑，你能看到最正宗的皇家建筑和名人故居，但不是自然风景。你应该抱着本历史书请一个导游带你领略名胜古迹中的历史典故，传说轶事，而不是看俊秀磅礴的自然风景。所以，游玩北京建议请一导游，不然只能是走马观花，失望而归。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/763193-1c1ecb10ffb25500.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="天坛"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/763193-0546985d187a608f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="故宫"></p>
<p>这段时间十九大在北京人民大会堂召开，地铁的安检都比以往严格，各种袖口带红标志的人出现在北京各地，充满了政治意味。一般重大节日都会增大安检力度，有时天安门的地铁过站还不会停车，这些也可以说是北京异于其他城市的一个特色吧。这次的全国人民代表大会不只是高高在上了，感觉更接地气儿了，网上的关注度也很高，毫无疑问互联网和自媒体起了很大的作用。互联网上信息高效传输使得网民的参与变得容易和快速，自媒体和社交软件的流行让信息的传播范围变广，起到了『一传十，十传百』的传播效果。关于互联网影响政治方面的突出例子还是上次的美国大选，可以说谁掌握了互联网资源谁就掌握了话语权。以后互联网在政治中的作用会愈来愈明显，But 在中国还是甚微。</p>
<p>仿佛为了印证这种政治主导媒体和的论述，我的 Lofter 很久以前发布的文章有四篇被屏蔽了，官方说是存在违规内容，但我实在弄不明白是哪里违规，并且里面包含一篇影评和一篇弘扬理智爱国的文章，竟然就莫名其妙的被屏蔽了。只能推测是因为十九大召开，谨小慎微的 Lofter 平台仅通过关键字的检索而不考虑文章的上下文语境就粗鲁而武断的进行了文章屏蔽，这种行为无疑是可耻之极并且懒惰可憎的，是对用户极度的不负责任。我对他们的官微发表了质问，但石沉大海，没有收到任何回复。决定果断放弃这个平台。</p>
<p>今年十月份是我所在公司成立三周年，顺带着每月一次的生日会在周四下午开了一个小 party。作为一个创业公司，做到现在的确不易，从开始的几个人在咖啡馆里做系统1.0到成立公司再到现在一百多人的规模，虽然磊哥轻描淡写，但其中的辛苦和不易也是可想而知。创业初的彷徨，前景的堪忧，未来的迷茫等等这些都是创业者需要勇敢面对的事情。在创业初，你不可能规划好所有，你只有一个idea，甚至产品都没有盈利，你不知道你的产品能不能获得市场的认可，你的付出能不能获得满意的回报。创业就是破釜沉舟，一往无前的征程，赢了你就是德胜将军，输了可能变得一无所有。所以，创业需要莫大的勇气，需要抗住压力，认清方向。我佩服所有的创业者，包括成功了的和失败了的，因为他们都勇敢的迈出了这一步。</p>
<p><img src="http://upload-images.jianshu.io/upload_images/763193-536d259c71619f47.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="公司三周年"></p>
<p>做出一款出色的产品，应用于人们的生活，不就是以一己之力改变世界的最好行径吗？</p>
<p>[完]</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 周记 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[关于李如一]]></title>
      <url>http://chuanqiang.github.io/2017/10/19/%E5%85%B3%E4%BA%8E%E6%9D%8E%E5%A6%82%E4%B8%80/</url>
      <content type="html"><![CDATA[<p>李如一，曾经是娱记、翻译、自由撰稿人、乐评人，还玩过两年试验音乐，之所以走进公众视野，是因为这个80后男人在他30岁那年玩起了电子书，先后主持了『IT公论』和『一天世界』。</p>
<a id="more"></a>
<p>现在谁最有可能花钱在移动终端买正版电子书看？李如一的答案：互联网人和媒体人。这是唐茶目前定位的用户群。那么未来呢？“未来要拓展的是愿意为优质东西付费的人。”李如一对于用户付费有着执着的坚持。</p>
<p>搞出一套符合自己审美的字体，苹果iOS内建的STHei字体根本不可能让他满意。唐茶使用的字体叫「信黑体」（Xin Gothic），设计师柯炽坚来自香港字体设计师许瀚文引荐，他们所在的公司 （Visionmark）当时刚好在做一款为屏幕阅读优化的黑体。</p>
<h3 id="从免费走向付费是大趋势"><a href="#从免费走向付费是大趋势" class="headerlink" title="从免费走向付费是大趋势"></a>从免费走向付费是大趋势</h3><p>知乎上有人问，“什么东西可以超越或颠覆互联网？”。李如一的答案：资本正在颠覆互联网的核心精神，这只是让互联网变得越来越真实而已。李如一认为，互联网最初的乌托邦和无政府主义理想面对资本的进入将变得真实，这个真实即真实世界的种种界限和规则。。</p>
<p>“有人认为虚拟的东西就没有成本，或者说成本可以忽略。这是错的。虚拟的东西仍然有成本，这个成本总是要有人买单。”和其它电子书选择让广告商买单的方式不同，李如一选择让用户买单。</p>
<p>“广告商买单，内容就要向广告商倾斜，所以会形成非常干扰阅读的广告，这是以牺牲用户体验为代价的。你难道喜欢看一个有广告飞来飞去的页面？如果有一个干净的页面，你不想看吗？”如果前者的免费意味着有300万用户，而后者拥有的是10个付费用户，李如一说，我宁可要后者。<br>不可否认，唐茶作为一个在中国做正版付费阅读，并且是做“正经书”，而不仅仅是网络小说的开荒者，一切只是尝试。李如一喜欢尝试：“作为创业公司，如果做的事情没有一定实验性，是不值得做的。”</p>
<h3 id="最好的设计是隐形的"><a href="#最好的设计是隐形的" class="headerlink" title="最好的设计是隐形的"></a>最好的设计是隐形的</h3><p>唐茶要向用户收费，很重要的一条，保证产品的品质。<br>这一点可以表现在，唐茶使用的字体信黑体是专门向香港字体团队VisionmarkLtd.购买了使用权；唐茶版书籍的翻页方式采用滑动而非仿真翻页；唐茶版《史蒂夫？乔布斯传》和中信版有少许不同，因为李如一亲自校对并修改了部分翻译不准确的地方；电子书的脚注采用了PopOver，用户不需要翻到文尾，就可以看到浮现出的注释等。</p>
<p>李如一引用科幻大师ArthurClarke的说法：最高级的技术跟魔术没有区别。“如果魔术大师把这个魔术是怎么做成的告诉你，你还会觉得它有魅力吗？最好的设计是隐形的，它要让你感觉不到这是多好的东西，是自然而然的。”</p>
<blockquote>
<p>“如果你的东西本身不能让人感觉到好，你跟别人分析我这里好那里好又有什么意义。”<br>李如一抓住机会反问：“你用过我们的产品吗？”<br>回答：“用过。”<br>问：“好不好？<br>答：“好。”<br>李如一：“这就够了。”</p>
</blockquote>
<h3 id="颠覆永远是一个副产品"><a href="#颠覆永远是一个副产品" class="headerlink" title="颠覆永远是一个副产品"></a>颠覆永远是一个副产品</h3><p>李如一向大家解释为什么想做唐茶：因为自己喜欢看书，希望以想看的方式看到自己想看的书，于是把这个东西做出来，就这么简单。<br>“很多互联网产品一开始都是为了满足创业者自己的需求。我们也是一样。我并没有想着要去颠覆什么。有人看到成功的例子，比如说谷歌颠覆了很多东西、苹果颠覆了很多东西，他们觉得这样很酷，于是说自己也要成为一个这样的公司。我觉得这是本末倒置。你应该先想着要解决什么问题，给人带来什么价值，这样才能把这个生意运转起来。颠覆永远只是个副产品。”</p>
<p>在网上搜索李如一，发现了一个标题为《李如一(Lawrence)是谁？》的帖子，其中有一人回答：Lawrence是一个当大部分人说：“OK，this is as far as we go”，而他会说：“No，keep pushing”的人。</p>
<p>以下附上他和网易科技专栏作家西维的采访对话：<br>Q=我<br>A=李如一</p>
<blockquote>
<p>Q：最初为什么会去做唐茶？<br>A：我喜欢看书，每次搬家都有二十箱书，很麻烦。我也喜欢玩数码产品，所以想在移动设备上以舒服的方式看到自己想看的书。<br>Q：「唐茶」这个名字怎么来的？是你的主意吗？<br>A：我们不想用任何跟「书」、「阅读」有关的名字。唐茶是日本的一种传统颜色，我们觉得意境不错就用了。唐茶的 VI 色是由唐茶色发展而来。名字是大家一起讨论出来的，不过唐茶这个选项最初是我提出的。<br>Q：你通常怎么跟别人介绍唐茶？<br>A：让你看了之后不会想把眼睛挖出来的电子书。不做盗版。没有穿越小说（虽然我们并不抗拒穿越小说）。专门买了一套新的黑体字体——信黑体——的授权。<br>Q：唐茶的第一份单行本为什么选（艰深并且小众的）《失控》？ 为什么不是（通俗并且流行的）《鬼吹灯》？<br>A： 谁说（唐茶）不会做《鬼吹灯》？<br>唐茶最终的目标是让所有中文书都能在我们这里买得到，包括曾经出版过的和未来将要出版的。所以目标群体是所有读中文书的人。但一开始我还是希望能投射出一种不一样的品牌形象。选择《失控》作为第一本，主要是因为会想看这本书的人往往也会是数码玩家，对于电子书的接受程度也高于普通人。事实证明这个判断是正确的。<br>Q：对于唐茶，你自己最得意的部分是什么？最不满意的部分是什么？<br>A：我觉得唐茶的「有所不为」是我最满意的部分。不满意的部分都是细节，例如排版上还有很多可以改进之处。细节改善没有终点。<br>Q：一个典型的工作日你是怎么过的？<br>A：思考该出些什么书，跟版权方谈授权，跟唐茶团队讨论设计细节，产品的功能，审校书籍。另外其实也要花不少时间研究同行在干什么。<br>Q：你们是怎么拿到别人可能不太好拿到的版权的？<br>A：我想很重要的一点是电子书业者必须认同和尊重出版社多年来的耕耘。如今有很多人认为电子书就是为了打倒出版社，取消读者和作者之间的中介。<br>这种事情不会发生，其原因在于人性，而不在于技术或创新什么的。你必须用出版社能听懂的语言和他们沟通，并且，最好能让他们感到你是看书的人——真正意义上的看书的人（怎么理解都可以）。<br>Q：做唐茶跟你个人喜好有多大关系？<br>A：主要是爱好。如果我不做有别人做，我也很开心的。<br>Q：在这件事上，你为什么觉得自己能做得比别人好呢？（相信我，他真的是这么想的）<br>A： 以下可能都有关系：我喜欢 Glenn Gould、Ivo Pogorelich、周星驰、增村保造、King Crimson、Larry David、亦舒、Bruce Sterling、Paul Graham、三岛由纪夫、Yellow Magic Orchestra、Robert Bringhurst，不害怕命令行工具，热爱电脑，不标榜自己是「geek」（或任何东西）。<br>Q：你为什么说自己可能跟别的创业者不一样？<br>A：我不觉得创业是什么特别值得说的事情，尤其现在大家似乎把创业等同于互联网创业。我一个朋友是开餐馆的，她说一开始的初衷就是因为那条街上有另外一家餐馆，她吃了觉得不过如此，「自己可以做得更好」，于是就开了。<br>这和很多互联网产品的诞生过程很像。我不想过于把重点放在创业这件事情本身上。对于我们来说，最重要的事情永远是怎么让用户爽。<br>Q：很多创业者的创业激情，或多或少包含一些对财务自由的期待。在你身上成立吗？<br>A：你是问创业是否为了赚钱吗？是。但比赚钱更重要的是让人们（包括我们自己）可以舒服地在移动设备上看到想看的东西。<br>Q：你自觉是「有洁癖」的人吗？<br>A：不排除有人觉得每天洗头的男人就算有洁癖。我每天洗头，随身准备浸过酒精的纸来擦眼镜和手机屏幕，但我不觉得我有洁癖，这属于个人卫生习惯。<br>Q：也许我应该换个说法。我是问，你对待细节的态度？<br>A：同样一种行为，描述为「注重细节」，听上去就很正面的样子，换成「有洁癖」，马上感觉就不一样了。每个人对细节重视的程度不同——就算那些已经比常人更加注重细节的人，他们每个人的程度也不一样。<br>到什么程度能够称之为癖，我不清楚。但总体来讲，我们生活的城市也好、线上虚拟世界也好，并不是非常乾净的。在这种情况下，我觉得多么注重「洁」——无论是个人卫生、城市卫生还是虚拟世界的像素卫生——都不过分。<br>Q：你通常受到别人的批评都在哪些方面？<br>A：狂妄、冷漠、难以接近。<br>Q：你觉得品味可以培养吗？<br>A：品味基本都是后天的，所以完全可以培养。品味的意思并不是说「我喜欢这个东西，这个东西好，所以我有品味」，而是指有所坚持，有所不为，是「anything goes」的反面。另外品味有一定程度的任性成分，不是、也不应该是完全理性的。<br>Q：有「」（这个中文中文标点符号）的情况下，你会使用“ ”吗？<br>A：应该说我不会去用打不出「」和『』的输入法。</p>
</blockquote>
<p>他在网络上跟人争论中英文标点符号用法、参与有关字体美感的小众讨论，在apple4.us（苹果爱好者博客，李如一是主要作者之一）上见过他中英文夹杂、但没有任何错别字或语法错误的文章，在三里屯的美式餐厅里听过他大谈特谈市面上的中文电子书排版有多么糟糕。<br>他不太geek，也算不上nerdy，或者「懂科技的读书人」这个形容比较适合他。总之，他不是很多人刻板印象中的，互联网创业者（整天躲在小黑屋，不修边幅，苦哈哈的）。你跟他说「扣定」，他跟你谈品味；你跟他说产品，他跟你讲理想。</p>
<p>你未必认同他的品味或者理想，但他绝对愿意为它们做很多事。比如，坚持使用某种通常早已不在国内使用的中文标点符号，只为达到某种「易读性和美观的平衡」（对，就是我一直在使用的这种）。比如，在一个不重视阅读体验的大环境下大搞阅读体验，在一个不习惯付费的国度坚持相信「好东西可以收费」。</p>
]]></content>
      
        <categories>
            
            <category> 人物 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 人物 </tag>
            
            <tag> 李如一 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第十三周 - 秋天里]]></title>
      <url>http://chuanqiang.github.io/2017/09/29/%E7%A7%8B%E5%A4%A9%E9%87%8C/</url>
      <content type="html"><![CDATA[<p>时间过得好快，仿佛是一夜之间，枯黄爬上枝头，秋风席卷大地，凉风和飘零的落叶告诉我，秋季降临。</p>
<a id="more"></a>
<p>天空明净湛蓝，北京的雾霾还没有来到，阳光普照下的北京蒙上了一层温暖明亮的暖色调。幽深的北京老胡同，沧桑的古槐，秀气的飞檐，寻常巷陌间都在讲述一段历史或往事。高楼林立，车水马龙，尘世喧嚣里都在描绘一幅悲情和欢喜。我还是朝十晚七，乘坐轰鸣而过的地铁，背着双肩包，走进某一幢写字楼里，对着电脑屏幕一坐一天，午饭的味道和下班后骑单车时耳边呼啸的风还有耳机里的音乐成为一天下来的点缀。周末比较丰富，难得可以一门心思的消磨时光，好像一周的前五天都是为了最后的两天活着了。</p>
<p>周末追了一部电视剧，是一个警匪题材的犯罪悬疑片，叫做『白夜追凶』。现在喜欢看完一部影视作品或者一本书后会在豆瓣上写一写短评，『豆瓣APP』会生成一张对应的图片，方便你分享。这部剧我在豆瓣是这么评价的:</p>
<blockquote>
<p>国产佳剧。情节紧凑刺激，剧情环环相扣，主线辅线设置巧妙，潘粤明演技爆棚，摄影手法和画面感不输电影级别，剪辑更是巧夺天工，更可贵的是每一宗案件都有现实的映射。连追十集，直呼过瘾！</p>
</blockquote>
<p><img src="http://oeckzejn4.bkt.clouddn.com/2017-09-29-131506675286_.pic_hd.jpg" alt="白夜追凶"><br>『以严谨科学的传统刑侦为大前提，辅以对罪犯心理的逻辑推理，同时借助罪案悬疑的外衣，希望表达的是以小见大的整个现代社会的全貌』， 这是对这部电视剧最恰当的评价。</p>
<p>周天去电影院看了『猩球崛起3』，怎么说呢，本来抱着吃着爆米花看好莱坞大片的心情，但导演却奉献了一部特别有张力和深度的大片，虽然动作戏没有预期的充分，但在深度上却更近了一步，透过人与星星去反思人类自己的社会结构。说实话，刚看完没觉得什么，都是之后在豆瓣看大神影评才后知后觉的。</p>
<p>还有一部影片也值得一看，中文名叫做『极盗车神』，其实英文名字叫做『baby driver』，这绝对是一部被名字耽误了的电影。片子最大的价值其实还是他把歌单拍成了电影，第一次让音乐成为了故事片真正的主角，让音乐统领了整个影片的节奏，甚至台词、人物性格也跟音乐息息相关，可以说是音乐与电影的一次完美结合。<br><img src="http://oeckzejn4.bkt.clouddn.com/2017-09-29-IMG_1921.JPG" alt="baby driver"></p>
<p>除了影视剧，还找到了一款 Mac 上使用的 vpn 工具，叫做『free vpn』, 顾名思义，也是为数不多的一款免费的软件 。下载使用了一下，超乎想象的好用，只有0.4M，没有丝毫多余的功能。其实在mac系统上，许多软件的设计都具有极简主义的风格，最突出的比如QQ，在Windows下臃肿不堪，过多的功能堆砌导致用户体验下降。而在 mac os 系统中，真正做到了节制和简约。</p>
<p>对于中国网络中所谓的『墙』，令人深恶痛绝，这东西就像清朝的闭关锁国，建国初期的文革，完全是政府没有进化完全的产物。在互联网的时代，在所谓的自由民主的今天，在一个号称『中国的互联网是开放的，网民充分享有自由』的国度里，竟然还有『墙』这种东西，这实在是莫大的讽刺。</p>
<p>虽然生活里总是有那么多的不愉快，有『墙』和『加班』，但还有电影，音乐和假期，尤其是国庆来临前的这个秋阳杲杲的秋天里。</p>
<p>[完]</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 周记 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[video.js 视频播放插件]]></title>
      <url>http://chuanqiang.github.io/2017/09/22/video-plugin/</url>
      <content type="html"><![CDATA[<p>Video.js 是一个通用的在网页上嵌入视频播放器的 JS 库，Video.js 自动检测浏览器对 HTML5 的支持情况，如果不支持 HTML5 则自动使用 Flash 播放器。</p>
<a id="more"></a>
<p>（要支持ie低版本请下载5.4.3版 ）<br><a href="http://videojs.com/" target="_blank" rel="external">点击进入官网</a></p>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><a href="http://www.jq22.com/jquery-info404" target="_blank" rel="external">各个版本下载</a></p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h4 id="引入文件"><a href="#引入文件" class="headerlink" title="引入文件"></a>引入文件</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;link href=<span class="string">"video-js.css"</span> rel=<span class="string">"stylesheet"</span> type=<span class="string">"text/css"</span>&gt;</div><div class="line">&lt;script src=<span class="string">"video.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div></pre></td></tr></table></figure>
<p><strong>注</strong>：一般我使用时会把下载的包整个拷贝到项目的<code>plugin</code>目录下，一方面可以方便以后查看Demo的使用方法，另一方面也避免内部文件之间引用的路径问题。</p>
<p>设置flash路径，Video.js会在不支持html5的浏览中使用flash播放视频文件。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">    videojs.options.flash.swf = <span class="string">"video-js.swf"</span>;</div><div class="line">&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">id</span>=<span class="string">"example_video_1"</span> <span class="attr">class</span>=<span class="string">"video-js vjs-default-skin"</span> <span class="attr">controls</span> <span class="attr">preload</span>=<span class="string">"none"</span> <span class="attr">width</span>=<span class="string">"640"</span> <span class="attr">height</span>=<span class="string">"264"</span></span></div><div class="line"><span class="tag">      <span class="attr">poster</span>=<span class="string">"http://video-js.zencoder.com/oceans-clip.png"</span></span></div><div class="line"><span class="tag">      <span class="attr">data-setup</span>=<span class="string">"&#123;&#125;"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"http://视频地址格式1.mp4"</span> <span class="attr">type</span>=<span class="string">'video/mp4'</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"http://视频地址格式2.webm"</span> <span class="attr">type</span>=<span class="string">'video/webm'</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"http://视频地址格式3.ogv"</span> <span class="attr">type</span>=<span class="string">'video/ogg'</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">track</span> <span class="attr">kind</span>=<span class="string">"captions"</span> <span class="attr">src</span>=<span class="string">"demo.captions.vtt"</span> <span class="attr">srclang</span>=<span class="string">"en"</span> <span class="attr">label</span>=<span class="string">"English"</span>&gt;</span><span class="tag">&lt;/<span class="name">track</span>&gt;</span><span class="comment">&lt;!-- Tracks need an ending tag thanks to IE9 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">track</span> <span class="attr">kind</span>=<span class="string">"subtitles"</span> <span class="attr">src</span>=<span class="string">"demo.captions.vtt"</span> <span class="attr">srclang</span>=<span class="string">"en"</span> <span class="attr">label</span>=<span class="string">"English"</span>&gt;</span><span class="tag">&lt;/<span class="name">track</span>&gt;</span><span class="comment">&lt;!-- Tracks need an ending tag thanks to IE9 --&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></div></pre></td></tr></table></figure>
<p>设置自动播放将下面代码加到html中代码后面<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</div><div class="line">    <span class="keyword">var</span> myPlayer = videojs(<span class="string">'example_video_1'</span>); <span class="comment">// video 标签中的ID</span></div><div class="line">    myPlayer.ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        myPlayer.play();    <span class="comment">// 调用播放函数</span></div><div class="line">    &#125;);</div><div class="line">&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure></p>
<p>默认情况下，大的播放按钮是被定为在左上角的，这样就不会覆盖视频内容。如果你想让这个播放按钮居中，你可以给你的 video 标签添加额外的 <code>vjs-big-play-centered</code>样式，比如：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">id</span>=<span class="string">"example_video_1"</span> <span class="attr">class</span>=<span class="string">"video-js vjs-default-skin vjs-big-play-centered"</span></span></div><div class="line"><span class="tag">  <span class="attr">controls</span> <span class="attr">preload</span>=<span class="string">"auto"</span> <span class="attr">width</span>=<span class="string">"640"</span> <span class="attr">height</span>=<span class="string">"264"</span></span></div><div class="line"><span class="tag">  <span class="attr">poster</span>=<span class="string">"http://video-js.zencoder.com/oceans-clip.png"</span></span></div><div class="line"><span class="tag">  <span class="attr">data-setup</span>=<span class="string">'&#123;"example_option":true&#125;'</span>&gt;</span></div><div class="line">  ...</div><div class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>如果你还对播放按钮样式不满意可重新定义<code>video-js .vjs-big-play-button{/*这里的样式重写*/}</code></p>
<h4 id="为动态加载的-HTML-元素设置-Video-js"><a href="#为动态加载的-HTML-元素设置-Video-js" class="headerlink" title="为动态加载的 HTML 元素设置 Video.js"></a>为动态加载的 HTML 元素设置 Video.js</h4><p>如果你的 web 页面或者应用是动态加载 video 标签的（ajax，appendChild，等等）,这样在页面加载后这个元素是不存在的，那么你会想要手动设置播放器而不是依靠 <code>data-setup</code> 属性，做法如下:</p>
<ol>
<li>将 data-setup 属性从 video 标签中移除掉，避免播放器混乱。</li>
<li>运行下面的 javascript <figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">videojs(<span class="string">"example_video_1"</span>, &#123;&#125;, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  <span class="comment">// Player (this) is initialized and ready.</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
</li>
</ol>
<ul>
<li>videojs 方法中的第一个参数是你的 video 标签的 ID，用你自己的代替。</li>
<li>第二个参数是一个选项对象。它允许你像设置 data-setup 属性一样设置额外的选项。</li>
<li>第三个参数是一个 ‘ready’ 回调。一旦 Video.js 初始化完成后，就会触发这个回调。</li>
</ul>
<h5 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h5><p>在动态加载HTML进行初始化<code>player</code>对象的时候，很容易出现播放界面混乱的情况，我做的时候就出现了比如播放条错位，缺少播放时间和全局时间的显示，有白点等问题。遇到这种情况先检查加载顺序，如果不是的话也不要慌，在浏览器里找到混乱的元素，自己进行调试，把修改的 css 样式放到 HTML 的 <code>&lt;style&gt;</code>块中，不要修改插件的 CSS 文件，因为是在 js 加载的时候更改的样式，要在自己的页面里修改，如果这时候修改还是没有起作用，css 属性后面用<code>!important</code>来强制提高样式加载的优先级。</p>
<p>比如，如果页面有多余元素(例如白点)，浏览器调试找到，css 设置<code>display:none</code>；当页面元素错位(例如进度条、声音图标错位)，用<code>margin</code>来调节合适位置；当页面元素缺失，比如缺少播放时间、剩余时间等，在浏览器 F12 调试找到对应元素，设置<code>display:block</code>。<br><img src="http://oeckzejn4.bkt.clouddn.com/2017-09-21-%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-21%20%E4%B8%8B%E5%8D%8811.31.43.png" alt="我做的项目中的使用效果"></p>
<h4 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h4><ul>
<li>播放：<code>myPlayer.play();</code></li>
<li>暂停：<code>myPlayer.pause();</code></li>
<li>获取播放进度：<code>var whereYouAt = myPlayer.currentTime();</code></li>
<li>设置播放进度：<code>myPlayer.currentTime(120);</code></li>
<li>视频持续时间，加载完成视频才可以知道视频时长，且在flash情况下无效: <code>var howLongIsThis = myPlayer.duration();</code></li>
<li>缓冲，就是返回下载了多少: `var whatHasBeenBuffered = myPlayer.buffered();</li>
<li>百分比的缓冲: <code>var howMuchIsDownloaded = myPlayer.bufferedPercent();</code></li>
<li>声音大小（0-1之间）: <code>var howLoudIsIt = myPlayer.volume();</code></li>
<li>设置声音大小: <code>myPlayer.volume(0.5);</code></li>
<li>取得视频的宽度: <code>var howWideIsIt = myPlayer.width();</code></li>
<li>设置宽度：<code>myPlayer.width(640);</code></li>
<li>获取高度: <code>var howTallIsIt = myPlayer.height();</code></li>
<li>设置高度：: <code>myPlayer.height(480);</code></li>
<li>一步到位的设置大小：<code>myPlayer.size(640,480);</code></li>
<li>全屏: <code>myPlayer.enterFullScreen();</code></li>
<li>离开全屏 : <code>myPlayer.enterFullScreen();</code></li>
</ul>
<h4 id="添加事件"><a href="#添加事件" class="headerlink" title="添加事件"></a>添加事件</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">durationchange</div><div class="line">ended <span class="comment">//播放结束</span></div><div class="line">firstplay</div><div class="line">fullscreenchange</div><div class="line">loadedalldata</div><div class="line">loadeddata</div><div class="line">loadedmetadata</div><div class="line">loadstart</div><div class="line">pause <span class="comment">//暂停</span></div><div class="line">play  <span class="comment">//播放</span></div><div class="line">progress</div><div class="line">seeked</div><div class="line">seeking</div><div class="line">timeupdate</div><div class="line">volumechange</div><div class="line">waiting</div><div class="line">resize inherited</div><div class="line">  <span class="keyword">var</span> myFunc = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="comment">// Do something when the event is fired</span></div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<h4 id="事件绑定"><a href="#事件绑定" class="headerlink" title="事件绑定"></a>事件绑定</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">myPlayer.on(<span class="string">"ended"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">"end"</span>, <span class="keyword">this</span>.currentTime());</div><div class="line">&#125;);</div><div class="line">myPlayer.on(<span class="string">"pause"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">"pause"</span>)</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h4 id="删除事件"><a href="#删除事件" class="headerlink" title="删除事件"></a>删除事件</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">myPlayer.removeEvent(“eventName”, myFunc);</div></pre></td></tr></table></figure>
<h4 id="页面中有多个视频"><a href="#页面中有多个视频" class="headerlink" title="页面中有多个视频"></a>页面中有多个视频</h4><p>一个页面中有多个视频，需要点击后触发bootstrap 的模态窗，再弹出视频</p>
<h5 id="HTML-1"><a href="#HTML-1" class="headerlink" title="HTML"></a>HTML</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;a videohref=<span class="string">"http://xxx.mp4"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"video_link"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">img</span>  <span class="attr">src</span>=<span class="string">"../images/xxx.jpg"</span>/&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></div></pre></td></tr></table></figure>
<h5 id="js"><a href="#js" class="headerlink" title="js"></a>js</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">".video_link"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> myPlayer = videojs(<span class="string">'my-video'</span>);</div><div class="line">    <span class="keyword">var</span> videoUrl = $(<span class="keyword">this</span>).attr(<span class="string">"videohref"</span>);</div><div class="line">    videojs(<span class="string">"my-video"</span>, &#123;&#125;, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="built_in">window</span>.myPlayer = <span class="keyword">this</span>;</div><div class="line">        $(<span class="string">"#mymoda .video-con #my-video source"</span>).attr(<span class="string">"src"</span>, videoUrl);</div><div class="line">        myPlayer.src(videoUrl);</div><div class="line">        myPlayer.load(videoUrl);</div><div class="line">        myPlayer.play();</div><div class="line">    &#125;);</div><div class="line">    $(<span class="string">".click-modal"</span>).click();</div><div class="line">&#125;);</div><div class="line"><span class="comment">// 模态窗消失时，关闭视频    </span></div><div class="line">$(<span class="string">'#mymoda'</span>).on(<span class="string">'hidden.bs.modal'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    myPlayer.pause();</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h2 id="场景补充"><a href="#场景补充" class="headerlink" title="场景补充"></a>场景补充</h2><h4 id="场景1-实时监控"><a href="#场景1-实时监控" class="headerlink" title="场景1:实时监控"></a>场景1:实时监控</h4><p>在当需要实时监听视频进度的时候，比如我遇到的场景是课程视频有试听课，只能试听这个视频的前多少分钟。这个时候，不管是普通播放还是拖动进度条都需要实时监听播放的时间进度，判断是否大于试听时间，进行对应操作。</p>
<p>代码片段如下:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 判断试听时间</span></div><div class="line"><span class="keyword">if</span>(b)&#123;</div><div class="line">    <span class="built_in">window</span>.loopMarquee = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">if</span>(player.currentTime() &gt;= listenTime)&#123;</div><div class="line">            player.pause();</div><div class="line">            $(<span class="string">".gobuy"</span>).fadeIn(<span class="number">200</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;,<span class="number">500</span>) <span class="comment">// 设置每500秒查询一次</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="场景2-记录观看历史，下次从上次位置打开"><a href="#场景2-记录观看历史，下次从上次位置打开" class="headerlink" title="场景2: 记录观看历史，下次从上次位置打开"></a>场景2: 记录观看历史，下次从上次位置打开</h4><p><strong>思路:</strong>在离开页面时触发得到当前播放时间，存到数据库，下一次加载时从数据库取，如果有<code>history_time</code>则用<code>player.currentTime(historyTime)</code>,没有的话，正常从头播放。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$( <span class="built_in">window</span> ).unload(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">	getVideoTime(); </div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 视频播放 </tag>
            
            <tag> video.js </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第十二周 - 一些反思]]></title>
      <url>http://chuanqiang.github.io/2017/09/17/%E4%B8%80%E4%BA%9B%E5%8F%8D%E6%80%9D/</url>
      <content type="html"><![CDATA[<p>上周是忙成狗的一周。</p>
<a id="more"></a>
<p>银企的需求本来是说九月底上线的，以为时间长着呢，所以开始都把时间用来捣鼓mac环境，直到冰哥说这个项目下周五要交给测试。。。晴天霹雳啊，一周要把『证书』功能前后台十多个页面的代码量完成，于是开始奋笔疾书，废寝忘食。开头写的很顺，觉得照这速度按时完成应该没问题，可到了最后几天，证书模版的功能开始陷入僵局，要给模板加图片水印和文字水印，这方面没有涉猎过，只能现找方法，研究API，赶鸭子上架。结果导致周五没能按时提交测试，还搭上了一个周末的时间来继续搞这个。<br><img src="http://oeckzejn4.bkt.clouddn.com/2017-09-17-IMG_1539.JPG" alt=""></p>
<h3 id="反思一下："><a href="#反思一下：" class="headerlink" title="反思一下："></a>反思一下：</h3><ol>
<li>时间规划不合理，不管时间够不够用，都先完成优先级高的事情，分轻重缓急来做事情，以防意外发生。</li>
<li>没有预估技术风险，思考技术难度。在软件开发中，技术风险是一只可怕的拦路虎，它可能会延迟开发周期，破坏项目规划，因此，要优先排除技术风险，让整个开发过程和周期可控，这样才能保证游刃有余，合理安排和保障按时完成。</li>
<li>思考问题要充分，考虑各种变量。比如这次模版的开发，因为以后会面临模板数量不断增多的需求，不能每一次增加或者修改模板都对代码编辑，这样还需要更改代码、测试、部署上线，造成很大的成本。解决方式就是在设计的时候充分考虑到各种变量，把他们提取出来完善表结构和功能的设计，使以后模板增加或者修改的时候，只需要更改数据库的字段即可，大大减少了时间成本。这件事情说到底还是对Java中抽象和封装的思想理解不到位，没有灵活的运用于实践。</li>
</ol>
<p>以上是这次开发总结的教训，踏过的坑不能再进第二遍。是以自省。</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 周记 </tag>
            
            <tag> 反思 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[看见 - 柴静]]></title>
      <url>http://chuanqiang.github.io/2017/09/17/%E7%9C%8B%E8%A7%81-%E6%9F%B4%E9%9D%99/</url>
      <content type="html"><![CDATA[<ul>
<li>十年前，当陈虻问我如果做新闻关心什么时，我说关心新闻中的人</li>
<li><img src="http://oeckzejn4.bkt.clouddn.com/2017-09-17-screenshot_2017_09_07T22_12_27-801.png" alt="柴静"><a id="more"></a></li>
<li><p>「人」常常被有意无意忽略，被无知和偏见遮蔽，被概念化，被模式化，这些思维就埋在无意识之下。无意识是如此之深，以至于常常看不见他人，对自己也熟视无睹。</p>
</li>
<li><p>就像叶子从痛苦的蜷缩中要用力舒展一样，人也要从不假思索的蒙昧里挣脱，这才是活着。</p>
</li>
<li><p>从不反击，也没见他对人凶恶，我有时觉得他有点近于怯懦，他只说：「道德，不是没有弱点，而是看清它，然后抑制它。」</p>
</li>
<li><p>恐惧「嗡」一声像马蜂群一样散开，叮住了人群。</p>
</li>
<li><p>你要像苏联作家说的那样，『在清水里呛呛，血水里泡泡，咸水里滚滚』，十年之后咱们再来讨论。」</p>
</li>
<li><p>小时候看到邻居从远处走过来，我都躲在墙角让他们过去，打招呼这事让我发窘。</p>
</li>
<li><p>时候看到邻居从远处走过来，我都躲在墙角让他们过去，打招呼这事让我发窘。</p>
</li>
<li><p>史努比老说我有「塑料感」，跟现实隔着朦朦一层。但这层膜很快就保不住了，人被硬生生直接摁在犬牙交错的生活上，切开皮肤，直入筋骨。</p>
</li>
<li><p>二战，美国飞机轰炸佛罗伦萨时，她还是个小孩子，蜷缩在一个煤箱里，因为恐惧而放声大哭。父亲狠狠地掴了她一耳光，说：「女孩子是不哭的。」她日后写：「生活就是严峻的历险，学得越快越好，我永远忘不了那记耳光，对我来说，它就像一个吻。」</p>
</li>
<li><p>交战之前，明知他腰里有银子，但被衣衫盖着，不知道该怎么出剑，但经验告诉我，那就别动。风动，树梢动，月光动，你别动，就会看到端倪。</p>
</li>
<li><p>生和死，苦难和苍老，都蕴涵在每一个人的体内，总有一天我们会与之遭逢。我们终将浑然难分，像水溶于水中。</p>
</li>
<li><p>王小波说过，你在家里，在单位，在认识的人面前，你被当成一个人看，你被尊重，但在一个没人认识你的地方，你可能会被当成东西对待。我想在任何地方都被当成人，不是东西，这就是尊严。</p>
</li>
<li><p>在没有过去和未来的地方，爱活不下来，只有性。</p>
</li>
<li><p>I AM WHAT I AM 我永远都爱这样的我 快乐是 快乐的方式不止一种 最荣幸是 谁都是造物者的光荣 不用闪躲 为我喜欢的生活而活 不用粉墨 就站在光明的角落</p>
</li>
<li><p>人是一样的，对幸福的愿望一样，对自身完整的需要一样，只是她生在这儿，这么活着，我来到那儿，那么活着，都是偶然。万物流变，千百万年，谁都是一小粒，嵌在世界的秩序当中，采访是什么？采访是生命间的往来，认识自己越深，认识他人越深，反之亦然</p>
</li>
<li><p>家庭是最小的社会单元，门吱呀一声关上后，在这里人们如何相待，多少决定了一个社会的基本面目。</p>
</li>
<li><p>周秦时还是清澈的「大河」，到东汉「河水重浊，号为一石水而六斗泥」。从此大河被称为「黄河」，是命脉，也是心病。唐宋以后泥沙有增无减，堆积在下游河床上，全靠堤防约束，形成悬河。伏秋大汛，三四千年间，下游决口泛滥一千五百九十三次。</p>
</li>
<li><p>在强大的机构面前人们往往除了服从别无选择，但是我不愿意，」他说，「我要把他们拖上战场，我不一定能贏，但我会让他们觉得痛，让他们害怕有十几二十几个像我这样的人站出来，让他们因为害怕而迅速地改变。</p>
</li>
<li><p>今天你可以失去获得它的权利你不抗争明天你同样会失去更多的权利.人身权.财产权.包括土地.房屋..中国现在这种状况不是偶然造成的.而是长期温水煮青蛙的一个结果.大家都觉得农民的土地被侵占了与我何干.火车不开发票.偷漏税与我何干.别人的房屋强行拆迁与我何干.有一天,这些事情都会落在你的身上..</p>
</li>
<li><p>帕克斯是美国的一个黑人女裁缝。一九五五年十二月一日，在阿拉巴马州州府蒙哥马利市，她在一辆公共汽车上就座。那时，南方各州的公共汽车上还实行种族隔离，座位分为前后两部分，白人坐前排，黑人坐后排，中间是「灰色地带」，黑人可以坐在「灰色地带」，但如果白人提出要求，黑人必须让座。那天晚上人很挤，白人座位已坐满，有白人男子要求坐在「灰色地带」的帕克斯让座，她拒绝。当司机要求乃至以叫警察威胁坐在「灰色地带」的黑人让座时，其他三个黑人站了起来，唯独帕克斯倔强地坐在原位。 如果对方是一个孩子或是老人，也许她会站起来，但这次，四十二岁的她厌烦了所有黑人每天在生活中所受到的不公平对待。她说：「我只是讨厌屈服。」一九五六年联邦最高法院裁决禁止公车上的「黑白隔离」，帕克斯从此被尊为美国「民权运动之母」。五十年后，在帕克斯的葬礼上，美国国务卿赖斯说：「没有她，我不可能站在这里。」</p>
</li>
<li><p>我采访陈丹青时，这位知名的画家从清华辞去了美术学院教授和博导的职务，因为现行的政治和英语考试，让他招不到他想要的学生。他说：「政治本来是一门学问，但我们的政治考试是反政治的，没有人尊敬这个学科。」</p>
</li>
<li><p>采访郝劲松时，我问过他：「你以谁的名义在诉讼？」 「公民。」 「公民和普通百姓的概念区别是什么？」 「能独立地表达自己的观点，却不傲慢，对政治表示服从，却不卑躬屈膝。能积极地参与国家的政策，看到弱者知道同情，看到邪恶知道愤怒，我认为他才算是一个真正的公民。」 我问他最后一个问题：「你想要一个什么样的世界？」 这个当时三十四岁的年轻人说：「我想要宪法赋予我的那个世界。」</p>
</li>
<li><p>曾国藩说得对，世间事一半是「有所激有所逼」而成的。</p>
</li>
<li><p>保持对不同论述的警惕，才能保持自己的独立性。探寻就是要不断相信、不断怀疑、不断幻灭、不断摧毁、不断重建，为的只是避免成为偏见的附庸。或者说，煽动各种偏见的互殴，从而取得平衡，这是我所理解的『探寻』」</p>
</li>
<li><p>二十出头，在湖南卫视时，我采访黄永玉，问他的「人生哲学」是什么？他说两个字：「寻常。」我心想，这也叫哲学吗？「天上那么多高干子弟，七仙女为什么要下凡嫁董永？」他说，「因为她什么都有，只缺寻常。」</p>
</li>
<li><p>人类只是个概念，一代一代人都是相似的生活，这辈子决定你悲欢的就是你身边的几个人。</p>
</li>
<li><p>不惹眼，不闹腾，也不勉强自己，要做个落后于时代的人，凝视人心」</p>
</li>
<li><p>节目里，陈锡文说：「几亿人要转为城市居民，这个过程你是迟早要来，这种城市化，能带来多大的投资，造成多大的消费市场，不可估量，潜力极大，但问题是，现在才只有一半人进城，地就成了这样，污染成了这样，以后怎么办？不认真考虑，很难说这件事是祸是福。中国经济如果出问题，一定是农村经济出问题，中国未来一个大的坎就是几亿人进城，就看这个坎能不能过得去。」</p>
</li>
<li><p>几亿人要转为城市居民，这个过程你是迟早</p>
</li>
<li><p>其实我从来不拍政治，我只拍普通人，只不过普通人的生活反映出了政治。」</p>
</li>
<li><p>文明，就是停下来想一想自己在做什么。</p>
</li>
<li><p>觉得如果只有物质，那只有害怕，如果有比物质更重要的事情，就不用害怕了。」</p>
</li>
<li><p>脑子里没有障碍才是自由。</p>
</li>
<li><p>破坏和脱离精神依赖并得到独立意识的手段就是相信自然科学。人们只有相信科学，才能独立思考，才能在精神方面获得自由。」这过程意味着人人可得。</p>
</li>
<li><p>他在信中提到一个在非洲塞拉利昂参加内战的十二岁小孩，杀了很多人，为了避免受不了的感觉，他天天吸毒。后来这个孩子在联合国的会议上解释：「我们加入部队的原因是，我们找不到可以吃的，失去了自己的家，但同时盼望着安全，盼望着自己属于什么，在这个所有归属都垮下来的时代。」 他说这跟留守儿童的情况是相似的，只不过极端得多，夸张得多，「中国的社会没有那样的背景情况，但中国的留守儿童将来也会成为一个失去控制的因素，除非我们能给他们带来归属感。」 这也是当下的中国人最强烈的感受。这样一个快速变化的时期，传统的家族，集体断了，新的又没有建立起来，空虚只会导致消费和破坏，只有当人们能感到创建自己世界的满足，不会与别人去比较，不会因为钱，因为外界的压力感到被抛弃，这才是真正的归属。</p>
</li>
<li><p>人类大部分的苦都是因为期待的存在。其实，在人生中不存在任何必须的事情，只存在不必要的期待没有任何期待和面子的人生是最美好和自由的。因为这样，人才能听到自己的心。」</p>
</li>
<li><p>做新闻，就是和这个时代的疾病打交道，我们都是时代的患者，采访很大程度上是病友之间的相互探问」</p>
</li>
<li><p>理解的基础是感受。人能感受别人的时候，心就变软了，软不是脆弱，是韧性。</p>
</li>
<li><p>生命是一个流动的过程，人是可以流淌的。宋现在长大成人，有了女朋友，夹在女友和母亲之间，他说多少体会到了父亲当年的感受。柏大夫说给他，也说给我听：「和解，是在心里留了一个位置，让那个人可以进来。」</p>
</li>
<li><p>和解，是在心里留了一个位置，让那个人可以进来。”不是忍耐，不是容忍，她指指胸口，“是让他在我这里头。”陈虻说“宽容的基础是理解”，我慢慢体会到，理解的基础是感受。人能感受别人的时候，心就变软了，软不是脆弱，是韧性。柏大夫说的，“强大了才能变软”。我有一个阶段，勒令自己不能在节目中带着感受，认为客观的前提是不动声色，真相会流失在涕泪交加中，但这之后我觉得世间有另一种可能——客观是对事件中的任何一方都投入其中，有所感受，相互冲突的感受自会相互克制，达到平衡，呈现出“客观”的结果，露出世界的本来面目。</p>
</li>
<li><p>他说得有理，长夜无事，四下无声，我搬出这些本子，抄抄写写，有疑惑也写下来，试着自问自答。闲而求知，没有了什么目的，只是为了解开自己的困惑。眼酸抬头时，看到窗外满城灯火，了解他人越多，个人的悲酸欢慨也就越不足道，在书中你看到千万年来的世界何以如此，降临在你身上的事不过是必然中的一部分，还是小宏那句话：「只是生活本身矛盾密布。」</p>
</li>
<li><p>陈虻是哈尔滨工业大学光学工程专业的，孙玉胜任命他当制片人时，他才三十出头，部里很多有资历的纪录片人，觉得他没什么电视经验，有点抱臂旁观。他上来就不客气：「别以为你拿个机器盯着人家不关机就叫纪实，这叫跟腚。你的理性到场没有？」</p>
</li>
<li><p>这些年他总嘲笑我，打击我，偶尔他想弥补一下，请我吃顿饭，点菜的时候，问：「你喝什么？」 我没留心，说：「随便。」 他就眉毛眼睛拧在一起，中分的头发都抖到脸前了：「随便？！问你的时候你说随便？！你已经养成了放弃自己分析问题、判断问题、谈自己愿望的习惯了！」 这顿饭算没法吃了。</p>
</li>
<li><p>我说：「十年前咱们在『东方时空』，你写过一篇文章《天凉好个球》，里头不是引过一句里尔克的诗嘛——『哪儿有什么胜利可言，挺住意味着一切。』」</p>
</li>
<li><p>我说了郝劲松的故事，「他说人们在强大的力量面前总是选择服从，但是今天如果我们放弃了一点五元的发票，明天我们就可能被迫放弃我们的土地权、财产权和生命的安全。权利如果不用来争取的话，权利就只是一张纸。」</p>
</li>
<li><p>「一个国家由一个个具体的人构成，它由这些人创造并且决定，只有一个国家能够拥有那些寻求真理的人，能够独立思考的人，能够记录真实的人，能够不计利害为这片土地付出的人，能够捍卫自己宪法权利的人，能够知道世界并不完美、但仍然不言乏力不言放弃的人，」我回身指了指背景板上这几个字，「只有一个国家拥有这样的头脑和灵魂，我们才能说我们为祖闻骄傲。只有一个国家能够珍重这样的头脑和灵魂，我们才能说，我们有信心让明天更好。」</p>
</li>
<li><p>当下此刻，避人默坐，以处忧患。</p>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 书摘 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 书摘 </tag>
            
            <tag> 柴静 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第九周 - 一周大事件]]></title>
      <url>http://chuanqiang.github.io/2017/08/20/week-news/</url>
      <content type="html"><![CDATA[<p>终于在官网上购买了 mac book pro 2017 15寸 512G 版本，不出意外的话下周到货。so，剩下的就是幸福的等待了。</p>
<a id="more"></a>
<p><img src="http://oeckzejn4.bkt.clouddn.com/blog/170820/HDkml6kGc2.png?imageslim" alt="等待苹果官网审核"></p>
<p>关于这次的剁手，其实远在大学时代就已经在心里埋下了十分茂密的草。高三暑假，读了乔布斯传，了解了苹果这家伟大的公司及其旗下伟大的那些产品。那句『thank different』至今是许多人的座右铭。</p>
<blockquote>
<p>致疯狂的人：<br>致疯狂的人。他们特立独行。他们桀骜不驯。他们惹是生非。他们格格不入。他们用与众不同的眼光看待事物。他们不喜欢墨守成规。他们也不愿安于现状。你可以认同他们，反对他们，颂扬或是诋毁他们。但唯独不能漠视他们。因为他们改变了寻常事物。他们推动人类向前迈进。或许他们是别人眼里的疯子，但他们却是我们眼中的天才。因为只有那些疯狂到以为自己能够改变世界的人……才能真正改变世界。</p>
</blockquote>
<p>苦于学生时代的拮据，没能入手。如今终于有了购买的能力，借着这次官网有教育优惠的东风，想狠狠的剁手一把，直接搞顶配。期间也有多次犹豫，在各种代购和官网间犹豫，在版本配置上徘徊。最终狠了狠心，顶着肉疼决定剁手15寸的顶配。『天生我材必有用，千金散尽还复来』，两万多固然是一笔不小的投入，但对于生产力的投资所带来的收益相信更是不可估量的。有了装备加持，更要要求自己写出更优雅的代码。</p>
<p>公司在周五举行了小型的生日趴，也相当于下午茶活动了。每个月过生日的同事选择某一天一块庆祝，放音乐、点蜡烛、吃蛋糕。既增加了公司认同感，又缓解了员工的工作压力，不失为一个好办法。公司大的福利待遇很一般，但是小福利不断，比如生日趴啦，发送零食啦，免费领抽纸、鼠标垫等小物品啦，免费加班餐啦，每周五下午体育馆的预定等，虽然不是多大的付出，但能然员工感到公司劳动力剥削之外温情的一面。恩，这个套路不错^O^<br><img src="http://oeckzejn4.bkt.clouddn.com/blog/170820/j37JC5B2iI.JPG" alt="生日趴"></p>
<p>周六撸了『权利的游戏』第七季第五和第六集，龙母和雪诺被网友戏称为杨过和小龙女，异鬼将要和守夜人正面较量了，夜王真是个大boss，竟然同化出了冰龙。寒冬将至，静等这部伟大的剧接下来讲述的故事。<br><img src="http://oeckzejn4.bkt.clouddn.com/blog/170820/f664gCdgle.JPG" alt="龙母"><br><img src="http://oeckzejn4.bkt.clouddn.com/blog/170820/bmJaD1Le6D.JPG" alt="夜王"></p>
<p>接下来的一周，继续好好撸代码，争取通勤时间把柴静的『看见』读完。一直想写一个关于优质软件分享的系列，手机 APP 和 Windows 下的，希望下一周可以完成。</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 周记 </tag>
            
            <tag> 大事件 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第八周 - 仗剑走天涯]]></title>
      <url>http://chuanqiang.github.io/2017/08/13/to%20wander%20with%20a%20sword/</url>
      <content type="html"><![CDATA[<blockquote>
<p>曾梦想仗剑走天涯<br>看一看世界的繁华<br>年少的心总有些轻狂<br>如今已四海为家</p>
</blockquote>
<a id="more"></a>
<p>这周过的，怎么说呢，此起彼伏。项目只是一个小版本的迭代，由于一开始产品那边有一些需求没有确定，所以开始的开发任务很是轻松，慢悠悠的捣鼓新 IED 工具的使用，但是到了上线当天的下午，突如其来的需求，有点让我措手不及。没办法，加急改呗。生活就是这样，总是不按常理出牌，你永远不知道在峰回路转处埋伏的是惊喜还是惊吓。</p>
<p>在大学之前，我从没有想过自己会从事程序开发的工作，那时候想的是当个人民教师，教书育人，因为讲台上的老师很神气啊，或者当个医生，救死扶伤。后来到了大学，开始越来越迷茫，我相信大多数人那个时候都迷茫，一边是热血青春，荷尔蒙爆棚，另一边“英雄无用武之地”，不知道到哪里去发挥自己的光和热，所以只能挥汗于球场，或奋战于游戏，或沉溺于情爱，或在酒杯碰撞间觥筹交错了。之后开始了解和学习编程，当时觉得这东西玩智商，能做别人不懂的事情，很酷； 一些程序员都是在空调房里敲敲键盘就有可能冷不丁改变了世界，像马化腾、扎克伯格，并且还坚信，我能让这个世界变得好了一点点。后来工作之后发现，理想很丰满，显示忒他妈骨感，都瘦的柴了。抱怨的不想说太多，但抛开傲慢与偏见，我依然认为程序员是这个时代里不错的职业。无论程序员自嘲也好，被误解也罢，虽然普遍给人衣着邋遢、气质差的印象，但不可否认的是，程序员依旧是互联网时代的宠儿。</p>
<p>作为一个程序员，除去加班和职业病的隐患，有时候一个人闷头撸代码还挺享受的。不会考虑外界的纷纷扰扰，没有了交际的繁杂，只要按时保质的完成你的工作，没人催你，更没人盯着你、管着你。你只需把全部精力放在一尺见方的屏幕上，指尖在茶轴的机械键盘上光影闪烁，神经末梢感触着键程的起伏和段落感，同样也感触着内心的思考和表达。抽象的思考通过手指的舞蹈伴随键盘敲击的清脆，在四四方方的屏幕上刻画出了具体的影像。有时，障碍重重，debug了n多次，头绪好像都见了周公，键盘的声音都充满了代码块战死沙场的悲怆。有时一路的风生水起，披荆斩棘，指尖下行云流水，一路的悦耳叮咚。</p>
<p>如果把写代码比做金庸笔下刀光剑影的武侠世界，那一件趁手锋利的武器，必是每个侠客梦寐以求的梦想， 剑气纵横三万里，一剑光寒十九州，好的武器能助你在代码的武侠世界里挥刀斩棘，剑出风惊。对于我来说，这把梦寐的利器当然就是 Mac Book Pro 了。其实从大学开始，就对苹果的产品入迷，但当时作为一个穷学生，也只有仰之弥高了。如今工作之后，具备了条件，当然是时不我待，准备入手。<br><img src="http://oeckzejn4.bkt.clouddn.com/blog/170813/L16mlDD2IF.png?imageslim" alt="mark"></p>
<p>当然，对于入手 Mac Book Pro ，我是做过思考的。平心而论，首先这款产品，并不具有性价比，同样的价格可以买两台性能不错的 Windows电脑了。其次，从Window迁移到 mac os x 系统，有一定的学习成本和割舍，毕竟系统有差异，许多软件不具备跨平台，意味着你要告别一些软件，开始一些新的软件的探索。另外，你要步入苹果封闭的生态圈，可能你以后购买产品时都被圈养在这个圈里了。你的苹果设备上有许多软件，这些软件优质但只有ios和mac版，你的用户数据都存储在这些软件上，你的用户习惯已经养成，这个时候，你已经被牢牢的栓在了苹果的生态圈里，你的下一款设备毫无疑问是苹果。是的，你已经无法逃离。说的挺恐怖悲观的，但是，我还是想一头扎进去，并在心里默念：apple，俘获我吧。原因很简单:信仰，颜值，续航，屏幕，优秀的工业设计，稳定流畅的系统，生态下的优质软件，和其他苹果设备的无缝连接。。。当然更深层次的优劣必须长期使用后才能得出，凡是不以体验为结果的测评都是耍流氓。</p>
<p>我认为当下最好的投资，就是投资自己。我一直坚信成长比成功重要。所以我会毫不犹豫的选择mac，因为投资生产力准没错。</p>
<p>期待着我和它仗剑走天涯。</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 周记 </tag>
            
            <tag> mac </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第七周 - 软件之我见]]></title>
      <url>http://chuanqiang.github.io/2017/08/06/soft/</url>
      <content type="html"><![CDATA[<p>不知从什么时候开始，我喜欢上了捣鼓软件，无论是手机APP还是PC软件。关注想『少数派』、『数字尾巴』、『小众软件』这些网站，喜欢折腾这些数据和指令的集合体，从陌生到熟悉，欣赏它们的UI设计，看它们的功能实现。在每一个软件中你能感受到开发者的理念，虽然各有美丑，但欣喜于软件在作用于生活后带来的改变，虽然可能很甚微，但总归让枯燥的生活变的不一样和有趣了一些。</p>
<p>有一句关于程序员自我意淫的话，但我依然喜欢叨念:</p>
<blockquote>
<p>程序员改变世界</p>
</blockquote>
<a id="more"></a>
<p>就像知乎上有一段话:</p>
<blockquote>
<p>每当大家觉得格局确定了，总会有那么一两个程序员走出来，翻动那个真正能彻底改变棋盘的子。过去的很多传统行业都经历了从新兴到高速发展再到稳定继而沉闷的各个阶段。如同海上贸易，钢铁，石油，化工，机械，半导体等等。然而互联网和这些如此的不同，以至于经过了快三十年的发展，依然不断涌现出挑战你世界观的产品和概念。</p>
</blockquote>
<p>改变世界或许很困难，但改变自己的生活就容易的多，有时候是一部电影，一本小说，也可能只是一个软件。这周接触到了不同的三款软件，在不同的领域，有不同的作用，但各赋异禀。</p>
<p>第一个是chrome浏览器上的一款插件，叫『Infinity』。它重新定义了新标签页，在极简、美观的前提下，提供了一站式服务的标签页，更好用、更强大、更优雅、更轻松的使用 chrome。<br><img src="http://oeckzejn4.bkt.clouddn.com/blog/170806/kLm6LD5HAc.png?imageslim" alt="Infinity"></p>
<p>第二个是著名的 IDE 软件 IntelliJ IDEA，从Eclipse 转到这个上面真的不容易，长时间使用养成的习惯很难改变，但既然下决心『分手』，那就长痛不如短痛吧。耐下心来慢慢摸索，现在渐渐适应了Idea的使用，但仍感觉Idea相比Eclipse太过厚重，界面也不简约，但厚重在另一方面也就意味着功能强大，相信顺手之后会成为开发过程中的一件利器。<br><img src="http://oeckzejn4.bkt.clouddn.com/blog/170806/9GLB1jaFAd.png?imageslim" alt="IDEA"></p>
<p>第三个是一款手机游戏——『皇室战争』，是由芬兰游戏公司Supercell所推出的，以《部落冲突》的角色和世界观为原型，加入即时策略、MOBA以及卡牌等元素的手机游戏，于2016年1月4日在App Store发布。在游戏中，玩家需通过不断的开启宝箱来获取卡片的方式来增强自己的战斗力，进而与其他在线的玩家进行匹配战斗。随着奖杯提升，开启不同场地的竞技场。这款游戏极具新意的融合了卡牌、塔防多种元素的对抗竞技玩法，具有上手容易精通难的特点，总之是一款很不错的游戏，可以打发无聊的琐碎时间。<br><img src="http://oeckzejn4.bkt.clouddn.com/blog/170806/BHK3FH3iL3.jpg?imageslim" alt="皇室战争"></p>
<p>我们与互联网交互其实大都是通过软件实现的，无论是浏览器还是手机APP，他们是我们与数据交互的入口和平台，他们体验的好坏直接影响了你对于所处的互联网生活的感受是好还是坏。其实通过体验不同的软件，你会发现好的工具，一定是『有用』、『好用』和『耐用』的。</p>
<p>所谓有用是说对于我们用户来说首先得是以需求为先导的，华而不实的软件无法融入到你的生活，比如我有社交的需求，那我就选择了微信，我有写东西的需求，那我可能会选择『MarkEditor』，那我写完还想分享给别人，那我可能会选择『简书』，想要再PC上快速搜索东西，那我选择了『everything』，等等这些软件都是抓住了需求点的，有一款绘画类软件做的特别好，但是我对画画不感兴趣，那也不是我的菜，不会下载到手机上的。找对需求是你使用软件的第一步，当然，纯粹为了折腾，体验完删掉了，这种的不算。</p>
<p>其次是好用，同质化的软件那么多，凭什么你会脱颖而出，只有优秀的用户体验，简约美观的UI 才能抓住用户的心。稍后读类的软件有很多，比如pocket、Instapaper ，但我最后还是选择了『收趣』，就是因为本土化，用起来顺手，交互方便，并且颜值高。我的手机上文本编辑类软件有好多，ios自带的备忘录，Bear、有道云笔记，简书、wps，但平时写东西就喜欢用『Bear』，原因很简单，好看呗，写东西的时候心情舒服，左右滑动为主的交互简洁方便。</p>
<p>最后是耐用。可能会问，软件又不是实物，怎么存在耐不耐用的问题呢？当一款软件你长久的使用后，你会保留在这款软件上你的数据，包括操作习惯的设置，用户保存的数据。这些数据是这些软件流动的血液，是他们的灵魂。没有了数据，他们什么都不是。其实推此及彼，不只是在软件，整个互联网时代最重要的就是数据，是互联网公司的立命之本。像阿里巴巴、腾讯为什么市值这么高，肯定不是固定资产，说白了就是数据，他们都是靠用户的数据活着的，用户也是用因为这些数据才能网上购物、微信聊天的。再回到软件，一款软件怎么才能耐用、耐糙呢？关键是数据的保存。软件是建立在平台上的，不论是手机、电脑还是平板，它得有一个硬件来承载。软件在互联网上的寿命可以无穷尽，但是硬件不行，当你更换了硬件设备之后，如何还能无缝的启用你的数据信息，这是软件耐用的本质，因为它会延长我们对一款软件的使用时间，也就是提高了一款软件对于你而言的寿命。有两个条件：1.云存储。2.跨平台。云存储提高了软件的跨时间的能力，而跨平台加上了软件的跨空间的能力。这样用户无论迁移到哪一个平台，都能毫不费力的『复活』你的软件，也提高了一款软件作为商品的受众人群。</p>
<p>综上，我觉得，一款软件只有具备了以上三个特性：有用，好用，耐用，才是一款称得上优秀的软件。</p>
<p>生命不息，折腾不止。折腾软件，也折腾生活。</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 周记 </tag>
            
            <tag> 软件 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第六周 - 坝上草原旅行日志]]></title>
      <url>http://chuanqiang.github.io/2017/07/29/bashangGrassland/</url>
      <content type="html"><![CDATA[<p>生活有时候像一座牢笼，把我们困在一个狭小的范围内，从家到公司的距离经常是我们每天出行距离的端点。生活满是纷纷扰扰的琐碎，我们已经很少抬头眺望一下远方的景色了。</p>
<a id="more"></a>
<p>傅真在『最好金龟换酒』中有一针见血的描述:</p>
<blockquote>
<p>一年又一年，时间就这样从键盘间溜走。回首时觉得时光飞逝，可是落实到每一天又好似度日如年——每天都望眼欲穿地盼望着周末，盼望着假期，而这一姿态本身又让我觉得心酸而惶惑，仿佛是在盼望着时间的飞速流逝，盼望着自己的生命早日终结。</p>
</blockquote>
<p>我虽然没有这么悲观的情绪，但最近加班赶项目也确实挺累的，心理和身体上都需要来一个『诗和远方』的洗礼了。老板也是体贴入微啊，为我们产品中心的人组织了一个周末两天的小团建，让我们好好放松一下。地点是丰宁坝上草原，我从没有见过草原，只在『天苍苍，野茫茫，风吹草地现牛羊』的诗句中竭力想象过。这次终于可以亲眼看看天似穹庐，笼盖四野是什么样子了。</p>
<p>先在网上搜了下坝上草原的资料:</p>
<blockquote>
<p>坝上草原主要位于河北省境内，特指由草原陡然升高而形成的地带，又因气候和植被的原因形成的草甸式草原。张家口以北100公里处到承德以北100公里处，统称为坝上草原地区。<br>坝上草原是坝上高原的重要组成部分，位于内蒙古高原与大兴安岭南麓的接壤地带。平均海拔高度1500—2100米，平均气温约1.4-5度，西起张家口市的张北县、尚义县，康保县、中挟沽源县、丰宁县，东至承德市围场县。<br>坝上草原主要又分为围场坝上(木兰围场)、丰宁坝上、张北坝上和草原天路等区域组成，是内蒙古高原的重要组成部分，其中木兰围场县-乌兰布统大草原最为美丽，丰宁坝上草原位于北京正北的河北省丰宁满族自治县，是离北京最近的天然草原，又名“京北第一草原”。<br>坝上草原属温带季风气候，冬季漫长，夏季无暑，清凉宜人，7月平均气温摄氏24度，水草丰茂、富饶美丽、冬夏分明、晨夕各异</p>
</blockquote>
<p>以下是两天的旅行日志，中间穿插了些琐碎的描述和想法。</p>
<hr>
<h2 id="坝上草原旅行日志"><a href="#坝上草原旅行日志" class="headerlink" title="坝上草原旅行日志"></a>坝上草原旅行日志</h2><blockquote>
<p>时间：2017.7.22-2017.7.23<br>天气：阴转小雨<br>地点：河北坝上草原  </p>
</blockquote>
<ul>
<li>2017.7.21 一天处于兴奋中。<ul>
<li>看电脑屏幕的代码都变成了茫茫的大草原。下班先去了体育馆和同事打了球，回家后收拾要带的东西。看了攻略，带着长袖衣服，因为得知住酒店，没有带洗漱用品，后来才知道完全被导游的失误给坑了。最好带着驱蚊的和换洗鞋袜。</li>
</ul>
</li>
<li>2017.7.22 早八点于公司乘坐大巴车出发。<ul>
<li>不用担心早餐问题，因为公司的人事姐姐们很体贴的帮我们准备好了早餐(此处有赞)。汽车开动，吃饱喝足，补了个早觉。</li>
</ul>
</li>
<li>依次经过怀柔，丰宁，河北高速，千松坝，京北第一天路。<ul>
<li>睡醒一觉，一看外面，卧槽，不是做梦吧。这大片的绿色，葱葱郁郁，巍峨的高山近在咫尺，沿途高山流水，风景俊秀。由于刚下过小雨，山顶云雾缭绕，颇有仙境之感。我贪婪的观赏者外面的美景，时间好像被定格，忘记了一切，只剩下这大自然的美丽景色了。</li>
<li>在崇山峻岭间令人真正感觉到了自己是天空和大地的臣民。你能敏锐地察觉到天地间的每一点变化——天色的明暗，云朵的移动，空气的湿度，泥土的气息，风的方向，植物的清香——全都令人感怀至深。只有在这样的时刻，世界才会放慢速度在心弦上跑过，奏出丰富的乐声。<br><img src="http://oeckzejn4.bkt.clouddn.com/blog/170729/HKkD0hgeAg.JPG" alt="mark"><br><img src="http://oeckzejn4.bkt.clouddn.com/blog/170729/898kjbf2H3.jpg?imageslim" alt="mark"></li>
</ul>
</li>
<li>河北高速两侧，低丘草原，马儿驻足吃草。<ul>
<li>再往前，山川渐渐变矮，出现了丘陵和草原，但不变的，仍旧是满目的苍翠，这大片大片的绿色像是上帝泼洒上去的，山壑间更是浓重，仿佛绿色在流动汇集。随着汽车前行，高速路两旁出现了驻足吃草的马儿，第一次见到在自然环境下惬意的马儿，他们像是这自然中的精灵，与天地相容，点缀着苍茫的美景。<br><img src="http://oeckzejn4.bkt.clouddn.com/blog/170729/dgkI6h7Cbf.jpg?imageslim" alt="mark"></li>
</ul>
</li>
<li>路途间穿过许多条长长的隧道</li>
<li>于下午一点多在『草原寒舍度假酒店』，下榻并吃午餐。<ul>
<li>店如其名——『寒舍』，住的一般，两人一间，竟然没有洗漱用品，这着实在意料之外，自己也没有带，导游也没有提这个，感觉这是他的失职，算了，入乡随俗，看风景就好。午餐做的还好，说不上丰盛，但食材都是当地纯天然的，算是纯正的农家饭吧。其中红烧鱼做的比较鲜嫩，红烧肉酸菜豆腐不错，红烧肉肥而不腻。住宿的地方在二楼，屋外的风景很好，窗外是低缓的小丘，举目皆绿，视野开阔，雨后苍翠的丘陵延绵起伏。<br><img src="http://oeckzejn4.bkt.clouddn.com/blog/170729/AKCkIC8CHC.png?imageslim" alt="mark"></li>
</ul>
</li>
<li>小雨还在淅淅沥沥，午饭后小憩休息一下。</li>
<li>下午三点，整装出发。</li>
<li>到达草场，因为下午有许多泥泞。看了『闪电湖』，听他们说现在高处看湖的形状酷似闪电而得名。<br><img src="http://oeckzejn4.bkt.clouddn.com/blog/170729/adC8cfmfK3.JPG" alt="mark"><ul>
<li>是有些失望的，因为我想象中的草原最起码要一望无垠，并且一马平川的那种，但在这里远处是有些低缓的丘陵的，草原的面积也没有那么大。不过风景总归是挺美的。从繁忙的都市来到这里，有种恍如隔世的错觉。<br><img src="http://oeckzejn4.bkt.clouddn.com/blog/170729/BIDb8CC4Fm.JPG" alt="mark"><br><img src="http://oeckzejn4.bkt.clouddn.com/blog/170729/807dHgD8hH.JPG" alt="mark"></li>
</ul>
</li>
<li>五点，返程住处，路经『大汉行宫』，辉煌壮丽，驻足拍照。<br><img src="http://oeckzejn4.bkt.clouddn.com/blog/170729/b24mgcbg87.JPG" alt="mark"><br><img src="http://oeckzejn4.bkt.clouddn.com/blog/170729/flj2Ihh9mE.JPG" alt="mark"></li>
<li>晚上，篝火晚宴，吃烤全羊<ul>
<li>晚上是重头戏，出来放松，看风景是一部分，另一部分就是『吃喝玩乐』。现杀的膘肥体壮的小绵羊，提前用葱段、姜片、花椒、大料、精盐搓擦入味，将羊尾用铁签别入腹内，胸部朝上，四肢用铁钩挂住皮面，刷上油。不时将白条羊在火上左右翻转，在炭火的熏烤下，阵阵香气飘来，一直烤到表面金红油亮，香味喷发，外焦里嫩为止。天色渐晚，草原的夜色，朦胧醉人，雨后青草香和烤羊肉的香气扑鼻而来，孔明灯放飞，篝火架起，一闪一闪的火焰给夜色增添了神秘和草原的粗犷。人群在篝火处聚集，动感音乐声起，我们手拉手围着篝火唱歌跳舞，篝火热烈的火焰沸腾着我们默然已久的内心，我们大声歌唱、大声欢笑，此时此刻，每个人都像是天真的孩子。一会，羊肉香气渐浓，烤全羊也好了。我们一手握着啤酒瓶，一手在烤羊架上撕下香嫩的羊肉沾着佐料大口吃着，在这种原始的吃法中体验着草原汉子的粗犷豪迈。篝火晚会持续到凌晨，跃动的篝火和烤羊香一直伴随到我的梦里，沉沉睡去。</li>
</ul>
</li>
<li>2017.7.23，吃过早饭，去附近的『孤山子』上溜达，拍照、看风景。看到山脚的养蜂人，山头上闲适吃草的马，山下大片大片的油菜花。<br><img src="http://oeckzejn4.bkt.clouddn.com/blog/170729/0KAGfJ3g62.JPG" alt="mark"></li>
<li>一个意外的惊喜，没赶上大部队去骑马，但是在孤山子碰到一个租马的老头。租了两匹马。<ul>
<li>这些马儿都特别温顺，不用什么护具，也没人管着，我们只要按时归还马匹就行。我们四个围着山脚一边看着风景，一边骑马溜达。当然只是溜达，我也想策马奔腾一下，但是这是我人生的第一次骑马，还是抑制住了这个大胆的想法。近距离的观察马儿这个动物，也不住的感慨，上苍真是偏心啊，对马这种动物如此垂青，赋予了它健美的身躯，优雅的体型，潇洒的鬃毛。骑在马上，有种特别的感觉，可能是因为从未有过的体验而倍显特别吧。掌握好马行走的节奏，抓好马缰，双腿加紧马身，前脚掌踏好马踏，在马背上居高临下，想象着自己是古代骑着马的威风凛凛的大将军。<br><img src="http://oeckzejn4.bkt.clouddn.com/blog/170729/Ihe3bLCG85.JPG" alt="mark"><br><img src="http://oeckzejn4.bkt.clouddn.com/blog/170729/ejGADGi8LB.JPG" alt="mark"></li>
</ul>
</li>
<li>2017.7.22，十二点半，吃过中午饭，收拾返京。</li>
<li>回去一路上，风景更是惊为天人。走盘山公路，从一千八百多米的海拔下去后，竟然出现了短暂的耳朵嗡鸣现象。</li>
<li>回去走京城高速，路过雁西湖，有雁西湖国际会展中心，造型独特。<br><img src="http://oeckzejn4.bkt.clouddn.com/blog/170729/0hJEdfhI5f.JPG" alt="mark"></li>
<li>由于回去路上堵车，于六点左右到家。</li>
</ul>
<hr>
<p>不知为何，虽然草原的景色旖旎，但回来的一路上并没有对那里有过多的留恋和不舍，反而希望早点回到家，连着wifi，吹着空调吃西瓜。美丽的景色，只有经久不见和难得一见的时候才凸显出她的美。许巍唱『生活不止眼前的苟且，还有诗和远方的田野』，可是诗和远方的田野是在生活的琐碎中酝酿出了发现他们美的眼睛和赞叹他们美的声音的。</p>
<p>在城市中忙忙碌碌的时候，也会想到远方有美丽的景色在等着我们，并且相信下一次相会不会很久。</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 周记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第五周 - 夏天]]></title>
      <url>http://chuanqiang.github.io/2017/07/16/summer/</url>
      <content type="html"><![CDATA[<p>已经入伏了，天气闷热难耐。所谓入伏，其实就是进入了三伏天，也就是是出现在小暑与处暑之间，是一年中气温最高且又潮湿、闷热的日子。百度百科说，三伏天的『伏』就是指『伏邪』，即所谓的『六邪』（指“风、寒、暑、湿、燥、火”）中的暑邪。</p>
<a id="more"></a>
<blockquote>
<p>2017年三伏天：<br>具体时间：<br>2017年7月12日~2017年7月21日 为初伏 10 天<br>2017年7月22日~2017年8月10日 为中伏 20 天<br>2017年8月11日~2017年8月20日 为末伏 10 天</p>
</blockquote>
<p>有句话叫『装睡的人叫不醒』，但现在这句话有了下文——『你把空调关了试试』。三十多度的炎夏，其实如果是在乡村，不吹空调也是可以忍受的。小时候，晚饭后树下乘凉，吃西瓜，吱悠悠的电风扇，清凉解渴的绿豆汤，是伴随整个夏天的驱暑手段，没有这些，好像夏天也就变得不像夏天了。而在高楼林立，到处都是钢筋混凝土的都市，由于这些材质的比热容特性，再加上城市的热岛效应，如果没有了空调，那将是惨不忍睹。试想如果地铁上没有空调，如果还是早高峰的话。。。所以，家里、地铁上、公司，三个地方空调轮着吹，中午都改成了定外卖，同事以前常寒暄的用语也从『中午去哪吃』变成了『中午订哪家的外卖』。古人没有空调，平常人家最常用的莫过于扇子了。如果很不幸你家停电了，那你只能借白居易的一首诗来消暑了:</p>
<blockquote>
<h4 id="消暑诗"><a href="#消暑诗" class="headerlink" title="消暑诗"></a>消暑诗</h4><p>何以消烦暑，端坐一院中。<br>眼前无长物，窗下有清风。<br>散热由心静，凉生为室空。<br>此时身自保，难更与人同。</p>
</blockquote>
<p><img src="http://oeckzejn4.bkt.clouddn.com/blog/170716/Jk9lCG13FK.png?imageslim" alt="白居易躺"></p>
<p>虽然夏天有蚊子和烈日炎炎，但是也有树荫和凉风，冰激凌和甜西瓜，有美女的碎花裙和追逐的轻罗小扇。当然，学生时代还有漫长快乐的暑假。那年夏天，可能也像现在的天气，我坐在学校图书馆的一角，矫情的感叹着那个夏季:</p>
<blockquote>
<p>衣服上的汗渍<br>晒蔫儿的叶子<br>扑面而来的热风<br>无力摇着头的风扇<br>气温挑战体温的极限<br>汗毛孔妥协流着汗<br>太阳的殷勤<br>我们的哀叹<br>就像<br>热情的单恋</p>
<p>树荫下的凉风<br>温柔了谁的梦<br> 少女的碎花裙<br>装点了哪家的风景<br>追逐的轻罗小扇<br>拂出外婆的思念<br>萤火虫的小官灯<br>一闪一闪<br>映出童年的鬓面</p>
<p>夏日里<br>苍白的试卷<br>沙沙吟唱的笔尖<br>解放前的最后一战<br>蹩脚的告别<br>毕业了的青春<br>不会再见的再见</p>
<p>这个夏天<br>会不会留恋<br>会不会怀念<br>热情的单相思<br>终会成为<br>无法回头的爱恋</p>
</blockquote>
<p>现在拥挤在人潮人海，时间流转的匆匆忙忙，生活在仓促中跌跌撞撞，心里都是麻麻木木，遇到这样的天气，连抱怨都直接了当:『真他妈的热』!</p>
<blockquote>
<p>星空和大地<br>汹涌和安息<br>激情澎湃和麻木的自己<br>成熟和跨不去的幼稚<br>连不成思绪<br>也讲不出故事<br>这是夏天<br>也是四季</p>
</blockquote>
<p>『完』</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 周记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第四周 - coding 之后]]></title>
      <url>http://chuanqiang.github.io/2017/07/10/after-coding/</url>
      <content type="html"><![CDATA[<p>图书项目wap端和后台终于上线了，看着自己写的代码，有条不紊的跑在服务器上，用抽象的逻辑，托起一个个色彩斑斓的页面。看 Log 在漆黑背景的 xshell 里一行行的输出，像是新生婴儿柔嫩却充满生命力的脉搏。</p>
<a id="more"></a>
<p><img src="http://oeckzejn4.bkt.clouddn.com/blog/170710/i6adCaGf2F.png?imageslim" alt="图书首页"><br>该项目的功能主要是一个图书商城，这次完成的是图书后台和移动浏览器端的实现，技术难点不多，但是杂，页面较多，关于购物车、物流、页面效果等实现上费心不少。</p>
<p>开发的最后这一周，可谓艰辛。我从没想到自己能有这么强的战斗力，连续熬夜，奋战到后半夜，除了coding，心无旁骛。每天想的都是如何解决bug，吃饭和睡觉都成了成了写代码的条件。在全身心投入的状态下，时间过得飞快。有一天，熬到后半夜四点，仍然劲头十足，脑袋正常流转。自己在朋友圈里嘚瑟了一下：</p>
<blockquote>
<p>其实来瓶红牛，我还能再战！  </p>
</blockquote>
<p>在这种节奏中，我竟找到了对生活久违的激情。在高压下的人往往能做出自己意想不到的事情，所以也懂得了一个道理，那就是:</p>
<blockquote>
<p>人就是天生懒惰得动物，所以必须逼一逼自己。  </p>
</blockquote>
<p>当然，之所以最后这么紧张，还是因为自己的原因导致的，好在终于如期发版了。虽然仍有遗憾，有bug和不完美，但既然『人无完人』，这些bug在不影响功能的前提下，之后再改掉便可。这期间多亏了儒冰哥的相助，要不是他，肯定又要延迟上线的。</p>
<p>这次从出需求，到页面设计，到代码实现，测试，上线。回顾整个过程，其实自己心里是不满意的。期间暴露出了许多的问题，包括技术上的以及心态上的。</p>
<p>首先，体现出的是技术上的不足，直接导致的是开发的效率低，代码反复纠错，不能一气呵成正确且漂亮的代码。虽然有初入公司，对原有框架和业务的不熟悉，但更多的是经验和积淀薄弱，遇到一些问题，不能最快最好的做找到解决的切面，不能像冰哥似的一看问题就能大致知道可能是哪出的错，而不是像无头苍蝇似的翻找代码。</p>
<p>第二，细节问题。虽然程序猿里绝大部分是英勇无畏的汉子，但coding代码确实是一个特别细致的活，需要你认真仔细。一个标点，一个符号错了都能导致程序崩溃。因此需要你把握每一个丁点儿的细节，杜绝似是而非，马马虎虎。另外还需要掌握技术的细节，比如jQuery函数你可能写的挺顺，可是忽略了冒泡的问题，也有可能知道要避免冒泡，但却因为采取的方法不同，在阻止冒泡事件的同时，也把默认事件给阻止了。总之，事无巨细，摆好心态。</p>
<p>第三，没有预估好工作量，过于懒惰和乐观。前松后紧的节奏，把事情堆压到了最后一两周，导致最后很被动，只能加班加点的搞了。在做计划的时候一定要把时间压缩80%，比如让你十天做的任务，一定要在前八天做完。因为计划赶不上变化，就出应对突发事件的余地。也就是所谓的『凡事预则立不预则废』。</p>
<p>接下来是pc前端的功能实现，吃一堑，长一智。一定要接受教训，不能重蹈覆辙，尽量做的迅速而完美。其实撸代码像是写作亦或书法，每个人有每个人的风格，除了代码的对错，也有美丑之分。美的代码体现在格式到里面的逻辑到封装性，从而体现在功能的容错性、稳定性、性能等等。</p>
<p>把 coding 这个看似枯燥的工作，当成一个思维的乐趣和充满意义和美感的事情，这是以后心态上自己要转变和追求的。</p>
<p>『完』</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 周记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[在初创公司你能得到什么]]></title>
      <url>http://chuanqiang.github.io/2017/06/17/start-up-company/</url>
      <content type="html"><![CDATA[<p>进入一个初创的互联网公司意味着你选择了一条充满荆棘的路。工作强度高，因为一些制度的不完善导致额外的工作量;因为公司资金短缺，福利待遇也不尽人意.唯一欣慰的可能就是面试时谈好的工资能按时发，虽然还可能面临公司经营不善倒闭的风，不过进入这种初创公司也能有不一般的体验和成长。</p>
<a id="more"></a>
<p>首先，小公司没有那么多条条框框，能够做到扁平化管理。就比如我们公司，领导员工都坐一块，没有经理、组长、老板的官衔儿，都磊哥、冰哥的叫。公司搞技术的不管什么职位，都忙忙碌碌的写代码。一般来说，公司氛围很好，制度不那么严苛，不像大公司的压抑和那么浓烈的阶级味道。</p>
<p>其次，小公司工作流程还没行程精细化的分配，可能前段后台，数据库表的设计都要你自己来，可能部署、维护、优化都要你亲力亲为。这样的结果是你可以涉及到一个项目的方方面面，而不只是在在后台开发这一亩三分地上耕作，很助于面向全栈开发，虽然累一些，需要学的东西多一些，但对于你技术的积累是很有帮助的。</p>
<p>另外，在初创公司，你可以见证公司的成长。一方面，你可以见证公司技术的更新迭代。初创公司刚开始在技术选型和前期代码的实现上都是不完善的，开始用户量少，没有那么大的并发，加上资金有限和开发周期短，对于一些高并发，分布式可能顾及不到。之后随着用户量的增多，之前的一些技术框架和代码实现肯定要经历重构，这个时候对你来说，可以见证从旧到新的迭代过程，一些框架底层的原理和深层次的意义可以理解的更透彻。</p>
<p>另一方面，你不光能经历一个公司技术的更新迭代，还能见证一个创业公司的成长，看一个创业公司如何从无到有，从小到大。公司成长中的资源分配，人事变迁，制度完善等等，这些对于拥有创业想法的人来说，是十分宝贵的。它能提高你的『逆商』。所谓逆商就是处于一种绝境状态下的自我修复能力。也就是说，人的一生中要经历非常多的挫折和打击，你会发现，抗打击能力强的人，会越挫越勇。大公司里其实都是相对业务上比较成功的公司，其实很难真正让你面对失败，而人只有多吃亏，才能更快成长和进步，这个大公司不会给你，只有创业公司才可以给你。初创公司的成长是一个不断试错的过程，而在这个过程中你能得到历练，并且失败了也是公司承担，对于你个人来说没有什么损失。</p>
<p>最后，在小公司你能获得更快的晋升机会，锻炼管理能力。小公司的人员流动尤其是人才流入是很快的，并且由于受资金限制，也不会招很多大牛。这样当你成长够快的时候，你就能脱颖而出，快速展露头脚。而如果是在一个成熟的大公司，这样的机会是很少的，即所谓的『乱世枭雄』。</p>
<p>综上，要珍惜当下的机遇，快速成长，这才是王道。</p>
<hr>
<p>更新历史</p>
<ul>
<li>2017-06-17:完成初稿</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 初创公司 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第三周 - 成长路上的三个问题]]></title>
      <url>http://chuanqiang.github.io/2017/06/17/three-question/</url>
      <content type="html"><![CDATA[<p>有三个问题，是一直在思考的:</p>
<blockquote>
<p>你想得到什么<br>你能得到什么<br>怎么得到你想要的</p>
</blockquote>
<a id="more"></a>
<p>关于这三个问题，可能一直会伴随着我们的职业生涯和人生轨迹，并且不同的时间问题的答案也可能不同。从某一个角度来看，我们穷其一生就是为了把『你想得到的』通过『怎么得到你想要的』变为『你能得到的』。</p>
<h3 id="你想得到什么。"><a href="#你想得到什么。" class="headerlink" title="你想得到什么。"></a>你想得到什么。</h3><p>从长远来说:</p>
<blockquote>
<ol>
<li>找到为之奋斗一生的事业</li>
<li>经济独立</li>
<li>生活幸福</li>
</ol>
</blockquote>
<p>从短期来说</p>
<blockquote>
<ol>
<li>能力之提高</li>
<li>财富之积累</li>
<li>工作之晋升</li>
</ol>
</blockquote>
<h3 id="当下你能得到什么"><a href="#当下你能得到什么" class="headerlink" title="当下你能得到什么"></a>当下你能得到什么</h3><blockquote>
<ol>
<li>稳定的薪水</li>
<li>历练的机会</li>
<li>成长的空间</li>
</ol>
</blockquote>
<h3 id="怎么得到你想要的"><a href="#怎么得到你想要的" class="headerlink" title="怎么得到你想要的"></a>怎么得到你想要的</h3><p>上面两个是起点和结点，这个问题是起点通往结点的道路。怎么走，走多久，决定走到哪和得到什么。所以这个问题是以后要展开的。</p>
<hr>
<p>更新历史</p>
<ul>
<li>2017-06-17:完成初稿</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 周记 </tag>
            
            <tag> 公司 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[长安十二时辰-书摘]]></title>
      <url>http://chuanqiang.github.io/2017/06/17/changan-twelve-hour/</url>
      <content type="html"><![CDATA[<p><img src="http://oeckzejn4.bkt.clouddn.com/blog/170617/GiFe9h5ei7.jpg?imageslim" alt="长安十二时辰"></p>
<a id="more"></a>
<h2 id="作者简介"><a href="#作者简介" class="headerlink" title="作者简介"></a>作者简介</h2><blockquote>
<p>马伯庸<br>作家。人民文学奖、朱自清散文奖得主，有“文字鬼才”之誉。<br>被评为沿袭“‘五四’以来历史文学创作的谱系”，“文字风格充满奇趣”。</p>
</blockquote>
<p>老者须发皆白，身着宽袖圆领紫袍，腰佩金鱼袋；少年人脸圆而小，青涩之气尚未褪尽，眉宇之间却隐隐已有了三道浅纹，显然是思虑过甚。他穿一袭窄袖绿袍，腰间挂着一枚银鱼袋，手里却拿着一把道家的拂尘。</p>
<p>李泌把外袍胸襟扯开，将双臂撑在沙盘旁边，身子前倾，继续俯瞰着长安城的沙盘。他的犀利眼神扫视着每一栋建筑，似乎想用目光将那头狼生生剜出来。</p>
<p>两人各自跨上一匹，张小敬问道：”去哪？” 徐宾答道：“哎哎，咱们回光德坊的靖安司。” 他看了一眼牙门前的日晷：“得尽快赶到，嗯，得赶快，得跑一刻半呢。” “一刻之内准到。” 张小敬用无名指扫了扫马耳，马匹的灵敏反应让他很满意。</p>
<p>阙勒是个突厥名词，近似于九幽血狱，而霍多则是化为尘土之意。整个词既是一句诅咒，也是一种传说中的凶兽。“阙勒霍多”这四字，即使不懂突厥语的，也能感受到其中滔天的杀意。</p>
<p>鬼蜮伎俩</p>
<p>贺知章见火候差不多到了，肃容一拜，满怀深情道：“今日长安有事，正需要尊者与我靖安司行个方便，一并躬燃纯火，荡涤宵小呐。” 一听到“躬燃纯火”四字，大萨宝眼眶几乎都湿润起来。祆教以火为尊，这四个字真真打中了心思。老人颤巍巍地站起身来，放开拐杖，双手拢作火焰形状横在胸前，向贺知章深施一礼。 “祆众，愿为贺监前驱！”</p>
<p>杜药师心中一阵凛然，知道自己已经触及到了另外一座长安城。这座长安城见不得光，里面充斥着血腥与贪欲，没有律法，也没有道义，混乱凶残如佛家的修罗之狱，能在这里生存的，都是大奸大恶之人。即便是官府，也不敢轻易深入这一重世界。</p>
<p>张小敬没理他，对那男子道：“我只能救你们其中一个人离开，你可以选择是谁，但记住，只能选一个。” 说完之后，张小敬倒退几步，冷眼看着。男子先是惊疑，然后是惊喜，嘴里反复喃喃，但每次看向瞳儿，便心生犹豫，不肯明确说出一个名字。张小敬忽然把身子凑过去，耳朵贴近他，然后点了点头。 “好。” 张小敬放下鞭子，手起刀落，斩断吊着男子的麻绳。 韩郎滚落在地，先是楞了一下，自己根本什么都没说啊。可话到嘴边，突然犹豫了起来。他试探着挪动几步，看那几个凶神都没动作，然后眼底流泻出狂喜——仿佛有人替他做了决定，就不必心存愧疚了。他看看左右，无人阻拦，用袖口掩面，急忙朝着出口慌张跑去。 等到他走远之后，张小敬再次走到瞳儿面前，她呆呆地看着地上断成两截的绳子，螓首低垂，似乎不相信是真的。 “你骗我，他根本什么都没说！” 瞳儿忽然抬起头，愤怒地喊道。 “一个男人，不要听他说了什么，要看他做了什么。若他本无离意，我又怎能左右他的双腿？” 张小敬的语气平淡，陈述一个简单的事实。</p>
<p>李泌的手指捏紧衣角，喃喃说了一句突兀的话：“自古华山，只有一条路。” 檀棋、杜药师听到这里，无不抚膺叹息。他们冒着风险潜入卫署，已做好了孤立无援的准备，原来李泌也一直在外头奔走，从未放弃。两边拼尽全力，才奇迹般地把张小敬捞了出来。</p>
<p>刑求这门艺术，和房事一样，精髓在于前戏。</p>
<p>登徒子、死囚犯、凶神阎罗、不肯让女人代死的君子、酷吏、干员、游侠……此前短短几个时辰，檀棋已经见识到了张小敬的许多面孔，可她对这个人仍旧难以把握。如今这杂乱的人潮，反倒如潺潺溪水一般，洗褪了张小敬身上那些浮夸油彩，露出本来的质地。 檀棋的脑海里，凝练出两个字：寂寞。张小敬的身影十分落寞。周围越是热闹，这落寞感就越强。他穿行于这人间最繁华最旺盛的地方，却仿佛与周遭分别置身于两幅画内，虽相距咫尺，却永不相融。 从某种意义上来说，他比公子距离这尘世更远。</p>
<p>在他的独眼之中，一百零八坊严整而庄严地排列在朱雀大街两侧，在太阳的照耀下熠熠生辉，气势恢宏。他曾经听外域的胡人说过，纵观整个世界，都没有比长安更伟大、更壮观的城市。昨晚的喧嚣，并未在这座城市的肌体上留下什么疤痕，它依然是那么高贵壮丽，就好像永远会这样持续下去似的。 一滴晶莹的泪水，从张小敬干涸已久的眼窝里流淌而出，这还是他来长安九年以来的第一次。</p>
<p>唐代的长安城对我来说，是一个梦幻之地。这是一个秩序井然、气势恢宏的伟大城市，三教九流、五湖四海的诸色人物云集其中，风流文采与赫赫武威纵横交错，生活繁华多彩，风气开放多元。</p>
]]></content>
      
        <categories>
            
            <category> 读书 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 马伯庸 </tag>
            
            <tag> 小说 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[中国人对科学的三点误读]]></title>
      <url>http://chuanqiang.github.io/2017/06/11/misread-science/</url>
      <content type="html"><![CDATA[<p>近代以来啊，中国人对西方科学的接触是越来越多。但是，有个问题不知你想过没有，即便是到了现在，我们是不是真正理解了科学的内在本质呢？北京大学哲学系教授吴国盛老师写过一篇文章，就指出我们对于科学的3点误读，并分析这些误读是怎么产生的，以及科学的本质应该是什么样的，我们一起来看看。</p>
<a id="more"></a>
<p>首先，中国人对科学的误读有哪三方面呢？<br>第一方面是，错把科学和技术对等起来，看作是一回事。近代中国人接受科学，是因为西方列强坚船利炮的轰击，我们技不如人，需要学习。而在中国人心中，这种“技”就是西方的赛先生——科学；第二方面是，中国人认为科学有着很强的实用主义色彩，也就是说，认为只有可以被利用的才是科学，在生活生产方面没有作用的就不算科学；第三方面是，把科学误读为分科之学，认为科学是有分不同学科的，忽略了它衍生出来的知识论传统。</p>
<p>那么，对科学的这些误读是怎么产生的呢？吴国盛教授说，科学不是中华民族土生土长的东西，是从外面引进来的，以本土的文化去对待外来的事物时就很容易引起误读。在西方，科学是一种有确定性的知识，是一种探究事物内在本质的精神。而在中国，往往就会简单地将科学看成是一种智力行为，觉得有了智商就可以搞科学，但实际上中国人的智商绝不能说低，但古代中国却没有发展出科学来。其实科学最本质的东西不在于智商，而在于文化。中国人对科学产生误读就是由于中西方文化的不同，中国人没有领悟到西方对于科学这种确定性的追求的内涵。</p>
<p>那确定性是什么呢？简单来说，就是追求要把事物的本质明白无误地说出来。举个例子，三角形内角和是180度，中国人只要测量一下得出结论就可以了。如果测量一个不行，就多测量几个。但是西方人会问，为什么一定是180度呢？有什么保证这个规律对所有三角形都是对的呢？于是就产生了演绎，产生了证明科学——如果一个定理在一套体系中得到证明，那它的正确性在这套体系中永远无法被质疑和否定，这就是一种确定性。</p>
<p>那么，西方文化为什么会对确定性有追求呢？这要从古代西方文化说起。在古希腊，人们认为最重要的是认识自己。什么是自己呢？通常人们通过在社会中的某些角色来定义，比如说你是你爸爸的儿子，是你妻子的丈夫等等，但这是真正的你自己吗？不同时间、地点、不同人眼中，你的角色都不一样。比如说今天你是老师，第二天被开除了，那你就不是老师了。</p>
<p>所以说，通过别人对你的定位来认识自己是不可靠的。<strong>希腊人认为需要找到你自身不变的东西，这才是真正的你自己。从巴门尼德开始，就坚持认为“存在者存在，不存在者不存在”，也就是说无论世间万物怎么变化，背后一定有一种不变的本质，这就是一种确定性，科学知识的存在必须依赖于这种确定性。</strong></p>
<p>后来柏拉图继承了这种思想，认为科学就是去发现规律，找到这种确定性的东西，这成为了西方思想的主流观念。而中国文化并不重视对变化背后这种确定性的追求，比如说儒家和道家，认为变化是绝对的，追求的是如何在变化中达到中庸，找到最恰当的应对方法，而没有把问题的本质弄清楚。</p>
<p>最后，中西方文化之间的这种差异是怎么产生的呢？<strong>首先，人一生下来就在某种特定的环境中，这种特定的环境会形成某种文化。例如说中国，在农耕经济条件下，人口流动性非常低，人与人之间的关系是基于血缘，这时候亲情就成了核心要素。而希腊由于地理环境特殊，人们需要经常迁移，这种人口的流动使得社会关系不能靠血缘来维系，那么要怎么形成一个有秩序的社会呢？这就需要建立一种契约文化，比如说圣经，说的是上帝与人订约，其实就是民间很早就存在的契约行为。</strong></p>
<p>西方这种契约精神使得他们在面对紧急事件、需要作出决策时，就会组织投票，这就必须要求每个人都是一个独立的个体，这些个体最根本的特点就是自由。这种对自由的追求才会让人们思考什么是自己这个问题，才会考虑追求事物的内在本质是什么。而中国则不一样，遇到紧急事件时希望出现德高望重的人来引导大家，而不是去看每个人的想法是什么，这也就束缚了中国人对于自由、对于事物本质的追求。</p>
<p>你看，<strong>中国人误读科学，不单单有历史原因，更重要的是我们缺乏对自由的认同，没有思考过什么是自己，更没有从中领悟到确定性对于科学是多么重要，所以没有掌握科学之所以为科学的精髓所在。</strong>在21世纪的今天，中国已经完全被卷入了现代化的浪潮，采用了西方的生产和生活方式，但更重要的是，我们应该理解这种模式背后的逻辑，学习平等、自由的理念，和领略这种追求确定性知识的精神，再结合中国自身的特色，才能真正走出一条中国式的发展道路。</p>
<hr>
<p>本文源自：微信公众号“中国健康与养老追踪调查”（吴国盛：中国人对科学的误读）音频稿：陈成康讲述：于浩</p>
]]></content>
      
        <categories>
            
            <category> 读书 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 科学 </tag>
            
            <tag> 读书 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第二周 - 长胖]]></title>
      <url>http://chuanqiang.github.io/2017/06/11/fat/</url>
      <content type="html"><![CDATA[<p>从来没有想过我会到要减肥的程度，但是现在看着镜子里的自己，尤其是微微隆起的肚子，冲着镜子抛去了一个嫌弃的眼神。</p>
<a id="more"></a>
<p>岁月是一把杀猪刀啊，我需要的是成长不是长胖啊，看看相册里以前的自己和镜子里那个陌生的身影，我掩面而泣。<br><img src="http://oeckzejn4.bkt.clouddn.com/blog/170611/8Il5mfIkff.JPG" alt="小时候的我"><br><img src="http://oeckzejn4.bkt.clouddn.com/blog/170611/8KFB6f95DE.JPG" alt="大学时候的我"><br><img src="http://oeckzejn4.bkt.clouddn.com/blog/170611/JiiKKajcGA.JPG" alt="现在的我"></p>
<p>以上分别是小时候的我，刚上大学的我，现在的我。注意看最后一张我是收着肚子的。体重也从一百三不到直逼一百五。因为我们家人没有很胖的体型，并且从小到大我也一直偏瘦，学生时代怎么吃都长不胖，所以我一直坚信自己是天生丽质，含有瘦的基因，怎么都吃不胖的。</p>
<p>事实证明我是太过乐观了。久坐不动，暴饮暴食，终于打破了“先天的优势”。虽然一眼看上去『不胖啊』，但自己肚子上的肉自己知道。</p>
<p>每个瘦人有不同的瘦发，但胖子却有同样的胖法。就两个原因：1. 懒  2. 馋 </p>
<p>馋嘴导致吃的多，增加脂肪。懒导致不运动，脂肪积累。那解决方法也很简单喽，控制饮食，多多运动。但哪有上嘴唇碰下嘴唇这么容易，不然街头早没胖子了。所以，看到印度国宝级演员阿米尔汗拍摄『摔跤吧，爸爸』由瘦子吃撑胖子再减会成瘦子的过程，实在是无比佩服。</p>
<p>行动是达成目标的前提，并且是持续不断的行动。</p>
<p>最近也意识到长胖问题的严重性——我可不想再过几年成了大腹便便的大叔，并且还带来一系列的健康问题。</p>
<p>村上春树说：</p>
<blockquote>
<p>连跑步都坚持不下来的人，还怎么创作  </p>
</blockquote>
<p>同样，体重都控制不住的人，怎么去掌控自己的人生。</p>
<p>现在虽然工作忙，但也暗暗下决心要保证每周至少三次跑步，从家都地铁站上下班骑自行车，尽量在地铁上站着，在公司多走动。</p>
<p>我一直认为，学习，运动，读书，交际，游戏，美食，影视，都是生活中不可缺少的元素，而现在我的肚子正在大声的训斥我：你丫的该运动了！</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 长胖 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第一周-一个开始]]></title>
      <url>http://chuanqiang.github.io/2017/06/03/one-start/</url>
      <content type="html"><![CDATA[<p>这是一个开始，开始写周记。学生时代也写过周记，多为应付老师的家庭作业，之后也就淡忘了。2017年已经过了一半，学校生涯已经完结，人生已经走完了二十多载，但现在仍是一个开始。有些道理可能领悟过，之后又混沌了，有些事情当下明白着，以后可能还会忘却。但有一个开始总是好的，毕竟任何事情的完结都是从一个开始开始的。</p>
<hr>
<a id="more"></a>
<p>人都会有身处混沌却安然不知的情景，然后忽然有一个外界力量给你当头棒喝，让你醍醐灌顶。有时候是一部励志电影，有时候是和别人交流时的顿悟，有时候是一本书。我就是因为一本书——『奇特的一生』。因为现在的公司上班距离变远了，通勤的时间增长，随着对公司环境和新工作的适应，也开始找到自己的节奏，也开始在地铁上看些书。刚刚看完柳比歇夫『奇特的一生』，喝了好大一碗鸡血。愣愣的看地铁穿梭在黑漆漆的隧道，时光在耳边呼啸而过。不禁想到了朱自清的『匆匆』，时间都溜走了，从脸盆里，从指尖上，从我的酣睡和游戏中。更加觉得自己对生命和时间的忽视有多么严重。我需要好好思考一下自己，整理一下心中的念头，想清楚一些问题，关于自己，关于生活，关于目标和当下的关系。总之，脑海中许多混混沌沌的思绪，都应该被整理了。这也是这本书给我的第一个收获。</p>
<p>脑海中开始回想，之前的岁月哪去了，竟然不留一点痕迹，但脑海中的记忆像是海滩上的字，被海浪冲刷的越来越淡。。。记忆显然不是留存记忆的好办法，那该用什么呢？影像和文字。影像自然不必多说，文字除了记录日常以外，更明显的优势是记录情感和想法。这是影像远远不可比拟的。至于弱点，那就是时间成本以及要克服人的惰性。但这样的付出是值得的，因为在记录的时候，思考自己的这一天，总结归纳，往往会有意想不到的收获。因此，我开始再一次拿起日记，记录下每天的事情。有意义的甚至无意义的，因为现在的你不知道当前经历的事对于以后的自己所代表的意义和珍贵。日记在下班的地铁上用iPhone上的Bear写，周记在周末用电脑上的MarkEditor敲，这种『有意义』的事情自己竟然都现在才后知后觉，对自己无语三分钟。。。做事情最晚的是明天，最佳时间是现在。so，do it now.</p>
<p>最近还看了埃隆马斯克的传记『硅谷钢铁侠』，瞻仰了一下牛逼人的风采。另外也看出这些年来实体经济的创新不足，人们的目标已经从冒险创造全新的行业和伟大想法，变成了通过取悦消费者，以及批量生产简单应用和广告来赚快钱。我们这一代人中最优秀的头脑，都在思考如何让人们点广告。作者认为，认为现在有非常多的聪明人都在致力于互联网、金融和法律，这是我们没能看到更多创新的部分原因。这也引导我思考互联网的出现究竟能给人们带来了什么，最近AlphaGo连胜对战中国围棋九段高手世界排名第一的柯杰三局，也引发了一场AI讨论的热潮。AI、VR时代来临，究竟对于我们的生活意味着什么，由此开始看廖雪峰写的『未来世界的幸存者』，希望找到一些答案。</p>
<p>另外，步入编程行业后，我发现自己的表达能力大不如前，表达问题找不到准确的简练的语录。主要原因是每天都是一个人默默的敲代码，交流不多，脑子可能好使了，但嘴巴变笨了。但表达能力确实是十分重要的，许多事情的成败就是说与不会说的区别，在销售行业犹如是。一件事情有的人十分钟能说的清楚明白，有的人一个小时也啰嗦不完，这就是差距。首先要做到表达准确清楚；其次是简洁明了，中心突出；然后能做到调理清晰，逻辑感强；最后是引人入胜，带动情绪。以后自己要多加锻炼，有意识的练习提高。没事多招人唠唠，除了锻炼表达，还能增强情感，收获知识。</p>
<p>第一周，是周记的开始，之后最重要的便是坚持。To persevere means victory.</p>
<p>2017-06-03 16:55:10</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 周记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[成长路上的独白(一)]]></title>
      <url>http://chuanqiang.github.io/2017/05/13/say-myself-one/</url>
      <content type="html"><![CDATA[<p>终于换掉了工作，就像是终于摆脱了一个略显失败的自己。</p>
<a id="more"></a>
<p>一年以来的工作旅途，并没有达到自己的期望，没那么跌宕，没那么辛苦，没那么多成长，甚至可以用平凡和无聊这样的词汇来形容。</p>
<p>收获的不尽人意，反而丢弃了许多东西。读书写作，尝尝被生活的琐碎耽搁;远方的梦想也常常在仓促的时间前止步。有时候回想，对于我来说，到底什么才是重要的，什么才能让自己提升所谓的幸福感。</p>
<p>步履匆匆间，是什么和什么做了交换，这样的交换到底能不能承受住时间的检验。</p>
<p>坐在夜晚嘈杂的地铁上，看着一张张陌生而疲惫的面孔，想象不出他们匆匆于何处，他们的欢笑是否多于愁苦，他们喜不喜欢这样的生活。</p>
<p>新的工作是在一个小互联网公司，节奏快，充满了挑战，有许多自己未知的事物需要学习和消化，时间成了最渴求的东西。因为没有大公司那么多条条框框，许多东西需要自己设计和思考如何实现，渐渐有了coding代码时的畅快感，把一个个实实在在的需求通过指尖在键盘上的飞驰变成屏幕上一个个可以供用户使用的功能模块，这其中还是很有意思的。</p>
<blockquote>
<p>大冰说：有些时候，有意思比有意义更有意义。</p>
</blockquote>
<p>无聊是生活的敌人，它会泯灭时间的珍贵，让你感觉不到生活的乐趣，只想时间快一点，再快一点，好拜托现在的生活。</p>
<p>虽然现在仍旧走在自己规划的成长道路上：第一年到多少薪资，找什么样的工作。但规划路线和心跳的轨迹却有了距离。希望自己能用自己的努力来弥合这中间的裂缝，让自己再坚韧一些，来承受这些成长中的剧痛。既然选择了改变，既然祈求成长，就应该做好风雨兼程的准备。</p>
<p>朋友圈看到一个小文，希望在自己的时区里能越来越快，虽然上帝准时，但你首先要保证不迟到。</p>
<blockquote>
<p>命运总会给你最好的安排：</p>
<p>纽约时间比加州时间早三个小时，<br>New York is 3 hours ahead of California,</p>
<p>但加州时间并没有变慢。<br>but it does not make California slow.</p>
<p>有人22岁就毕业了，<br>Someone graduated at the age of 22,</p>
<p>但等了五年才找到好的工作！<br>but waited 5 years before securing a good job!</p>
<p>有人25岁就当上CEO，<br>Someone became a CEO at 25,</p>
<p>却在50岁去世。<br>and died at 50.</p>
<p>也有人迟到50岁才当上CEO，<br>While another became a CEO at 50,</p>
<p>然后活到90岁。<br>and lived to 90 years.</p>
<p>有人依然单身，<br>Someone is still single,</p>
<p>同时也有人已婚。<br>while someone else got married.</p>
<p>奥巴马55岁就退休，<br>Obama retires at 55,</p>
<p>川普70岁才开始当总统。<br>but Trump starts at 70.</p>
<p>世上每个人本来就有自己的发展时区。<br>Absolutely everyone in this world works based on their Time Zone.</p>
<p>身边有些人看似走在你前面，<br>People around you might seem to go ahead of you,</p>
<p>也有人看似走在你后面。<br>some might seem to be behind you.</p>
<p>但其实每个人在自己的时区有自己的步程。<br>But everyone is running their own RACE, in their own TIME.</p>
<p>不用嫉妒或嘲笑他们。<br>Don’t envy them or mock them.</p>
<p>他们都在自己的时区里，你也是！<br>They are in their TIME ZONE, and you are in yours!</p>
<p>生命就是等待正确的行动时机。<br>Life is about waiting for the right moment to act.</p>
<p>所以，放轻松。<br>So, RELAX.</p>
<p>你没有落后。<br>You’re not LATE.</p>
<p>你没有领先。<br>You’re not EARLY.</p>
<p>在命运为你安排的属于自己的时区里，一切都准时。<br>You are very much ON TIME, and in your TIME ZONE Destiny set up for you.</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 独白 </tag>
            
            <tag> 成长 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[深入 Web 请求过程]]></title>
      <url>http://chuanqiang.github.io/2017/02/25/web-request/</url>
      <content type="html"><![CDATA[<p>深入 Web 请求过程。</p>
<a id="more"></a>
<h4 id="B-S-架构的好处"><a href="#B-S-架构的好处" class="headerlink" title="B/S 架构的好处"></a>B/S 架构的好处</h4><ul>
<li>客户端使用同一的浏览器。浏览器具有统一性，不需要特殊的配置和网络连接，屏蔽了服务的差异性。</li>
<li>浏览器的交互特性使用户使用简便，继承性强。</li>
<li>服务端基于统一的 HTTP 协议，采用相对规范的开发模式，节省了开发成本。<ul>
<li>基于 HTTP 协议的服务器很多: Apache、Nginx、Tomcat、JBoss。可以直接拿来用。</li>
</ul>
</li>
</ul>
<h2 id="B-S-网络架构"><a href="#B-S-网络架构" class="headerlink" title="B/S 网络架构"></a>B/S 网络架构</h2><p>大多数传统的互联网应用程序采用长连接的交互模式，而 <strong>HTTP 协议采用无状态的短连接的通信方式</strong>。一次请求就完成了一次数据交互，通常也对应一个业务逻辑。网络架构如下:<br><img src="http://oeckzejn4.bkt.clouddn.com/blog/20170219-174503352.jpg" alt=""></p>
<h3 id="请求一个网址的步骤"><a href="#请求一个网址的步骤" class="headerlink" title="请求一个网址的步骤"></a>请求一个网址的步骤</h3><ul>
<li>在浏览器中输入一个 URL。</li>
<li>浏览器请求 DNS 把域名解析成对应的 IP 地址</li>
<li>根据 IP 地址在在互联网上找到对应的服务器，并向服务器发送一个 get 请求。<ul>
<li>需要负载均衡设备来平均分配所有用户的请求</li>
<li>请求的数据可能存储在分布式缓存或者静态文件或者数据库中。</li>
</ul>
</li>
<li>由这个服务器决定返回默认的数据资源给访问的用户<ul>
<li>浏览器解析返回的静态资源数据时，又会发起另外的 HTTP 请求，请求可能发生在 CDN 上</li>
</ul>
</li>
</ul>
<h4 id="需要遵守的原则"><a href="#需要遵守的原则" class="headerlink" title="需要遵守的原则"></a>需要遵守的原则</h4><ul>
<li>互联网上所有的资源都用一个 URL(统一资源定位符) 来表示。</li>
<li>必须基于 HTTP 协议与服务端交互</li>
<li>数据展示必须在浏览器中进行(只有在浏览器上才能恢复得到的数据资源的容貌)</li>
</ul>
<h3 id="HTTP-解析"><a href="#HTTP-解析" class="headerlink" title="HTTP 解析"></a>HTTP 解析</h3><p>发起一个 HTTP 请求就是建立一个 Socket 通信的过程。</p>
<p><strong>Http Header</strong>: 控制互联网用户数据的传输，以及浏览器的渲染行为和服务器的执行逻辑。</p>
<p><strong>1. 常见的 HTTP 请求头</strong></p>
<table>
<thead>
<tr>
<th>请求头</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>Accept-Charset</td>
<td>用于指定客户端接受的字符集</td>
</tr>
<tr>
<td>Accept-Encoding</td>
<td>用于指定可接受的内容编码，如<code>Accept-Encoding:gzip.deflate</code></td>
</tr>
<tr>
<td>Accept-Language</td>
<td>用于指定一种自然语言。如<code>Accept-Language:zh-cn</code></td>
</tr>
<tr>
<td>Host</td>
<td>用于指定被请求资源的 Internet 主机和端口号，如<code>Host:www.taobao.com</code></td>
</tr>
<tr>
<td>User-Agent</td>
<td>客户端将它的操作系统、浏览器和其他属性告诉服务器</td>
</tr>
<tr>
<td>Connection</td>
<td>当前连接是否保持，如<code>Connection:Keep-Alive</code></td>
</tr>
</tbody>
</table>
<p><strong>2. 常见的 HTTP 相应头</strong></p>
<table>
<thead>
<tr>
<th>相应头</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>Server</td>
<td>使用服务器名称，如 Server: Apache/1.3.6(Unix)</td>
</tr>
<tr>
<td>Content-Type</td>
<td>用来指明发送给接收者的实体正文的媒体类型，如 Content-Type/html;charset=GBK</td>
</tr>
<tr>
<td>Content-Language</td>
<td>描述了资源所用的自然语言，与 Accept-Language 对应</td>
</tr>
<tr>
<td>Content-Length</td>
<td>指明实体正文的长度，用以字节方式存储的十进制数字来表示</td>
</tr>
<tr>
<td>Keep-Alive</td>
<td>保持连接的时间，如 Keep-Alive:timeout=5，max=120</td>
</tr>
</tbody>
</table>
<p><strong>3. 常见的HTTP状态码</strong></p>
<table>
<thead>
<tr>
<th>状态码</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>200</td>
<td>客户端请求成功</td>
</tr>
<tr>
<td>302</td>
<td>临时跳转，跳转的地址通过 Location 指定</td>
</tr>
<tr>
<td>400</td>
<td>客户端请求有语法错误，不能被服务器识别</td>
</tr>
<tr>
<td>403</td>
<td>服务器收到请求，但是拒绝提供服务</td>
</tr>
<tr>
<td>404</td>
<td>请求的资源不存在</td>
</tr>
<tr>
<td>500</td>
<td>服务器发生不可预期的错误</td>
</tr>
</tbody>
</table>
<h4 id="浏览器的缓存机制"><a href="#浏览器的缓存机制" class="headerlink" title="浏览器的缓存机制"></a>浏览器的缓存机制</h4><p><strong>Ctrl + F5</strong>:浏览器会直接向目标 URl 发送请求，而不会使用缓存的数据；HTTP 的请求头中会增加一些请求头，告诉服务器我们获取最新的数据而不是缓存。</p>
<p><strong>1. Cache-Control/Pragma</strong></p>
<p>这个 HTTP Head 字段用于指定所有缓存机制在整个请求/响应链中必须服从的指令。</p>
<p><strong>字段的可选值</strong></p>
<table>
<thead>
<tr>
<th>可选值</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>Public</td>
<td>所有内容将都被缓存，在响应头中设置</td>
</tr>
<tr>
<td>Private</td>
<td>内容值缓存到私有缓存中，在响应头中设置</td>
</tr>
<tr>
<td>no-cache</td>
<td>所有内容都不会被缓存，在请求头和响应头中设置</td>
</tr>
<tr>
<td>no-store</td>
<td>所有内容都不会被缓存到或缓存成 Internet 临时文件中，在相应头中设置</td>
</tr>
<tr>
<td>must-revalidation/proxy-revalidation</td>
<td>如果缓存的内容失效，请求必须发送到服务器/代理进行重新验证，在请求头中设置</td>
</tr>
<tr>
<td>max-age=xxx</td>
<td>缓存的内容将在 xxx 秒后失效，只在 HTTP 1.1中可用</td>
</tr>
</tbody>
</table>
<p><strong>2. Expires</strong></p>
<p>Expires 通常的格式为 Expires:Sun, 19 Feb 2017 12:53:33 GMT，后面跟一个日期和时间，超过这个时间值后，缓存的内容将失效。</p>
<p><strong>3. Last-Modified/Etag</strong></p>
<p>用于表示一个服务器上的资源的最后修改时间，资源可以是静态(静态内容自动加上 Last-Modified 字段) 或动态的内容(如 Servlet 提供了一个 getLastModified 方法用于检查某个动态内容是否已经更新)，通过这个最后修改时间可以判断当前请求的资源是否是最新的。</p>
<h3 id="DNS-域名解析"><a href="#DNS-域名解析" class="headerlink" title="DNS 域名解析"></a>DNS 域名解析</h3><h4 id="DNS-域名解析的过程"><a href="#DNS-域名解析的过程" class="headerlink" title="DNS 域名解析的过程"></a>DNS 域名解析的过程</h4><p>当用户在浏览器中输入域名并按下回车键后:</p>
<ol>
<li>浏览器检查缓存中有没有这个域名对应的 IP 地址。如果有，解析结束(域名的缓存时间通过 TTL 属性设置)。</li>
<li>如果用户的缓存中没有，浏览器检查操作系统缓存中是否有这个域名对应的 DNS 解析结果(Windows 中通过<code>C:\Windows\System32\drivers\etc\hosts</code>文件设置)。</li>
<li>以上两个过程无法解析时，操作系统会把这个域名发送给 LDNS，也就是本地的域名服务器(提供DNS解析服务)，如果是在学校接入互联网，那么你的DNS服务器肯定在学校，如果是小区，这个DNS 时提供给你接入互联网的提供商，即电信、联通，也就是 SPA。这个 DNS 可以通过 <code>ipconfig</code> 查询这个地址。</li>
<li>如果 LNDS 仍没有命中，就直接到 Root Server 域名服务器请求解析。</li>
<li>根域名服务器返回给本地域名服务器一个所查询域的主域名服务器(gTLD)地址。gTLD是国际顶级域名服务器，如<code>.com、.cn、.org</code>等，全球只有13台左右。</li>
<li>本地域名服务器(Local DNS Server)再向上一步返回的 gTLD 服务器发送请求。</li>
<li>接受请求的gTLD服务器查找并返回此域名对应的 Name Server 域名服务器的地址，这个 Name Server 通常就是你注册的域名服务器。</li>
<li>Name Server 域名服务器会查询存储的域名和 IP 的映射关系表，正常情况下根据域名得到目标的IP记录，连同一个 TTl 值返回给 DNS Server 域名服务器。</li>
<li>返回该域名对应的 IP 和TTl 值，Local DNS Server 会缓存这个域名和 IP 的对应关系。</li>
<li>把解析的结果返回给用户。</li>
</ol>
<p><code>nslookup</code>命令查询域名解析的结果。</p>
<h4 id="清除缓存的域名"><a href="#清除缓存的域名" class="headerlink" title="清除缓存的域名"></a>清除缓存的域名</h4><p>DNS 域名解析后会缓存解析结果，主要在两个地方缓存: 1. Local DNS Server；2. 用户本地机器。</p>
<p><strong>本机缓存的清除</strong>: 1. 在命令模式下执行<code>ipconfig/flushdns</code> 来刷新缓存；2. 重启</p>
<h4 id="域名解析的方式"><a href="#域名解析的方式" class="headerlink" title="域名解析的方式"></a>域名解析的方式</h4><p>域名解析记录只要分为A记录、MX记录、CNAME记录，NS记录、TXT记录</p>
<ul>
<li>A（Address）记录：用来指定域名对应的IP地址，可以将多个域名地址解析到一个IP地址，但是不能讲一个域名解析到多个IP地址</li>
<li>MX（Mail Exchange）记录：讲某个域名下的邮件服务器指向自己的Mail Server</li>
<li>CNAME（Canonical Name）记录：别名解析就是可以为一个域名设置一个或多个别名</li>
<li>NS记录：为某个域名指定DNS解析服务器</li>
<li>TXT记录：为某个主机名或域名设置说明</li>
</ul>
<h3 id="CDN-工作机制"><a href="#CDN-工作机制" class="headerlink" title="CDN 工作机制"></a>CDN 工作机制</h3><p>CND(Content Delivery Network)，内容分布网络，是构筑在现有Internet 上的一种先进的流量分布网络。目的是通过现有的 Internet 中增加一层新的网络架构，将网站的内容发布到最接近用户的网络“边缘”，使用户就近取得所有内容，提高用户访问速度。</p>
<p><img src="http://oeckzejn4.bkt.clouddn.com/blog/20170220-211544648.png" alt="image"></p>
<p>CDN=镜像（Mirror）+缓存（Cache）+整体负载均衡（GSLB）</p>
<p>CDN 以缓存网站中的静态数据为主，如css、js、图片和静态页面等数据，用户从主站服务器请求到动态内容后再从 CDN 上下载这些静态数据，从而加速网页数据的下载内容。</p>
<p><strong>CDN请求与处理流程</strong>：向Local DNS 服务器发送请求，一般经过迭代解析后回到这个域名的注册服务器解析（每个公司都会有一台DNS解析服务器），这个服务器会把请求重新CNAME解析到另一个域名，这个域名最终会指向CDN全局中的DNS负载均衡服务器，再由这个GTM来最终分配是哪个地方的访问用户吗，返回给离这个用户最近的CDN节点。</p>
<h4 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h4><p>负载均衡就是对工作任务进行平衡，分摊到多个操作单元上执行。如图片服务器、应用服务器，共同完成工作任务。提高服务器响应速度及利用效率。</p>
<p><strong>三种负载均衡架构</strong>分别是链路负载均衡、集群负载均衡、操作系统负载均衡</p>
<p>链路负载均衡：通过DNS解析到不同的IP，然后用户根据这个IP来访问不同的目标服务器</p>
<p>集群负载均衡：</p>
<ul>
<li>硬件负载均衡：性能好，价格高</li>
<li>软件负载均衡：成本低，多次代理，网络延时</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Web请求 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SLF4J使用和与Log4J对比]]></title>
      <url>http://chuanqiang.github.io/2017/02/25/SLF4J/</url>
      <content type="html"><![CDATA[<p>每一个Java程序员都知道日志对于任何一个Java应用程序，尤其是服务端程序是至关重要的，而很多程序员也已经熟悉各种不同的日志库如<code>java.util.logging、Apache log4j、logback</code>。</p>
<p>在这篇文章中，我们将学习为什么使用<code>SLF4J</code>比<code>log4j</code>或者<code>java.util.logging</code>要优秀。</p>
<h2 id=""><a href="#" class="headerlink" title=""></a><a id="more"></a></h2><p>SLF4J不同于其他日志类库，与其它有很大的不同。SLF4J(Simple logging Facade for Java)不是一个真正的日志实现，而是一个<strong>抽象层</strong>（ abstraction layer），它<strong>允许你在后台使用任意一个日志类库</strong>。</p>
<p>当你编写供内外部都可以使用的API或者通用类库，那么你真不会希望使用你类库的客户端必须使用你选择的日志类库。</p>
<p>如果一个项目已经使用了log4j，而你加载了一个类库，比方说 Apache Active MQ——它依赖于于另外一个日志类库logback，那么你就需要把它也加载进去。但如果Apache Active MQ使用了<code>SLF4J</code>，你可以继续使用你的日志类库而加载和维护一个新的日志框架。</p>
<p>总的来说，<strong>SLF4J使你的代码独立于任意一个特定的日志API</strong>，这是一个对于开发API的开发者很好的思想。虽然抽象日志类库的思想已经不是新鲜的事物而且Apache commons logging也已经在使用这种思想了，但现在SLF4J正迅速成为Java世界的日志标准。让我们再看看几个使用SLF4J而不是log4j、logback或者java.util.logging的理由。</p>
<h3 id="SLF4J对比Log4J，logback和java-util-Logging的优势"><a href="#SLF4J对比Log4J，logback和java-util-Logging的优势" class="headerlink" title="SLF4J对比Log4J，logback和java.util.Logging的优势"></a>SLF4J对比Log4J，logback和java.util.Logging的优势</h3><ol>
<li>使用SLF4J写日志语句的主要出发点是使得你的程序独立于任意特定的日志类库，依赖于特定类可能需要不同与你已有的配置，并且导致更多维护的麻烦。</li>
<li>占位符(place holder)的使用。</li>
</ol>
<p>在代码中表示为<code>{}</code>的特性。占位符是一个非常类似于在String的<code>format()</code>方法中的<code>%s</code>，它会在运行时被某个提供的实际字符串所替换。</p>
<p>这不仅降低了你代码中字符串连接次数，而且还节省了新建的String对象。因为String对象是不可修改的并且它们建立在一个String池中，它们消耗堆内存( heap memory)而且大多数时间他们是不被需要的，例如当你的应用程序在生产环境以ERROR级别运行时候，一个String使用在DEBUG语句就是不被需要的。</p>
<p>通过使用SLF4J,你可以在<strong>运行时延迟字符串的建立</strong>，这意味着<strong>只有需要的String对象才被建立</strong>。而如果你已经使用log4j，那么你已经对于在if条件中使用debug语句这种变通方案十分熟悉了，但SLF4J的占位符就比这个好用得多。</p>
<h4 id="使用对比"><a href="#使用对比" class="headerlink" title="使用对比"></a>使用对比</h4><p>Log4j:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (logger.isDebugEnabled()) &#123;</div><div class="line">    logger.debug(<span class="string">"Processing trade with id: "</span> + id + <span class="string">" symbol: "</span> + symbol);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>SLF4J：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">logger.debug(<span class="string">"Processing trade with id: &#123;&#125; and symbol : &#123;&#125; "</span>, id, symbol);</div></pre></td></tr></table></figure>
<p>在SLF4J，我们不需要字符串连接而且不会导致暂时不需要的字符串消耗。而是以<strong>一个以占位符和以参数传递实际值的模板格式下写日志信息</strong>。你可能会在想万一我有很多个参数怎么办？那么你可以选择使用变量参数版本的日志方法或者用以Object数组传递。这是一个相当的方便和高效方法的打日志方法。记住，在生产最终日志信息的字符串之前，这个方法会检查一个特定的日志级别是不是打开了，这不仅降低了内存消耗而且预先降低了CPU去处理字符串连接命令的时间。这里是使用SLF4J日志方法的代码，来自于<code>slf4j-log4j12-1.6.1.jar</code>中的<code>Log4j</code>的适配器类<code>Log4jLoggerAdapter</code>。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">debug</span><span class="params">(String format, Object arg1, Object arg2)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (logger.isDebugEnabled()) &#123;</div><div class="line">        FormattingTuple ft = MessageFormatter.format(format, arg1, arg2);</div><div class="line">        logger.log(FQCN, Level.DEBUG, ft.getMessage(), ft.getThrowable());</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="怎么用SLF4J做Log4J的日志记录"><a href="#怎么用SLF4J做Log4J的日志记录" class="headerlink" title="怎么用SLF4J做Log4J的日志记录"></a>怎么用SLF4J做Log4J的日志记录</h3><p>为了使用SLF4J，你不仅需要包含SLF4J的<code>API jar</code>包，例如 <code>slf4j-api-1.6.1.jar</code>，还需要相关Jar包，这取决于你在后台使用的日志类库。如果你想要使用和Log4J 一起使用SLF4J ，Simple Logging Facade for Java,，你需要包含以下的Jar包在你的classpath中，取决于哪个SLF4J和你在使用的Log4J的版本。例如：</p>
<ul>
<li><code>slf4j-api-1.5.8.jar</code> – JAR for SLF4J API</li>
<li><code>log4j-1.2.16.jar</code> – JAR for Log4J API</li>
<li><code>slf4j-log4j12-1.5.8.jar</code> – Log4J Adapter for SLF4J</li>
</ul>
<p>如果你在使用Maven去管理你的项目依赖，你只需要包含SLF4J JAR包，maven会包含它的依赖的相关包。为了和SLF4J一起中使用Log4J，你可以包含以下的依赖在你项目中的pom.xml。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"> </div><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="使用实例"><a href="#使用实例" class="headerlink" title="使用实例"></a>使用实例</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> org.slf4j.Logger;</div><div class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Slf4js</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Logger logger = LoggerFactory.getLogger(Slf4js.class);</div><div class="line">    Integer t;</div><div class="line">    Integer oldT;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTemperature</span><span class="params">(Integer temperature)</span> </span>&#123;</div><div class="line">        oldT = t;</div><div class="line">        t = temperature;</div><div class="line">        logger.error(<span class="string">" Temperature set to &#123;&#125;. Old temperature was &#123;&#125;. "</span>, t, oldT);</div><div class="line">        <span class="keyword">if</span> (temperature.intValue() &gt; <span class="number">50</span>) &#123;</div><div class="line">            logger.info(<span class="string">" Temperature has risen above 50 degrees. "</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        Slf4js slf4j = <span class="keyword">new</span> Slf4js();</div><div class="line">        slf4j.setTemperature(<span class="number">1</span>);</div><div class="line">        slf4j.setTemperature(<span class="number">55</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h4><p><strong>1. 问题一</strong></p>
<p>描述<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">java.lang.IllegalAccessError: tried to access field org.slf4j.impl.Static..</div><div class="line">java.lang.IllegalAccessError: tried to access field org.slf4j.impl.StaticLoggerBinder.SINGLETON from <span class="class"><span class="keyword">class</span> <span class="title">org</span>.<span class="title">slf4j</span>.<span class="title">LoggerFactory</span></span></div></pre></td></tr></table></figure></p>
<p>问题原因：jar文件版本冲突</p>
<p>类 <code>org.slf4j.impl.StaticLoggerBinder</code>在<code>slf4j-api</code> 中是类的公有静态变量: </p>
<p><code>public static final StaticLoggerBinder SINGLETON = new StaticLoggerBinder();</code></p>
<p>而在<code>slf4j-log4j12</code>（slf4j-nop.jar, slf4j-simple.jar, slf4j-log4j12.jar, slf4j-jdk14.jar or logback-classic.jar其中之一）中确是私有变量: </p>
<p><code>private static final StaticLoggerBinder SINGLETON = new StaticLoggerBinder();</code></p>
<p>解决方案：</p>
<p>1.修改slf的源代码，将这个变量有私有改为公有，再打包，问题可解决。</p>
<p>2.slf4j-api.jar 删除，再导入同版本的slf4j-api-1.5.6.jar 和slf4j-log4j12-1.5.6.jar ，问题可解决。</p>
<p><strong>问题二</strong></p>
<p>问题描述：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">log4j:WARN No appenders could be found for logger (xxx.yyy.zzz).</div><div class="line">log4j:WARN Please initialize the log4j system properly.</div></pre></td></tr></table></figure></p>
<p>问题解决：</p>
<p>在src下面新建file名为<code>log4j.properties</code>内容如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"># Configure logging for testing: optionally with log file</div><div class="line">log4j.rootLogger=WARN, stdout</div><div class="line"># log4j.rootLogger=WARN, stdout, logfile</div><div class="line"></div><div class="line">log4j.appender.stdout=org.apache.log4j.ConsoleAppender</div><div class="line">log4j.appender.stdout.layout=org.apache.log4j.PatternLayout</div><div class="line">log4j.appender.stdout.layout.ConversionPattern=%d %p [%c] - %m%n</div><div class="line"></div><div class="line">log4j.appender.logfile=org.apache.log4j.FileAppender</div><div class="line">log4j.appender.logfile.File=target/spring.log</div><div class="line">log4j.appender.logfile.layout=org.apache.log4j.PatternLayout</div><div class="line">log4j.appender.logfile.layout.ConversionPattern=%d %p [%c] - %m%n</div></pre></td></tr></table></figure></p>
<p>其他情形下的问题解决：</p>
<p>在Eclipse中开发相关项目时,在控制台经常看到如下信息:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">log4j:WARN No appenders could be found for logger</div><div class="line">log4j:WARN Please initialize the log4j system properly.</div></pre></td></tr></table></figure></p>
<p>此处输出信息并不是错误信息而仅只是警告信息,因为log4j无法输出日志,log4j是一个日志输入软件包。可以将Struts或Hibernate等压缩包解压，内有log4j.properties文件，将它复制到项目src文件夹或将<code>log4j.properties</code>放到 <code>\WEB-INF\classes</code>文件夹中即可。</p>
<p>＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝</p>
<p>做一个SSH项目，tomcat启动时出现以下问题：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">log4j:WARN No appenders could be found for logger (org.springframework.web.context.ContextLoader).</div><div class="line">log4j:WARN Please initialize the log4j system properly.</div></pre></td></tr></table></figure></p>
<p>在网上查了一下，多是说把<code>ContextLoaderListener</code>改为<code>SpringContextServlet</code>，但我这样改了没用。后来在一个英文网站上看到一个遇到同样问题的帖子，他是这样改的：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>log4jConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>/WEB-INF/config/log4j.properties<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>······<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- 定义LOG4J监听器 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">listener</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span></div><div class="line">org.springframework.web.util.Log4jConfigListener</div><div class="line">   <span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">listener</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>这样改了问题就解决了，不用再修改<code>ContextLoaderListener</code>。</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>在你的开源或内部类库中使用SLF4J会使得它独立于任何一个特定的日志实现，这意味着不需要管理多个日志配置或者多个日志类库。</p>
<p>SLF4J提供了基于占位符的日志方法，不需要检查isDebugEnabled(), isInfoEnabled()等等，提高了代码可读性。</p>
<p>通过使用SLF4J的日志方法，你可以延迟构建日志信息（Srting）的开销，直到你真正需要，这对于内存和CPU都是高效的。</p>
<p>作为附注，更少的暂时的字符串意味着垃圾回收器（Garbage Collector）能够做更多的工作，这意味着你的应用程序有为更好的吞吐量和性能。</p>
<p>这些好处只是冰山一角，你将在开始使用SL4J和阅读其中代码的时候知道更多的好处，建议使用SLF4J做日志而不是使用包括Log4J在内的其他日志API。 </p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> SLF4J </tag>
            
            <tag> 日志 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[罗永浩『改变命运的演讲能力』听课笔记]]></title>
      <url>http://chuanqiang.github.io/2017/02/25/luoyonghao-speeck/</url>
      <content type="html"><![CDATA[<p>老罗是一个我觉得很有趣又十分佩服的人，这段时间在播客上听一个关于他的电台，叫做『老罗锤子FM』，里面不但有之前他在网上流传的一些音频资料，而且会更新一些他发布会、演讲以及参加交流活动的现场录音。昨天在下班的地铁上听了老罗的『改变命运的演讲能力』的音频，觉得受益颇多，于是在网上找到了这篇不错的听课笔记，加以整理分享至此。</p>
<a id="more"></a>
<h3 id="演讲恐惧症"><a href="#演讲恐惧症" class="headerlink" title="演讲恐惧症"></a>演讲恐惧症</h3><ol>
<li>再熟练的人，也有演讲恐惧症，有不安恐惧紧张，正因为如此痛苦，才具有价值。</li>
<li>演讲很好的人，很多都是深怕自己把演讲搞砸的人（我觉得这个程度肯定不是怕得要死，不然也会出问题，可能话都说不出来了）</li>
<li>消除演讲恐惧的方式，唯一的方式，就是多讲，别无选择，不要相信演讲之前把观众想象成裸体之类的。</li>
<li>除了多讲之外，一个很有帮助的技巧就是，多用录音或录像的方式，来了解自己训练到一个什么样的程度，也可以把自己的录音或录像给一些信任的人让他们去评价。</li>
<li>成功的人，不畏惧做自己畏惧的事情。</li>
</ol>
<h3 id="老罗对演讲的理解"><a href="#老罗对演讲的理解" class="headerlink" title="老罗对演讲的理解"></a>老罗对演讲的理解</h3><ol>
<li>演讲的本质，不是一个正常的沟通和交流，而是一场表演，再像很自然地和朋友平常交流，也是刻意的。</li>
<li>演讲就是表演，但表演也可以是真诚的。</li>
<li>演讲的天分和后期的努力的比重，如果要成为专业演讲家，则天分至少一半。如果只需要把演讲的能力比一般人强，靠努力训练足够了。</li>
<li>做自己有激情的事，那么演讲中的激情就是真实的。</li>
<li>演讲的基本道理，所有演讲的技巧辅助手段方式都替代不了内容本身。</li>
<li>不要长期尝试感觉不到激情与幸福的职业。</li>
<li>一直假装自己很兴奋不可能，但在演讲的头十分钟假装自己很兴奋，装着装着自己也就真的兴奋了。</li>
<li>有一种精神药物可以让你一整天都精神抖擞，副作用很少或没有，可以托认识的医生进行购买。</li>
</ol>
<h3 id="演讲的准备"><a href="#演讲的准备" class="headerlink" title="演讲的准备"></a>演讲的准备</h3><ol>
<li>演讲的准备时间：如果是大型演讲一个多小时，从准备大纲充实内容制作幻灯片等，不少于100个小时，就是一百倍。</li>
<li>罗永浩准备2个小时多一点的演讲，也需要200个小时。</li>
<li>即使是15分钟的会议报告，你也需要8-10小时去准备，这样才可以让上司同事感觉不错。</li>
</ol>
<h3 id="演讲技巧"><a href="#演讲技巧" class="headerlink" title="演讲技巧"></a>演讲技巧</h3><ol>
<li>要有数据。</li>
<li>要会吹牛逼。人们不是不喜欢听别人，只是不喜欢吹牛逼吹的不好看的。</li>
<li>要有故事，作为开场白和阐述一个理论。</li>
<li>要有画面，人是视觉动物。</li>
<li>要有问题，调动大家的胃口，把握现场节奏。</li>
<li>要有情感。</li>
<li>要善于自嘲，不然老是有包袱。</li>
<li>可以不断重复已经使用过的技巧（比如提出问题调动胃口），但你得保证每次质量都要高。恐怖片的套路都是一样的，不还是被吓到。</li>
<li>演讲最好采用三段式。每段讲完就要有一句总结的话，便于观众加深记忆。</li>
<li>在结尾，把演讲的境界提高。</li>
<li>逻辑很重要。对于有良好教育的人来说，逻辑性严密是必要的。</li>
<li>标题党。这个词是中性词。</li>
<li>错误把一个小圈子里面开玩笑的事情理解为公众都知道的，这是一个典型的错误。就算要讲，也要讲的若无其事，同时观察观众的反应。</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 读书 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 罗永浩 </tag>
            
            <tag> 演讲 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Java 基础之多线程]]></title>
      <url>http://chuanqiang.github.io/2017/02/20/thread/</url>
      <content type="html"><![CDATA[<p>本文详细介绍了 Java 开发中多线程的相关知识，并列举了常用的线程池。</p>
<a id="more"></a>
<p><strong>进程</strong>：正在执行中的程序，其实是应用程序在内存中运行的那片空间。</p>
<p><strong>线程</strong>：进程中的一个执行单元，负责进程中程序的执行。一个进程中至少有一个线程，也可以有多个线程，此时称为多线程程序。</p>
<p><strong>硬盘</strong>：持久化存储数据区域(关机后数据仍在)。</p>
<p><strong>内存</strong>：临时性存储数据区域(关机后数据消失)，提高性能。</p>
<p>CPU处理程序是通过快速切换完成的，与我们来说是随机的；多线程的使用可以合理的使用CPU资源，如果线程过多会导致降低性能。</p>
<h2 id="Thread-的相关方法"><a href="#Thread-的相关方法" class="headerlink" title="Thread 的相关方法"></a>Thread 的相关方法</h2><ul>
<li><code>Thread.currentThread().getName()</code>: 获得当前线程的名称(主线程:main；自定义线程:Thread-N)。</li>
<li><code>isAlive</code>:判断线程是否未终止</li>
<li><code>getPriority</code>:获得线程的优先级数值</li>
<li><code>setPriority</code>:设置线程的优先级数值</li>
<li><code>setName</code>:设置线程的名字</li>
</ul>
<h2 id="创建线程的两种方式"><a href="#创建线程的两种方式" class="headerlink" title="创建线程的两种方式"></a>创建线程的两种方式</h2><h3 id="一、继承Thread类"><a href="#一、继承Thread类" class="headerlink" title="一、继承Thread类"></a>一、继承Thread类</h3><ol>
<li>继承<code>Thread</code>类</li>
<li>重写<code>Thread</code>的<code>run</code>方法。</li>
<li>创建子类对象，即线程对象</li>
<li>调用start方法，开启线程并让线程执行，同时告诉jvm去调用<code>run</code>方法。</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</div><div class="line">	<span class="keyword">private</span> String name;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Demo</span><span class="params">(String name)</span> </span>&#123;</div><div class="line">		<span class="keyword">super</span>();</div><div class="line">		<span class="keyword">this</span>.name = name;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++) &#123;</div><div class="line">			System.out.println(<span class="string">"====="</span>+ Thread.currentThread().getName() +<span class="string">"====="</span> + <span class="keyword">this</span>.name + i);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThreadDemo</span> </span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">		<span class="comment">// 创建了两个线程对象</span></div><div class="line">		Demo d1 = <span class="keyword">new</span> Demo(<span class="string">"张三"</span>);</div><div class="line">		Demo d2 = <span class="keyword">new</span> Demo(<span class="string">"李四"</span>);</div><div class="line">		d2.start();<span class="comment">//将d2线程开启</span></div><div class="line">		d1.run();<span class="comment">// 由主线程负责</span></div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><blockquote>
<p>线程对象调用<code>run</code>方法和调用<code>start</code>方法的区别？<br>调用<code>run</code>方法不开启线程,仅是对象调用方法.<br>调用<code>start</code>开启线程,并让jvm调用<code>run</code>方法在开启的线程中执行.</p>
</blockquote>
<h4 id="多线程内存"><a href="#多线程内存" class="headerlink" title="多线程内存"></a>多线程内存</h4><ul>
<li>多线程执行时,在栈内存中,每一个线程都有一片属于自己的栈内存空间,进行方法的压栈和弹栈.</li>
<li>当执行线程的任务结束了,线程自动在栈内存中释放.</li>
<li>当所有的执行线程都结束了,进程才结束</li>
</ul>
<h3 id="二、实现-Runnable-接口"><a href="#二、实现-Runnable-接口" class="headerlink" title="二、实现 Runnable 接口"></a>二、实现 Runnable 接口</h3><ol>
<li>定义类实现<code>Runnable</code>接口: 避免继承Thread类的单继承局限性</li>
<li>覆盖接口中的<code>run</code>方法。将线程任务代码定义到<code>run</code>方法中</li>
<li>创建<code>Thread</code>类的对象，并将<code>Runnable</code>接口的子类对象作为参数传递给<code>Thread</code>类的构造函数。因为线程被封装到Runnable接口的run方法中，而这个run方法所属于Runnable接口的子类对象，所以将这个子类对象作为参数传递给THread的构造函数。这样，线程对象创建时就可以明确要运行的线程任务。</li>
<li>调用<code>Thread</code>类的<code>start</code>方法开启线程</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</div><div class="line">	<span class="keyword">private</span> String name;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Demo</span><span class="params">(String name)</span> </span>&#123;</div><div class="line">		<span class="keyword">super</span>();</div><div class="line">		<span class="keyword">this</span>.name = name;</div><div class="line">	&#125;</div><div class="line">   <span class="comment">// 覆盖了接口Runnable中的run方法 </span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++) &#123;</div><div class="line">			System.out.println(<span class="string">"====="</span>+ Thread.currentThread().getName() +<span class="string">"====="</span> + <span class="keyword">this</span>.name + i);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThreadDemo</span> </span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">	   <span class="comment">// 创建Runnable子类的对象，注意它并不是线程对象</span></div><div class="line">		Demo d1 = <span class="keyword">new</span> Demo(<span class="string">"张三"</span>);</div><div class="line">		Demo d2 = <span class="keyword">new</span> Demo(<span class="string">"李四"</span>);</div><div class="line">		Thread t1 = <span class="keyword">new</span> Thread(d1); </div><div class="line">		Thread t2 = <span class="keyword">new</span> Thread(d2); </div><div class="line">		t1.start();</div><div class="line">		t2.start();</div><div class="line">		System.out.println(Thread.currentThread().getName());</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h4><ul>
<li>实现Runnable接口避免了单继承的局限性，所以较为常用。</li>
<li>实现Runnable接口的方式，更加符合面向对象。线程分为两部分，一部分线程对象，一部分线程任务。<ul>
<li>继承Thread类，线程对象和任务耦合在一起，一旦创建Thread子类对象，即使线程对象，又是线程任务。</li>
<li>实现Runnable接口，将线程任务单独分离出来封装成对象，类型就是Runnable接口，实现了解耦。</li>
</ul>
</li>
</ul>
<h2 id="线程状态"><a href="#线程状态" class="headerlink" title="线程状态"></a>线程状态</h2><p><img src="http://oeckzejn4.bkt.clouddn.com/blog/20170206-224342984.jpg" alt=""></p>
<h2 id="多线程的安全问题"><a href="#多线程的安全问题" class="headerlink" title="多线程的安全问题"></a>多线程的安全问题</h2><p>由于线程的随机性，会出现多线程的安全问题。</p>
<h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><ul>
<li>线程任务操作共享的数据</li>
<li>线程任务操作数据的运算有多个</li>
</ul>
<h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><h4 id="1、synchronized-同步代码块"><a href="#1、synchronized-同步代码块" class="headerlink" title="1、synchronized 同步代码块"></a>1、synchronized 同步代码块</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">synchronized</span>(对象)&#123;</div><div class="line">    <span class="comment">// 需要被同步的代码</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>原理</strong></p>
<p>线程1读到<code>synchronized</code>，会找后面括号中的对象(可任意，一般写<code>this</code>)并拿到该对象，之后往下执行。当线程2读到<code>synchronized</code>的时候，也会找后面括号中的对象，发现被线程1拿走了，所以线程2进不来了。直到线程1执行完<code>synchronized</code>代码块并释放对象之后，线程2才能继续执行。(对象相当于锁)–&gt;火车上的卫生间</p>
<p><strong>注意</strong>:必须保证多个线程在同步中使用的同一个锁，即<code>synchronized</code>后面括号中为同一个对象</p>
<p> <strong>同步弊端</strong>：降低了程序性能。</p>
<h4 id="2、-同步函数"><a href="#2、-同步函数" class="headerlink" title="2、 同步函数"></a>2、 同步函数</h4><p>同步函数使用的锁是固定的<code>this</code>。当线程任务只需要一个同步时完全可以使用同步函数。<br>同步代码块使用的锁是任意对象。当线程中需要多个同步时 ，必须通过锁来区分(较为常用)</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">method</span><span class="params">()</span></span>&#123;</div><div class="line">    <span class="comment">// 需要被同步的代码</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>注意:</strong><code>static</code>同步函数<code>public static synchronized void method(){}</code>，使用的锁不是<code>this</code>，而是字节码文件对象(<code>类名.class</code>)。因为万物皆对象，字节码文件也被视为对象存在。因此相应的<code>synchronized</code>代码块后的对象也要用<code>类名.class</code>:<code>synchronized(类名.class){}</code>.</p>
<h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><ul>
<li>既然是多线程的问题，必然发生在线程任务内</li>
<li>分析线程任务内是否有共享数据</li>
<li>是否有对数据进行多次运算</li>
</ul>
<h3 id="懒汉式线程安全问题"><a href="#懒汉式线程安全问题" class="headerlink" title="懒汉式线程安全问题"></a>懒汉式线程安全问题</h3><p><strong>恶汉式</strong>:线程安全，调用率高，但是不能延时加载，类初始化时，立即加载这个对象<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo01</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Demo01 instance = <span class="keyword">new</span> Demo01();</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Demo01</span><span class="params">()</span> </span>&#123; &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Demo01 <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> instance;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>懒汉式</strong>:可以延时加载，存在线程问题，可以加锁，并且为了兼顾效率，再加一次判断，减少判断锁的次数<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Single</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Single instance;</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Single</span><span class="params">()</span> </span>&#123; &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  Single <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span>(instance == <span class="keyword">null</span>)&#123;</div><div class="line">            <span class="keyword">synchronized</span>(Single.class)&#123;</div><div class="line">                <span class="keyword">if</span> (instance == <span class="keyword">null</span>) &#123;</div><div class="line">                instance = <span class="keyword">new</span> Single();</div><div class="line">             &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> instance;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="死锁"><a href="#死锁" class="headerlink" title="死锁"></a>死锁</h2><p>当线程任务中出现了多个同步(多个锁)时，如果同步中嵌套了其他同步，容易引发死锁。如下:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//Thread_0</span></div><div class="line"><span class="keyword">synchronized</span>(obj1)&#123;</div><div class="line">    <span class="comment">//Thread-0 obj1--&gt;</span></div><div class="line">    <span class="keyword">synchronized</span>(obj2)&#123;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//Thread_1</span></div><div class="line"><span class="keyword">synchronized</span>(obj2)&#123;</div><div class="line">    <span class="comment">//Thread-1 obj2--&gt;</span></div><div class="line">    <span class="keyword">synchronized</span>(obj1)&#123;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>一个死锁程序<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DeadLock</span> </span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">		Test t1 = <span class="keyword">new</span> Test(<span class="keyword">true</span>);</div><div class="line">		Test t2 = <span class="keyword">new</span> Test(<span class="keyword">false</span>);</div><div class="line">		Thread t11 = <span class="keyword">new</span> Thread(t1);</div><div class="line">		Thread t22 = <span class="keyword">new</span> Thread(t2);</div><div class="line">		t11.start();</div><div class="line">		t22.start();</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</div><div class="line">	<span class="keyword">private</span> <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</div><div class="line"></div><div class="line">	Test(<span class="keyword">boolean</span> flag) &#123;</div><div class="line">		<span class="keyword">this</span>.flag = flag;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="keyword">if</span> (flag) &#123;</div><div class="line">			<span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</div><div class="line">				<span class="keyword">synchronized</span> (MyLock.LOCKA) &#123;</div><div class="line">					System.out.println(Thread.currentThread().getName() + <span class="string">"...if...lock a"</span>);</div><div class="line">					<span class="keyword">synchronized</span> (MyLock.LOCKB) &#123;</div><div class="line">						System.out.println(Thread.currentThread().getName() + <span class="string">"...if...lock b"</span>);</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line"></div><div class="line">		&#125; <span class="keyword">else</span> &#123;</div><div class="line">			<span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</div><div class="line">				<span class="keyword">synchronized</span> (MyLock.LOCKB) &#123;</div><div class="line">					System.out.println(Thread.currentThread().getName() + <span class="string">"...if...lock b"</span>);</div><div class="line">					<span class="keyword">synchronized</span> (MyLock.LOCKA) &#123;</div><div class="line">						System.out.println(Thread.currentThread().getName() + <span class="string">"...if...lock a"</span>);</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line"></div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyLock</span> </span>&#123;</div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Object LOCKA = <span class="keyword">new</span> Object();</div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Object LOCKB = <span class="keyword">new</span> Object();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="多线程通讯"><a href="#多线程通讯" class="headerlink" title="多线程通讯"></a>多线程通讯</h2><h3 id="生产者消费者问题"><a href="#生产者消费者问题" class="headerlink" title="生产者消费者问题"></a>生产者消费者问题</h3><p>这是多线程中最为常见的案例(重要)<br>生产者和消费者同时执行，需要多线程；但是任务却不相同，处理的资源是相同的:<strong>线程间的通信</strong></p>
<p>生产消费实例:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProduceConsumer</span> </span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">		Resource r = <span class="keyword">new</span> Resource();</div><div class="line">		Produce produce = <span class="keyword">new</span> Produce(r);</div><div class="line">		Consumer consumer = <span class="keyword">new</span> Consumer(r);</div><div class="line">		Thread t1 = <span class="keyword">new</span> Thread(produce);</div><div class="line">		Thread t11 = <span class="keyword">new</span> Thread(produce);</div><div class="line">		Thread t2 = <span class="keyword">new</span> Thread(consumer);</div><div class="line">		Thread t22 = <span class="keyword">new</span> Thread(consumer);</div><div class="line">		<span class="comment">// 开启多个生产多个消费</span></div><div class="line">		t1.start();</div><div class="line">		t11.start();</div><div class="line">		t2.start();</div><div class="line">		t22.start();</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 资源</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Resource</span> </span>&#123;</div><div class="line">	<span class="keyword">private</span> String name;</div><div class="line">	<span class="keyword">private</span> <span class="keyword">int</span> num = <span class="number">1</span>;</div><div class="line">	<span class="keyword">private</span> <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</div><div class="line"></div><div class="line">	<span class="comment">// 生产</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">set</span><span class="params">(String name)</span> </span>&#123;</div><div class="line">		<span class="keyword">while</span> (flag) &#123;</div><div class="line">			<span class="keyword">try</span> &#123;</div><div class="line">				wait();</div><div class="line">			&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</div><div class="line">				e.printStackTrace();</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">this</span>.name = name + num;</div><div class="line">		num++;</div><div class="line">		System.out.println(Thread.currentThread().getName() + <span class="string">"---生产者---"</span> + <span class="keyword">this</span>.name);</div><div class="line">		flag = <span class="keyword">true</span>;</div><div class="line">		notifyAll();</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">// 消费</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">get</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="keyword">while</span> (!flag) &#123;</div><div class="line">			<span class="keyword">try</span> &#123;</div><div class="line">				wait();</div><div class="line">			&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</div><div class="line">				e.printStackTrace();</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		System.out.println(Thread.currentThread().getName() + <span class="string">"---消费者---"</span> + <span class="keyword">this</span>.name);</div><div class="line">		flag = <span class="keyword">false</span>;</div><div class="line">		notifyAll();</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 生产者</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Produce</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</div><div class="line">	<span class="keyword">private</span> Resource r;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Produce</span><span class="params">(Resource r)</span> </span>&#123;</div><div class="line">		<span class="keyword">this</span>.r = r;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">50</span>; i &lt; <span class="number">200</span>; i++) &#123;</div><div class="line">			r.set(<span class="string">"面包"</span>); <span class="comment">// 开始生产</span></div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 消费者</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Consumer</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</div><div class="line">	<span class="keyword">private</span> Resource r;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Consumer</span><span class="params">(Resource r)</span> </span>&#123;</div><div class="line">		<span class="keyword">this</span>.r = r;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">200</span>; i++) &#123;</div><div class="line">			r.get(); <span class="comment">// 开始消费</span></div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>注意</strong>:</p>
<ul>
<li>当多个生产消费的时候，为防止被唤醒的线程没有判断标记，要用<code>while</code>判断标记，而不是<code>if</code>。</li>
<li>用<code>while</code>时会出现死锁，因为本方唤醒了本方,希望唤醒对方，所以使用<code>notifyAll</code>方法。</li>
</ul>
<h4 id="等待唤醒机制"><a href="#等待唤醒机制" class="headerlink" title="等待唤醒机制"></a>等待唤醒机制</h4><ul>
<li><code>wait()</code>: 会让线程处于等待状态，将线程临时存进了线程池中</li>
<li><code>notify()</code>: 会唤醒线程池中的任意一个等待线程。</li>
<li><code>notifyAll()</code>: 会唤醒线程池中所有的等待线程。</li>
</ul>
<p><strong>注意</strong>: </p>
<ul>
<li>这些方法必须使用在同步中，因为必须要标识<code>wait</code>、<code>notify</code>等方法所使用的锁。同一个锁上的<code>notify</code>，只能唤醒该锁上的<code>wait</code>方法。</li>
<li>这些方法必须标识所属的锁，而锁可以是任意对象，任意对象可以调用的方法必须是Object的方法，所以<strong>这些方法定义在Object类中</strong></li>
</ul>
<h2 id="Lock"><a href="#Lock" class="headerlink" title="Lock"></a>Lock</h2><p>在 JDK 1.5 之后，<code>Lock</code> 实现提供了比使用 <code>synchronized</code> 方法和语句可获得的更广泛的锁定操作。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Lock l = ...; </div><div class="line">     l.lock();</div><div class="line">     <span class="keyword">try</span> &#123;</div><div class="line">         <span class="comment">// access the resource protected by this lock</span></div><div class="line">     &#125; <span class="keyword">finally</span> &#123;</div><div class="line">         l.unlock(); <span class="comment">// 因为必须要释放锁，所以放到finally中</span></div><div class="line">     &#125;</div></pre></td></tr></table></figure></p>
<p>因为必须要释放锁，所以<code>lock.lock()</code>放到<code>finally</code> 块中。</p>
<p>之前用<code>synchronized</code>同步，锁可以是任意对象，并且锁对象和锁的方法是在一块的(Object 对象中的<code>object()</code>、<code>notify()</code>、<code>notifyAll()</code>方法)，而在Lock中把所有的监视器方法封装到<code>Condition</code> 对象中，实现了锁对象和监视器方法(锁方法)的分离，更加的面向对象。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Lock lock = <span class="keyword">new</span> ReentrantLock(); <span class="comment">// 获得锁对象</span></div><div class="line">Condition con = lock.newCondition(); <span class="comment">// 获得lock上的监视器方法对象</span></div><div class="line">lock.lock();    <span class="comment">// 得到锁</span></div><div class="line">con.await();    <span class="comment">//  让线程处于等待状态</span></div><div class="line">con.signal();   <span class="comment">// 唤醒任意一个等待的线程</span></div><div class="line">con.singnalAll(); <span class="comment">// 唤醒所有等待的线程</span></div><div class="line">lock.unlock();  <span class="comment">// 释放锁</span></div></pre></td></tr></table></figure></p>
<p>一个实例<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">BoundedBuffer</span> </span>&#123;</div><div class="line">   <span class="keyword">final</span> Lock lock = <span class="keyword">new</span> ReentrantLock();</div><div class="line">   <span class="keyword">final</span> Condition notFull  = lock.newCondition(); </div><div class="line">   <span class="keyword">final</span> Condition notEmpty = lock.newCondition(); </div><div class="line"></div><div class="line">   <span class="keyword">final</span> Object[] items = <span class="keyword">new</span> Object[<span class="number">100</span>];</div><div class="line">   <span class="keyword">int</span> putptr, takeptr, count;</div><div class="line"></div><div class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">put</span><span class="params">(Object x)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</div><div class="line">     lock.lock();</div><div class="line">     <span class="keyword">try</span> &#123;</div><div class="line">       <span class="keyword">while</span> (count == items.length) </div><div class="line">         notFull.await();</div><div class="line">       items[putptr] = x; </div><div class="line">       <span class="keyword">if</span> (++putptr == items.length) putptr = <span class="number">0</span>;</div><div class="line">       ++count;</div><div class="line">       notEmpty.signal();</div><div class="line">     &#125; <span class="keyword">finally</span> &#123;</div><div class="line">       lock.unlock();</div><div class="line">     &#125;</div><div class="line">   &#125;</div><div class="line"></div><div class="line">   <span class="function"><span class="keyword">public</span> Object <span class="title">take</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</div><div class="line">     lock.lock();</div><div class="line">     <span class="keyword">try</span> &#123;</div><div class="line">       <span class="keyword">while</span> (count == <span class="number">0</span>) </div><div class="line">         notEmpty.await();</div><div class="line">       Object x = items[takeptr]; </div><div class="line">       <span class="keyword">if</span> (++takeptr == items.length) takeptr = <span class="number">0</span>;</div><div class="line">       --count;</div><div class="line">       notFull.signal();</div><div class="line">       <span class="keyword">return</span> x;</div><div class="line">     &#125; <span class="keyword">finally</span> &#123;</div><div class="line">       lock.unlock();</div><div class="line">     &#125;</div><div class="line">   &#125; </div><div class="line"> &#125;</div></pre></td></tr></table></figure></p>
<h2 id="多线程的细节问题"><a href="#多线程的细节问题" class="headerlink" title="多线程的细节问题"></a>多线程的细节问题</h2><h3 id="1-sleep-和-wait-方法的异同点"><a href="#1-sleep-和-wait-方法的异同点" class="headerlink" title="1. sleep 和 wait 方法的异同点"></a>1. sleep 和 wait 方法的异同点</h3><ul>
<li>相同点<ul>
<li>都可以让线程处于冻结状态</li>
</ul>
</li>
<li>不同点<ul>
<li>sleep 必须指定时间；wait 可以指定时间，也可以不指定时间</li>
<li>sleep 时间到，线程处于临时阻塞或者运行；wait 如果没指定时间，必须通过notify 或者 notifyAll唤醒。</li>
<li>sleep 不一定非要定义在同步中；wait 必须定义在同步中。</li>
<li>都定义在同步中<ul>
<li>线程执行到 sleep，不会释放所</li>
<li>线程执行到 wait，会释放锁</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="2-线程如何停止"><a href="#2-线程如何停止" class="headerlink" title="2. 线程如何停止"></a>2. 线程如何停止</h3><p>所谓线程结束，就是让线程任务代码完成，<code>run</code>方法结束。</p>
<ul>
<li>stop  方法(过时):具有固定的不安全性，用<code>Thread.stop</code>来终止线程，将释放它已经锁定的所有监视器。</li>
<li>定义循环，控制住循环就行了</li>
<li>如果目标线程等待很长时间(处于冻结状态)，应用<code>interrupt</code>方法中断该线程(将线程的冻结状态清除，让线程重新获得cpu的执行资格)，并且收到一个<code>InterruptException</code>，在<code>catch</code>块中捕获，在异常处理中改变标记，让循环结束。</li>
</ul>
<p>Interrupt 实例<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> thread;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Task</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</div><div class="line">	<span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">		<span class="keyword">while</span> (flag) &#123;</div><div class="line">			<span class="keyword">try</span> &#123;</div><div class="line">				wait();</div><div class="line">			&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</div><div class="line">				System.out.println(Thread.currentThread().getName() + <span class="string">"--&gt;"</span> + e.toString());</div><div class="line">				changeFlag();</div><div class="line">			&#125;</div><div class="line">			System.out.println(Thread.currentThread().getName());</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">changeFlag</span><span class="params">()</span> </span>&#123;</div><div class="line">		flag = <span class="keyword">false</span>;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InterruptDemo</span> </span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">		Task d = <span class="keyword">new</span> Task();</div><div class="line">		Thread t1 = <span class="keyword">new</span> Thread(d,<span class="string">"线程1"</span>);</div><div class="line">		Thread t2 = <span class="keyword">new</span> Thread(d,<span class="string">"线程2"</span>);</div><div class="line">		t1.start();</div><div class="line">		t2.start();</div><div class="line">		<span class="keyword">int</span> x = <span class="number">0</span>;</div><div class="line">		<span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</div><div class="line">			<span class="keyword">if</span> (++x == <span class="number">50</span>) &#123;</div><div class="line">				<span class="comment">// d.changeFlag();</span></div><div class="line">				t1.interrupt();</div><div class="line">				t2.interrupt();</div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			&#125;</div><div class="line">			System.out.println(Thread.currentThread().getName());</div><div class="line">		&#125;</div><div class="line">		System.out.println(<span class="string">"over..."</span>);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="3-守护线程"><a href="#3-守护线程" class="headerlink" title="3. 守护线程"></a>3. 守护线程</h3><p>守护线程，可以理解为后台线程，一般创建的为前台线程，前后台运行线程的时候都是一样的，获取cpu的执行权限。但是结束的时候有些不同，前台线程和后台线程只要<code>run</code>方法结束，线程结束，<strong>但是在所有前台线程结束的时候，后台线程无论处于什么状态都会结束，从而进程结束。进程结束依赖的都是前台线程。</strong></p>
<p><strong>方法</strong>: <code>setDaemon(boolean on)</code></p>
<ul>
<li>该方法必须在线程启动前调用:<code>t.setDaemon(true);  t.start; // t 线程设置为了守护线程</code></li>
<li><code>on</code>如果为<code>true</code>，该线程标记为守护线程</li>
</ul>
<h3 id="4-线程的优先级"><a href="#4-线程的优先级" class="headerlink" title="4. 线程的优先级"></a>4. 线程的优先级</h3><p><code>Thread.currentThread.toString</code>: 返回该线程的字符串表示形式，包括『线程名称』、『优先级』、『线程组』</p>
<p><strong>优先级</strong>:</p>
<ul>
<li>用数字标识的<code>0-10</code>；其中默认的初始化优先级是5；</li>
<li>最明显的三个优先级 : 1，5，10。</li>
<li>Thread.MAX_PRIORITY 线程可以具有的最高优先级。 </li>
<li>Thread.MIN_PRIORITY  线程可以具有的最低优先级。 </li>
<li>Thread.NORM_PRIORITY  分配给线程的默认优先级。 </li>
<li>得到线程的优先级:<code>getPriority()</code></li>
<li>更改线程的优先级:<code>setPriority()</code></li>
</ul>
<h3 id="5-线程组"><a href="#5-线程组" class="headerlink" title="5. 线程组"></a>5. 线程组</h3><p><code>ThreadGroup</code>: 可以通过Thread构造函数明确新线程对象所属的线程组</p>
<p>线程组的好处: 可以对多个同组线程，进行统一的操作。默认都属于main线程。</p>
<h3 id="6-join-和-yield-方法"><a href="#6-join-和-yield-方法" class="headerlink" title="6. join() 和 yield() 方法"></a>6. join() 和 yield() 方法</h3><h4 id="join-方法"><a href="#join-方法" class="headerlink" title="join() 方法"></a>join() 方法</h4><p>用于临时加入一个运算的线程。让该线程执行完，程序才会执行。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">Demo d  = <span class="keyword">new</span> Demo();</div><div class="line">Thread t1 = <span class="keyword">new</span> Thread(d);</div><div class="line">Thread t2 = <span class="keyword">new</span> Thread(d);</div><div class="line">t1.start();</div><div class="line"><span class="keyword">try</span>&#123;</div><div class="line">    <span class="comment">// 主线程执行到这里，知道t1要加入执行，主线程释放了执行权(仅仅是释放，至于执行权给谁，有cpu随机决定)</span></div><div class="line">    <span class="comment">// 主线程的执行资格处于冻结状态，直至t1线程执行完恢复</span></div><div class="line">    t1.join;</div><div class="line">    &#125;<span class="keyword">catch</span>(InterruptException e)&#123;&#125;</div><div class="line">t2.start();</div></pre></td></tr></table></figure></p>
<h4 id="yield-方法"><a href="#yield-方法" class="headerlink" title="yield() 方法"></a>yield() 方法</h4><p>暂停当前正在执行的线程对象，并执行其他线程。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">30</span>; i++)&#123;</div><div class="line">            <span class="comment">// 线程临时停止，将执行权释放，让其他线程有机会获得执行权</span></div><div class="line">            Thread.yield();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="线程中匿名内部类使用"><a href="#线程中匿名内部类使用" class="headerlink" title="线程中匿名内部类使用"></a>线程中匿名内部类使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">Runnable r = <span class="keyword">new</span> Runnable()&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span> <span class="params">()</span></span>&#123;</div><div class="line">        code....</div><div class="line">    &#125;    </div><div class="line">&#125;;</div><div class="line"><span class="keyword">new</span> Thread(r).start();</div><div class="line"></div><div class="line"><span class="keyword">new</span> Thread()&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span> <span class="params">()</span></span>&#123;</div><div class="line">        code....</div><div class="line">&#125;    </div><div class="line">&#125;.start();</div></pre></td></tr></table></figure>
<p><strong>哪一个执行？</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable()&#123;</div><div class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</div><div class="line">			System.out.println(<span class="string">"runnable run"</span>);</div><div class="line">		&#125;</div><div class="line">	&#125;)&#123;</div><div class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</div><div class="line">			System.out.println(<span class="string">"subthread run"</span>); <span class="comment">// 执行</span></div><div class="line">		&#125;</div><div class="line">	&#125;.start();</div></pre></td></tr></table></figure></p>
<h2 id="线程池"><a href="#线程池" class="headerlink" title="线程池"></a>线程池</h2><p>自JDK5之后，Java推出了一个<strong>并发包</strong>：<code>java.util.concurrent</code>，在Java开发中，我们接触到了好多池的技术，<code>String类的对象池、Integer的共享池、连接数据库的连接池、Struts1.3的对象池</code>等等，<strong>池的最终目的都是节约资源</strong>，以更小的开销做更多的事情，从而提高性能。</p>
<p>我们的web项目都是部署在服务器上，浏览器端的每一个request就是一个线程，那么服务器需要并发的处理多个请求，就需要线程池技术，下面来看一下Java并发包下如何创建线程池。</p>
<ol>
<li>创建一个可重用固定线程集合的线程池，以共享的无界队列方式来运行这些线程。</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ExecutorService threadPool = Executors.newFixedThreadPool(<span class="number">3</span>);<span class="comment">// 创建可以容纳3个线程的线程池</span></div></pre></td></tr></table></figure>
<ol>
<li>创建一个可根据需要创建新线程的线程池，但是在以前构造的线程可用时将重用它们。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ExecutorService threadPool = Executors.newCachedThreadPool();// 线程池的大小会根据执行的任务数动态分配</div></pre></td></tr></table></figure>
<ol>
<li>创建一个使用单个 worker 线程的 Executor，以无界队列方式来运行该线程。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ExecutorService threadPool = Executors.newSingleThreadExecutor();</div><div class="line">// 创建单个线程的线程池，如果当前线程在执行任务时突然中断，则会创建一个新的线程替代它继续执行任务</div></pre></td></tr></table></figure>
<ol>
<li>创建一个可安排在给定延迟后运行命令或者定期地执行的线程池。<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ScheduledExecutorService threadPool = Executors.newScheduledThreadPool(3); // 效果类似于Timer定时器</div></pre></td></tr></table></figure>
</li>
</ol>
<p>每种线程池都有不同的使用场景，下面看一下这四种线程池使用起来有什么不同。</p>
<ol>
<li>FixedThreadPool</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">import java.util.concurrent.ExecutorService;  </div><div class="line">import java.util.concurrent.Executors;  </div><div class="line">publicclass ThreadPoolTest &#123;  </div><div class="line">public static void main(String[] args) &#123;  </div><div class="line">    ExecutorService threadPool = Executors.newFixedThreadPool(3);  </div><div class="line">    for(int i = 1; i &lt; 5; i++) &#123;  </div><div class="line">        final int taskID = i;  </div><div class="line">        threadPool.execute(new Runnable() &#123;  </div><div class="line">            public void run() &#123;  </div><div class="line">                for(int i = 1; i &lt; 5; i++) &#123;  </div><div class="line">                    try &#123;  </div><div class="line">                        Thread.sleep(20);// 为了测试出效果，让每次任务执行都需要一定时间</div><div class="line">                    &#125; catch (InterruptedException e) &#123;  </div><div class="line">                        e.printStackTrace();  </div><div class="line">                    &#125;  </div><div class="line">                        System.out.println(&quot;第&quot; + taskID + &quot;次任务的第&quot; + i + &quot;次执行&quot;);  </div><div class="line">                    &#125;  </div><div class="line">                &#125;  </div><div class="line">            &#125;);  </div><div class="line">        &#125;  </div><div class="line">        threadPool.shutdown();// 任务执行完毕，关闭线程池</div><div class="line">    &#125;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>输出结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">第1次任务的第1次执行  </div><div class="line">第2次任务的第1次执行  </div><div class="line">第3次任务的第1次执行  </div><div class="line">第2次任务的第2次执行  </div><div class="line">第3次任务的第2次执行  </div><div class="line">第1次任务的第2次执行  </div><div class="line">第3次任务的第3次执行  </div><div class="line">第1次任务的第3次执行  </div><div class="line">第2次任务的第3次执行  </div><div class="line">第3次任务的第4次执行  </div><div class="line">第2次任务的第4次执行  </div><div class="line">第1次任务的第4次执行  </div><div class="line">第4次任务的第1次执行  </div><div class="line">第4次任务的第2次执行  </div><div class="line">第4次任务的第3次执行  </div><div class="line">第4次任务的第4次执行</div></pre></td></tr></table></figure></p>
<p>上段代码中，创建了一个固定大小的线程池，容量为3，然后循环执行了4个任务，由输出结果可以看到，前3个任务首先执行完，然后空闲下来的线程去执行第4个任务，在<code>FixedThreadPool</code>中，有一个固定大小的池，如果当前需要执行的任务超过了池大小，那么多余的任务等待状态，直到有空闲下来的线程执行任务，而当执行的任务小于池大小，空闲的线程也不会去销毁。</p>
<ol>
<li>CachedThreadPool</li>
</ol>
<p>上段代码其它地方不变，将<code>newFixedThreadPool(3)</code>方法换成<code>newCachedThreadPool()</code>方法。</p>
<p>输出结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">第3次任务的第1次执行  </div><div class="line">第4次任务的第1次执行  </div><div class="line">第1次任务的第1次执行  </div><div class="line">第2次任务的第1次执行  </div><div class="line">第4次任务的第2次执行  </div><div class="line">第3次任务的第2次执行  </div><div class="line">第2次任务的第2次执行  </div><div class="line">第1次任务的第2次执行  </div><div class="line">第2次任务的第3次执行  </div><div class="line">第3次任务的第3次执行  </div><div class="line">第1次任务的第3次执行  </div><div class="line">第4次任务的第3次执行  </div><div class="line">第2次任务的第4次执行  </div><div class="line">第4次任务的第4次执行  </div><div class="line">第3次任务的第4次执行  </div><div class="line">第1次任务的第4次执行</div></pre></td></tr></table></figure></p>
<p>可见，4个任务是交替执行的，<code>CachedThreadPool</code>会创建一个缓存区，将初始化的线程缓存起来，如果线程有可用的，就使用之前创建好的线程，如果没有可用的，就新创建线程，终止并且从缓存中移除已有60秒未被使用的线程。</p>
<ol>
<li>SingleThreadExecutor        </li>
</ol>
<p>上段代码其它地方不变，将<code>newFixedThreadPool</code>方法换成<code>newSingleThreadExecutor</code>方法。   </p>
<p>输出结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">第1次任务的第1次执行  </div><div class="line">第1次任务的第2次执行  </div><div class="line">第1次任务的第3次执行  </div><div class="line">第1次任务的第4次执行  </div><div class="line">第2次任务的第1次执行  </div><div class="line">第2次任务的第2次执行  </div><div class="line">第2次任务的第3次执行  </div><div class="line">第2次任务的第4次执行  </div><div class="line">第3次任务的第1次执行  </div><div class="line">第3次任务的第2次执行  </div><div class="line">第3次任务的第3次执行  </div><div class="line">第3次任务的第4次执行  </div><div class="line">第4次任务的第1次执行  </div><div class="line">第4次任务的第2次执行  </div><div class="line">第4次任务的第3次执行  </div><div class="line">第4次任务的第4次执行</div></pre></td></tr></table></figure></p>
<p>4个任务是顺序执行的，<code>SingleThreadExecutor</code>得到的是一个单个的线程，这个线程会保证你的任务执行完成，如果当前线程意外终止，会创建一个新线程继续执行任务，这和我们直接创建线程不同，也和<code>newFixedThreadPool(1)</code>不同。</p>
<p>4.ScheduledThreadPool<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">import java.util.concurrent.Executors;</div><div class="line">import java.util.concurrent.ScheduledExecutorService;</div><div class="line">import java.util.concurrent.TimeUnit;</div><div class="line"></div><div class="line">public class ThreadPoolTest &#123;</div><div class="line">    public static void main(String[] args) &#123;</div><div class="line">        ScheduledExecutorService schedulePool = Executors.newScheduledThreadPool(1);</div><div class="line">        // 5秒后执行任务</div><div class="line">        schedulePool.schedule(new Runnable() &#123;</div><div class="line">            public void run() &#123;</div><div class="line">                System.out.println(&quot;爆炸&quot;);</div><div class="line">            &#125;</div><div class="line">        &#125;, 5, TimeUnit.SECONDS);</div><div class="line">        // 5秒后执行任务，以后每2秒执行一次</div><div class="line">        schedulePool.scheduleAtFixedRate(new Runnable() &#123;</div><div class="line">            @Override</div><div class="line">            public void run() &#123;</div><div class="line">                System.out.println(&quot;爆炸&quot;);</div><div class="line">            &#125;</div><div class="line">        &#125;, 5, 2, TimeUnit.SECONDS);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><code>ScheduledThreadPool</code>可以定时的或延时的执行任务。</p>
<p>Java的并发包很强大，上面所说只是入门，随着学习深入，会有更多记录在博客里。<br>本文来自：高爽|Coder，原文地址：<a href="http://blog.csdn.net/ghsau/article/details/7443324" target="_blank" rel="external">http://blog.csdn.net/ghsau/article/details/7443324</a></p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Java 基础 </tag>
            
            <tag> 多线程 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[FreeMarker 基础]]></title>
      <url>http://chuanqiang.github.io/2017/02/20/freemarker/</url>
      <content type="html"><![CDATA[<p>本文详细讲解了 FreeMarker 的使用和相关的语法。</p>
<a id="more"></a>
<h2 id="jsp-freemarker-velocity-比较"><a href="#jsp-freemarker-velocity-比较" class="headerlink" title="jsp freemarker velocity 比较"></a>jsp freemarker velocity 比较</h2><p>在 Java 领域，表现层的技术主要有三种: jsp、freemarker、veloctity.</p>
<h3 id="jsp-最常用的技术"><a href="#jsp-最常用的技术" class="headerlink" title="jsp 最常用的技术"></a>jsp 最常用的技术</h3><h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><ol>
<li>功能强大，可以写java代码</li>
<li>支持jsp标签（jsp tag）</li>
<li>支持表达式语言（el）</li>
<li>官方标准，用户群广，丰富的第三方jsp标签库</li>
<li>性能良好。jsp编译成class文件执行，有很好的性能表现</li>
</ol>
<h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><p>jsp没有明显缺点，非要挑点骨头那就是，由于可以编写java代码，如使用不当容易破坏mvc结构。</p>
<h3 id="velocity-较早期出现的用于替代jsp的模板语言"><a href="#velocity-较早期出现的用于替代jsp的模板语言" class="headerlink" title="velocity 较早期出现的用于替代jsp的模板语言"></a>velocity 较早期出现的用于替代jsp的模板语言</h3><h4 id="优点-1"><a href="#优点-1" class="headerlink" title="优点"></a>优点</h4><ol>
<li>不能编写java代码，可以实现严格的mvc分离</li>
<li>性能良好，据说比jsp性能还要好些</li>
<li>使用表达式语言，据说jsp的表达式语言就是学velocity的<h4 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a>缺点</h4></li>
<li>不是官方标准</li>
<li>用户群体和第三方标签库没有jsp多。</li>
<li>对jsp标签支持不够好</li>
</ol>
<h3 id="freemarker"><a href="#freemarker" class="headerlink" title="freemarker"></a>freemarker</h3><h4 id="优点-2"><a href="#优点-2" class="headerlink" title="优点"></a>优点</h4><ol>
<li>不能编写java代码，可以实现严格的mvc分离</li>
<li>性能非常不错</li>
<li>对jsp标签支持良好</li>
<li>内置大量常用功能，使用非常方便</li>
<li>宏定义（类似jsp标签）非常方便</li>
<li>使用表达式语言<h4 id="缺点-2"><a href="#缺点-2" class="headerlink" title="缺点"></a>缺点</h4></li>
<li>不是官方标准</li>
<li>用户群体和第三方标签库没有jsp多</li>
</ol>
<h3 id="选择freemarker的原因"><a href="#选择freemarker的原因" class="headerlink" title="选择freemarker的原因"></a>选择freemarker的原因</h3><ol>
<li>性能。velocity应该是最好的，其次是jsp，普通的页面freemarker性能最差（虽然只是几毫秒到十几毫秒的差距）。但是在复杂页面上（包含大量判断、日期金额格式化）的页面上，freemarker的性能比使用tag和el的jsp好。</li>
<li>宏定义比jsp tag方便</li>
<li>内置大量常用功能。比如html过滤，日期金额格式化等等，使用非常方便</li>
<li>支持jsp标签</li>
<li>可以实现严格的mvc分离</li>
</ol>
<h2 id="FreeMarker-介绍"><a href="#FreeMarker-介绍" class="headerlink" title="FreeMarker 介绍"></a>FreeMarker 介绍</h2><p>FreeMarker是一款模板引擎：即一种基于模板、用来生成输出文本(任何来自于HTML格式的文本用来自动生成源代码)的通用工具。<br>使用MVC模式的动态页面的设计构思使得你可以将前端设计师(编写HTML页面的人员)从程序员中分离出来。</p>
<p>数据模型可以被看做是树状结构的。<br>标量存储单一的值，这种类型的值可以是字符串，数字，日期/时间或者是布尔值。<br>哈希表是存储变量和与其相关且有唯一标识名称变量的容器。<br>序列是存储有序变量的容器。存储的变量可以通过数字索引来检索，索引通常从零开始。</p>
<h3 id="模板一览"><a href="#模板一览" class="headerlink" title="模板一览"></a>模板一览</h3><p><code>${…}</code>：FreeMarker将会输出真实的值来替换花括号内的表达式<br>FTL tags 标签（FreeMarker模板的语言标签）：FTL标签和HTML标签有一点相似，但是它们是FreeMarker的指令而且是不会直接输出出来的东西。这些标签的使用一般以符号#开头<br>Comments注释：FreeMarker的注释和HTML的注释相似，但是它用&lt;#–和–&gt;来分隔的。<br>irectives指令：就是所指的FTL标签</p>
<h3 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h3><h4 id="if-指令"><a href="#if-指令" class="headerlink" title="if 指令"></a>if 指令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;#if ...&gt;</div><div class="line">	...</div><div class="line">&lt;#else&gt;</div><div class="line">	...</div><div class="line">&lt;#if&gt;</div></pre></td></tr></table></figure>
<h4 id="list-指令"><a href="#list-指令" class="headerlink" title="list 指令"></a>list 指令</h4><p>list指令的一般格式为：<br><code>&lt;#list sequence as loopVariable&gt;repeatThis&lt;/#list&gt;</code><br><code>repeatThis</code>部分将会在给定的<code>sequence</code>遍历时在每项中重复，从第一项开始，一个接着一个。在所有的重复中，<code>loopVariable</code>将持有当前项的值。这个循环变量仅存在于<code>&lt;#list …&gt;和&lt;/#list&gt;</code>标签之间。<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;#list animals as being&gt;</div><div class="line">&lt;tr&gt;&lt;td&gt;$&#123;being.name&#125;&lt;td&gt;$&#123;being.price&#125; Euros</div><div class="line">&lt;/#list&gt;</div></pre></td></tr></table></figure></p>
<h4 id="include-指令"><a href="#include-指令" class="headerlink" title="include 指令"></a>include 指令</h4><p>在当前的模板中插入其他文件的内容。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">#include</span> "/<span class="attr">copyright_footer.html</span>"&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="处理不存在的变量"><a href="#处理不存在的变量" class="headerlink" title="处理不存在的变量"></a>处理不存在的变量</h4><p>一个不存在的变量和一个是null的变量，对于FreeMarker来说是一样的。此时，指定一个默认值来避免变量丢失这种情况。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">通过在变量名后面跟着一个!和默认值</div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Welcome $&#123;user!"Anonymous"&#125;!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>也可以在变量名后面通过放置??来询问FreeMarker一个变量是否存在。将它和if指令合并，那么如果user变量不存在的话将会忽略整个问候代码段：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">#if</span> <span class="attr">user</span>??&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Welcome $&#123;user&#125;!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">#if</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p><strong>注意：</strong><br>关于多级访问的变量不存在时<br><code>animals.python.price!0</code> 不存在时制定为0，但如果animals或者python不存在，那么模板处理过程将会以“未定义的变量”错误而停止。<br>可以这样来书写代码<code>(animals.python.price)!0</code>。这种情况下当animals或python不存在时表达式的结果仍然是0.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;#assign seq = [&apos;a&apos;, &apos;b&apos;]&gt;</div><div class="line">$&#123;seq[0]!&apos;-&apos;&#125;</div><div class="line">$&#123;seq[1]!&apos;-&apos;&#125;</div><div class="line">$&#123;seq[2]!&apos;-&apos;&#125;</div><div class="line">$&#123;seq[3]!&apos;-&apos;&#125;</div></pre></td></tr></table></figure>
<p>输出为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">a</div><div class="line">b</div><div class="line">-</div><div class="line">-</div></pre></td></tr></table></figure></p>
<h2 id="数值和类型"><a href="#数值和类型" class="headerlink" title="数值和类型"></a>数值和类型</h2><h3 id="支持的类型"><a href="#支持的类型" class="headerlink" title="支持的类型"></a>支持的类型</h3><ul>
<li>标量：<ul>
<li>字符串</li>
<li>数字</li>
<li>布尔值</li>
<li>日期</li>
</ul>
</li>
<li>容器：<ul>
<li>哈希表<br>  每个子变量都可以通过一个唯一的名称来查找（就像HashMap）</li>
<li>序列</li>
<li>集</li>
</ul>
</li>
<li>子程序：<ul>
<li>方法和函数</li>
<li>用户自定义指令</li>
</ul>
</li>
<li>其它/很少使用：</li>
<li>节点</li>
</ul>
<h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><h3 id="1-总体结构"><a href="#1-总体结构" class="headerlink" title="1. 总体结构"></a>1. 总体结构</h3><p><strong>Text文本</strong>：文本会照着原样来输出。<br><strong>Interpolation插值</strong>：这部分的输出会被计算的值来替换。插值由${和}所分隔（或者#{和}，这种风格已经不建议再使用了）。<br><strong>FTL tags标签</strong>：FTL标签和HTML标签很相似，但是它们却是给FreeMarker的指示，而且不会打印在输出内容中。<br><strong>Comments注释</strong>：FTL的注释和HTML的注释也很相似，但它们是由&lt;#–和–&gt;来分隔的<br><img src="http://oeckzejn4.bkt.clouddn.com/blog/20161105-104618667.jpg" alt=""><br>FTL是区分大小写的.</p>
<h3 id="2-表达式"><a href="#2-表达式" class="headerlink" title="2. 表达式"></a>2. 表达式</h3><ul>
<li>直接指定值<br> 字符串：”Foo” 或者 ‘Foo’ 或者 “It’s \”quoted\”” 或者 r”C:\raw\string”<br> 数字：123.45 &lt;#list[BR] animals as[BR] being[BR] &gt;[BR] ${being.name} for ${being.price} Euros[BR] &lt;/#list &gt;<br> 布尔值：true, false<br> 序列：[“foo”, “bar”, 123.45], 1..100<br> 哈希表：{“name”:”green mouse”, “price”:150}</li>
<li>检索变量<br> 顶层变量：user<br> 从哈希表中检索数据：user.name, user[“name”]<br> 从序列中检索：products[5]<br> 特殊变量：.main</li>
<li>字符串操作<br> 插值（或连接）：”Hello ${user}!”（或”Free” + “Marker”）<br> 获取一个字符：name[0]</li>
<li>序列操作<br> 连接：users + [“guest”]<br> 序列切分：products[10..19] 或 products[5..]</li>
<li>哈希表操作<br> 连接：passwords + {“joe”:”secret42”}</li>
<li>算数运算: (x * 1.5 + 10) / 2 - y % 100</li>
<li>比较运算：x == y, x != y, x &lt; y, x &gt; y, x &gt;= y, x &lt;= y, x &lt; y, 等等</li>
<li>逻辑操作：!registered &amp;&amp; (firstVisit || fromEurope)</li>
<li>内建函数：name?upper_case</li>
<li>方法调用：repeat(“What”, 3)</li>
<li>处理不存在的值<br> 默认值：name!”unknown” 或者(user.name)!”unknown” 或者name! 或者 (user.name)!<br> 检测不存在的值：name?? 或者(user.name)??</li>
</ul>
<h3 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h3><table>
<thead>
<tr>
<th>转义序列</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td> \</td>
<td>引号（u0022）</td>
</tr>
<tr>
<td>\’</td>
<td>单引号（又称为撇号）（u0027）</td>
</tr>
<tr>
<td>\</td>
<td>反斜杠（u005C）</td>
</tr>
<tr>
<td>\n</td>
<td>换行符（u000A）</td>
</tr>
<tr>
<td>\r</td>
<td>回车（u000D）</td>
</tr>
<tr>
<td>\t</td>
<td>水平制表符（又称为标签）（u0009）</td>
</tr>
<tr>
<td>\b</td>
<td>退格（u0008）</td>
</tr>
<tr>
<td>\f</td>
<td>换页（u000C）</td>
</tr>
<tr>
<td>\l</td>
<td>小于号：&lt;</td>
</tr>
<tr>
<td>\g</td>
<td>大于号：&gt;</td>
</tr>
<tr>
<td>\a</td>
<td>和号：&amp;</td>
</tr>
<tr>
<td>\xCode</td>
<td>字符的16进制Unicode码（UCS码）</td>
</tr>
</tbody>
</table>
<h3 id="检索变量"><a href="#检索变量" class="headerlink" title="检索变量"></a>检索变量</h3><h4 id="在哈希表中检索数据"><a href="#在哈希表中检索数据" class="headerlink" title="在哈希表中检索数据"></a>在哈希表中检索数据</h4><p>(root)<br>|<br>+- book<br>| |<br>| +- title = “Breeding green mouses”<br>| |<br>| +- author<br>| |<br>| +- name = “Julia Smith”<br>| |<br>| +- info = “Biologist, 1923-1985, Canada”<br>|<br>+- test = “title”</p>
<p>下面这些示例它们含义都是相等的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">book.author.name, </div><div class="line">book[&quot;author&quot;].name, </div><div class="line">book.author.[&quot;name&quot;], </div><div class="line">book[&quot;author&quot;][&quot;name&quot;]</div></pre></td></tr></table></figure></p>
<h4 id="从序列中检索数据"><a href="#从序列中检索数据" class="headerlink" title="从序列中检索数据"></a>从序列中检索数据</h4><p>animals[0].name</p>
<h2 id="字符串和数值操作"><a href="#字符串和数值操作" class="headerlink" title="字符串和数值操作"></a>字符串和数值操作</h2><h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><p>获取一个字符 <code>${str[0]}</code><br>获取一定范围的字符<code>substring</code></p>
<h4 id="数值计算"><a href="#数值计算" class="headerlink" title="数值计算"></a>数值计算</h4><p>加减乘数 （数字+字符=字符）<br>${100 – x*x}<br>${x/2}<br>${12%10}</p>
<p>只取整数部分的数值： ${(x/2)?int}<br><strong>比较操作</strong><br>相等：<code>=</code>或<code>==</code>无区别<br>不等：<code>!=</code><br>大于小于问题：FreeMarker解释<code>&gt;</code>的时候可以把它当作FTL标签的结束符。为了避免这种问题，不得不将表达式放到括号内：<code>&lt;#if (x &gt; y)&gt;</code>，或者可以在比较关系处使用<code>&amp;gt;</code>和<code>&amp;lt;</code></p>
<h2 id="内建函数"><a href="#内建函数" class="headerlink" title="内建函数"></a>内建函数</h2><p>内建函数提供始终可用的内置功能。用<code>?</code>号来代替点。例如得到字符串的大写形式：<code>user?upper_case</code></p>
<ul>
<li>字符串使用的内建函数：<br> html: 字符串中所有的特殊HTML字符都需要用实体引用来代替（比如&lt;代替&lt;）。<br> cap_first:字符串的第一个字母变为大写形式<br> lower_case:字符串的小写形式<br> upper_case:字符串的大写形式<br> trim:去掉字符串首尾的空格</li>
<li>序列使用的内建函数：<br> size：序列中元素的个数</li>
<li>数字使用的内建函数：<br> int:数字的整数部分（比如-1.9?int就是-1）</li>
</ul>
<p><strong>方法调用：</strong><code>${repeat(&quot;What&quot;, 3)}</code></p>
<h3 id="操作符的优先级"><a href="#操作符的优先级" class="headerlink" title="操作符的优先级"></a>操作符的优先级</h3><table>
<thead>
<tr>
<th>运算符组</th>
<th>运算符</th>
</tr>
</thead>
<tbody>
<tr>
<td>最高优先级运算符</td>
<td>[subvarName][subStringRange].?(methodParams) expr! expr??</td>
</tr>
<tr>
<td>一元前缀运算符</td>
<td>+expr -expr !expr</td>
</tr>
<tr>
<td>乘除法，求模</td>
<td>* / %</td>
</tr>
<tr>
<td>加减法</td>
<td>+ -</td>
</tr>
<tr>
<td>关系运算符</td>
<td>&lt; &gt; &lt;= &gt;= (相当于: gt, lt, 等)</td>
</tr>
<tr>
<td>相等，不等</td>
<td>== (也可以是: =) !=</td>
</tr>
<tr>
<td>逻辑与</td>
<td>&amp;&amp;</td>
</tr>
<tr>
<td>逻辑或</td>
<td>`</td>
<td></td>
<td>`</td>
</tr>
<tr>
<td>数字范围</td>
<td>..</td>
</tr>
</tbody>
</table>
<p><strong>精确的转换规则</strong></p>
<ol>
<li>如果这个值是数字，那么它会按照指定的<code>number_format</code>设置规则来转换为字符串。所以这些转换通常是对用户进行的，而不是对计算机。</li>
<li>如果这个值是日期，时间或时间日期类型的一种，那么它们会按照指定的time_format，date_format和datetime_format设置规则来转换为字符串，这要看日期信息中是只包含时间，日期还是全包括了。如果它不能被探测出来是哪种日期类型（日期或时间或日期时间）时，就会发生错误了。</li>
<li>如果值本来就是字符串类型的，不需要转换。</li>
<li>如果FreeMarker引擎在传统兼容模式下：</li>
<li>如果值是布尔类型，那么就转换成<code>true</code>，false值将会转换为空串。</li>
<li>如果表达式未被定义（null或者变量未定义），那么就转换为空串。</li>
<li>否则就会发生错误中止模板执行。</li>
<li>否则就会发生错误中止模板执行。</li>
</ol>
<h3 id="自定义指令"><a href="#自定义指令" class="headerlink" title="自定义指令"></a>自定义指令</h3><h4 id="基本内容"><a href="#基本内容" class="headerlink" title="基本内容"></a>基本内容</h4><p>定义宏<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;#macro greet&gt;</div><div class="line">&lt;font size="+2"&gt;Hello Joe!&lt;/font&gt; （这个地方必须有加号）</div><div class="line">&lt;/#macro&gt;</div></pre></td></tr></table></figure></p>
<p>宏调用<br><code>&lt;@greet&gt;&lt;/@greet&gt;</code></p>
<h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><figure class="highlight jsp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;#macro greet person&gt;</div><div class="line">&lt;font size="+2"&gt;Hello $&#123;person&#125;!&lt;/font&gt;</div><div class="line">&lt;/#macro&gt;</div><div class="line"></div><div class="line">&lt;<span class="meta">@greet</span> person=<span class="string">"Fred"</span>/&gt; and &lt;<span class="meta">@greet</span> person=<span class="string">"Batman"</span>/&gt;</div></pre></td></tr></table></figure>
<h4 id="嵌套内容"><a href="#嵌套内容" class="headerlink" title="嵌套内容"></a>嵌套内容</h4><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;#macro border&gt;</div><div class="line">&lt;table border=<span class="number">4</span> cellspacing=<span class="number">0</span> cellpadding=<span class="number">4</span>&gt;&lt;tr&gt;&lt;td&gt;</div><div class="line">&lt;#nested&gt;</div><div class="line">&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</div><div class="line">&lt;/#macro&gt;</div></pre></td></tr></table></figure>
<p><code>&lt;#nested&gt;</code>指令执行位于开始和结束标记指令之间的模板代码段。（固定不变）</p>
<p>使用：<code>&lt;@border&gt;The bordered text&lt;/@border&gt;</code><br>效果：给<code>The bordered text</code>加了边框</p>
<p>在嵌套的内容中，宏的局部变量是不可变的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;#macro repeat count&gt;</div><div class="line">&lt;#local y = &quot;test&quot;&gt;</div><div class="line">&lt;#list 1..count as x&gt;</div><div class="line">$&#123;y&#125; $&#123;count&#125;/$&#123;x&#125;: &lt;#nested&gt;</div><div class="line">&lt;/#list&gt;</div><div class="line">&lt;/#macro&gt;</div><div class="line"></div><div class="line">&lt;@repeat count=3&gt;$&#123;y!&quot;?&quot;&#125; $&#123;x!&quot;?&quot;&#125; $&#123;count!&quot;?&quot;&#125;&lt;/@repeat&gt;</div></pre></td></tr></table></figure></p>
<p>输出：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">test 3/1: ? ? ?</div><div class="line">test 3/2: ? ? ?</div><div class="line">test 3/3: ? ? ?</div></pre></td></tr></table></figure>
<h4 id="宏和循环变量"><a href="#宏和循环变量" class="headerlink" title="宏和循环变量"></a>宏和循环变量</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;#macro do_thrice&gt;</div><div class="line">&lt;#nested 1&gt;</div><div class="line">&lt;#nested 2&gt;</div><div class="line">&lt;#nested 3&gt;</div><div class="line">&lt;/#macro&gt;</div><div class="line">&lt;@do_thrice ; x&gt; &lt;#-- 用户自定义指令 使用&quot;;&quot;代替&quot;as&quot; --&gt;</div><div class="line">$&#123;x&#125; Anything.</div><div class="line">&lt;/@do_thrice&gt;</div></pre></td></tr></table></figure>
<p>输出<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">1 Anything.</div><div class="line">2 Anything.</div><div class="line">3 Anything.</div></pre></td></tr></table></figure></p>
<h4 id="在模板中定义变量"><a href="#在模板中定义变量" class="headerlink" title="在模板中定义变量"></a>在模板中定义变量</h4><p>模板中变量的优先级 &gt; 数据模型中的。即 如果你恰巧定义了一个名为”foo”的变量，而在数据模型中也有一个名为”foo”的变量，那么模板中的变量就会将数据模型根上的变量隐藏（而不是覆盖！）。</p>
<p>在模板中可以定义三种类型的变量：</p>
<ul>
<li>简单变量：它能从模板中的任何位置来访问，或者从使用include指令引入的模板访问。可以使用assign或macro指令来创建或替换这些变量。</li>
<li>局部变量：它们只能被设置在宏定义体内，而且只在宏内可见。一个局部变量的生存周期只是宏的调用过程。可以使用local指令在宏定义体内创建或替换局部变量。</li>
<li>循环变量：循环变量是由指令（如list）自动创建的，而且它们只在指令的开始和结束标记内有效。宏的参数是局部变量而不是循环变量。</li>
</ul>
<p>使用assign创建和替换变量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;#assign x = 1&gt; &lt;#-- 创建变量 x --&gt;</div><div class="line">$&#123;x&#125;</div><div class="line">&lt;#assign x = x + 3&gt; &lt;#-- 替换变量 x --&gt;</div><div class="line">$&#123;x&#125;</div></pre></td></tr></table></figure></p>
<h4 id="命名空间"><a href="#命名空间" class="headerlink" title="命名空间"></a>命名空间</h4><p><strong>创建一个库</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;#macro copyright date&gt;</div><div class="line">&lt;p&gt;Copyright (C) $&#123;date&#125; Julia Smith. All rights reserved.&lt;/p&gt;</div><div class="line">&lt;/#macro&gt;</div><div class="line">&lt;#assign mail = &quot;jsmith@acme.com&quot;&gt;</div></pre></td></tr></table></figure></p>
<p>把上面的这些定义存储在文件lib/my_test.ftl中<br>使用：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;#import &quot;/lib/my_test.ftl&quot; as my&gt;</div><div class="line">&lt;#-- 被称为&quot;my&quot;的哈希表就会是那个&quot;大门&quot; --&gt;</div><div class="line">&lt;@my.copyright date=&quot;1999-2002&quot;/&gt;</div><div class="line">$&#123;my.mail&#125;</div></pre></td></tr></table></figure></p>
<h3 id="使用总结"><a href="#使用总结" class="headerlink" title="使用总结"></a>使用总结</h3><ol>
<li><code>${(user.name)!&quot;&quot;}</code>： <code>user.name</code> 为<code>null</code>的时候赋值为空字符串<code>&quot; &quot;</code>；</li>
<li><code>${user.name?string(&quot;0.##&quot;)}</code>: <code>user.name</code>不为<code>&quot;&quot;</code>时按保留两位小数的格式格式化</li>
</ol>
<h4 id="List-lt-Object-gt-转化为List-lt-Map-lt-String-String-gt-gt-数据后传至前台模板输出"><a href="#List-lt-Object-gt-转化为List-lt-Map-lt-String-String-gt-gt-数据后传至前台模板输出" class="headerlink" title="List&lt;Object&gt;转化为List&lt;Map&lt;String,String&gt;&gt;数据后传至前台模板输出"></a><code>List&lt;Object&gt;</code>转化为<code>List&lt;Map&lt;String,String&gt;&gt;</code>数据后传至前台模板输出</h4><p>转化：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> List&lt;Map&lt;String, String&gt;&gt; getAllCountryOrder() &#123;</div><div class="line">    List&lt;CountryCode&gt; countrycodeList = countryInterface.getAllCountryCode(<span class="string">""</span>);</div><div class="line"></div><div class="line">    List&lt;Map&lt;String, String&gt;&gt; countryMapList = <span class="keyword">new</span> ArrayList&lt;Map&lt;String, String&gt;&gt;();</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (CountryCode countrycode : countrycodeList) &#123;</div><div class="line">        Map&lt;String, String&gt; tempMap = <span class="keyword">new</span> HashMap&lt;String, String&gt;();</div><div class="line">        <span class="keyword">if</span> (StringUtils.isNotBlank(countrycode.getCode())) &#123;</div><div class="line">            tempMap.put(countrycode.getCode(), countrycode.getChineseName());</div><div class="line">        &#125;</div><div class="line">        countryMapList.add(tempMap);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> countryMapList;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>传至前台<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">model.addAttribute(<span class="string">"countryList"</span>, countryCodeUtil.getAllCountryOrder());<span class="comment">// 项目所在国</span></div></pre></td></tr></table></figure></p>
<p>前台freemarker模板输出<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pull-left"</span>&gt;</span></div><div class="line">   	<span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"countrySelect"</span> <span class="attr">name</span>=<span class="string">"countryCode"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>请选择<span class="tag">&lt;/<span class="name">option</span>&gt;</span> <span class="tag">&lt;<span class="name">#list</span> <span class="attr">countryList</span> <span class="attr">as</span> <span class="attr">countryMap</span>&gt;</span> <span class="tag">&lt;<span class="name">#list</span> <span class="attr">countryMap</span>?<span class="attr">keys</span> <span class="attr">as</span> <span class="attr">countryCode</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"$&#123;countryCode&#125;"</span>&gt;</span>$&#123;countryMap[countryCode]&#125;<span class="tag">&lt;/<span class="name">option</span>&gt;</span><span class="tag">&lt;/<span class="name">#list</span>&gt;</span> <span class="tag">&lt;/<span class="name">#list</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> freemarker </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[常用 Git 命令清单]]></title>
      <url>http://chuanqiang.github.io/2017/01/07/git-command/</url>
      <content type="html"><![CDATA[<p>本文整理了常用的 Git 命令清单，以供查阅复习。</p>
<p><img src="/image/code/Git/21.png" alt=""></p>
<a id="more"></a>
<hr>
<p>几个专有的名词译名如下:</p>
<ul>
<li>Workspace：工作区</li>
<li>Index / Stage：暂存区</li>
<li>Repository：仓库区（或本地仓库）</li>
<li>Remote：远程仓库</li>
</ul>
<h2 id="一、新建代码库"><a href="#一、新建代码库" class="headerlink" title="一、新建代码库"></a>一、新建代码库</h2><p>  在当前目录新建一个Git代码库<br> $ git init</p>
<p>  新建一个目录，将其初始化为Git代码库<br> $ git init [project-name]</p>
<p>  下载一个项目和它的整个代码历史<br> $ git clone [url]</p>
<h2 id="二、配置"><a href="#二、配置" class="headerlink" title="二、配置"></a>二、配置</h2><p>Git的设置文件为<code>.gitconfig</code>，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。</p>
<p> 显示当前的Git配置<br> $ git config –list</p>
<p>  编辑Git配置文件<br> $ git config -e [–global]</p>
<p>  设置提交代码时的用户信息<br> $ git config [–global] user.name “[name]”<br> $ git config [–global] user.email “[email address]”</p>
<h2 id="三、增加-删除文件"><a href="#三、增加-删除文件" class="headerlink" title="三、增加/删除文件"></a>三、增加/删除文件</h2><p> 添加指定文件到暂存区<br> $ git add [file1] [file2] …</p>
<p>  添加指定目录到暂存区，包括子目录<br> $ git add [dir]</p>
<p>  添加当前目录的所有文件到暂存区<br> $ git add .</p>
<p>  添加每个变化前，都会要求确认<br>  对于同一个文件的多处变化，可以实现分次提交<br> $ git add -p</p>
<p>  删除工作区文件，并且将这次删除放入暂存区<br> $ git rm [file1] [file2] …</p>
<p>  停止追踪指定文件，但该文件会保留在工作区<br> $ git rm –cached [file]</p>
<p>  改名文件，并且将这个改名放入暂存区<br> $ git mv [file-original] [file-renamed]</p>
<h2 id="四、代码提交"><a href="#四、代码提交" class="headerlink" title="四、代码提交"></a>四、代码提交</h2><p>提交暂存区到仓库区<br> $ git commit -m [message]</p>
<p>  提交暂存区的指定文件到仓库区<br> $ git commit [file1] [file2] … -m [message]</p>
<p>  提交工作区自上次commit之后的变化，直接到仓库区<br> $ git commit -a</p>
<p>  提交时显示所有diff信息<br> $ git commit -v</p>
<p>  使用一次新的commit，替代上一次提交<br>  如果代码没有任何新变化，则用来改写上一次commit的提交信息<br> $ git commit –amend -m [message]</p>
<p>  重做上一次commit，并包括指定文件的新变化<br> $ git commit –amend [file1] [file2] …</p>
<h2 id="五、分支"><a href="#五、分支" class="headerlink" title="五、分支"></a>五、分支</h2><p>列出所有本地分支<br> $ git branch</p>
<p>  列出所有远程分支<br> $ git branch -r</p>
<p>  列出所有本地分支和远程分支<br> $ git branch -a</p>
<p>  新建一个分支，但依然停留在当前分支<br> $ git branch [branch-name]</p>
<p>  新建一个分支，并切换到该分支<br> $ git checkout -b [branch]</p>
<p>  新建一个分支，指向指定commit<br> $ git branch [branch] [commit]</p>
<p>  新建一个分支，与指定的远程分支建立追踪关系<br> $ git branch –track [branch] [remote-branch]</p>
<p>  切换到指定分支，并更新工作区<br> $ git checkout [branch-name]</p>
<p>  切换到上一个分支<br> $ git checkout -</p>
<p>  建立追踪关系，在现有分支与指定的远程分支之间<br> $ git branch –set-upstream [branch] [remote-branch]</p>
<p>  合并指定分支到当前分支<br> $ git merge [branch]</p>
<p>  选择一个commit，合并进当前分支<br> $ git cherry-pick [commit]</p>
<p>  删除分支<br> $ git branch -d [branch-name]</p>
<p>  删除远程分支<br> $ git push origin –delete [branch-name]<br> $ git branch -dr [remote/branch]</p>
<h2 id="六、标签"><a href="#六、标签" class="headerlink" title="六、标签"></a>六、标签</h2><p>列出所有tag<br> $ git tag</p>
<p>  新建一个tag在当前commit<br> $ git tag [tag]</p>
<p>  新建一个tag在指定commit<br> $ git tag [tag] [commit]</p>
<p>  删除本地tag<br> $ git tag -d [tag]</p>
<p>  删除远程tag<br> $ git push origin :refs/tags/[tagName]</p>
<p>  查看tag信息<br> $ git show [tag]</p>
<p>  提交指定tag<br> $ git push [remote] [tag]</p>
<p>  提交所有tag<br> $ git push [remote] –tags</p>
<p>  新建一个分支，指向某个tag<br> $ git checkout -b [branch] [tag]</p>
<h2 id="七、查看信息"><a href="#七、查看信息" class="headerlink" title="七、查看信息"></a>七、查看信息</h2><p>显示有变更的文件<br> $ git status</p>
<p>  显示当前分支的版本历史<br> $ git log</p>
<p>  显示commit历史，以及每次commit发生变更的文件<br> $ git log –stat</p>
<p>  搜索提交历史，根据关键词<br> $ git log -S [keyword]</p>
<p>  显示某个commit之后的所有变动，每个commit占据一行<br> $ git log [tag] HEAD –pretty=format:%s</p>
<p>  显示某个commit之后的所有变动，其”提交说明”必须符合搜索条件<br> $ git log [tag] HEAD –grep feature</p>
<p>  显示某个文件的版本历史，包括文件改名<br> $ git log –follow [file]<br> $ git whatchanged [file]</p>
<p>  显示指定文件相关的每一次diff<br> $ git log -p [file]</p>
<p>  显示过去5次提交<br> $ git log -5 –pretty –oneline</p>
<p>  显示所有提交过的用户，按提交次数排序<br> $ git shortlog -sn</p>
<p>  显示指定文件是什么人在什么时间修改过<br> $ git blame [file]</p>
<p>  显示暂存区和工作区的差异<br> $ git diff</p>
<p>  显示暂存区和上一个commit的差异<br> $ git diff –cached [file]</p>
<p>  显示工作区与当前分支最新commit之间的差异<br> $ git diff HEAD</p>
<p>  显示两次提交之间的差异<br> $ git diff [first-branch]…[second-branch]</p>
<p>  显示今天你写了多少行代码<br> $ git diff –shortstat “@{0 day ago}”</p>
<p>  显示某次提交的元数据和内容变化<br> $ git show [commit]</p>
<p>  显示某次提交发生变化的文件<br> $ git show –name-only [commit]</p>
<p>  显示某次提交时，某个文件的内容<br> $ git show [commit]:[filename]</p>
<p>  显示当前分支的最近几次提交<br> $ git reflog</p>
<h2 id="八、远程同步"><a href="#八、远程同步" class="headerlink" title="八、远程同步"></a>八、远程同步</h2><p>下载远程仓库的所有变动<br> $ git fetch [remote]</p>
<p>  显示所有远程仓库<br> $ git remote -v</p>
<p>  显示某个远程仓库的信息<br> $ git remote show [remote]</p>
<p>  增加一个新的远程仓库，并命名<br> $ git remote add [shortname] [url]</p>
<p>  取回远程仓库的变化，并与本地分支合并<br> $ git pull [remote] [branch]</p>
<p>  上传本地指定分支到远程仓库<br> $ git push [remote] [branch]</p>
<p>  强行推送当前分支到远程仓库，即使有冲突<br> $ git push [remote] –force</p>
<p>  推送所有分支到远程仓库<br> $ git push [remote] –all</p>
<h2 id="九、撤销"><a href="#九、撤销" class="headerlink" title="九、撤销"></a>九、撤销</h2><p>恢复暂存区的指定文件到工作区<br> $ git checkout [file]</p>
<p>  恢复某个commit的指定文件到暂存区和工作区<br> $ git checkout [commit] [file]</p>
<p>  恢复暂存区的所有文件到工作区<br> $ git checkout .</p>
<p>  重置暂存区的指定文件，与上一次commit保持一致，但工作区不变<br> $ git reset [file]</p>
<p>  重置暂存区与工作区，与上一次commit保持一致<br> $ git reset –hard</p>
<p>  重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变<br> $ git reset [commit]</p>
<p>  重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致<br> $ git reset –hard [commit]</p>
<p>  重置当前HEAD为指定commit，但保持暂存区和工作区不变<br> $ git reset –keep [commit]</p>
<p>  新建一个commit，用来撤销指定commit<br>  后者的所有变化都将被前者抵消，并且应用到当前分支<br> $ git revert [commit]</p>
<p>  暂时将未提交的变化移除，稍后再移入<br> $ git stash<br> $ git stash pop</p>
<h2 id="十、其他"><a href="#十、其他" class="headerlink" title="十、其他"></a>十、其他</h2><p>生成一个可供发布的压缩包<br> $ git archive</p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Git </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Git笔记]]></title>
      <url>http://chuanqiang.github.io/2017/01/02/Git/</url>
      <content type="html"><![CDATA[<p>本文为 Git教程的学习笔记，教程源自<a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="external">廖雪峰</a>的博客。这是一个由浅入深，学完后能立刻上手的Git教程。<br>另，附上另一本优秀的Git书籍的中文版:<a href="https://git-scm.com/book/en/v2" target="_blank" rel="external">『Pro Git』</a>.</p>
<a id="more"></a>
<hr>
<h2 id="一、Git简介"><a href="#一、Git简介" class="headerlink" title="一、Git简介"></a>一、Git简介</h2><p><strong>Git是什么</strong>:Git是目前世界上最先进的分布式版本控制系统（没有之一）。<br><strong>什么是版本控制系统</strong>:版本控制是一种记录一个或若干文件内容变化，以便将来查阅特定版本修订情况的系统。</p>
<h3 id="集中式-vs分布式"><a href="#集中式-vs分布式" class="headerlink" title="集中式 vs分布式"></a>集中式 vs分布式</h3><p>CVS及SVN都是集中式的版本控制系统，而Git是分布式版本控制系统，集中式和分布式版本控制系统有什么区别呢？<br><strong>集中式版本控制系统</strong>:版本库是集中存放在中央服务器的，而干活的时候，用的都是自己的电脑，所以要先从中央服务器取得最新的版本，每个人电脑上都有一个完整的版本库然后开始干活，干完活了，再把自己的活推送给中央服务器。<br><img src="/image/code/Git/01.jpg" alt=""><br><strong>分布式版本控制系统</strong>:每个人的电脑里有完整的版本库，统通常也有一台充当“中央服务器”的电脑，但这个服务器的作用仅仅是用来方便“交换”大家的修改，没有它大家也一样干活，只是交换修改不方便而已。<br><img src="/image/code/Git/02.jpg?r=85" alt=""></p>
<h2 id="二、安装Git"><a href="#二、安装Git" class="headerlink" title="二、安装Git"></a>二、安装Git</h2><h3 id="在Linux上安装Git"><a href="#在Linux上安装Git" class="headerlink" title="在Linux上安装Git"></a>在Linux上安装Git</h3><p>首先，你可以试着输入<code>git</code>，看看系统有没有安装Git：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git</div><div class="line">The program &apos;git&apos; is currently not installed. You can install it by typing:</div><div class="line">sudo apt-get install git</div></pre></td></tr></table></figure>
<p>像上面的命令，有很多Linux会友好地告诉你Git没有安装，还会告诉你如何安装Git。</p>
<p>如果你碰巧用Debian或Ubuntu Linux，通过一条<code>sudo apt-get install git</code>就可以直接完成Git的安装，非常简单。<br>老一点的Debian或Ubuntu Linux，要把命令改为<code>sudo apt-get install git-core</code>，因为以前有个软件也叫GIT（GNU Interactive Tools），结果Git就只能叫<code>git-core</code>了。由于Git名气实在太大，后来就把<code>GNU Interactive Tools</code>改成<code>gnuit</code>，<code>git-core</code>正式改为<code>git</code>。<br>如果是其他Linux版本，可以直接通过源码安装。先从Git官网下载源码，然后解压，依次输入：<code>./config</code>，<code>make</code>，<code>sudo make install</code>这几个命令安装就好了。</p>
<h3 id="在Mac-OS-X上安装Git"><a href="#在Mac-OS-X上安装Git" class="headerlink" title="在Mac OS X上安装Git"></a>在Mac OS X上安装Git</h3><p>如果你正在使用Mac做开发，有两种安装Git的方法。<br>一是安装homebrew，然后通过homebrew安装Git，具体方法请参考homebrew的文档：<a href="http://brew.sh/" target="_blank" rel="external">http://brew.sh/</a>。<br>第二种方法更简单，也是推荐的方法，就是直接从AppStore安装Xcode，Xcode集成了Git，不过默认没有安装，你需要运行Xcode，选择菜单“Xcode”-&gt;“Preferences”，在弹出窗口中找到“Downloads”，选择『Command Line Tools』，点『Install』就可以完成安装了。<br><img src="/image/code/Git/03.jpg" alt=""><br>Xcode是Apple官方IDE，功能非常强大，是开发Mac和iOS App的必选装备，而且是免费的！</p>
<h3 id="在Windows上安装Git"><a href="#在Windows上安装Git" class="headerlink" title="在Windows上安装Git"></a>在Windows上安装Git</h3><p><a href="https://git-scm.com/" target="_blank" rel="external">Git官网</a><br>msysgit是Windows版的Git，从<a href="https://git-for-windows.github.io/" target="_blank" rel="external">https://git-for-windows.github.io</a>下载（网速慢的同学请移步<a href="https://pan.baidu.com/s/1kU5OCOB#list/path=%2Fpub%2Fgit" target="_blank" rel="external">国内镜像</a>），然后按默认选项安装即可。</p>
<p>安装完成后，在开始菜单里找到“Git”-&gt;“Git Bash”，蹦出一个类似命令行窗口的东西，就说明Git安装成功！<br>安装完成后，还需要最后一步设置，在命令行输入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git config --global user.name &quot;Your Name&quot;</div><div class="line">$ git config --global user.email &quot;email@example.com&quot;</div></pre></td></tr></table></figure></p>
<p>因为Git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和Email地址。你也许会担心，如果有人故意冒充别人怎么办？这个不必担心，首先我们相信大家都是善良无知的群众，其次，真的有冒充的也是有办法可查的。<br>注意<code>git config</code>命令的<code>--global</code>参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。</p>
<h2 id="三、创建版本库"><a href="#三、创建版本库" class="headerlink" title="三、创建版本库"></a>三、创建版本库</h2><p>版本库又名仓库，英文名repository，你可以简单理解成一个目录，这个目录里面的所有文件都可以被Git管理起来，每个文件的修改、删除，Git都能跟踪，以便任何时刻都可以追踪历史，或者在将来某个时刻可以“还原”。</p>
<h4 id="1-创建一个版本库"><a href="#1-创建一个版本库" class="headerlink" title="1.创建一个版本库:"></a>1.创建一个版本库:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ mkdir learngit</div><div class="line">$ cd learngit</div><div class="line">$ pwd</div><div class="line">/d/zcq</div></pre></td></tr></table></figure>
<p><strong>注意</strong>:<code>pwd</code>命令用于显示当前目录。目录中最好不包含中文。</p>
<h4 id="2-通过-git-init-命令把这个目录变成Git可以管理的仓库："><a href="#2-通过-git-init-命令把这个目录变成Git可以管理的仓库：" class="headerlink" title="2.通过 git init 命令把这个目录变成Git可以管理的仓库："></a>2.通过 git init 命令把这个目录变成Git可以管理的仓库：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git init</div><div class="line">Initialized empty Git repository in D:/zcq/learngit/.git/</div></pre></td></tr></table></figure>
<p>这样一个仓库就建好了，而且告诉你是一个空的仓库（empty Git repository），而且当前目录下多了一个<code>.git</code>的目录，这个目录是Git来跟踪管理版本库的，没事千万不要手动修改这个目录里面的文件，不然改乱了，就把Git仓库给破坏了。<br>如果你没有看到<code>.git</code>目录，那是因为这个目录默认是隐藏的，用<code>ls -ah</code>命令就可以看见。</p>
<h3 id="把文件添加到版本库"><a href="#把文件添加到版本库" class="headerlink" title="把文件添加到版本库"></a>把文件添加到版本库</h3><p>所有的版本控制系统，其实只能跟踪文本文件的改动，比如TXT文件，网页，所有的程序代码等等。版本控制系统可以告诉你每次的改动，而图片、视频这些二进制文件，虽然也能由版本控制系统管理，但没法跟踪文件的变化，只能把二进制文件每次改动串起来，也就是只知道图片从100KB改成了120KB，但到底改了啥，版本控制系统不知道，也没法知道。</p>
<p>不幸的是，Microsoft的Word格式是二进制格式，因此，版本控制系统是没法跟踪Word文件的改动的，前面我们举的例子只是为了演示，如果要真正使用版本控制系统，就要以纯文本方式编写文件。</p>
<p>因为文本是有编码的，比如中文有常用的GBK编码，日文有Shift_JIS编码，如果没有历史遗留问题，强烈建议使用标准的<strong>UTF-8</strong>编码，所有语言使用同一种编码，既没有冲突，又被所有平台所支持。<br><strong>注意</strong>:不要使用Windows自带的记事本编辑任何文本文件。原因是Microsoft开发记事本的团队使用了一个非常弱智的行为来保存UTF-8编码的文件，他们自作聪明地在每个文件开头添加了0xefbbbf（十六进制）的字符，你会遇到很多不可思议的问题，比如，网页第一行可能会显示一个“?”，明明正确的程序一编译就报语法错误，等等，都是由记事本的弱智行为带来的。建议你下载<a href="http://notepad-plus-plus.org/" target="_blank" rel="external">Notepad++</a>代替记事本，不但功能强大，而且免费！记得把Notepad++的默认编码设置为<code>UTF-8 without BOM</code>即可。</p>
<h4 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h4><ol>
<li>编写一个<code>readme.txt</code>文件</li>
<li>用命令<code>git add</code>告诉Git，把文件添加到仓库：<code>git add readme.txt</code></li>
<li>用命令<code>git commit</code>告诉Git，把文件提交到仓库：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ git commit -m &quot;wrote a readme file&quot;</div><div class="line">[master (root-commit) cb926e7] wrote a readme file</div><div class="line"> 1 file changed, 2 insertions(+)</div><div class="line"> create mode 100644 readme.txt</div></pre></td></tr></table></figure>
</li>
</ol>
<p><strong>注意:</strong><code>-m</code>后面输入的是本次提交的说明。<code>commit</code>可以一次提交多次文件</p>
<h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>初始化一个Git仓库，使用<code>git init</code>命令。</p>
<p>添加文件到Git仓库，分两步：<br>第一步，使用命令<code>git add &lt;file&gt;</code>，注意，可反复多次使用，添加多个文件；<br>第二步，使用命令<code>git commit</code>，完成。</p>
<h2 id="四、版本库操作"><a href="#四、版本库操作" class="headerlink" title="四、版本库操作"></a>四、版本库操作</h2><ul>
<li>要随时掌握工作区的状态，使用<code>git status</code>命令。</li>
<li>如果<code>git status</code>告诉你有文件被修改过，用<code>git diff</code>可以查看修改内容。</li>
</ul>
<h3 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h3><ul>
<li><code>git log</code>:查看版本库状态(版本提交日志)</li>
<li><code>git log --pretty=oneline</code>:简化显示提交日志<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ git log --pretty=oneline</div><div class="line">a1e1f505c25e19b240edcc9b0b2d75f9be354310 hello world</div><div class="line">3ff7fa95a24507440f8f334630b4d5d31f0687c2 add words</div><div class="line">ad822b5889999039e1fce221092d142bd6057b0c change readme.txt</div></pre></td></tr></table></figure>
</li>
</ul>
<p>前面那一串字符是<code>commit id</code>(版本号)，和SVN不一样，Git的<code>commit id</code>不是1，2，3……递增的数字，而是一个SHA1计算出来的一个非常大的数字，用十六进制表示。防止冲突。</p>
<ul>
<li><code>git reset</code>:回退到上一个版本<ul>
<li><code>HEAD</code>表示当前版本，上一个版本是<code>HEAD^</code>，上上个版本是<code>HEAD^^</code>，网上100个版本是<code>HEAD~100</code>。</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git reset --hard HEAD^</div><div class="line">HEAD is now at ea34578 add distributed</div></pre></td></tr></table></figure>
<p>回退后查看readme.txt的内容是不是已经回退:<code>cat readme.txt</code><br>回退之后想要再恢复:<code>git reflog</code>用来记录你的每一次命令，执行后找到回退前的那个版本的<code>commit id</code>(或者在命令行里找到)，就可以制定恢复到回退前的版本(id的前几位就行):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git reset --hard 3628164</div><div class="line">HEAD is now at 3628164 append GPL</div></pre></td></tr></table></figure></p>
<p>Git的版本回退速度非常快，因为Git在内部有个指向当前版本的<code>HEAD</code>指针，当你回退版本的时候，Git仅仅是把<code>HEAD</code>从指向那一版本。然后顺便把工作区的文件更新了。所以你让HEAD指向哪个版本号，你就把当前版本定位在哪。</p>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul>
<li>HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令<code>git reset --hard commit_id</code>。</li>
<li>穿梭前，用<code>git log</code>可以查看提交历史，以便确定要回退到哪个版本。</li>
<li>要重返未来，用<code>git reflog</code>查看命令历史，以便确定要回到未来的哪个版本。</li>
</ul>
<h3 id="工作区和暂存区"><a href="#工作区和暂存区" class="headerlink" title="工作区和暂存区"></a>工作区和暂存区</h3><p>Git和其他版本控制系统如SVN的一个不同之处就是有暂存区的概念。<br><strong>工作区</strong>（Working Directory）:电脑里能看到的目录</p>
<p><strong>版本库</strong>（Repository）:工作区中有一个隐藏目录<code>.git</code>时，为Git的版本库<br>Git的版本库里存了很多东西，其中最重要的就是称为stage（或者叫index）的暂存区，还有Git为我们自动创建的第一个分支<code>master</code>，以及指向master的一个指针叫<code>HEAD</code>。<br><img src="/image/code/Git/04.jpg" alt=""></p>
<ul>
<li>第一步是用<code>git add</code>把文件添加进去，实际上就是把文件修改添加到暂存区；</li>
<li>第二步是用<code>git commit</code>提交更改，实际上就是把暂存区的所有内容提交到当前分支。</li>
<li>因为我们创建Git版本库时，Git自动为我们创建了唯一一个<code>master</code>分支，所以，现在，<code>git commit</code>就是往master分支上提交更改。你可以简单理解为，需要提交的文件修改通通放到暂存区，然后，一次性提交暂存区的所有修改。</li>
</ul>
<p><strong>eg:</strong><br>1.添加两个文件<code>readme.txt</code>和<code>LICENSE</code>.使用两次<code>git add</code>添加后，使用<code>git status</code>查看一下，暂存区的状态如下:<br><img src="/image/code/Git/05.jpg" alt=""><br>2.执行<code>git commit</code>命令后，你又没有对工作区做任何修改，那么工作区就是『干净』的。暂存区现在的状态如下:<br><img src="/image/code/Git/06.jpg" alt=""></p>
<h3 id="管理修改"><a href="#管理修改" class="headerlink" title="管理修改"></a>管理修改</h3><p>Git比其他版本控制系统设计得优秀，因为Git跟踪并管理的是修改，而非文件。<br>比如，你第一次修改了文件，<code>git add</code>,第二次又修改了文件，没有<code>git add</code>，然后<code>git commit</code>。此时，第二次的修改不会提交，因为第二次的修改没有提交到缓存区。<br><code>git diff HEAD -- readme.txt</code>:查看工作区和版本库里面最新版本的区别。</p>
<h3 id="撤销修改"><a href="#撤销修改" class="headerlink" title="撤销修改"></a>撤销修改</h3><h4 id="1-撤销工作区的修改"><a href="#1-撤销工作区的修改" class="headerlink" title="1. 撤销工作区的修改"></a>1. 撤销工作区的修改</h4><p><code>git checkout -- readme.txt</code>:把文件<code>readme.txt</code>在工作区的修改全部撤销。分两种情况<br>  一种是<code>readme.txt</code>自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；<br>  一种是<code>readme.txt</code>已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。<br>总之，就是让这个文件回到最近一次<code>git commit</code>或<code>git add</code>时的状态。  </p>
<p><code>git checkout -- file</code>命令中的<code>--</code>很重要，没有<code>--</code>，就变成了『切换到另一个分』的命令。</p>
<h4 id="2-撤销已到缓存区的修改"><a href="#2-撤销已到缓存区的修改" class="headerlink" title="2. 撤销已到缓存区的修改"></a>2. 撤销已到缓存区的修改</h4><p>当修改的文件已经提交的缓存区，想撤销时:<code>git reset HEAD file</code>。</p>
<ul>
<li><code>git reset</code>命令既可以回退版本，也可以把暂存区的修改回退到工作区。当我们用<code>HEA</code>D时，表示最新的版本。</li>
</ul>
<h4 id="3-撤销提交到版本库的修改"><a href="#3-撤销提交到版本库的修改" class="headerlink" title="3. 撤销提交到版本库的修改"></a>3. 撤销提交到版本库的修改</h4><p>如果没有把本地版本库推送到远程，可以使用版本回退<code>git reset --hard commit_id</code>。</p>
<h3 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h3><p>用<code>rm test.txt</code>命令删除文件后，如果确实要从版本库删除该文件:<code>git rm test.txt</code>;如果删错了:<code>git checkout -- test.txt</code><br><code>git checkout</code>其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”。</p>
<h2 id="五、远程仓库"><a href="#五、远程仓库" class="headerlink" title="五、远程仓库"></a>五、远程仓库</h2><h3 id="使用-Github-作为远程仓库"><a href="#使用-Github-作为远程仓库" class="headerlink" title="使用 Github 作为远程仓库"></a>使用 Github 作为远程仓库</h3><p><strong>第1步</strong>：创建SSH Key。在用户主目录下(我的:C:\Users\zcq12.ssh)，看看有没有<code>.ssh</code>目录，如果有，再看看这个目录下有没有<code>id_rsa</code>和<code>id_rsa.pub</code>这两个文件，如果已经有了，可直接跳到下一步。如果没有，打开Shell（Windows下打开Git Bash），创建SSH Key：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</div></pre></td></tr></table></figure></p>
<p>你需要把邮件地址换成你自己的邮件地址，然后一路回车，使用默认值即可，由于这个Key也不是用于军事目的，所以也无需设置密码。<br>如果一切顺利的话，可以在用户主目录里找到<code>.ssh</code>目录，里面有<code>id_rsa</code>和<code>id_rsa.pub</code>两个文件，这两个就是SSH Key的秘钥对，<code>id_rsa</code>是私钥，不能泄露出去，<code>id_rsa.pub</code>是公钥，可以放心地告诉任何人。</p>
<p><strong>第2步</strong>：登陆GitHub，打开“Account settings”，“SSH Keys”页面：<br>然后，点“Add SSH Key”，填上任意Title，在Key文本框里粘贴id_rsa.pub文件的内容，点“Add Key”，你就应该看到已经添加的Key。</p>
<p>为什么GitHub需要SSH Key呢？因为GitHub需要识别出你推送的提交确实是你推送的，而不是别人冒充的，而Git支持SSH协议，所以，GitHub只要知道了你的公钥，就可以确认只有你自己才能推送。<br>GitHub允许你添加多个Key。假定你有若干电脑，你一会儿在公司提交，一会儿在家里提交，只要把每台电脑的Key都添加到GitHub，就可以在每台电脑上往GitHub推送了。<br><strong>提示</strong></p>
<ul>
<li>在GitHub上免费托管的Git仓库，任何人都可以看到。</li>
<li>如果你不想让别人看到Git库，有两个办法，一个是交点保护费，让GitHub把公开的仓库变成私有的</li>
<li>另一个办法是自己动手，搭一个Git服务器</li>
</ul>
<h3 id="添加远程仓库"><a href="#添加远程仓库" class="headerlink" title="添加远程仓库"></a>添加远程仓库</h3><ol>
<li>登陆GitHub，然后，在右上角找到“Create a new repo”按钮，创建一个新的仓库。</li>
<li>GitHub会提示如何从这个仓库克隆出新的仓库，也可以把一个已有的本地仓库与之关联，然后把本地仓库的内容推送到GitHub仓库。</li>
</ol>
<p><img src="/image/code/Git/07.png?r=100" alt=""><br><strong>注:</strong>由于远程库是空的，我们第一次推送master分支时，加上了<code>-u</code>参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。</p>
<p>此时，本地提交后，就可以通过命令<code>$ git push origin master</code>，把本地<code>master</code>分支的最新修改推送至GitHub，现在，你就拥有了真正的分布式版本库！</p>
<h3 id="从远程库克隆"><a href="#从远程库克隆" class="headerlink" title="从远程库克隆"></a>从远程库克隆</h3><p>先创建远程库，然后克隆远程库。<br><img src="/image/code/Git/08.png" alt=""><br>复制下你远程库的地址，用命令<code>git clone</code>克隆一个本地库：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ git clone https://github.com/chuanqiang/learngit.git</div><div class="line">Cloning into &apos;learngit&apos;...</div><div class="line">remote: Counting objects: 12, done.</div><div class="line">remote: Compressing objects: 100% (5/5), done.</div><div class="line">remote: Total 12 (delta 0), reused 12 (delta 0), pack-reused 0</div><div class="line">Receiving objects: 100% (12/12), done.</div></pre></td></tr></table></figure></p>
<p>进入目录，就可以看到克隆到本地的库了。<br><strong>注意</strong>:</p>
<ul>
<li>GitHub给出的地址不止一个，还可以用<code>$ git clone git@github.com:chuanqiang/learngit.git</code>这样的地址。实际上，Git支持多种协议，默认的git://使用ssh，但也可以使用https等其他协议。</li>
<li>使用https除了速度慢以外，还有个问题是每次推送都必须输入口令，但是在某些只开放http端口的公司内部就无法使用<code>ssh</code>协议而只能用<code>https</code>。</li>
</ul>
<h4 id="小结-1"><a href="#小结-1" class="headerlink" title="小结"></a>小结</h4><ul>
<li>要关联一个远程库，使用命令<code>git remote add origin git@server-name:path/repo-name.git</code>；</li>
<li>关联后，使用命令<code>git push -u origin master</code>第一次推送master分支的所有内容；</li>
<li>此后，每次本地提交后，只要有必要，就可以使用命令<code>git push origin master</code>推送最新修改；</li>
<li>要克隆一个仓库，首先必须知道仓库的地址，然后使用<code>git clone</code>命令克隆。</li>
<li>Git支持多种协议，包括https，但通过ssh支持的原生git协议速度最快。</li>
</ul>
<p>分布式版本系统的最大好处之一是在本地工作完全不需要考虑远程库的存在，也就是有没有联网都可以正常工作，而SVN在没有联网的时候是拒绝干活的！当有网络的时候，再把本地提交推送一下就完成了同步。</p>
<h2 id="六、分支管理"><a href="#六、分支管理" class="headerlink" title="六、分支管理"></a>六、分支管理</h2><h3 id="创建和合并分支"><a href="#创建和合并分支" class="headerlink" title="创建和合并分支"></a>创建和合并分支</h3><p>每次提交，Git都把它们串成一条时间线，这条时间线就是一个分支。截止到目前，只有一条时间线，在Git里，这个分支叫主分支，即<code>master</code>分支。HEAD严格来说不是指向提交，而是指向<code>master</code>，<code>master</code>才是指向提交的，所以，<code>HEAD</code>指向的就是当前分支。</p>
<p>一开始的时候，<code>master</code>分支是一条线，Git用<code>master</code>指向最新的提交，再用<code>HEAD</code>指向<code>master</code>，就能确定当前分支，以及当前分支的提交点：<br><img src="/image/code/Git/09.jpg" alt=""><br>每次提交，master分支都会向前移动一步，这样，随着你不断提交，master分支的线也越来越长：</p>
<p><img src="/image/code/Git/10.jpg" alt=""><br>当我们创建新的分支，例如<code>dev</code>时，Git新建了一个指针叫<code>dev</code>，指向<code>master</code>相同的提交，再把<code>HEAD</code>指向dev，就表示当前分支在<code>dev</code>上：<br><img src="/image/code/Git/11.jpg" alt=""><br>你看，Git创建一个分支很快，因为除了增加一个<code>dev</code>指针，改改<code>HEAD</code>的指向，工作区的文件都没有任何变化！</p>
<p>不过，从现在开始，对工作区的修改和提交就是针对<code>dev</code>分支了，比如新提交一次后，<code>dev</code>指针往前移动一步，而<code>maste</code>r指针不变：<br><img src="/image/code/Git/12.jpg" alt=""><br>假如我们在<code>dev</code>上的工作完成了，就可以把<code>dev</code>合并到<code>master</code>上。Git怎么合并呢？最简单的方法，就是直接把<code>master</code>指向<code>dev</code>的当前提交，就完成了合并：</p>
<p><img src="/image/code/Git/13.jpg" alt=""><br>所以Git合并分支也很快！就改改指针，工作区内容也不变！</p>
<p>合并完分支后，甚至可以删除<code>dev</code>分支。删除<code>dev</code>分支就是把<code>dev</code>指针给删掉，删掉后，我们就剩下了一条<code>master</code>分支：</p>
<p><img src="/image/code/Git/14.jpg" alt=""></p>
<h4 id="1-实战"><a href="#1-实战" class="headerlink" title="1. 实战"></a>1. 实战</h4><p>1.创建<code>dev</code>分支，并切换到<code>dev</code>分支:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git checkout -b dev</div><div class="line">Switched to a new branch &apos;dev&apos;</div></pre></td></tr></table></figure></p>
<p><code>git checkout</code>加上<code>-b</code>表示创建并切换，相当于以下两天命令:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git branch dev</div><div class="line">$ git checkout dev</div></pre></td></tr></table></figure></p>
<p>2.用<code>git branch</code>查看当前分支<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git branch</div><div class="line">* dev</div><div class="line">  master</div></pre></td></tr></table></figure></p>
<p><code>git branch</code>命令会列出所有分支，当前分支前面会标一个<code>*</code>号。<br>然后，我们就可以在<code>dev</code>分支上正常提交.</p>
<p>3.<code>dev</code>分支完成后，就可以切换回<code>master</code>分支:<code>$ git checkout master</code>。切换回来后发现刚才修改的内容不见了。因为那个提交是在<code>dev</code>分支上，而<code>master</code>分支此刻的提交点没有变。</p>
<p><img src="/image/code/Git/15.jpg" alt=""><br>4.把<code>dev</code>分支合并到<code>master</code>分支上。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ git merge dev</div><div class="line">Updating c42af54..150542d</div><div class="line">Fast-forward</div><div class="line"> readme.txt | 4 +++-</div><div class="line"> 1 file changed, 3 insertions(+), 1 deletion(-)</div></pre></td></tr></table></figure></p>
<p><code>git merge</code>命令用于合并指定分支到当前分支。注意到上面的<code>Fast-forward</code>信息，Git告诉我们，这次合并是“快进模式”，也就是直接把<code>master</code>指向<code>dev</code>的当前提交，所以合并速度非常快。当然，也不是每次合并都能<code>Fast-forward</code>，我们后面会讲其他方式的合并。</p>
<p>5.合并完成后，就可以放心的删除<code>dev</code>分支了:<code>git branch -d dev</code>.删除后<code>git branch</code>查看，就只剩下<code>master</code>分支了。</p>
<h4 id="2-小结"><a href="#2-小结" class="headerlink" title="2. 小结"></a>2. 小结</h4><p>Git鼓励大量使用分支：<br>查看分支：<code>git branch</code><br>创建分支：<code>git branch &lt;name&gt;</code><br>切换分支：<code>git checkout &lt;name&gt;</code><br>创建+切换分支：<code>git checkout -b &lt;name&gt;</code><br>合并某分支到当前分支：<code>git merge &lt;name&gt;</code><br>删除分支：<code>git branch -d &lt;name&gt;</code></p>
<h3 id="解决冲突"><a href="#解决冲突" class="headerlink" title="解决冲突"></a>解决冲突</h3><p>准备新的<code>feature1</code>分支，继续我们的新分支开发：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git checkout -b feature1</div><div class="line">Switched to a new branch &apos;feature1&apos;</div></pre></td></tr></table></figure></p>
<p>修改<code>readme.txt</code>最后一行，改为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Creating a new branch is quick AND simple.</div></pre></td></tr></table></figure></p>
<p>在<code>feature1</code>分支上提交：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ git add readme.txt </div><div class="line">$ git commit -m &quot;AND simple&quot;</div><div class="line">[feature1 75a857c] AND simple</div><div class="line"> 1 file changed, 1 insertion(+), 1 deletion(-)</div></pre></td></tr></table></figure></p>
<p>切换到<code>master</code>分支：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git checkout master</div><div class="line">Switched to branch &apos;master&apos;</div><div class="line">Your branch is ahead of &apos;origin/master&apos; by 1 commit.</div></pre></td></tr></table></figure></p>
<p>Git还会自动提示我们当前<code>master</code>分支比远程的<code>master</code>分支要超前1个提交。</p>
<p>在<code>master</code>分支上把<code>readme.txt</code>文件的最后一行改为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Creating a new branch is quick &amp; simple.</div></pre></td></tr></table></figure></p>
<p>提交：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ git add readme.txt </div><div class="line">$ git commit -m &quot;&amp; simple&quot;</div><div class="line">[master 400b400] &amp; simple</div><div class="line"> 1 file changed, 1 insertion(+), 1 deletion(-)</div></pre></td></tr></table></figure></p>
<p>现在，<code>master</code>分支和<code>feature1</code>分支各自都分别有新的提交，变成了这样：<br><img src="/image/code/Git/16.png" alt=""><br>这种情况下，Git无法执行“快速合并”，只能试图把各自的修改合并起来，但这种合并就可能会有冲突，我们试试看：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ git merge feature1</div><div class="line">Auto-merging readme.txt</div><div class="line">CONFLICT (content): Merge conflict in readme.txt</div><div class="line">Automatic merge failed; fix conflicts and then commit the result.</div></pre></td></tr></table></figure>
<p>果然冲突了！Git告诉我们，<code>readme.txt</code>文件存在冲突，必须手动解决冲突后再提交。<code>git status</code>也可以告诉我们冲突的文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$ git status</div><div class="line"># On branch master</div><div class="line"># Your branch is ahead of &apos;origin/master&apos; by 2 commits.</div><div class="line">#</div><div class="line"># Unmerged paths:</div><div class="line">#   (use &quot;git add/rm &lt;file&gt;...&quot; as appropriate to mark resolution)</div><div class="line">#</div><div class="line">#       both modified:      readme.txt</div><div class="line">#</div><div class="line">no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)</div></pre></td></tr></table></figure>
<p>我们可以直接查看<code>readme.txt</code>的内容：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">Git is a distributed version control system.</div><div class="line">Git is free software distributed under the GPL.</div><div class="line">Git has a mutable index called stage.</div><div class="line">Git tracks changes of files.</div><div class="line">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</div><div class="line">Creating a new branch is quick &amp; simple.</div><div class="line">=======</div><div class="line">Creating a new branch is quick AND simple.</div><div class="line">&gt;&gt;&gt;&gt;&gt;&gt;&gt; feature1</div></pre></td></tr></table></figure>
<p>Git用<code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;，=======，&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code>标记出不同分支的内容，我们修改如下后保存：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Creating a new branch is quick and simple.</div></pre></td></tr></table></figure>
<p>再提交：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git add readme.txt </div><div class="line">$ git commit -m &quot;conflict fixed&quot;</div><div class="line">[master 59bc1cb] conflict fixed</div></pre></td></tr></table></figure>
<p>现在，master分支和feature1分支变成了下图所示：</p>
<p><img src="/image/code/Git/17.png" alt=""><br>用带参数的<code>git log</code>也可以看到分支的合并情况：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ git log --graph --pretty=oneline --abbrev-commit</div><div class="line">*   59bc1cb conflict fixed</div><div class="line">|\</div><div class="line">| * 75a857c AND simple</div><div class="line">* | 400b400 &amp; simple</div><div class="line">|/</div><div class="line">* fec145a branch test</div><div class="line">...</div></pre></td></tr></table></figure>
<p>最后，删除<code>feature1</code>分支：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git branch -d feature1</div><div class="line">Deleted branch feature1 (was 75a857c).</div></pre></td></tr></table></figure>
<p>工作完成。</p>
<h3 id="分支管理策略"><a href="#分支管理策略" class="headerlink" title="分支管理策略"></a>分支管理策略</h3><p>通常，合并分支时，如果可能，Git会用Fast forward模式，但这种模式下，删除分支后，会丢掉分支信息。<br>如果要强制禁用Fast forward模式，Git就会在merge时生成一个新的commit，这样，从分支历史上就可以看出分支信息。<br>下面我们实战一下–no-ff方式的git merge：<br>首先，仍然创建并切换dev分支：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git checkout -b dev</div><div class="line">Switched to a new branch &apos;dev&apos;</div></pre></td></tr></table></figure>
<p>修改<code>readme.txt</code>文件，并提交一个新的<code>commit</code>：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ git add readme.txt </div><div class="line">$ git commit -m &quot;add merge&quot;</div><div class="line">[dev 6224937] add merge</div><div class="line"> 1 file changed, 1 insertion(+)</div></pre></td></tr></table></figure>
<p>现在，我们切换回<code>master</code>：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git checkout master</div><div class="line">Switched to branch &apos;master&apos;</div></pre></td></tr></table></figure>
<p>准备合并<code>dev</code>分支，请注意<code>--no-ff</code>参数，表示禁用<code>Fast forward</code>：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ git merge --no-ff -m &quot;merge with no-ff&quot; dev</div><div class="line">Merge made by the &apos;recursive&apos; strategy.</div><div class="line"> readme.txt |    1 +</div><div class="line"> 1 file changed, 1 insertion(+)</div></pre></td></tr></table></figure>
<p>因为本次合并要创建一个新的<code>commit</code>，所以加上<code>-m</code>参数，把<code>commit</code>描述写进去。</p>
<p>合并后，我们用<code>git log</code>看看分支历史：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ git log --graph --pretty=oneline --abbrev-commit</div><div class="line">*   7825a50 merge with no-ff</div><div class="line">|\</div><div class="line">| * 6224937 add merge</div><div class="line">|/</div><div class="line">*   59bc1cb conflict fixed</div><div class="line">...</div></pre></td></tr></table></figure>
<p>可以看到，不使用<code>Fast forward</code>模式，<code>merge</code>后就像这样：</p>
<p><img src="/image/code/Git/18.png" alt=""></p>
<h4 id="1-分支策略"><a href="#1-分支策略" class="headerlink" title="1. 分支策略"></a>1. 分支策略</h4><p>在实际开发中，我们应该按照几个基本原则进行分支管理：<br>首先，<code>master</code>分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活；<br>那在哪干活呢？干活都在<code>dev</code>分支上，也就是说，<code>dev</code>分支是不稳定的，到某个时候，比如1.0版本发布时，再把<code>dev</code>分支合并到<code>master</code>上，在<code>master</code>分支发布1.0版本；<br>所以，团队合作的分支看起来就像这样：</p>
<p><img src="/image/code/Git/19.png" alt=""></p>
<h4 id="2-小结-1"><a href="#2-小结-1" class="headerlink" title="2. 小结"></a>2. 小结</h4><p>Git分支十分强大，在团队开发中应该充分应用。<br>合并分支时，加上<code>--no-ff</code>参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而<code>fast forward</code>合并就看不出来曾经做过合并。</p>
<h3 id="Bug分支"><a href="#Bug分支" class="headerlink" title="Bug分支"></a>Bug分支</h3><p>在Git中，由于分支是如此的强大，所以，每个bug都可以通过一个新的临时分支来修复，修复后，合并分支，然后将临时分支删除。<br>当你接到一个修复一个代号101的bug的任务时，很自然地，你想创建一个分支<code>issue-101</code>来修复它，但是，等等，当前正在dev上进行的工作还没有提交：<br>并不是你不想提交，而是工作只进行到一半，还没法提交，预计完成还需1天时间。但是，必须在两个小时内修复该bug，怎么办？</p>
<p>幸好，Git还提供了一个stash功能，可以把当前工作现场“储藏”起来，等以后恢复现场后继续工作：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git stash</div><div class="line">Saved working directory and index state WIP on dev: 6224937 add merge</div><div class="line">HEAD is now at 6224937 add merge</div></pre></td></tr></table></figure>
<p>现在，用<code>git status</code>查看工作区，就是干净的（除非有没有被Git管理的文件），因此可以放心地创建分支来修复bug。</p>
<p>首先确定要在哪个分支上修复bug，假定需要在<code>master</code>分支上修复，就从<code>master</code>创建临时分支：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ git checkout master</div><div class="line">Switched to branch &apos;master&apos;</div><div class="line">Your branch is ahead of &apos;origin/master&apos; by 6 commits.</div><div class="line">$ git checkout -b issue-101</div><div class="line">Switched to a new branch &apos;issue-101&apos;</div></pre></td></tr></table></figure>
<p>现在修复bug，需要把“Git is free software …”改为“Git is a free software …”，然后提交：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ git add readme.txt </div><div class="line">$ git commit -m &quot;fix bug 101&quot;</div><div class="line">[issue-101 cc17032] fix bug 101</div><div class="line"> 1 file changed, 1 insertion(+), 1 deletion(-)</div></pre></td></tr></table></figure>
<p>修复完成后，切换到<code>master</code>分支，并完成合并，最后删除<code>issue-101</code>分支：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ git checkout master</div><div class="line">Switched to branch &apos;master&apos;</div><div class="line">Your branch is ahead of &apos;origin/master&apos; by 2 commits.</div><div class="line">$ git merge --no-ff -m &quot;merged bug fix 101&quot; issue-101</div><div class="line">Merge made by the &apos;recursive&apos; strategy.</div><div class="line"> readme.txt |    2 +-</div><div class="line"> 1 file changed, 1 insertion(+), 1 deletion(-)</div><div class="line">$ git branch -d issue-101</div><div class="line">Deleted branch issue-101 (was cc17032).</div></pre></td></tr></table></figure>
<p>太棒了，原计划两个小时的bug修复只花了5分钟！现在，是时候接着回到dev分支干活了！</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ git checkout dev</div><div class="line">Switched to branch &apos;dev&apos;</div><div class="line">$ git status</div><div class="line"># On branch dev</div><div class="line">nothing to commit (working directory clean)</div></pre></td></tr></table></figure>
<p>工作区是干净的，刚才的工作现场存到哪去了？用<code>git stash list</code>命令看看：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git stash list</div><div class="line">stash@&#123;0&#125;: WIP on dev: 6224937 add merge</div></pre></td></tr></table></figure>
<p>工作现场还在，Git把stash内容存在某个地方了，但是需要恢复一下，有两个办法：</p>
<p>一是用<code>git stash apply</code>恢复，但是恢复后，stash内容并不删除，你需要用<code>git stash drop</code>来删除；</p>
<p>另一种方式是用<code>git stash pop</code>，恢复的同时把<code>stash</code>内容也删了：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">$ git stash pop</div><div class="line"># On branch dev</div><div class="line"># Changes to be committed:</div><div class="line">#   (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)</div><div class="line">#</div><div class="line">#       new file:   hello.py</div><div class="line">#</div><div class="line"># Changes not staged for commit:</div><div class="line">#   (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)</div><div class="line">#   (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)</div><div class="line">#</div><div class="line">#       modified:   readme.txt</div><div class="line">#</div><div class="line">Dropped refs/stash@&#123;0&#125; (f624f8e5f082f2df2bed8a4e09c12fd2943bdd40)</div></pre></td></tr></table></figure>
<p>再用git stash list查看，就看不到任何stash内容了：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git stash list</div></pre></td></tr></table></figure>
<p>你可以多次<code>stash</code>，恢复的时候，先用<code>git stash list</code>查看，然后恢复指定的stash，用命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git stash apply stash@&#123;0&#125;</div></pre></td></tr></table></figure>
<h4 id="小结-2"><a href="#小结-2" class="headerlink" title="小结"></a>小结</h4><p>修复bug时，我们会通过创建新的bug分支进行修复，然后合并，最后删除；<br>当手头工作没有完成时，先把工作现场<code>git stash</code>一下，然后去修复bug，修复后，再<code>git stash pop</code>，回到工作现场。</p>
<h3 id="Feature-分支"><a href="#Feature-分支" class="headerlink" title="Feature 分支"></a>Feature 分支</h3><p>添加一个新功能时，你肯定不希望因为一些实验性质的代码，把主分支搞乱了，所以，每添加一个新功能，最好新建一个<code>feature</code>分支，在上面开发，完成后，合并，最后，删除该<code>feature</code>分支。<br>接到新任务后，准备开发:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git checkout -b feature-vulcan</div><div class="line">Switched to a new branch &apos;feature-vulcan&apos;</div></pre></td></tr></table></figure></p>
<p>开发完毕：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$ git add vulcan.py</div><div class="line">$ git status</div><div class="line"># On branch feature-vulcan</div><div class="line"># Changes to be committed:</div><div class="line">#   (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)</div><div class="line">#</div><div class="line">#       new file:   vulcan.py</div><div class="line">#</div><div class="line">$ git commit -m &quot;add feature vulcan&quot;</div><div class="line">[feature-vulcan 756d4af] add feature vulcan</div><div class="line"> 1 file changed, 2 insertions(+)</div><div class="line"> create mode 100644 vulcan.py</div></pre></td></tr></table></figure>
<p>切回<code>dev</code>，准备合并：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git checkout dev</div></pre></td></tr></table></figure>
<p>一切顺利的话，feature分支和bug分支是类似的，合并，然后删除。</p>
<p>但是，就在此时，接到上级命令，因经费不足，新功能必须取消！这个分支还是必须就地销毁：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git branch -d feature-vulcan</div><div class="line">error: The branch &apos;feature-vulcan&apos; is not fully merged.</div><div class="line">If you are sure you want to delete it, run &apos;git branch -D feature-vulcan&apos;.</div></pre></td></tr></table></figure>
<p>销毁失败。Git友情提醒，<code>feature-vulcan</code>分支还没有被合并，如果删除，将丢失掉修改，如果要强行删除，需要使用命令<code>git branch -D feature-vulcan</code>。</p>
<p>现在我们强行删除：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git branch -D feature-vulcan</div><div class="line">Deleted branch feature-vulcan (was 756d4af).</div></pre></td></tr></table></figure>
<p>终于删除成功！</p>
<h4 id="小结-3"><a href="#小结-3" class="headerlink" title="小结"></a>小结</h4><p>开发一个新<code>feature</code>，最好新建一个分支；<br>如果要丢弃一个没有被合并过的分支，可以通过<code>git branch -D &lt;name&gt;</code>强行删除。</p>
<h3 id="多人协作"><a href="#多人协作" class="headerlink" title="多人协作"></a>多人协作</h3><p>当你从远程仓库克隆时，实际上Git自动把本地的master分支和远程的master分支对应起来了，并且，远程仓库的默认名称是<code>origin</code>。<br>要查看远程库的信息，用<code>git remote</code>：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git remote</div><div class="line">origin</div></pre></td></tr></table></figure>
<p>或者，用<code>git remote -v</code>显示更详细的信息：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git remote -v</div><div class="line">origin  git@github.com:michaelliao/learngit.git (fetch)</div><div class="line">origin  git@github.com:michaelliao/learngit.git (push)</div></pre></td></tr></table></figure>
<p>上面显示了可以抓取和推送的origin的地址。如果没有推送权限，就看不到push的地址。</p>
<h4 id="1-推送分支"><a href="#1-推送分支" class="headerlink" title="1. 推送分支"></a>1. 推送分支</h4><p>推送分支，就是把该分支上的所有本地提交推送到远程库。推送时，要指定本地分支，这样，Git就会把该分支推送到远程库对应的远程分支上：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git push origin master</div></pre></td></tr></table></figure>
<p>但是，并不是一定要把本地分支往远程推送，那么，哪些分支需要推送，哪些不需要呢？</p>
<ul>
<li><code>master</code>分支是主分支，因此要时刻与远程同步；</li>
<li><code>dev</code>分支是开发分支，团队所有成员都需要在上面工作，所以也需要与远程同步；</li>
<li>bug分支只用于在本地修复bug，就没必要推到远程了，除非老板要看看你每周到底修复了几个bug；</li>
<li>feature分支是否推到远程，取决于你是否和你的小伙伴合作在上面开发。</li>
</ul>
<h4 id="2-抓取分支"><a href="#2-抓取分支" class="headerlink" title="2. 抓取分支"></a>2. 抓取分支</h4><p>多人协作的工作模式通常是这样：</p>
<ol>
<li>首先，可以试图用<code>git push origin branch-name</code>推送自己的修改；</li>
<li>如果推送失败，则因为远程分支比你的本地更新，需要先用<code>git pull</code>试图合并；</li>
<li>如果合并有冲突，则解决冲突，并在本地提交；</li>
<li>没有冲突或者解决掉冲突后，再用<code>git push origin branch-name</code>推送就能成功！</li>
</ol>
<p>如果git pull提示“no tracking information”，则说明本地分支和远程分支的链接关系没有创建，用命令<code>git branch --set-upstream branch-name origin/branch-name</code>。</p>
<h4 id="3-小结"><a href="#3-小结" class="headerlink" title="3. 小结"></a>3. 小结</h4><ul>
<li>查看远程库信息，使用<code>git remote -v</code>；</li>
<li>本地新建的分支如果不推送到远程，对其他人就是不可见的；</li>
<li>从本地推送分支，使用<code>git push origin branch-name</code>，如果推送失败，先用git pull抓取远程的新提交；</li>
<li>在本地创建和远程分支对应的分支，使用<code>git checkout -b branch-name origin/branch-name</code>，本地和远程分支的名称最好一致；</li>
<li>建立本地分支和远程分支的关联，使用<code>git branch --set-upstream branch-name origin/branch-name</code>；</li>
<li>从远程抓取分支，使用<code>git pull</code>，如果有冲突，要先处理冲突。</li>
</ul>
<h2 id="七、标签管理"><a href="#七、标签管理" class="headerlink" title="七、标签管理"></a>七、标签管理</h2><p>发布一个版本时，我们通常先在版本库中打一个标签（tag），这样，就唯一确定了打标签时刻的版本。将来无论什么时候，取某个标签的版本，就是把那个打标签的时刻的历史版本取出来。所以，标签也是版本库的一个快照。(版本库和标签类似于IP和域名的关系，域名好记)</p>
<h3 id="创建标签"><a href="#创建标签" class="headerlink" title="创建标签"></a>创建标签</h3><p>在Git中打标签非常简单，首先，切换到需要打标签的分支上：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ git branch</div><div class="line">* dev</div><div class="line">  master</div><div class="line">$ git checkout master</div><div class="line">Switched to branch &apos;master&apos;</div></pre></td></tr></table></figure></p>
<p>然后，敲命令<code>git tag &lt;name&gt;</code>就可以打一个新标签：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git tag v1.0</div></pre></td></tr></table></figure>
<p>可以用命令<code>git tag</code>查看所有标签：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git tag</div><div class="line">v1.0</div></pre></td></tr></table></figure>
<p>默认标签是打在最新提交的<code>commit</code>上的。有时候，如果忘了打标签，比如，现在已经是周五了，但应该在周一打的标签没有打，怎么办？</p>
<p>方法是找到历史提交的<code>commit id</code>，然后打上就可以了：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$ git log --pretty=oneline --abbrev-commit</div><div class="line">6a5819e merged bug fix 101</div><div class="line">cc17032 fix bug 101</div><div class="line">7825a50 merge with no-ff</div><div class="line">6224937 add merge</div><div class="line">59bc1cb conflict fixed</div><div class="line">400b400 &amp; simple</div><div class="line">75a857c AND simple</div><div class="line">fec145a branch test</div><div class="line">d17efd8 remove test.txt</div><div class="line">...</div></pre></td></tr></table></figure>
<p>比方说要对<code>add merge</code>这次提交打标签，它对应的<code>commit id</code>是6224937，敲入命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git tag v0.9 6224937</div></pre></td></tr></table></figure>
<p>再用命令<code>git tag</code>查看标签：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git tag</div><div class="line">v0.9</div><div class="line">v1.0</div></pre></td></tr></table></figure>
<p>注意，标签不是按时间顺序列出，而是按字母排序的。可以用<code>git show &lt;tagname&gt;</code>查看标签信息：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ git show v0.9</div><div class="line">commit 622493706ab447b6bb37e4e2a2f276a20fed2ab4</div><div class="line">Author: Michael Liao &lt;askxuefeng@gmail.com&gt;</div><div class="line">Date:   Thu Aug 22 11:22:08 2013 +0800</div><div class="line"></div><div class="line">    add merge</div><div class="line">...</div></pre></td></tr></table></figure>
<p>可以看到，v0.9确实打在<code>add merge</code>这次提交上。</p>
<p>还可以创建带有说明的标签，用<code>-a</code>指定标签名，<code>-m</code>指定说明文字：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git tag -a v0.1 -m &quot;version 0.1 released&quot; 3628164</div></pre></td></tr></table></figure>
<p>用命令<code>git show &lt;tagname&gt;</code>可以看到说明文字：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$ git show v0.1</div><div class="line">tag v0.1</div><div class="line">Tagger: Michael Liao &lt;askxuefeng@gmail.com&gt;</div><div class="line">Date:   Mon Aug 26 07:28:11 2013 +0800</div><div class="line"></div><div class="line">version 0.1 released</div><div class="line"></div><div class="line">commit 3628164fb26d48395383f8f31179f24e0882e1e0</div><div class="line">Author: Michael Liao &lt;askxuefeng@gmail.com&gt;</div><div class="line">Date:   Tue Aug 20 15:11:49 2013 +0800</div><div class="line"></div><div class="line">    append GPL</div></pre></td></tr></table></figure>
<p>还可以通过<code>-s</code>用私钥签名一个标签：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git tag -s v0.2 -m &quot;signed version 0.2 released&quot; fec145a</div></pre></td></tr></table></figure>
<p>签名采用PGP签名，因此，必须首先安装<code>gpg</code>（GnuPG），如果没有找到gpg，或者没有gpg密钥对，就会报错：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">gpg: signing failed: secret key not available</div><div class="line">error: gpg failed to sign the data</div><div class="line">error: unable to sign the tag</div></pre></td></tr></table></figure>
<p>如果报错，请参考GnuPG帮助文档配置<code>Key</code>。</p>
<p>用命令<code>git show &lt;tagname&gt;</code>可以看到PGP签名信息：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">$ git show v0.2</div><div class="line">tag v0.2</div><div class="line">Tagger: Michael Liao &lt;askxuefeng@gmail.com&gt;</div><div class="line">Date:   Mon Aug 26 07:28:33 2013 +0800</div><div class="line"></div><div class="line">signed version 0.2 released</div><div class="line">-----BEGIN PGP SIGNATURE-----</div><div class="line">Version: GnuPG v1.4.12 (Darwin)</div><div class="line"></div><div class="line">iQEcBAABAgAGBQJSGpMhAAoJEPUxHyDAhBpT4QQIAKeHfR3bo...</div><div class="line">-----END PGP SIGNATURE-----</div><div class="line"></div><div class="line">commit fec145accd63cdc9ed95a2f557ea0658a2a6537f</div><div class="line">Author: Michael Liao &lt;askxuefeng@gmail.com&gt;</div><div class="line">Date:   Thu Aug 22 10:37:30 2013 +0800</div><div class="line"></div><div class="line">    branch test</div></pre></td></tr></table></figure>
<p>用PGP签名的标签是不可伪造的，因为可以验证PGP签名。验证签名的方法比较复杂，这里就不介绍了。</p>
<h3 id="操作标签"><a href="#操作标签" class="headerlink" title="操作标签"></a>操作标签</h3><p>如果标签打错了，也可以删除：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git tag -d v0.1</div><div class="line">Deleted tag &apos;v0.1&apos; (was e078af9)</div></pre></td></tr></table></figure>
<p>因为创建的标签都只存储在本地，不会自动推送到远程。所以，打错的标签可以在本地安全删除。</p>
<p>如果要推送某个标签到远程，使用命令<code>git push origin &lt;tagname&gt;</code>：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ git push origin v1.0</div><div class="line">Total 0 (delta 0), reused 0 (delta 0)</div><div class="line">To git@github.com:michaelliao/learngit.git</div><div class="line"> * [new tag]         v1.0 -&gt; v1.0</div></pre></td></tr></table></figure>
<p>或者，一次性推送全部尚未推送到远程的本地标签：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ git push origin --tags</div><div class="line">Counting objects: 1, done.</div><div class="line">Writing objects: 100% (1/1), 554 bytes, done.</div><div class="line">Total 1 (delta 0), reused 0 (delta 0)</div><div class="line">To git@github.com:michaelliao/learngit.git</div><div class="line"> * [new tag]         v0.2 -&gt; v0.2</div><div class="line"> * [new tag]         v0.9 -&gt; v0.9</div></pre></td></tr></table></figure>
<p>如果标签已经推送到远程，要删除远程标签就麻烦一点，先从本地删除：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git tag -d v0.9</div><div class="line">Deleted tag &apos;v0.9&apos; (was 6224937)</div></pre></td></tr></table></figure>
<p>然后，从远程删除。删除命令也是<code>push</code>，但是格式如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git push origin :refs/tags/v0.9</div><div class="line">To git@github.com:michaelliao/learngit.git</div><div class="line"> - [deleted]         v0.9</div></pre></td></tr></table></figure>
<p>要看看是否真的从远程库删除了标签，可以登陆GitHub查看。</p>
<h4 id="小结-4"><a href="#小结-4" class="headerlink" title="小结"></a>小结</h4><ul>
<li>命令<code>git push origin &lt;tagname&gt;</code>可以推送一个本地标签；</li>
<li>命令<code>git push origin --tags</code>可以推送全部未推送过的本地标签；</li>
<li>命令<code>git tag -d &lt;tagname&gt;</code>可以删除一个本地标签；</li>
<li>命令<code>git push origin :refs/tags/&lt;tagname&gt;</code>可以删除一个远程标签。</li>
</ul>
<h2 id="八、使用GitHub"><a href="#八、使用GitHub" class="headerlink" title="八、使用GitHub"></a>八、使用GitHub</h2><p>bootstrap项目，这是一个非常强大的CSS框架，项目主页:<a href="https://github.com/twbs/bootstrap" target="_blank" rel="external">https://github.com/twbs/bootstrap</a>，点右上角的『Fork』就在自己的账号下克隆了一个<code>bootstrap</code>仓库，然后，从自己的账号下<code>clone</code>。<br><strong>注</strong>:一定要从自己的账号下<code>clone</code>仓库，这样你才能推送修改。如果从bootstrap的作者的仓库地址<code>git@github.com:twbs/bootstrap.git</code>克隆，因为没有权限，你将不能推送修改。</p>
<h4 id="小结-5"><a href="#小结-5" class="headerlink" title="小结"></a>小结</h4><ul>
<li>在GitHub上，可以任意<code>Fork</code>开源仓库；</li>
<li>自己拥有<code>Fork</code>后的仓库的读写权限；</li>
<li>可以推送<code>pull request</code>给官方仓库来贡献代码</li>
</ul>
<h2 id="九、自定义Git"><a href="#九、自定义Git" class="headerlink" title="九、自定义Git"></a>九、自定义Git</h2><h3 id="Git命令行显示颜色"><a href="#Git命令行显示颜色" class="headerlink" title="Git命令行显示颜色"></a>Git命令行显示颜色</h3><p><code>$ git config --global color.ui true</code></p>
<h3 id="忽略特殊文件"><a href="#忽略特殊文件" class="headerlink" title="忽略特殊文件"></a>忽略特殊文件</h3><p>有些时候，你必须把某些文件放到Git工作目录中，但又不能提交它们，比如保存了数据库密码的配置文件啦，等等，每次<code>git status</code>都会显示<code>Untracked files ...</code>，有强迫症的童鞋心里肯定不爽。</p>
<p>好在Git考虑到了大家的感受，这个问题解决起来也很简单，在Git工作区的根目录下创建一个特殊的<code>.gitignore</code>文件，然后把要忽略的文件名填进去，Git就会自动忽略这些文件。</p>
<p>不需要从头写<code>.gitignore</code>文件，GitHub已经为我们准备了各种配置文件，只需要组合一下就可以使用了。所有配置文件可以直接在线浏览：<a href="https://github.com/github/gitignore" target="_blank" rel="external">https://github.com/github/gitignore</a></p>
<p>忽略文件的原则是：</p>
<ol>
<li>忽略操作系统自动生成的文件，比如缩略图等；</li>
<li>忽略编译生成的中间文件、可执行文件等，也就是如果一个文件是通过另一个文件自动生成的，那自动生成的文件就没必要放进版本库，比如Java编译产生的.class文件；</li>
<li>忽略你自己的带有敏感信息的配置文件，比如存放口令的配置文件。</li>
</ol>
<p>举个例子：</p>
<p>假设你在Windows下进行Python开发，Windows会自动在有图片的目录下生成隐藏的缩略图文件，如果有自定义目录，目录下就会有Desktop.ini文件，因此你需要忽略Windows自动生成的垃圾文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># Windows:</div><div class="line">Thumbs.db</div><div class="line">ehthumbs.db</div><div class="line">Desktop.ini</div></pre></td></tr></table></figure>
<p>然后，继续忽略Python编译产生的.pyc、.pyo、dist等文件或目录：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"># Python:</div><div class="line">*.py[cod]</div><div class="line">*.so</div><div class="line">*.egg</div><div class="line">*.egg-info</div><div class="line">dist</div><div class="line">build</div></pre></td></tr></table></figure>
<p>加上你自己定义的文件，最终得到一个完整的.gitignore文件，内容如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"># Windows:</div><div class="line">Thumbs.db</div><div class="line">ehthumbs.db</div><div class="line">Desktop.ini</div><div class="line"></div><div class="line"># Python:</div><div class="line">*.py[cod]</div><div class="line">*.so</div><div class="line">*.egg</div><div class="line">*.egg-info</div><div class="line">dist</div><div class="line">build</div><div class="line"></div><div class="line"># My configurations:</div><div class="line">db.ini</div><div class="line">deploy_key_rsa</div></pre></td></tr></table></figure>
<p>最后一步就是把<code>.gitignore</code>也提交到Git，就完成了！当然检验<code>.gitignore</code>的标准是<code>git status</code>命令是不是说<code>working directory clean</code>。</p>
<p>使用Windows的童鞋注意了，如果你在资源管理器里新建一个<code>.gitignore</code>文件，它会非常弱智地提示你必须输入文件名，但是在文本编辑器里“保存”或者“另存为”就可以把文件保存为<code>.gitignore</code>了。</p>
<p>有些时候，你想添加一个文件到Git，但发现添加不了，原因是这个文件被<code>.gitignore</code>忽略了：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ git add App.class</div><div class="line">The following paths are ignored by one of your .gitignore files:</div><div class="line">App.class</div><div class="line">Use -f if you really want to add them.</div></pre></td></tr></table></figure>
<p>如果你确实想添加该文件，可以用-f强制添加到Git：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git add -f App.class</div></pre></td></tr></table></figure>
<p>或者你发现，可能是<code>.gitignore</code>写得有问题，需要找出来到底哪个规则写错了，可以用<code>git check-ignore</code>命令检查：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git check-ignore -v App.class</div><div class="line">.gitignore:3:*.class    App.class</div></pre></td></tr></table></figure>
<p>Git会告诉我们，<code>.gitignore</code>的第3行规则忽略了该文件，于是我们就可以知道应该修订哪个规则。</p>
<h4 id="小结-6"><a href="#小结-6" class="headerlink" title="小结"></a>小结</h4><ul>
<li>忽略某些文件时，需要编写<code>.gitignore</code>；</li>
<li><code>.gitignore</code>文件本身要放到版本库里，并且可以对.gitignore做版本管理！</li>
</ul>
<h3 id="配置别名"><a href="#配置别名" class="headerlink" title="配置别名"></a>配置别名</h3><p>有没有经常敲错命令？比如<code>git status</code>？status这个单词真心不好记。<br>如果敲<code>git st</code>就表示<code>git status</code>那就简单多了，当然这种偷懒的办法我们是极力赞成的。</p>
<p>我们只需要敲一行命令，告诉Git，以后<code>st</code>就表示<code>status</code>：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git config --global alias.st status</div></pre></td></tr></table></figure>
<p>好了，现在敲<code>git st</code>看看效果。</p>
<p>当然还有别的命令可以简写，很多人都用<code>co</code>表示<code>checkout</code>，<code>ci</code>表示<code>commit</code>，<code>br</code>表示<code>branch</code>：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git config --global alias.co checkout</div><div class="line">$ git config --global alias.ci commit</div><div class="line">$ git config --global alias.br branch</div></pre></td></tr></table></figure>
<p>以后提交就可以简写成：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git ci -m &quot;bala bala bala...&quot;</div></pre></td></tr></table></figure>
<p><code>--global</code>参数是全局参数，也就是这些命令在这台电脑的所有Git仓库下都有用。</p>
<p>比如命令<code>git reset HEAD file</code>可以把暂存区的修改撤销掉（unstage），重新放回工作区。既然是一个unstage操作，就可以配置一个unstage别名：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git config --global alias.unstage &apos;reset HEAD&apos;</div></pre></td></tr></table></figure>
<p>当你敲入命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git unstage test.py</div></pre></td></tr></table></figure>
<p>实际上Git执行的是：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git reset HEAD test.py</div></pre></td></tr></table></figure>
<p>配置一个<code>git last</code>，让其显示最后一次提交信息：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git config --global alias.last &apos;log -1&apos;</div></pre></td></tr></table></figure>
<p>甚至还有人丧心病狂地把lg配置成了：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git config --global alias.lg &quot;log --color --graph --pretty=format:&apos;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&apos; --abbrev-commit&quot;</div></pre></td></tr></table></figure>
<p>来看看git lg的效果：</p>
<p><img src="/image/code/Git/20.png" alt=""></p>
<h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>配置Git的时候，加上<code>--global</code>是针对当前用户起作用的，如果不加，那只针对当前的仓库起作用。</p>
<p>配置文件放哪了？每个仓库的Git配置文件都放在<code>.git/config</code>文件中：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">$ cat .git/config </div><div class="line">[core]</div><div class="line">    repositoryformatversion = 0</div><div class="line">    filemode = true</div><div class="line">    bare = false</div><div class="line">    logallrefupdates = true</div><div class="line">    ignorecase = true</div><div class="line">    precomposeunicode = true</div><div class="line">[remote &quot;origin&quot;]</div><div class="line">    url = git@github.com:michaelliao/learngit.git</div><div class="line">    fetch = +refs/heads/*:refs/remotes/origin/*</div><div class="line">[branch &quot;master&quot;]</div><div class="line">    remote = origin</div><div class="line">    merge = refs/heads/master</div><div class="line">[alias]</div><div class="line">    last = log -1</div></pre></td></tr></table></figure>
<p>别名就在[alias]后面，要删除别名，直接把对应的行删掉即可。</p>
<p>而当前用户的Git配置文件放在用户主目录下的一个隐藏文件<code>.gitconfig</code>中：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ cat .gitconfig</div><div class="line">[alias]</div><div class="line">    co = checkout</div><div class="line">    ci = commit</div><div class="line">    br = branch</div><div class="line">    st = status</div><div class="line">[user]</div><div class="line">    name = Your Name</div><div class="line">    email = your@email.com</div></pre></td></tr></table></figure>
<p>配置别名也可以直接修改这个文件，如果改错了，可以删掉文件重新通过命令配置。</p>
<h3 id="搭建Git服务器"><a href="#搭建Git服务器" class="headerlink" title="搭建Git服务器"></a>搭建Git服务器</h3><p>搭建Git服务器需要准备一台运行Linux的机器，强烈推荐用<strong>Ubuntu</strong>或<strong>Debian</strong>，这样，通过几条简单的apt命令就可以完成安装。<br>假设你已经有sudo权限的用户账号，下面，正式开始安装。<br>第一步，安装git：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-get install git</div></pre></td></tr></table></figure>
<p>第二步，创建一个git用户，用来运行git服务：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo adduser git</div></pre></td></tr></table></figure>
<p>第三步，创建证书登录：</p>
<p>收集所有需要登录的用户的公钥，就是他们自己的<code>id\_rsa.pub</code>文件，把所有公钥导入到<code>/home/git/.ssh/authorized\_keys</code>文件里，一行一个。</p>
<p>第四步，初始化Git仓库：</p>
<p>先选定一个目录作为Git仓库，假定是<code>/srv/sample.git</code>，在/srv目录下输入命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo git init --bare sample.git</div></pre></td></tr></table></figure>
<p>Git就会创建一个裸仓库，裸仓库没有工作区，因为服务器上的Git仓库纯粹是为了共享，所以不让用户直接登录到服务器上去改工作区，并且服务器上的Git仓库通常都以<code>.git</code>结尾。然后，把owner改为git：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo chown -R git:git sample.git</div></pre></td></tr></table></figure>
<p>第五步，禁用shell登录：</p>
<p>出于安全考虑，第二步创建的git用户不允许登录shell，这可以通过编辑<code>/etc/passwd</code>文件完成。找到类似下面的一行：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git:x:1001:1001:,,,:/home/git:/bin/bash</div></pre></td></tr></table></figure>
<p>改为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell</div></pre></td></tr></table></figure>
<p>这样，git用户可以正常通过ssh使用git，但无法登录shell，因为我们为git用户指定的<code>git-shell</code>每次一登录就自动退出。</p>
<p>第六步，克隆远程仓库：</p>
<p>现在，可以通过<code>git clone</code>命令克隆远程仓库了，在各自的电脑上运行：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git clone git@server:/srv/sample.git</div><div class="line">Cloning into &apos;sample&apos;...</div><div class="line">warning: You appear to have cloned an empty repository.</div></pre></td></tr></table></figure>
<p>剩下的推送就简单了。</p>
<h3 id="管理公钥"><a href="#管理公钥" class="headerlink" title="管理公钥"></a>管理公钥</h3><p>如果团队很小，把每个人的公钥收集起来放到服务器的<code>/home/git/.ssh/authorized\_keys</code>文件里就是可行的。如果团队有几百号人，就没法这么玩了，这时，可以用<a href="https://github.com/res0nat0r/gitosis" target="_blank" rel="external">Gitosis</a>来管理公钥。</p>
<p>这里我们不介绍怎么玩<a href="https://github.com/res0nat0r/gitosis" target="_blank" rel="external">Gitosis</a>了，几百号人的团队基本都在500强了，相信找个高水平的Linux管理员问题不大。</p>
<h3 id="管理权限"><a href="#管理权限" class="headerlink" title="管理权限"></a>管理权限</h3><p>有很多不但视源代码如生命，而且视员工为窃贼的公司，会在版本控制系统里设置一套完善的权限控制，每个人是否有读写权限会精确到每个分支甚至每个目录下。因为Git是为Linux源代码托管而开发的，所以Git也继承了开源社区的精神，不支持权限控制。不过，因为Git支持钩子（hook），所以，可以在服务器端编写一系列脚本来控制提交等操作，达到权限控制的目的。<a href="https://github.com/sitaramc/gitolite" target="_blank" rel="external">Gitolite</a>就是这个工具。</p>
<p>这里我们也不介绍<a href="https://github.com/sitaramc/gitolite" target="_blank" rel="external">Gitolite</a>了，不要把有限的生命浪费到权限斗争中。</p>
<h3 id="小结-7"><a href="#小结-7" class="headerlink" title="小结"></a>小结</h3><ul>
<li>搭建Git服务器非常简单，通常10分钟即可完成；</li>
<li>要方便管理公钥，用<a href="https://github.com/sitaramc/gitolite" target="_blank" rel="external">Gitosis</a>；</li>
<li>要像SVN那样变态地控制权限，用<a href="https://github.com/sitaramc/gitolite" target="_blank" rel="external">Gitolite</a>。</li>
</ul>
<h2 id="十、Git命令速查表"><a href="#十、Git命令速查表" class="headerlink" title="十、Git命令速查表"></a>十、Git命令速查表</h2><p><img src="/image/code/Git/git命令速查表.png" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Git </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[jQuery ( 一 )]]></title>
      <url>http://chuanqiang.github.io/2016/10/30/jQuery-one/</url>
      <content type="html"><![CDATA[<p>介绍 jQuery 的基础知识，包括认识 jQuery、jQuery 的优势，jQuery 样式篇和 jQuery DOM 篇。</p>
<hr>
<a id="more"></a>
<h1 id="第一章-认识jQuery"><a href="#第一章-认识jQuery" class="headerlink" title="第一章 认识jQuery"></a>第一章 认识jQuery</h1><h2 id="jQuery-能做什么"><a href="#jQuery-能做什么" class="headerlink" title="jQuery 能做什么"></a>jQuery 能做什么</h2><h4 id="1-取得文档中的元素"><a href="#1-取得文档中的元素" class="headerlink" title="1. 取得文档中的元素"></a>1. 取得文档中的元素</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'div.content'</span>).find(<span class="string">'p'</span>);</div></pre></td></tr></table></figure>
<h4 id="2-修改页面的外观"><a href="#2-修改页面的外观" class="headerlink" title="2. 修改页面的外观"></a>2. 修改页面的外观</h4><p>CSS虽然为影响文档呈现的方式提供了一种强大的手段，但当所有浏览器不完全支持相同的标准时， 单纯使用CSS就会显得力不从心。 jQuery可以弥补这一不足，它提供了跨浏览器的标准解决方案。而且，即使在页面已经呈现之后，jQuery仍然能够改变文档中某个部分的类或者个别的样式属性。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'ul &gt; li:first'</span>).addClass(<span class="string">'active'</span>);</div></pre></td></tr></table></figure></p>
<h4 id="3-改变文档的内容"><a href="#3-改变文档的内容" class="headerlink" title="3. 改变文档的内容"></a>3. 改变文档的内容</h4><p>可以改变文本、插入或翻转图像、列表重新排序，甚至对HTML文档的整个结构都能重写和扩充.<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#container'</span>).append(<span class="string">'&lt;a href="more.html"&gt;more&lt;/a&gt;'</span>);</div></pre></td></tr></table></figure></p>
<h4 id="4-相应用户的交互操作"><a href="#4-相应用户的交互操作" class="headerlink" title="4. 相应用户的交互操作"></a>4. 相应用户的交互操作</h4><p>jQuery提供了截获形形色色的页面事件（比如用户单击某个链接）的适当方式，而不需要使用事件处理程序拆散HTML代码。此外，它的事件处理API也消除了经常困扰Web开发人员浏览器的不一致性。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'button.show-details'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    $(<span class="string">'div.details'</span>).show();</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<h4 id="5-为页面添加动态效果"><a href="#5-为页面添加动态效果" class="headerlink" title="5. 为页面添加动态效果"></a>5. 为页面添加动态效果</h4><p>jQuery中内置的一批淡入、擦除之类的效果，以及制作新效果的工具包，为此提供了便利。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'div:details'</span>).slideDown();</div></pre></td></tr></table></figure></p>
<h4 id="6-Ajax"><a href="#6-Ajax" class="headerlink" title="6. Ajax"></a>6. Ajax</h4><p>无需刷新页面从服务器获取信息。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'div.details'</span>).load(<span class="string">'more.html #content'</span>);</div></pre></td></tr></table></figure></p>
<h4 id="7-简化常见的JavaScript任务。"><a href="#7-简化常见的JavaScript任务。" class="headerlink" title="7. 简化常见的JavaScript任务。"></a>7. 简化常见的JavaScript任务。</h4><p>jQuery也改进了对基本的JavaScript数据结构的操作（例如迭代和数组操作等） 。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$.each(obj, <span class="function"><span class="keyword">function</span>(<span class="params">key, value</span>) </span>&#123;</div><div class="line">    total += value;</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<h2 id="jQuery-的优势"><a href="#jQuery-的优势" class="headerlink" title="jQuery 的优势"></a>jQuery 的优势</h2><h4 id="1-利用CSS的优势。"><a href="#1-利用CSS的优势。" class="headerlink" title="1. 利用CSS的优势。"></a>1. 利用CSS的优势。</h4><p>通过将查找页面元素的机制构建于CSS选择符之上， jQuery继承了简明清晰地表达文档结构的方式。</p>
<h4 id="2-支持扩展"><a href="#2-支持扩展" class="headerlink" title="2. 支持扩展"></a>2. 支持扩展</h4><p>为了避免特性蠕变（feature creep），jQuery将特殊情况下使用的工具归入插件当中。</p>
<h4 id="3-抽象浏览器不一致性"><a href="#3-抽象浏览器不一致性" class="headerlink" title="3.  抽象浏览器不一致性"></a>3.  抽象浏览器不一致性</h4><p>每种浏览器对颁布的标准都有自己的一套不太一致的实现方案，但jQuery添加一个抽象层来标准化常见的任务，从而有效地减少了代码量，同时，也极大地简化了这些任务。</p>
<h4 id="4-总是面向集合"><a href="#4-总是面向集合" class="headerlink" title="4.  总是面向集合"></a>4.  总是面向集合</h4><p>当我们指示jQuery『找到带有 collapsible 类的全部元素，然后隐藏它们』时，不需要循环遍历每一个返回的元素。相反，<code>.hide()</code>之类的方法被设计成自动操作对象集合，而不是单独的对象。利用这种称作隐式迭代（implicit iteration）的技术，就可以抛弃那些臃肿的循环结构，从而大幅地减少代码量。</p>
<h4 id="5-将多重操作集于一行"><a href="#5-将多重操作集于一行" class="headerlink" title="5. 将多重操作集于一行"></a>5. 将多重操作集于一行</h4><p>将多重操作集于一行。为了避免过度使用临时变量或不必要的代码重复，jQuery在其多数方法中采用了一种称作连缀（chaining） 的编程模式。这种模式意味着基于一个对象进行的多数操作的结果，都会返回这个对象自身，以便为该对象应用下一次操作。</p>
<h2 id="使用jQuery"><a href="#使用jQuery" class="headerlink" title="使用jQuery"></a>使用jQuery</h2><ul>
<li>jQuery不需要安装，要使用它只需该文件的一个副本，该副本可以放在外部站点上，也可以放在自己的服务器上。由于JavaScript是一种解释型语言，所以不必担心编译和构建。什么时候需要使用jQuery，只要在HTML文档中使用 <code>&lt;script&gt;</code> 元素把它导入进来即可。</li>
<li>jQuery官方网站（<a href="http://jquery.com/）。" target="_blank" rel="external">http://jquery.com/）。</a></li>
<li>很多公司都通过自己的CDN（Content Delivery Networks，内容分发网络）来托管其库文件，让开发人员能更方便地使用它。托管在CDN上的文件由于分布式和缓存的原因有速度优势</li>
<li>jQuery从2.0版开始不再支持IE6、IE7和IE8。</li>
</ul>
<h4 id="an-example"><a href="#an-example" class="headerlink" title="an example"></a>an example</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    $(<span class="string">'div.poem-stanza'</span>).addClass(<span class="string">'highlight'</span>);</div><div class="line">&#125;);</div><div class="line">.highlight &#123;</div><div class="line">background-color: #ccc;</div><div class="line">border: 1px solid #888;</div><div class="line">font-style: italic;</div><div class="line">margin: <span class="number">0.5</span>em <span class="number">0</span>;</div><div class="line">padding: <span class="number">0.5</span>em;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><code>$(document).ready()</code>为我们提供了很好的跨浏览器解决方案，涉及如下功能：</p>
<ul>
<li>尽可能使用浏览器原生的DOM就绪实现，并以<code>window.onload</code>事件处理程序作为后备；</li>
<li>可以多次调用<code>$(document).ready()</code>并按照调用它们的顺序执行；</li>
<li>即便是在浏览器事件发生之后把函数传给<code>$(document).ready()</code>，这些函数也会执行；</li>
<li>异步处理事件的预定，必要时脚本可以延迟执行；</li>
<li>通过重复检查一个几乎与DOM同时可用的方法，在较早版本的浏览器中模拟DOM就绪事件。</li>
<li><h1 id="第二章-样式篇"><a href="#第二章-样式篇" class="headerlink" title="第二章 样式篇"></a>第二章 样式篇</h1><h2 id="jQuery-和-DOM-对象的转化"><a href="#jQuery-和-DOM-对象的转化" class="headerlink" title="jQuery 和 DOM 对象的转化"></a>jQuery 和 DOM 对象的转化</h2>jQuery是一个类数组对象，而DOM对象就是一个单独的DOM元素。<h4 id="jQuery对象转化为DOM"><a href="#jQuery对象转化为DOM" class="headerlink" title="jQuery对象转化为DOM"></a>jQuery对象转化为DOM</h4><strong>1. 利用数组下标的方式读取到jQuery中的DOM对象。</strong><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> $div = $(<span class="string">'div'</span>) <span class="comment">//jQuery对象</span></div><div class="line"><span class="keyword">var</span> div = $div[<span class="number">0</span>] <span class="comment">//转化成DOM对象</span></div><div class="line">div.style.color = <span class="string">'red'</span> <span class="comment">//操作dom对象的属性</span></div></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p><strong>注意：</strong>数组的索引是从0开始的，也就是第一个元素下标是0</p>
</blockquote>
<p><strong>2. 通过jQuery自带的get()方法</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> $div = $(<span class="string">'div'</span>) <span class="comment">//jQuery对象</span></div><div class="line"><span class="keyword">var</span> div = $div.get(<span class="number">0</span>) <span class="comment">//通过get方法，转化成DOM对象</span></div><div class="line">div.style.color = <span class="string">'red'</span> <span class="comment">//操作dom对象的属性</span></div></pre></td></tr></table></figure></p>
<h4 id="DOM-对象转换为-jQuery"><a href="#DOM-对象转换为-jQuery" class="headerlink" title="DOM 对象转换为 jQuery"></a>DOM 对象转换为 jQuery</h4><p>如果传递给<code>$(DOM)</code>函数的参数是一个DOM对象，<code>jQuery</code>方法会把这个<code>DOM</code>对象给包装成一个新的jQuery对象<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> div = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'div'</span>); <span class="comment">//dom对象</span></div><div class="line"><span class="keyword">var</span> $div = $(div); <span class="comment">//jQuery对象</span></div><div class="line"><span class="keyword">var</span> $first = $div.first(); <span class="comment">//找到第一个div元素</span></div><div class="line">$first.css(<span class="string">'color'</span>, <span class="string">'red'</span>); <span class="comment">//给第一个元素设置颜色</span></div></pre></td></tr></table></figure></p>
<h2 id="jQuery-选择器"><a href="#jQuery-选择器" class="headerlink" title="jQuery 选择器"></a>jQuery 选择器</h2><h3 id="1-基本选择器"><a href="#1-基本选择器" class="headerlink" title="1. 基本选择器"></a>1. 基本选择器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">选 择 符| CSS |jQuery |说 明</div><div class="line">标签名| P &#123;name=&apos;a&apos;&#125;| $(&apos;p&apos;) |取得文档中 name=a 所有的段落</div><div class="line">ID| #some-id &#123;&#125; |$(&apos;#some-id&apos;) |取得文档中ID为 some-id 的一个元素</div><div class="line">类 | .some-class &#123;&#125; |$(&apos;.some-class&apos;)| 取得文档中类为 some-class 的所有元素</div><div class="line">全选择器| $( &quot;*&quot; )||取得所有元素</div></pre></td></tr></table></figure>
<h3 id="2-层次选择器"><a href="#2-层次选择器" class="headerlink" title="2. 层次选择器"></a>2. 层次选择器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">选择器 | 描述</div><div class="line">$(&quot;parent &gt; child&quot;) | 子选择器，所有制定 parent 元素中指定的 child 的直接子元素</div><div class="line">$(&quot;ancestor descendant&quot;) | 祖先的所有后代元素，包括孩子、孙子等</div><div class="line">$(&quot;prev + next&quot;) | 选择所有紧接在 prev元素之后的 next 元素。 </div><div class="line">$(&quot;prev ~ siblings&quot;) |  prev 元素之后的所有兄弟元素。具有相同的父元素，并匹配过滤  siblings 选择器</div></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#selected-plays &gt; li'</span>).addClass(<span class="string">'horizontal'</span>);</div></pre></td></tr></table></figure>
<p><strong>子元素选择符:<code>&gt;</code></strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#selected-plays &gt; li'</span>).addClass(<span class="string">'horizontal'</span>);</div></pre></td></tr></table></figure></p>
<p>查找ID为<code>selected-plays</code>的元素（#selected-plays）的子元素（&gt;）中所有的列表项（li）,注意只是儿子元素。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#selected-plays li:not(.horizontal)'</span>).addClass(<span class="string">'sub-level'</span>);</div></pre></td></tr></table></figure></p>
<p>ID为<code>selected-plays</code>的元素（#selected-plays）的后代元素。没有<code>horizontal</code>类（:not(.horizontal)）。</p>
<h3 id="3-基本筛选选择器"><a href="#3-基本筛选选择器" class="headerlink" title="3. 基本筛选选择器"></a>3. 基本筛选选择器</h3><p>选择器 | 描述<br><img src="http://oeckzejn4.bkt.clouddn.com/blog/20161024-221453876.png" alt=""></p>
<h3 id="4-内容选择器"><a href="#4-内容选择器" class="headerlink" title="4. 内容选择器"></a>4. 内容选择器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">选择器|描述</div><div class="line">$(&quot;:contains(text)&quot;)|选择所有包含制定文本的元素</div><div class="line">$(&quot;:parent&quot;)|选择所有含有子元素或者文本的元素</div><div class="line">$(&quot;:empty&quot;)|选择所有没有子元素的元素(包含文本节点)</div><div class="line">$(&quot;:has(selector)&quot;)|选择元素中至少包含制定选择器的元素</div></pre></td></tr></table></figure>
<h3 id="5-可见性选择器"><a href="#5-可见性选择器" class="headerlink" title="5. 可见性选择器"></a>5. 可见性选择器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">选择器|描述</div><div class="line">$(&quot;:visible&quot;)|选择所有现实的元素</div><div class="line">$(&quot;:hiddden&quot;)|选择所有隐藏的元素</div></pre></td></tr></table></figure>
<blockquote>
<p><code>:hidden</code>选择器，不仅仅包含样式是<code>display=&quot;none&quot;</code>的元素，还包括隐藏表单、<code>visibility</code>等等</p>
</blockquote>
<p><strong>隐藏元素的几种方法:</strong></p>
<ol>
<li>CSS <code>display</code>的值是<code>none</code>。</li>
<li><code>type=&quot;hidden&quot;</code>的表单元素。</li>
<li>宽度和高度都显式设置为0。</li>
<li>一个祖先元素是隐藏的，该元素是不会在页面上显示</li>
<li>CSS <code>visibility</code>的值是<code>hidden</code></li>
<li>CSS <code>opacity</code>的指是0</li>
</ol>
<h3 id="6-属性选择器"><a href="#6-属性选择器" class="headerlink" title="6. 属性选择器"></a>6. 属性选择器</h3><p>属性选择器让你可以基于属性来定位一个元素。<br><img src="http://oeckzejn4.bkt.clouddn.com/blog/20161024-224113410.png" alt=""></p>
<p><strong>属性选择符使用通配符语法：</strong></p>
<ul>
<li>以<code>~</code>表示值在字符串的开始</li>
<li>以<code>$</code>表示值在字符串的结尾</li>
<li>以<code>*</code>表示匹配的值可以出现在字符串中的任意位置</li>
<li>以<code>!</code>表示对值取反</li>
</ul>
<p><strong>eg</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//查找所有div中，有属性p2的div元素</span></div><div class="line">$(<span class="string">'div[p2]'</span>).css(<span class="string">"border"</span>, <span class="string">"3px groove blue"</span>);</div><div class="line"><span class="comment">//查找所有div中，有属性name中的值只包含一个连字符“-”的div元素</span></div><div class="line">$(<span class="string">'div[name|="-"]'</span>).css(<span class="string">"border"</span>, <span class="string">"3px groove #00FF00"</span>);</div><div class="line"><span class="comment">//查找所有div中，有属性name中的值包含一个连字符“空”和“a”的div元素</span></div><div class="line">$(<span class="string">'div[name~="a"]'</span>).css(<span class="string">"border"</span>, <span class="string">"3px groove #668B8B"</span>); </div><div class="line"><span class="comment">//查找所有div中，属性name的值是用imooc开头的</span></div><div class="line"> $(<span class="string">'div[name^=imooc]'</span>).css(<span class="string">"border"</span>, <span class="string">"3px groove red"</span>); </div><div class="line"> <span class="comment">//查找所有div中，属性name的值是用imooc结尾的</span></div><div class="line"> $(<span class="string">'div[name$=imooc]'</span>).css(<span class="string">"border"</span>, <span class="string">"3px groove blue"</span>); </div><div class="line">  <span class="comment">//查找所有div中，有属性name中的值包含一个test字符串的div元素</span></div><div class="line">$(<span class="string">'div[name*="test"]'</span>).css(<span class="string">"border"</span>, <span class="string">"3px groove #00FF00"</span>); </div><div class="line"><span class="comment">//查找所有div中，有属性testattr中的值没有包含"true"的div</span></div><div class="line">$(<span class="string">'div[name!="true"]'</span>).css(<span class="string">"border"</span>, <span class="string">"3px groove #668B8B"</span>);</div><div class="line"><span class="comment">// input属性中name包含2的按钮相应alert事件</span></div><div class="line">$(<span class="string">'input[name*="2"]'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	alert(<span class="string">'success'</span>);</div><div class="line">&#125;);</div><div class="line"><span class="comment">// 组合使用： href 属性即以 http 开头且任意位置包含 henry的所有链接添加一个 henrylink 类</span></div><div class="line">$(<span class="string">'a[href^="http"][href*="henry"]'</span>).addClass(<span class="string">'henrylink'</span>);</div></pre></td></tr></table></figure></p>
<h3 id="7-子元素选择器"><a href="#7-子元素选择器" class="headerlink" title="7. 子元素选择器"></a>7. 子元素选择器</h3><p><img src="http://oeckzejn4.bkt.clouddn.com/blog/20161024-225235611.png" alt=""><br><strong>注意</strong></p>
<ul>
<li><code>:first</code>只匹配一个单独的元素，但是<code>:first-child</code>选择器可以匹配多个：即为每个父级元素匹配第一个子元素。这相当于<code>:nth-child(1)</code></li>
<li><code>:last</code>只匹配一个单独的元素， <code>:last-child</code> 选择器可以匹配多个元素：即，为每个父级元素匹配最后一个子元素</li>
<li>如果子元素只有一个的话，<code>:first-child</code>与<code>:last-child</code>是同一个</li>
<li><code>:only-child</code>匹配某个元素是父元素中唯一的子元素，就是说当前子元素是父元素中唯一的元素，则匹配</li>
<li>jQuery实现<code>:nth-child(n)</code>是严格来自CSS规范，所以n值是“索引”，也就是说，从1开始计数，<code>:nth-child(index)</code>从1开始的，而<code>eq(index)</code>是从0开始的<br><code>nth-child(n)</code> 与 <code>:nth-last-child(n)</code> 的区别前者是从前往后计算，后者从后往前计算</li>
</ul>
<h3 id="8-表单元素选择器"><a href="#8-表单元素选择器" class="headerlink" title="8. 表单元素选择器"></a>8. 表单元素选择器</h3><p><img src="http://oeckzejn4.bkt.clouddn.com/blog/20161024-230351689.png" alt=""></p>
<h3 id="9-表单对象属性选择器"><a href="#9-表单对象属性选择器" class="headerlink" title="9. 表单对象属性选择器"></a>9. 表单对象属性选择器</h3><p><img src="http://oeckzejn4.bkt.clouddn.com/blog/20161024-230639381.png" alt=""><br><strong>注意:</strong></p>
<ul>
<li>选择器适用于复选框和单选框，对于下拉框元素, 使用<code>:selected</code> 选择器</li>
<li>在某些浏览器中，选择器:checked可能会错误选取到<code>&lt;option&gt;</code>元素，所以保险起见换用选择器<code>input:checked</code>，确保只会选取<code>&lt;input&gt;</code>元素  </li>
</ul>
<h3 id="每隔一行为表格添加样式"><a href="#每隔一行为表格添加样式" class="headerlink" title="每隔一行为表格添加样式"></a>每隔一行为表格添加样式</h3><p><strong>odd</strong>：偶数行<br><strong>even</strong>：奇数行<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'tr:even'</span>).addClass(<span class="string">'alt'</span>);</div></pre></td></tr></table></figure></p>
<p><strong>注意：</strong>当一个页面上存在另外一个表格的时候，第二个表格的样式就会错位。</p>
<p><img src="http://oeckzejn4.bkt.clouddn.com/blog/20161023-210404348.png" alt=""></p>
<p>改为<strong><code>$(&#39;tr:nth-child(odd)&#39;).addClass(&#39;alt&#39;);</code></strong><br><strong>注意：</strong>这次用的<code>odd</code></p>
<p><img src="http://oeckzejn4.bkt.clouddn.com/blog/20161023-210741531.png" alt=""></p>
<h3 id="基于表达你的选择符"><a href="#基于表达你的选择符" class="headerlink" title="基于表达你的选择符"></a>基于表达你的选择符</h3><blockquote>
<p><strong><code>:input</code></strong>：输入字段、文本区、选择列表和按钮元素<br><strong><code>:button</code></strong>：按钮元素或type属性值为button的输入元素<br><strong><code>:enabled</code></strong>：启用的表单元素<br><strong><code>:disabled</code></strong>：禁用的表单元素<br><strong><code>:checked</code></strong>：勾选的单选按钮或复选框<br><strong><code>:selected</code></strong>：选择的选项元素</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 可以选择所有选中的单选按钮（而不是复选框）</span></div><div class="line"> $(<span class="string">'input[type="radio"]:checked'</span>) ;</div></pre></td></tr></table></figure>
<h3 id="特殊选择器this"><a href="#特殊选择器this" class="headerlink" title="特殊选择器this"></a>特殊选择器this</h3><p>this是JavaScript中的关键字，指的是当前的上下文对象，简单的说就是方法/属性的所有者</p>
<p>下面例子中，imooc是一个对象，拥有name属性与getName方法,在getName中this指向了所属的对象imooc</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> imooc = &#123; </div><div class="line">    name:<span class="string">"慕课网"</span>, </div><div class="line">    getName:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">         <span class="comment">//this,就是imooc对象 </span></div><div class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.name;</div><div class="line">     &#125;</div><div class="line">  &#125;</div><div class="line">imooc.getName(); <span class="comment">//慕课网</span></div></pre></td></tr></table></figure>
<p>同样的在DOM中this就是指向了这个html元素对象，因为this就是DOM元素本身的一个引用假如给页面一个P元素绑定一个事件:</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">p.addEventListener(<span class="string">'click'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; </div><div class="line">    <span class="comment">//this === p </span></div><div class="line">    <span class="comment">//以下两者的修改都是等价的 </span></div><div class="line">    <span class="keyword">this</span>.style.color = <span class="string">"red"</span>; </div><div class="line">    p.style.color = <span class="string">"red"</span>; &#125;</div><div class="line">,<span class="literal">false</span>);</div></pre></td></tr></table></figure>
<p>通过<code>addEventListener</code>绑定的事件回调中，this指向的是当前的dom对象，所以再次修改这样对象的样式，只需要通过<code>this</code>获取到引用即可</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">this.style.color = &quot;red&quot;</div></pre></td></tr></table></figure>
<p>但是这样的操作其实还是很不方便的，这里面就要涉及一大堆的样式兼容，如果通过jQuery处理就会简单多了，我们只需要把this加工成jQuery对象换成jQuery的做法：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'p'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">         <span class="comment">//把p元素转化成jQuery的对象 </span></div><div class="line">         <span class="keyword">var</span> $<span class="keyword">this</span>= $(<span class="keyword">this</span>);</div><div class="line">        $<span class="keyword">this</span>.css(<span class="string">'color'</span>,<span class="string">'red'</span>) </div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<p>通过把<code>$()</code>方法传入当前的元素对象的引用this，把这个this加工成jQuery对象，我们就可以用jQuery提供的快捷方法直接处理样式了</p>
<p><strong>总体：</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">this，表示当前的上下文对象是一个html对象，可以调用html对象所拥有的属性和方法。</div><div class="line">$(this),代表的上下文对象是一个jquery的上下文对象，可以调用jQuery的方法和属性值。</div></pre></td></tr></table></figure>
<h2 id="jQuery-的属性与样式"><a href="#jQuery-的属性与样式" class="headerlink" title="jQuery 的属性与样式"></a>jQuery 的属性与样式</h2><h3 id="1-attr-与-removeAttr"><a href="#1-attr-与-removeAttr" class="headerlink" title="1.  .attr()与.removeAttr()"></a>1.  <code>.attr()</code>与<code>.removeAttr()</code></h3><p>操作特性的DOM方法主要有3个，<strong><code>getAttribute</code></strong>方法、<strong><code>setAttribute</code></strong>方法和<strong><code>removeAttribute</code></strong>方法。<br>在jQuery中用<strong><code>attr()</code></strong>与<strong><code>removeAttr()</code></strong></p>
<ul>
<li><code>attr(传入属性名)</code>：获取属性的值</li>
<li><code>attr(属性名, 属性值)</code>：设置属性的值</li>
<li><code>attr(属性名,函数值)</code>：设置属性的函数值</li>
<li><code>attr(attributes)</code>：给指定元素设置多个属性值，即：{属性名一: “属性值一” , 属性名二: “属性值二” , … … }</li>
<li><code>.removeAttr( attributeName )</code> : 为匹配的元素集合中的每个元素中移除一个属性（attribute）</li>
</ul>
<h3 id="2-html-和-text"><a href="#2-html-和-text" class="headerlink" title="2. html()和.text()"></a>2. <code>html()</code>和<code>.text()</code></h3><h4 id="html-方法"><a href="#html-方法" class="headerlink" title=".html()方法"></a><code>.html()</code>方法</h4><p>获取集合中第一个匹配元素的HTML内容 或 设置每一个匹配元素的html内容。</p>
<ul>
<li><code>.html()</code> 不传入值，就是获取集合中第一个匹配元素的HTML内容</li>
<li><code>.html( htmlString )</code>  设置每一个匹配元素的html内容</li>
<li><code>.html( function(index, oldhtml) )</code> 用来返回设置HTML内容的一个函数</li>
</ul>
<p><strong>注意:</strong><code>.html()</code>方法内部使用的是DOM的<code>innerHTML</code>属性来处理的，所以在设置与获取上需要注意的一个最重要的问题，这个操作是针对整个HTML内容（不仅仅只是文本内容）</p>
<h4 id="test-方法"><a href="#test-方法" class="headerlink" title=".test()方法"></a><code>.test()方法</code></h4><p>得到匹配元素集合中每个元素的文本内容结合，包括他们的后代，或设置匹配元素集合中每个元素的文本内容为指定的文本内容。</p>
<ul>
<li><code>.text()</code> 得到匹配元素集合中每个元素的合并文本，包括他们的后代。</li>
<li><code>.text( textString )</code> 用于设置匹配元素内容的文本。</li>
<li><code>.text( function(index, text) )</code>用来返回设置文本内容的一个函数</li>
</ul>
<p><strong>注意:</strong><code>.text()</code>结果返回一个字符串，包含所有匹配元素的合并文本。</p>
<h3 id="3-val-方法"><a href="#3-val-方法" class="headerlink" title="3. .val()方法"></a>3. <code>.val()</code>方法</h3><p>jQuery的<code>.val()</code>方法主要是用于处理表单元素的值，比如 <code>input</code>, <code>select</code> 和 <code>textarea</code>。</p>
<ul>
<li><code>val()</code>无参数，获取匹配的元素集合中第一个元素的当前值</li>
<li><code>.val( value )</code>，设置匹配的元素集合中每个元素的值</li>
<li><code>.val( function )</code> ，一个用来返回设置值的函数</li>
</ul>
<blockquote>
<p><strong><code>.html()</code>,<code>.text()</code>和<code>.val()</code>的差异总结：</strong>  </p>
</blockquote>
<p>1 <code>.html(),.text(),.val()</code>三种方法都是用来读取选定元素的内容；只不过<code>.html()</code>是用来读取元素的html内容（包括html标签）。<code>.text()</code>用来读取元素的纯文本内容，包括其后代元素。<code>.val()</code>是用来读取表单元素的”value”值。其中<code>.html()</code>和<code>.text()</code>方法不能使用在表单元素上,而<code>.val()</code>只能使用在表单元素上；另外<code>.html()</code>方法使用在多个元素上时，只读取第一个元素；<code>.val()</code>方法和<code>.html()</code>相同，如果其应用在多个元素上时，只能读取第一个表单元素的”value”值，但是<code>.text()</code>和他们不一样，如果<code>.text()</code>应用在多个元素上时，将会读取所有选中元素的文本内容。</p>
<p>2 <code>.html(htmlString)</code>,<code>.text(textString)</code>和<code>.val(value)</code>三种方法都是用来替换选中元素的内容，如果三个方法同时运用在多个元素上时，那么将会替换所有选中元素的内容。</p>
<p>3 <code>.html(),.text(),.val()</code>都可以使用回调函数的返回值来动态的改变多个元素的内容。</p>
<h3 id="4-addClass-和-removeClass-方法"><a href="#4-addClass-和-removeClass-方法" class="headerlink" title="4. .addClass()  和 .removeClass() 方法"></a>4. <code>.addClass()</code>  和 <code>.removeClass()</code> 方法</h3><p>1  <code>.addClass()</code> 通过动态改变类名（class），可以让其修改元素呈现出不同的效果。</p>
<ul>
<li><code>.addClass( className )</code> : 为每个匹配元素所要增加的一个或多个样式名</li>
<li><code>.addClass( function(index, currentClass) )</code>: 这个函数返回一个或更多用空格隔开的要增加的样式名</li>
</ul>
<p><strong>注意:</strong><code>.addClass()</code>方法不会删除原来样式类名。它只是添加一个样式类名到元素上。</p>
<p>2 <code>.removeClass()</code> 从匹配的元素中删除全部或者指定的class。</p>
<ul>
<li><code>removeClass( [className ] )</code>：每个匹配元素移除的一个或多个用空格隔开的样式名</li>
<li><code>.removeClass( function(index, class) )</code>： 一个函数，返回一个或多个将要被移除的样式名</li>
</ul>
<h3 id="5-toggleClass-方法"><a href="#5-toggleClass-方法" class="headerlink" title="5. .toggleClass() 方法"></a>5. <code>.toggleClass()</code> 方法</h3><p>在匹配的元素集合中的每个元素上添加或删除一个或多个样式类,取决于这个样式类是否存在或值切换属性。即：如果存在（不存在）就删除（添加）一个类。</p>
<ul>
<li><code>.toggleClass( className )</code>：在匹配的元素集合中的每个元素上用来切换的一个或多个（用空格隔开）样式类名</li>
<li><code>.toggleClass( className, switch )</code>：一个布尔值，用于判断样式是否应该被添加或移除</li>
<li><code>.toggleClass( [switch ] )</code>：一个用来判断样式类添加还是移除的 布尔值</li>
<li><code>.toggleClass( function(index, class, switch) [, switch ] )</code>：用来返回在匹配的元素集合中的每个元素上用来切换的样式类名的一个函数。接收元素的索引位置和元素旧的样式类作为参数。</li>
</ul>
<h3 id="6-css"><a href="#6-css" class="headerlink" title="6. .css()"></a>6. <code>.css()</code></h3><p>通过JavaScript获取dom元素上的style属性，我们可以动态的给元素赋予样式属性。<br><strong>获取：</strong></p>
<ol>
<li><code>.css( propertyName )</code>：获取匹配元素集合中的第一个元素的样式属性的计算值<br>2.<code>.css( propertyNames )</code>：传递一组数组，返回一个对象结果</li>
</ol>
<p><strong>设置：</strong></p>
<ol>
<li><code>.css(propertyName, value )</code>：设置CSS</li>
<li><code>.css( propertyName, function )</code>：可以传入一个回调函数，返回取到对应的值进行处理</li>
<li><code>.css( properties )</code>：可以传一个对象，同时设置多个样式</li>
</ol>
<h3 id="7-元素的数据存储"><a href="#7-元素的数据存储" class="headerlink" title="7. 元素的数据存储"></a>7. 元素的数据存储</h3><p>jQuery提供的存储接口</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">jQuery.data( element, key, value ) //静态接口,存数据 </div><div class="line">jQuery.data( element, key ) //静态接口,取数据 </div><div class="line">.data( key, value ) //实例接口,存数据 </div><div class="line">.data( key ) //实例接口,存数据</div></pre></td></tr></table></figure>
<p>2个方法在使用上存取都是通一个接口，传递元素，键值数据。在jQuery的官方文档中，建议用<code>.data()</code>方法来代替。</p>
<p>我们把DOM可以看作一个对象，那么我们往对象上是可以存在基本类型，引用类型的数据的，但是这里会引发一个问题，可能会存在<strong>循环引用的内存泄漏风险</strong></p>
<p>通过jQuery提供的数据接口，就很好的处理了这个问题了，我们不需要关心它底层是如何实现，只需要按照对应的data方法使用就行了</p>
<p>同样的也提供2个对应的删除接口，使用上与data方法其实是一致的，只不过是一个是增加一个是删除罢了</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">jQuery.removeData( element [, name ] ) </div><div class="line">.removeData( [name ] )</div></pre></td></tr></table></figure>
<h1 id="第三章-DOM篇"><a href="#第三章-DOM篇" class="headerlink" title="第三章 DOM篇"></a>第三章 DOM篇</h1><h2 id="1-DOM节点的创建"><a href="#1-DOM节点的创建" class="headerlink" title="1. DOM节点的创建"></a>1. DOM节点的创建</h2><h4 id="一些原生的方法"><a href="#一些原生的方法" class="headerlink" title="一些原生的方法"></a>一些原生的方法</h4><ul>
<li>创建元素：document.createElement</li>
<li>设置属性：setAttribute</li>
<li>添加文本：innerHTML</li>
<li>加入文档：appendChild</li>
</ul>
<h4 id="jQuery节点创建与属性的处理"><a href="#jQuery节点创建与属性的处理" class="headerlink" title="jQuery节点创建与属性的处理"></a>jQuery节点创建与属性的处理</h4><p> <code>$(&quot;html结构&quot;)</code></p>
<h2 id="2-DOM节点的插入"><a href="#2-DOM节点的插入" class="headerlink" title="2. DOM节点的插入"></a>2. DOM节点的插入</h2><h4 id="内部插入"><a href="#内部插入" class="headerlink" title="内部插入"></a>内部插入</h4><ul>
<li><code>append(content)</code>: 向每个匹配的元素内部追加内容。前面是被插入的对象，后面是要在对象内插入的元素内容</li>
<li><code>appendTo</code>: 前面是要插入的元素内容，而后面是被插入的对象。</li>
<li><code>prepend</code>: 向每个匹配的元素内部前置内容</li>
<li><code>prependTo</code>: 把所有匹配的元素前置到另一个制定的集合中。</li>
</ul>
<h4 id="外部插入"><a href="#外部插入" class="headerlink" title="外部插入"></a>外部插入</h4><ul>
<li><code>.after(content)</code>: 在匹配中的每个元素后面插入参数所制定的内容，作为其兄弟节点。内容作为参数。</li>
<li><code>.before(content)</code>: 根据参数设定，在匹配元素的前面插入内容。内容作为参数。</li>
<li><code>insertBefore</code>: 在目标元素前面插入集合中每个匹配的元素。内容在前面。</li>
<li><code>insertAfter</code>: 在目标元素后面插入集合中每个匹配的元素。内容在前面。<blockquote>
<p><strong>注意点：</strong><br>after向元素的后边添加html代码，如果元素后面有元素了，那将后面的元素后移，然后将html代码插入<br>before向元素的前边添加html代码，如果元素前面有元素了，那将前面的元素前移，然后将html代码插</p>
</blockquote>
</li>
</ul>
<h2 id="3-DOM节点的删除"><a href="#3-DOM节点的删除" class="headerlink" title="3. DOM节点的删除"></a>3. DOM节点的删除</h2><h4 id="empty"><a href="#empty" class="headerlink" title="empty()"></a><code>empty()</code></h4><p>移除 指定元素中的所有子节点。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hello"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 如果我们通过empty方法移除里面div的所有元素，它只是清空内部的html代码，但是标记仍然留在DOM中</span></div><div class="line"><span class="comment">// 通过empty处理</span></div><div class="line">$(<span class="string">'.hello'</span>).empty()</div></pre></td></tr></table></figure>
<p>结果：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>慕课网<span class="tag">&lt;/<span class="name">p</span>&gt;</span>被移除</div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hello"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>保留</div></pre></td></tr></table></figure></p>
<h4 id="remove"><a href="#remove" class="headerlink" title="remove"></a><code>remove</code></h4><p>将元素内部及自身一块移除。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 下面两个相同，删除包含3的p元素</span></div><div class="line">$(<span class="string">"p"</span>).remove(<span class="string">":contains('3')"</span>);</div><div class="line">$(<span class="string">"p"</span>).filter(<span class="string">":contains('3')"</span>).remove();</div></pre></td></tr></table></figure></p>
<h3 id="detach"><a href="#detach" class="headerlink" title="detach()"></a><code>detach()</code></h3><p>从当前页面中移除该元素，但保留这个元素的内存模型对象。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>P元素1，默认给绑定一个点击事件<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>P元素2，默认给绑定一个点击事件<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"bt1"</span>&gt;</span>点击删除 p 元素<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"bt2"</span>&gt;</span>点击移动 p 元素<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div></pre></td></tr></table></figure></p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'p'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">        alert(e.target.innerHTML)</div><div class="line">    &#125;)</div><div class="line">    <span class="keyword">var</span> p;</div><div class="line">    $(<span class="string">"#bt1"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span> (!$(<span class="string">"p"</span>).length) <span class="keyword">return</span>; <span class="comment">//去重</span></div><div class="line">        <span class="comment">//通过detach方法删除元素</span></div><div class="line">        <span class="comment">//只是页面不可见，但是这个节点还是保存在内存中</span></div><div class="line">        <span class="comment">//数据与事件都不会丢失</span></div><div class="line">        p = $(<span class="string">"p"</span>).detach()</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    $(<span class="string">"#bt2"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="comment">//把p元素在添加到页面中</span></div><div class="line">        <span class="comment">//事件还是存在</span></div><div class="line">        $(<span class="string">"body"</span>).append(p);</div><div class="line">    &#125;);</div></pre></td></tr></table></figure>
<h2 id="3-jQuery-的复制和替换"><a href="#3-jQuery-的复制和替换" class="headerlink" title="3. jQuery 的复制和替换"></a>3. jQuery 的复制和替换</h2><h3 id="clone"><a href="#clone" class="headerlink" title="clone()"></a><code>clone()</code></h3><ul>
<li><code>$(&quot;div&quot;).clone()</code> : 只克隆结构，事件丢失</li>
<li><code>$(&quot;div&quot;).clone(true)</code> : 结构、事件、数据都克隆<br>clone()方法时，在将它插入到文档之前，我们可以修改克隆后的元素或者元素内容<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">".aaron1"</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    $(<span class="string">".left"</span>).append( $(<span class="keyword">this</span>).clone().css(<span class="string">'color'</span>,<span class="string">'red'</span>) )</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="replaceWith-和replaceAll-和-replaceAll"><a href="#replaceWith-和replaceAll-和-replaceAll" class="headerlink" title="replaceWith()和replaceAll() 和 replaceAll()"></a><code>replaceWith()和replaceAll()</code> 和 <code>replaceAll()</code></h3><p>功能相同，主要是目标和源的位置区别。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"p:eq(1)"</span>).replaceWith(<span class="string">'&lt;a style="color:red"&gt;替换第二段的内容&lt;/a&gt;'</span>)</div><div class="line">$(<span class="string">'&lt;a style="color:red"&gt;替换第二段的内容&lt;/a&gt;'</span>).replaceAll(<span class="string">'p:eq(1)'</span>)</div></pre></td></tr></table></figure></p>
<h3 id="DOM包裹的方法"><a href="#DOM包裹的方法" class="headerlink" title="DOM包裹的方法"></a>DOM包裹的方法</h3><p><code>.wrap( wrappingElement )</code>：在集合中匹配的每个元素周围包裹一个HTML结构<br><code>unwrap()</code>: 将匹配元素集合的父级元素删除，保留自身（和兄弟元素，如果存在）在原来的位置。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 给p元素增加一个div包裹</span></div><div class="line">$(<span class="string">'p'</span>).wrap(<span class="string">'&lt;div&gt;&lt;/div&gt;'</span>)</div></pre></td></tr></table></figure></p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">最后的结构，p元素增加了一个父div的结构</div><div class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>p元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 也可以通过函数回调的方法</span></div><div class="line"> $(<span class="string">".aaron2"</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="comment">//找到所有p元素，删除父容器div</span></div><div class="line">    $(<span class="string">'a'</span>).unwrap(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="string">'&lt;div&gt;&lt;/div&gt;'</span>;</div><div class="line">    &#125;)</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<p><code>wrapAll()</code>:给集合中匹配的元素增加一个外面包裹HTML结构<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>p元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>p元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">给所有p元素增加一个div包裹</div><div class="line">$('p').wrapAll('<span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>')</div><div class="line">最后的结构，2个P元素都增加了一个父div的结构</div><div class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>p元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>p元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p><code>.wrapInner( wrappingElement )</code>：给集合中匹配的元素的内部，增加包裹的HTML结构<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>p元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>p元素<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">给所有p元素增加一个div包裹</div><div class="line">$('p').wrapInner('<span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>')</div><div class="line">最后的结构，匹配的p元素的内部元素被div给包裹了</div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>p元素<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>p元素<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h2 id="4-jQuery-遍历"><a href="#4-jQuery-遍历" class="headerlink" title="4. jQuery 遍历"></a>4. jQuery 遍历</h2><h3 id="children方法"><a href="#children方法" class="headerlink" title="children方法"></a><code>children</code>方法</h3><p><code>children(selector)</code>: 返回匹配元素集合中每个元素的所有子元素（仅儿子辈，这里可以理解为就是父亲-儿子的关系）<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">// 找到所有class=div的元素 ，找到其对应的子元素ul，然后筛选出最后一个，给边宽加上颜色。</span></div><div class="line">$(<span class="string">'.div'</span>).children(<span class="string">':last'</span>).css(<span class="string">'border'</span>, <span class="string">'3px solid blue'</span>)</div></pre></td></tr></table></figure></p>
<h3 id="find-方法"><a href="#find-方法" class="headerlink" title="find()方法"></a><code>find()</code>方法</h3><p><code>find()</code>: 快速查找DOM树中的这些元素的后代元素(所有后代关系)<br><strong>注意</strong>:</p>
<ul>
<li>find是遍历当前元素集合中每个元素的后代。只要符合，不管是儿子辈，孙子辈都可以。</li>
<li><code>.find()</code> 必需参数。如果需要实现对所有后代元素的取回，可以传递通配选择器 <code>*</code>。</li>
<li>find只在后代中遍历，不包括自己。</li>
<li>选择器 context 是由<code>.find()</code> 方法实现的；因此，<code>$(&#39;.item-ii&#39;).find(&#39;li&#39;)</code> 等价于 <code>$(&#39;li&#39;, &#39;.item-ii&#39;)</code>(找到类名为item-ii的标签下的li标签)。<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"> $(<span class="string">"li:last"</span>,<span class="string">".left"</span>).css(<span class="string">"border"</span>,<span class="string">"1px solid blue"</span>);     </div><div class="line"><span class="comment">// 等价于</span></div><div class="line">$(<span class="string">".left"</span>).find(<span class="string">"li:last"</span>).css(<span class="string">"border"</span>,<span class="string">"1px solid blue"</span>);</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="parent-和parents-方法"><a href="#parent-和parents-方法" class="headerlink" title="parent()和parents()方法"></a><code>parent()</code>和<code>parents()</code>方法</h3><p><code>parent()</code>: 查找合集里面的每一个元素的<strong>父元素</strong>（这里可以理解为就是父亲-儿子的关系）<br><code>parents()</code>: 查找合集里面的每一个元素的<strong>所有祖辈元素</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"> $(<span class="string">'.item-a'</span>).parent(<span class="string">':last'</span>).css(<span class="string">'border'</span>, <span class="string">'1px solid blue'</span>)</div><div class="line"> <span class="comment">//找到当前元素的所有祖辈元素,筛选出class="first-div"的元素</span></div><div class="line"><span class="comment">//并且附上一个边</span></div><div class="line">$(<span class="string">'.item-b'</span>).parents(<span class="string">'.first-div'</span>).css(<span class="string">'border'</span>, <span class="string">'2px solid blue'</span>)</div></pre></td></tr></table></figure></p>
<h3 id="closest-方法"><a href="#closest-方法" class="headerlink" title="closest()方法"></a><code>closest()</code>方法</h3><p><code>closest()</code>: 从元素本身开始，在DOM 树上逐级向上级元素匹配，并返回最先匹配的祖先元素<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'.item-1'</span>).closest(<span class="string">'.level-2'</span>).css(<span class="string">'border'</span>,<span class="string">'1px solid red'</span>);</div></pre></td></tr></table></figure></p>
<p><strong><code>parents()</code>和<code>.closest()</code>的不同</strong></p>
<ul>
<li>起始位置不同：<code>.closest</code>开始于当前元素，<code>.parents</code>开始于父元素</li>
<li>遍历的目标不同：<code>.closest</code>要找到指定的目标，<code>.parents</code>遍历到文档根元素，<code>closest</code>向上查找，直到找到一个匹配的就停止查找，<code>parents</code>一直查找到根元素，并将匹配的元素加入集合</li>
<li>结果不同：<code>.closest</code>返回的是包含零个或一个元素的jquery对象，<code>parents</code>返回的是包含零个或一个或多个元素的jquery对象<h3 id="next-方法"><a href="#next-方法" class="headerlink" title="next()方法"></a><code>next()</code>方法</h3><code>next()</code>: 快速查找指定元素集合中每一个元素紧邻的后面同辈元素的元素集合<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//找到所有class=item-3的li</span></div><div class="line"><span class="comment">//然后筛选出第一个li，加上蓝色的边</span></div><div class="line">$(<span class="string">'.item-2'</span>).next(<span class="string">':first'</span>).css(<span class="string">'border'</span>, <span class="string">'1px solid blue'</span>)</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="prev-方法"><a href="#prev-方法" class="headerlink" title="prev()方法"></a><code>prev()</code>方法</h3><p><code>prev</code>:查找指定元素集合中每一个元素紧邻的前面同辈元素的元素集合</p>
<h3 id="siblings-方法"><a href="#siblings-方法" class="headerlink" title="siblings()方法"></a><code>siblings()</code>方法</h3><p><code>siblings</code>: 快速查找指定元素集合中每一个元素的同辈元素</p>
<h3 id="add-方法"><a href="#add-方法" class="headerlink" title="add()方法"></a><code>add()</code>方法</h3><p><code>add</code>: 创建一个新的jQuery对象 ，元素添加到匹配的元素集合中<br><code>.add()</code>的参数可以几乎接受任何的$()，包括一个jQuery选择器表达式，DOM元素，或HTML片段引用。<br><code>$(&#39;li&#39;).add(&#39;p&#39;)</code>:遍历出<code>li</code>集合，再把<code>p</code>元素加到集合中。</p>
<h3 id="each-方法"><a href="#each-方法" class="headerlink" title="each()方法"></a><code>each()</code>方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">each是一个for循环的包装迭代器</div><div class="line">each通过回调的方式处理，并且会有2个固定的实参，索引与元素</div><div class="line">each回调方法中的this指向当前迭代的dom元素</div></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 开始迭代li，循环2次</span></div><div class="line">$(<span class="string">"li"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">index, element</span>) </span>&#123;</div><div class="line">     index 索引 <span class="number">0</span>,<span class="number">1</span></div><div class="line">     element是对应的li节点 li,li</div><div class="line">     <span class="keyword">this</span> 指向的是li</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"button:last"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="comment">//遍历所有的li</span></div><div class="line">    <span class="comment">//修改偶数li内的字体颜色</span></div><div class="line">    $(<span class="string">"li"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">index, element</span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span> (index % <span class="number">2</span>) &#123;</div><div class="line">            $(<span class="keyword">this</span>).css(<span class="string">'color'</span>,<span class="string">'blue'</span>)</div><div class="line">        &#125;</div><div class="line">    &#125;)</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> jQuery </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[jQuery ( 二 )]]></title>
      <url>http://chuanqiang.github.io/2016/10/30/jQuery-two/</url>
      <content type="html"><![CDATA[<p>介绍 jQuery 的基础知识，包括 jQuery 事件篇和 jQuery 动画篇。</p>
<hr>
<a id="more"></a>
<h1 id="第一章-事件篇"><a href="#第一章-事件篇" class="headerlink" title="第一章 事件篇"></a>第一章 事件篇</h1><h2 id="鼠标事件"><a href="#鼠标事件" class="headerlink" title="鼠标事件"></a>鼠标事件</h2><h3 id="1-click与dbclick事件"><a href="#1-click与dbclick事件" class="headerlink" title="1. click与dbclick事件"></a>1. click与dbclick事件</h3><p><code>click()</code>: 监听用户的单机操作<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"#test"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="comment">//this指向 div元素</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p><code>dbclick</code>: 监听用户的双击操作</p>
<h3 id="2-mousedown与mouseup"><a href="#2-mousedown与mouseup" class="headerlink" title="2. mousedown与mouseup"></a>2. mousedown与mouseup</h3><p>监听用户鼠标的按下和弹起。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"button:eq(0)"</span>).mousedown(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">        alert(<span class="string">'e.which: '</span> + e.which)</div><div class="line"> &#125;)</div></pre></td></tr></table></figure></p>
<p><strong> 用event 对象的which区别按键:</strong><br> 敲击鼠标左键which的值是1,敲击鼠标中键which的值是2,敲击鼠标右键which的值是3</p>
<h3 id="3-mousemove-事件"><a href="#3-mousemove-事件" class="headerlink" title="3. mousemove 事件"></a>3. mousemove 事件</h3><p>监听用户鼠标移动的操作<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"#test"</span>).mousemove(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="comment">//this指向 div元素 </span></div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<h3 id="4-mouseover-和-mouseout-事件"><a href="#4-mouseover-和-mouseout-事件" class="headerlink" title="4. mouseover 和 mouseout 事件"></a>4. mouseover 和 mouseout 事件</h3><p>移入和移除事件</p>
<h3 id="5-mouseenter与mouseleave事件"><a href="#5-mouseenter与mouseleave事件" class="headerlink" title="5. mouseenter与mouseleave事件"></a>5. mouseenter与mouseleave事件</h3><p>监听用户移动到内部的操作<br><strong>mouseenter事件和mouseover的区别</strong><br>关键点就是：冒泡的方式处理问题<br>mouseover为例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;div class=&quot;aaron2&quot;&gt; &lt;p&gt;鼠标离开此区域触发mouseleave事件&lt;/p&gt; &lt;/div&gt;</div></pre></td></tr></table></figure></p>
<p>如果在p元素与div元素都绑定mouseover事件，鼠标在离开p元素，但是没有离开div元素的时候，触发的结果:</p>
<ol>
<li>p元素响应事件</li>
<li>div元素响应事件<br>这里的问题是div为什么会被触发？ 原因就是事件冒泡的问题，p元素触发了mouseover，他会一直往上找父元素上的mouseover事件，如果父元素有mouseover事件就会被触发<br>所以在这种情况下面，jQuery推荐我们使用 mouseenter事件<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mouseenter事件只会在绑定它的元素上被调用，而不会在后代节点上被触发</div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="6-hover-事件"><a href="#6-hover-事件" class="headerlink" title="6. hover 事件"></a>6. hover 事件</h3><p>鼠标划入和划出触发不同事件，相当于<code>mouseover+mouseout</code>或者<code>mouseenter+mouseleave</code><br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(selector).hover(handlerIn, handlerOut)</div></pre></td></tr></table></figure></p>
<h3 id="7-focusin-和-focusout-事件"><a href="#7-focusin-和-focusout-事件" class="headerlink" title="7. focusin 和 focusout 事件"></a>7. focusin 和 focusout 事件</h3><p><code>focusin</code>: 获得焦点时动作<br><code>focusout</code>: 失去焦点时动作<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"#test"</span>).focusin(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="comment">//this指向 div元素</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<h3 id="8-blur-与-focus-事件"><a href="#8-blur-与-focus-事件" class="headerlink" title="8. blur 与 focus 事件"></a>8. blur 与 focus 事件</h3><p>用于处理表单焦点的事件，类似于 focusin 事件与 focusout 事件<br><strong>不同</strong>: <code>focus()</code>在元素本身产生，<code>focusin()</code>在元素包含的元素中产生</p>
<h3 id="9-change-事件"><a href="#9-change-事件" class="headerlink" title="9. change 事件"></a>9. change 事件</h3><p><code>&lt;input&gt;</code>元素，<code>&lt;textarea&gt;</code>和<code>&lt;select&gt;</code>元素的值发生变化时通过change事件去监听这些改变的动作<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'.target1'</span>).change(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">    $(<span class="string">"#result"</span>).html(e.target.value)</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<h3 id="10-select-事件"><a href="#10-select-事件" class="headerlink" title="10. select 事件"></a>10. select 事件</h3><p>当 textarea 或文本类型的 input 元素中的文本被选择时，会发生 select 事件。<br>select事件只能用于<code>&lt;input&gt;</code>元素与<code>&lt;textarea&gt;</code>元素。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"input"</span>).select(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    alert(e.target.value)</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<h3 id="11-submit事件"><a href="#11-submit事件" class="headerlink" title="11. submit事件"></a>11. submit事件</h3><p>form元素是有默认提交表单的行为，如果通过submit处理的话，需要禁止浏览器的这个默认行为。<br>传统的方式是调用事件对象<code>e.preventDefault()</code>来处理， jQuery中可以直接在函数中最后结尾<code>return false</code>即可。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"#target"</span>).submit(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123; </div><div class="line">   <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">//阻止默认行为，提交表单</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<h2 id="键盘事件"><a href="#键盘事件" class="headerlink" title="键盘事件"></a>键盘事件</h2><h3 id="1-keydown-与keyup"><a href="#1-keydown-与keyup" class="headerlink" title="1. keydown()与keyup()"></a>1. keydown()与keyup()</h3><p>键盘按下和松手时触发的动作</p>
<h3 id="2-keypress-事件"><a href="#2-keypress-事件" class="headerlink" title="2. keypress 事件"></a>2. keypress 事件</h3><p>keydown 时，每次获取的内容都是之前输入的，当前的额获取不了。<br><strong>keypress事件与keydown和keyup的主要区别</strong>:</p>
<ul>
<li>只能捕获单个字符，不能捕获组合键</li>
<li>无法响应系统功能键（如delete，backspace）</li>
<li>不区分小键盘和主键盘的数字字符</li>
</ul>
<h3 id="3-on-的多事件绑定"><a href="#3-on-的多事件绑定" class="headerlink" title="3. on 的多事件绑定"></a>3. on 的多事件绑定</h3><p>之前学的鼠标事件，表单事件与键盘事件都有个特点，就是直接给元素绑定一个处理函数，所有这类事件都是属于快捷处理。翻开源码其实可以看到，所有的快捷事件在底层的处理都是通过一个<code>on</code>方法来实现的。<code>jQuery on()</code>方法是官方推荐的绑定事件的一个方法。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"#elem"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;)  <span class="comment">//快捷方式</span></div><div class="line">$(<span class="string">"#elem"</span>).on(<span class="string">'click'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;) <span class="comment">//on方式</span></div></pre></td></tr></table></figure></p>
<p><strong>多个事件绑定同一个函数</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"#elem"</span>).on(<span class="string">"mouseover mouseout"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; &#125;);</div><div class="line"><span class="comment">// 通过空格分离，传递不同的事件名，可以同时绑定多个事件</span></div></pre></td></tr></table></figure></p>
<p><strong>多个事件绑定不同函数</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"#elem"</span>).on(&#123;</div><div class="line">    mouseover:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;,  </div><div class="line">    mouseout:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;,</div><div class="line">&#125;);</div><div class="line"><span class="comment">// 通过空格分离，传递不同的事件名，可以同时绑定多个事件，每一个事件执行自己的回调方法</span></div></pre></td></tr></table></figure></p>
<p><strong>将数据传递到处理程序</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">greet</span>(<span class="params"> event </span>) </span>&#123;</div><div class="line">  alert( <span class="string">"Hello "</span> + event.data.name ); <span class="comment">//Hello </span></div><div class="line">&#125;</div><div class="line">$( <span class="string">"button"</span> ).on( <span class="string">"click"</span>, &#123;<span class="attr">name</span>: <span class="string">"Tom"</span>&#125;, greet );</div><div class="line"><span class="comment">// 可以通过第二参数（对象），当一个事件被触发时，要传递给事件处理函数的</span></div></pre></td></tr></table></figure></p>
<p><strong>on 的事件委托机制</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.on( events ,[ selector ] ,[ data ], handler(eventObject) )</div></pre></td></tr></table></figure></p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//给body绑定一个click事件</span></div><div class="line">    <span class="comment">//没有直接a元素绑定点击事件</span></div><div class="line">    <span class="comment">//通过委托机制，点击a元素的时候，事件触发</span></div><div class="line">    $(<span class="string">'body'</span>).on(<span class="string">'click'</span>, <span class="string">'a'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">       alert(e.target.textContent)</div><div class="line">    &#125;)</div></pre></td></tr></table></figure>
<p>事件绑定在最上层div元素上，当用户触发在a元素上，事件将往上冒泡，一直会冒泡在div元素上。如果提供了第二参数，那么事件在往上冒泡的过程中遇到了选择器匹配的元素，将会触发事件回调函数。</p>
<h3 id="4-卸载事件off-方法"><a href="#4-卸载事件off-方法" class="headerlink" title="4. 卸载事件off()方法"></a>4. 卸载事件off()方法</h3><p>通过<code>.on()</code>绑定的事件处理程序；通过<code>off()</code>方法移除该绑定。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">绑定<span class="number">2</span>个事件</div><div class="line">$(<span class="string">"elem"</span>).on(<span class="string">"mousedown mouseup"</span>,fn)</div><div class="line">删除一个事件</div><div class="line">$(<span class="string">"elem"</span>).off(<span class="string">"mousedown"</span>)</div><div class="line">删除所有事件</div><div class="line">$(<span class="string">"elem"</span>).off(<span class="string">"mousedown mouseup"</span>)</div><div class="line">快捷方式删除所有事件，这里不需要传递事件名了，节点上绑定的所有事件讲全部销毁</div><div class="line">$(<span class="string">"elem"</span>).off()</div></pre></td></tr></table></figure></p>
<h2 id="jQuery-事件对象"><a href="#jQuery-事件对象" class="headerlink" title="jQuery 事件对象"></a>jQuery 事件对象</h2><h3 id="1-jQuery-事件对象的作用"><a href="#1-jQuery-事件对象的作用" class="headerlink" title="1. jQuery 事件对象的作用"></a>1. jQuery 事件对象的作用</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span>     </div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"even1"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>     </div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"even2"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>     </div><div class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"even2"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>    </div><div class="line">     ......... </div><div class="line"> <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<p>ul有N个子元素li(这里只写了3个)，如果我要响应每一个li的事件，那么常规的方法就是需要给所有的li都单独绑定一个事件监听，这样写法很符合逻辑，但是同时有显得繁琐。因为li都有一个共同的父元素，而且所有的事件都是一致的，这里我们可以采用要一个技巧来处理，也是常说的『事件委托』，绑定到父元素ul。触发li的时候把这个事件往上冒泡到ul上，因为ul上绑定事件响应所以就能够触发这个动作了。唯一的问题怎么才知道触发的li元素是哪个一个？</p>
<p>这里就引出了事件对象了:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">事件对象是用来记录一些事件发生时的相关信息的对象。事件对象只有事件发生时才会产生，并且只能是事件处理函数内部访问，在所有事件处理函数运行结束后，事件对象就被销毁</div></pre></td></tr></table></figure>
<p><strong>event.target</strong><br><code>event.target</code>代表当前触发事件的元素，可以通过当前元素对象的一系列属性来判断是不是我们想要的元素<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//多事件绑定一</span></div><div class="line">$(<span class="string">"ul"</span>).on(<span class="string">'click'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">   alert(<span class="string">'触发的元素是内容是: '</span> + e.target.textContent)</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<h3 id="2-jQuery事件的属性和方法"><a href="#2-jQuery事件的属性和方法" class="headerlink" title="2. jQuery事件的属性和方法"></a>2. jQuery事件的属性和方法</h3><p><strong>event.type：获取事件的类型</strong><br><strong>event.pageX 和 event.pageY：获取鼠标当前相对于页面的坐标</strong><br><strong>event.preventDefault() 方法：阻止默认行为</strong><br>这个用的特别多，在执行这个方法后，如果点击一个链接（a标签），浏览器不会跳转到新的 URL 去了。我们可以用 event.isDefaultPrevented() 来确定这个方法是否(在那个事件对象上)被调用过了。<br><strong>event.stopPropagation() 方法：阻止事件冒泡</strong><br><strong>event.which：获取在鼠标单击时，单击的是鼠标的哪个键</strong><br><code>event.which</code> 将 <code>event.keyCode</code> 和 <code>event.charCode</code> 标准化了。<code>event.which</code>也将正常化的按钮按下(mousedown 和 mouseupevents)，左键报告1，中间键报告2，右键报告3。<br><strong>event.currentTarget : 在事件冒泡过程中的当前DOM元素 </strong><br>冒泡前的当前触发事件的DOM对象, 等同于this.<br><strong>this和event.target的区别：</strong><br>js中事件是会冒泡的，所以this是可以变化的，但event.target不会变化，它永远是直接接受事件的目标DOM元素；<br><strong>.this和event.target都是dom对象</strong><br>如果要使用jquey中的方法可以将他们转换为jquery对象。比如this和$(this)的使用、event.target和$(event.target)的使用；</p>
<h2 id="自定义事件"><a href="#自定义事件" class="headerlink" title="自定义事件"></a>自定义事件</h2><h3 id="1-trigger-事件"><a href="#1-trigger-事件" class="headerlink" title="1. trigger 事件"></a>1. trigger 事件</h3><p>根据绑定到匹配元素的给定的事件类型执行所有的处理程序和行为。<br>trigger除了能够触发浏览器事件，同时还支持自定义事件，并且自定义时间还支持传递参数:<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#elem'</span>).on(<span class="string">'Aaron'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event,arg1,arg2</span>) </span>&#123;</div><div class="line">    alert(<span class="string">"自触自定义时间"</span>)</div><div class="line"> &#125;);</div><div class="line">$(<span class="string">'#elem'</span>).trigger(<span class="string">'Aaron'</span>,[<span class="string">'参数1'</span>,<span class="string">'参数2'</span>])</div></pre></td></tr></table></figure></p>
<p><strong>trigger触发浏览器事件与自定义事件区别？</strong></p>
<ul>
<li>自定义事件对象，是jQuery模拟原生实现的</li>
<li>自定义事件可以传递参数<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">&lt;body&gt;</div><div class="line">		&lt;h2&gt;自定义事件trigger&lt;<span class="regexp">/h2&gt;</span></div><div class="line"><span class="regexp">		&lt;div class="left"&gt;</span></div><div class="line"><span class="regexp">			&lt;div&gt;</span></div><div class="line"><span class="regexp">				&lt;span&gt;&lt;/</span>span&gt;</div><div class="line">				&lt;span&gt;<span class="number">0</span>&lt;<span class="regexp">/span&gt; 点击次数</span></div><div class="line"><span class="regexp">			&lt;/</span>div&gt;</div><div class="line">			&lt;button&gt;直接点击&lt;<span class="regexp">/button&gt;</span></div><div class="line"><span class="regexp">			&lt;button&gt;通过自定义点击&lt;/</span>button&gt;</div><div class="line">		&lt;<span class="regexp">/div&gt;</span></div><div class="line"><span class="regexp">		&lt;script type="text/</span>javascript<span class="string">"&gt;</span></div><div class="line"><span class="string">			//点击更新次数</span></div><div class="line"><span class="string">			$("</span>button:first<span class="string">").click(function(event, bottonName) &#123;</span></div><div class="line"><span class="string">				bottonName = bottonName || 'first';</span></div><div class="line"><span class="string">				update($("</span>span:first<span class="string">"), $("</span>span:last<span class="string">"), bottonName);</span></div><div class="line"><span class="string">			&#125;);</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">			//通过自定义事件调用，更新次数</span></div><div class="line"><span class="string">			$("</span>button:last<span class="string">").click(function() &#123;</span></div><div class="line"><span class="string">				$("</span>button:first<span class="string">").trigger('click', 'last');</span></div><div class="line"><span class="string">			&#125;);</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">			function update(first, last, bottonName) &#123;</span></div><div class="line"><span class="string">				first.text(bottonName);</span></div><div class="line"><span class="string">				var n = parseInt(last.text(), 10);</span></div><div class="line"><span class="string">				last.text(n + 1);</span></div><div class="line"><span class="string">			&#125;</span></div><div class="line"><span class="string">		&lt;/script&gt;</span></div><div class="line"><span class="string">	&lt;/body&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="2-triggerHandler-事件"><a href="#2-triggerHandler-事件" class="headerlink" title="2. triggerHandler 事件"></a>2. triggerHandler 事件</h3><p>尽管 <code>.trigger(</code>) 模拟事件对象，但是它并没有完美的复制自然发生的事件，若要触发通过 jQuery 绑定的事件处理函数，而不触发原生的事件，使用<code>.triggerHandler()</code> 来代替。</p>
<p>triggerHandler与trigger的用法是一样的，重点看不同之处：</p>
<ul>
<li>triggerHandler不会触发浏览器的默认行为，<code>.triggerHandler( &quot;submit&quot; )</code>将不会调用表单上的<code>.submit()</code></li>
<li><code>.trigger()</code> 会影响所有与 jQuery 对象相匹配的元素，而<code>.triggerHandler()</code>仅影响第一个匹配到的元素</li>
<li>使用 <code>.triggerHandler()</code>触发的事件，并不会在 DOM 树中向上冒泡。 如果它们不是由目标元素直接触发的，那么它就不会进行任何处理</li>
<li>与普通的方法返回 jQuery 对象(这样就能够使用链式用法)相反，<code>.triggerHandler()</code> 返回最后一个处理的事件的返回值。如果没有触发任何事件，会返回 <code>undefined</code><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">&lt;h2&gt;自定义事件triggerHandler&lt;<span class="regexp">/h2&gt;</span></div><div class="line"><span class="regexp">&lt;div class="left"&gt;</span></div><div class="line"><span class="regexp">    &lt;div id="accident"&gt;</span></div><div class="line"><span class="regexp">        &lt;a&gt;triggerHandler事件&lt;/</span>a&gt;</div><div class="line">        &lt;input type=<span class="string">"text"</span>&gt;</div><div class="line">    &lt;<span class="regexp">/div&gt;</span></div><div class="line"><span class="regexp">    &lt;button&gt;事件冒泡,触发浏览器默认聚焦行为&lt;/</span>button&gt;&lt;br&gt;&lt;br&gt;</div><div class="line">    &lt;button&gt;不会冒泡，不触发浏览器默认聚焦行为&lt;/button&gt;</div><div class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line">&lt;script type="text/javascript"&gt;</div><div class="line"></div><div class="line">    //给input绑定一个聚焦事件</div><div class="line">    $("input").on("focus",function(event,title) &#123;</div><div class="line">        $(this).val(title)</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    $("#accident").on("click",function() &#123;</div><div class="line">        alert("trigger触发的事件会在 DOM 树中向上冒泡");</div><div class="line">    &#125;);</div><div class="line">    //trigger触发focus</div><div class="line">    $("button:first").click(function() &#123;</div><div class="line">        $("a").trigger("click");</div><div class="line">        $("input").trigger("focus");</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    //triggerHandler触发focus</div><div class="line">    $("button:last").click(function() &#123;</div><div class="line">        $("a").triggerHandler("click");</div><div class="line">        $("input").triggerHandler("focus","没有触发默认聚焦事件");</div><div class="line">    &#125;);</div><div class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></div></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="第二章-动画篇"><a href="#第二章-动画篇" class="headerlink" title="第二章 动画篇"></a>第二章 动画篇</h1><h2 id="隐藏和显示"><a href="#隐藏和显示" class="headerlink" title="隐藏和显示"></a>隐藏和显示</h2><h3 id="1-hide方法"><a href="#1-hide方法" class="headerlink" title="1. hide方法"></a>1. hide方法</h3><p>让页面上的元素不可见，一般可以通过设置css的display为none属性。但是通过css直接修改是静态的布局，如果在代码执行的时候，一般是通过js控制元素的style属性，这里jQuery提供了一个快捷的方法.hide()来达到这个效果。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$elem.hide()</div><div class="line">提供参数</div><div class="line">.hide( options )</div><div class="line">这是一个动画设置的快捷方式,元素会执行<span class="number">200</span>/<span class="number">600</span>毫秒的动画后再隐藏</div><div class="line">.hide(<span class="string">"fast / slow"</span>)</div></pre></td></tr></table></figure></p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"#a2"</span>).hide(&#123;</div><div class="line">    duration: <span class="number">3000</span>,</div><div class="line">    complete: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        alert(<span class="string">'执行3000ms动画完毕'</span>)</div><div class="line">    &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<h3 id="2-show方法"><a href="#2-show方法" class="headerlink" title="2. show方法"></a>2. show方法</h3><p>css中有display:none属性，同时也有display:block，所以jQuery同样提供了与hide相反的show。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'elem'</span>).hide(<span class="number">3000</span>).show(<span class="number">3000</span>)</div></pre></td></tr></table></figure></p>
<ul>
<li>show与hide方法是修改的display属性，通过是visibility属性布局需要通过css方法单独设置</li>
<li>如果使用!important在你的样式中，比如<code>display: none !important</code>，如果你希望<code>.show()</code>方法正常工作，必须使用<code>.css(&#39;display&#39;, &#39;block !important&#39;)</code>重写样式</li>
<li>如果让show与hide成为一个动画，那么默认执行动画会改变元素的高度，高度，透明度。<h3 id="3-隐藏切换toggle方法"><a href="#3-隐藏切换toggle方法" class="headerlink" title="3. 隐藏切换toggle方法"></a>3. 隐藏切换toggle方法</h3>切换显示或隐藏匹配元素<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'elem'</span>).toggle(<span class="number">3000</span>);</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="4-下拉动画slideDown"><a href="#4-下拉动画slideDown" class="headerlink" title="4. 下拉动画slideDown"></a>4. 下拉动画slideDown</h3><p>用滑动动画显示一个匹配元素<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">.slideDown( [duration ] [, complete ] )</div><div class="line"><span class="comment">// 持续时间（duration）是以毫秒为单位的，数值越大，动画越慢</span></div><div class="line"><span class="comment">// 字符串 'fast' 和 'slow' 分别代表200和600毫秒的延时。默认使用400 毫秒的延时。</span></div><div class="line"></div><div class="line">$(<span class="string">"ele"</span>).slideDown(<span class="number">1000</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="comment">//等待动画执行1秒后,执行别的动作....</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<h3 id="5-上卷动画slideUp"><a href="#5-上卷动画slideUp" class="headerlink" title="5. 上卷动画slideUp"></a>5. 上卷动画slideUp</h3><p>用法同 <code>slideDown</code></p>
<h3 id="6-slideToggle"><a href="#6-slideToggle" class="headerlink" title="6. slideToggle"></a>6. slideToggle</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">slideToggle(<span class="string">"fast"</span>)  <span class="comment">// 200毫秒延迟</span></div><div class="line">slideToggle(<span class="string">"slow"</span>)   <span class="comment">// 600毫秒延迟</span></div></pre></td></tr></table></figure>
<h2 id="淡入淡出效果"><a href="#淡入淡出效果" class="headerlink" title="淡入淡出效果"></a>淡入淡出效果</h2><h3 id="1-fdeOut-和-fadeIn"><a href="#1-fdeOut-和-fadeIn" class="headerlink" title="1. fdeOut 和 fadeIn"></a>1. fdeOut 和 fadeIn</h3><p><code>fadeOut()</code>: 用于隐藏所有匹配的元素，并带有淡出的过渡动画效果.<br><code>fadeIn</code>: 淡入效果</p>
<h3 id="2-淡入淡出切换fadeToggle"><a href="#2-淡入淡出切换fadeToggle" class="headerlink" title="2. 淡入淡出切换fadeToggle"></a>2. 淡入淡出切换fadeToggle</h3><p><code>fadeToggle</code>切换<code>fadeOut</code>与<code>fadeIn</code>效果，所谓”切换”，即如果元素当前是可见的，则将其隐藏(淡出)；如果元素当前是隐藏的，则使其显示(淡入)。</p>
<h3 id="3-淡入效果fadeTo"><a href="#3-淡入效果fadeTo" class="headerlink" title="3. 淡入效果fadeTo"></a>3. 淡入效果fadeTo</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">.fadeTo( duration, opacity ,callback)</div><div class="line">duration:参数规定效果的时长.它可以取以下值:<span class="string">"slow"</span>,<span class="string">"fast"</span> 或毫秒</div><div class="line">opacity :不透明度(介于<span class="number">0</span>到<span class="number">1</span>之间)</div><div class="line">callback :函数完成后要执行的动作</div></pre></td></tr></table></figure>
<h3 id="4-toggle与slideToggle以及fadeToggle的比较"><a href="#4-toggle与slideToggle以及fadeToggle的比较" class="headerlink" title="4. toggle与slideToggle以及fadeToggle的比较"></a>4. toggle与slideToggle以及fadeToggle的比较</h3><p>操作元素的显示和隐藏可以有几种方法。<br>例如：</p>
<ul>
<li>改变样式display为none</li>
<li>设置位置高度为0</li>
<li><p>设置透明度为0<br><strong>toggle、sildeToggle以及fadeToggle的区别：</strong></p>
</li>
<li><p>toggle：切换显示与隐藏效果</p>
</li>
<li>sildeToggle：切换上下拉卷滚效果</li>
<li>fadeToggle：切换淡入淡出效果</li>
</ul>
<p>当然细节上还是有更多的不同点:</p>
<p><strong>toggle与slideToggle细节区别：</strong></p>
<ul>
<li>toggle：动态效果为从右至左。横向动作，toggle通过display来判断切换所有匹配元素的可见性</li>
<li>slideToggle：动态效果从下至上。竖向动作，slideToggle 通过高度变化来切换所有匹配元素的可见性</li>
</ul>
<p><strong>fadeToggle方法</strong></p>
<ul>
<li>fadeToggle() 方法在 fadeIn() 和 fadeOut() 方法之间切换。</li>
<li>元素是淡出显示的，fadeToggle() 会使用淡入效果显示它们。</li>
<li>元素是淡入显示的，fadeToggle() 会使用淡出效果显示它们。</li>
<li><strong>注释：</strong>隐藏的元素不会被完全显示（不再影响页面的布局）<h2 id="自定义动画"><a href="#自定义动画" class="headerlink" title="自定义动画"></a>自定义动画</h2><h3 id="1-animate"><a href="#1-animate" class="headerlink" title="1. animate"></a>1. animate</h3>精确的控制样式属性从而执行动画<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">.animate( properties ,[ duration ], [ easing ], [ complete ] )</div><div class="line">.animate( properties, options )</div><div class="line">properties:一个或多个css属性的键值对所构成的<span class="built_in">Object</span>对象。要特别注意所有用于动画的属性必须是数字的</div></pre></td></tr></table></figure>
</li>
</ul>
<p>特别注意单位，属性值的单位像素（px）,除非另有说明。单位em 和 %需要指定使用</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.animate(&#123; <span class="attr">left</span>: <span class="number">50</span>,   <span class="attr">width</span>: <span class="string">'50px'</span>   opacity: <span class="string">'show'</span>,   <span class="attr">fontSize</span>: <span class="string">"10em"</span>, &#125;, <span class="number">500</span>);</div></pre></td></tr></table></figure>
<p>除了定义数值，每个属性能使用’show’, ‘hide’, 和 ‘toggle’。这些快捷方式允许定制隐藏和显示动画用来控制元素的显示或隐藏</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.animate(&#123; <span class="attr">width</span>: <span class="string">"toggle"</span> &#125;);</div></pre></td></tr></table></figure>
<p>如果提供一个以+= 或 -=开始的值，那么目标值就是以这个属性的当前值加上或者减去给定的数字来计算的</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.animate(&#123;      <span class="attr">left</span>: <span class="string">'+=50px'</span> &#125;, <span class="string">"slow"</span>);</div></pre></td></tr></table></figure>
<p><strong>duration时间</strong></p>
<p>动画执行的时间，持续时间是以毫秒为单位的；值越大表示动画执行的越慢，不是越快。还可以提供’fast’ 和 ‘slow’字符串，分别表示持续时间为200 和 600毫秒。</p>
<p><strong>easing动画运动的算法</strong></p>
<p>jQuery库中默认调用 swing。如果需要其他的动画算法，请查找相关的插件</p>
<p><strong>complete回调</strong><br>动画完成时执行的函数，这个可以保证当前动画确定完成后发会触发、</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.animate( properties, options )</div></pre></td></tr></table></figure>
<p><strong>options参数</strong></p>
<ul>
<li>duration - 设置动画执行的时间</li>
<li>easing - 规定要使用的 easing 函数，过渡使用哪种缓动函数</li>
<li>step：规定每个动画的每一步完成之后要执行的函数</li>
<li>progress：每一次动画调用的时候会执行这个回调，就是一个进度的概念</li>
<li>complete：动画完成回调</li>
</ul>
<p>其中最关键的一点就是：</p>
<p><strong>如果多个元素执行动画，回调将在每个匹配的元素上执行一次，不是作为整个动画执行一次</strong></p>
<p>列出常用的方式：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#elem'</span>).animate(&#123;</div><div class="line">    width: <span class="string">'toggle'</span>,  </div><div class="line">    height: <span class="string">'toggle'</span></div><div class="line">  &#125;, &#123;</div><div class="line">    duration: <span class="number">5000</span>,</div><div class="line">    specialEasing: &#123;</div><div class="line">      width: <span class="string">'linear'</span>,</div><div class="line">      height: <span class="string">'easeOutBounce'</span></div><div class="line">    &#125;,</div><div class="line">    complete: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">      $(<span class="keyword">this</span>).after(<span class="string">'&lt;div&gt;Animation complete.&lt;/div&gt;'</span>);</div><div class="line">    &#125;</div><div class="line">  &#125;);</div></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"> &lt;select id=<span class="string">"animation"</span>&gt;</div><div class="line">        &lt;option value=<span class="string">"1"</span>&gt;动画step动画&lt;<span class="regexp">/option&gt;</span></div><div class="line"><span class="regexp">        &lt;option value="2"&gt;动画progress回调&lt;/</span>option&gt;</div><div class="line">&lt;<span class="regexp">/select&gt;</span></div><div class="line"><span class="regexp">    &lt;a&gt;&lt;/</span>a&gt;</div><div class="line">    &lt;input id=<span class="string">"exec"</span> type=<span class="string">"button"</span> value=<span class="string">"执行动画"</span>&gt;</div><div class="line">    &lt;script type=<span class="string">"text/javascript"</span>&gt;</div><div class="line">    $(<span class="string">"#exec"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> v = $(<span class="string">"#animation"</span>).val();</div><div class="line">        <span class="keyword">var</span> $aaron = $(<span class="string">"#aaron"</span>);</div><div class="line">        <span class="keyword">if</span> (v == <span class="string">"1"</span>) &#123;</div><div class="line">            <span class="comment">//观察每一次动画的改变</span></div><div class="line">            $aaron.animate(&#123;</div><div class="line">                height: <span class="string">'50'</span></div><div class="line">            &#125;, &#123;</div><div class="line">                duration :<span class="number">2000</span>,</div><div class="line">                <span class="comment">//每一个动画都会调用</span></div><div class="line">                step: <span class="function"><span class="keyword">function</span>(<span class="params">now, fx</span>) </span>&#123;</div><div class="line">                   $aaron.text(<span class="string">'高度的改变值:'</span>+now)</div><div class="line">                &#125;</div><div class="line">            &#125;)</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (v == <span class="string">"2"</span>) &#123;</div><div class="line">            <span class="comment">//观察每一次进度的变化</span></div><div class="line">            $aaron.animate(&#123;</div><div class="line">                height: <span class="string">'50'</span></div><div class="line">            &#125;, &#123;</div><div class="line">                duration :<span class="number">2000</span>,</div><div class="line">                <span class="comment">//每一步动画完成后调用的一个函数，</span></div><div class="line">                <span class="comment">//无论动画属性有多少，每个动画元素都执行单独的函数</span></div><div class="line">                progress: <span class="function"><span class="keyword">function</span>(<span class="params">now, fx</span>) </span>&#123;</div><div class="line">                   $aaron.text(<span class="string">'进度:'</span>+<span class="built_in">arguments</span>[<span class="number">1</span>])</div><div class="line">                    <span class="comment">// var data = fx.elem.id + ' ' + fx.prop + ': ' + now;</span></div><div class="line">                    <span class="comment">// alert(data)</span></div><div class="line">                &#125;</div><div class="line">            &#125;)</div><div class="line">        &#125; </div><div class="line">    &#125;);</div></pre></td></tr></table></figure>
<h3 id="2-停止动画stop"><a href="#2-停止动画stop" class="headerlink" title="2. 停止动画stop"></a>2. 停止动画stop</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">.stop( [clearQueue ], [ jumpToEnd ] )</div><div class="line">.stop( [queue ], [ clearQueue ] ,[ jumpToEnd ] )</div></pre></td></tr></table></figure>
<p>stop还有几个可选的参数，简单来说可以这3种情况</p>
<ul>
<li><code>.stop();</code> 停止当前动画，点击在暂停处继续开始</li>
<li><code>.stop(true);</code>如果同一元素调用多个动画方法，尚未被执行的动画被放置在元素的效果队列中。这些动画不会开始，直到第一个完成。当调用.stop()的时候，队列中的下一个动画立即开始。如果clearQueue参数提供true值,那么在队列中的动画其余被删除并永远不会运行</li>
<li><code>.stop(true,true);</code> 当前动画将停止，但该元素上的 CSS 属性会被立刻修改成动画的目标值<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"#aaron"</span>).animate(&#123;</div><div class="line">    height: <span class="number">300</span></div><div class="line">&#125;, <span class="number">5000</span>)</div><div class="line">$(<span class="string">"#aaron"</span>).animate(&#123;</div><div class="line">    width: <span class="number">300</span></div><div class="line">&#125;, <span class="number">5000</span>)</div><div class="line">$(<span class="string">"#aaron"</span>).animate(&#123;</div><div class="line">    opacity: <span class="number">0.6</span></div><div class="line">&#125;, <span class="number">2000</span>)</div></pre></td></tr></table></figure>
</li>
</ul>
<ol>
<li>stop()：只会停止第一个动画，第二个第三个继续</li>
<li>stop(true)：停止第一个、第二个和第三个动画</li>
<li>stop(true ture)：停止动画，直接跳到第一个动画的最终状态 <h2 id="jQuery-核心"><a href="#jQuery-核心" class="headerlink" title="jQuery 核心"></a>jQuery 核心</h2><h3 id="1-each方法的应用"><a href="#1-each方法的应用" class="headerlink" title="1. each方法的应用"></a>1. each方法的应用</h3></li>
</ol>
<p><strong>语法</strong></p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">jQuery.each(array, callback )</div><div class="line">jQuery.each( object, callback )</div></pre></td></tr></table></figure>
<p>第一个参数传递的就是一个对象或者数组，第二个是回调函数</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$.each([<span class="string">"Aaron"</span>, <span class="string">"Hello"</span>], <span class="function"><span class="keyword">function</span>(<span class="params">index, value</span>) </span>&#123; </div><div class="line">    <span class="comment">//index是索引,也就是数组的索引 </span></div><div class="line">    <span class="comment">//value就是数组中的值了</span></div><div class="line"> &#125;);</div></pre></td></tr></table></figure>
<p><code>jQuery.each()</code>函数还会根据每次调用函数callback的返回值来决定后续动作。如果返回值为false，则停止循环(相当于普通循环中的break)；如果返回其他任何值，均表示继续执行下一个循环。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$.each([<span class="string">"Aaron"</span>, <span class="string">"Hello"</span>], <span class="function"><span class="keyword">function</span>(<span class="params">index, value</span>) </span>&#123;</div><div class="line">     <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">//停止迭代 </span></div><div class="line"> &#125;);</div></pre></td></tr></table></figure>
<p>jQuery方法可以很方便的遍历一个数据，不需要考虑这个数据是对象还是数组。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"#exec"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> v = $(<span class="string">"#animation"</span>).val();</div><div class="line">        <span class="keyword">var</span> $aaron = $(<span class="string">"#aaron"</span>);</div><div class="line">        $aaron.empty();</div><div class="line">        <span class="keyword">if</span> (v == <span class="string">"1"</span>) &#123;</div><div class="line"></div><div class="line">            <span class="comment">// 遍历数组元素</span></div><div class="line">            $.each([<span class="string">'Aaron'</span>, <span class="string">'Hello'</span>,<span class="string">'aaa'</span>,<span class="string">'bbb'</span>], <span class="function"><span class="keyword">function</span>(<span class="params">i, item</span>) </span>&#123;</div><div class="line">                $aaron.append(<span class="string">"索引="</span> + i + <span class="string">"; 元素="</span> + item);</div><div class="line">            &#125;);</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (v == <span class="string">"2"</span>) &#123;</div><div class="line">            <span class="comment">// 遍历对象属性</span></div><div class="line">            $.each(&#123;</div><div class="line">                name: <span class="string">"张三"</span>,</div><div class="line">                age: <span class="number">18</span></div><div class="line">            &#125;, <span class="function"><span class="keyword">function</span>(<span class="params">property, value</span>) </span>&#123;</div><div class="line">                $aaron.append(<span class="string">"属性名="</span> + property + <span class="string">"; 属性值="</span> + value);</div><div class="line">            &#125;);</div><div class="line">        &#125; </div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<h3 id="2-查找数组中的索引-inArray"><a href="#2-查找数组中的索引-inArray" class="headerlink" title="2. 查找数组中的索引 inArray"></a>2. 查找数组中的索引 inArray</h3><p><code>jQuery.inArray()</code>函数用于在数组中搜索指定的值，并返回其索引值。如果数组中不存在该值，则返回 -1。<br><strong>语法：</strong></p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">jQuery.inArray( value, array ,[ fromIndex ] )</div></pre></td></tr></table></figure>
<p>用法非常简单，传递一个检测的目标值，然后传递原始的数组，可以通过fromIndex规定查找的起始值，默认数组是0开始</p>
<p>例如：在数组中查找值是5的索引</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$.inArray(5,[1,2,3,4,5,6,7]) //返回对应的索引：4</div></pre></td></tr></table></figure>
<p>注意：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">如果要判断数组中是否存在指定值，你需要通过该函数的返回值不等于(或大于)-1来进行判断</div></pre></td></tr></table></figure>
<h3 id="3-去空格神器trim方法"><a href="#3-去空格神器trim方法" class="headerlink" title="3. 去空格神器trim方法"></a>3. 去空格神器trim方法</h3><p>jQuery.trim()函数用于去除字符串<strong>两端</strong>的空白字符</p>
<h3 id="4-DOM元素的获取get方法"><a href="#4-DOM元素的获取get方法" class="headerlink" title="4. DOM元素的获取get方法"></a>4. DOM元素的获取get方法</h3><p>jQuery是一个合集对象，如果需要单独操作合集中的的某一个元素，可以通过<code>.get()</code>方法获取到</p>
<p>以下有3个a元素结构：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">a</span>&gt;</span>2<span class="tag">&lt;/<span class="name">a</span>&gt;</span> </div><div class="line"><span class="tag">&lt;<span class="name">a</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure>
<p>通过jQuery获取所有的a元素合集<code>$(&quot;a&quot;)</code>，如果想进一步在合集中找到第二2个dom元素单独处理，可以通过get方法</p>
<p><strong>语法：</strong></p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.get( [index ] )</div></pre></td></tr></table></figure>
<p><strong>注意2点</strong></p>
<ol>
<li>get方法是获取的dom对象，也就是通过<code>document.getElementById</code>获取的对象</li>
<li>get方法是从0开始索引</li>
</ol>
<p>所以第二个a元素的查找：<code>$(a).get(1)</code></p>
<p><strong>负索引值参数</strong></p>
<p>get方法还可以从后往前索引，传递一个负索引值，<strong>注意的负值的索引起始值是-1</strong></p>
<p>同样是找到第二元素，可以传递<code>$(a).get(-2)</code></p>
<h3 id="5-DOM元素的获取index方法"><a href="#5-DOM元素的获取index方法" class="headerlink" title="5. DOM元素的获取index方法"></a>5. DOM元素的获取index方法</h3><p><code>.index()</code>方法，从匹配的元素中搜索给定元素的索引值，从0开始计数。</p>
<p><strong>语法：参数接受一个jQuery或者dom对象作为查找的条件</strong></p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">.index()  <span class="comment">// 返回值时jQuery对象中第一个元素相对于它同辈元素的位置</span></div><div class="line">.index( selector )  <span class="comment">//  返回值时原生元素相对于选择器匹配的位置</span></div><div class="line">.index( element ) <span class="comment">// 返回值时传入的元素相对于原生集合的位置。如果找不到匹配的元素，则 .index() 返回 -1</span></div></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span>    </div><div class="line">     <span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>     </div><div class="line">     <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"test1"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span>     </div><div class="line">     <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"test2"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span>     </div><div class="line">     <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">"test3"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span> </div><div class="line"> <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div></pre></td></tr></table></figure>
<p><code>$(&quot;li&quot;).index()</code>没有传递参数，反正的结果是1，返回同辈的排列循序，第一个li之前有a元素,同辈元素是a开始为0，所以li的开始索引是1</p>
<p>如果要快速找到第二个li在列表中的索引,可以通过如下2种方式处理</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"li"</span>).index(<span class="built_in">document</span>.getElementById(<span class="string">"test2"</span>)) <span class="comment">//结果：1 </span></div><div class="line">$(<span class="string">"li"</span>).index($(<span class="string">"#test2"</span>)) <span class="comment">//结果:1</span></div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> jQuery </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[书摘：不分东西]]></title>
      <url>http://chuanqiang.github.io/2016/10/23/no-east-west/</url>
      <content type="html"><![CDATA[<p>当思维变成一场战斗，辩论变成了武器，能否停下来反省自问一下，是不是因为，偏见距离自己太近？ </p>
<a id="more"></a>
<hr>
<p>这本书叫做『不分东西』，我是想尝试告诉大家，偏见是不分地域、种族的，偏见来自于对资讯掌握的多少，以及使用怎样的思维模式。很多时候，带着良好的出发点、善良的用心，同样会产生偏见，因为正是先入为主的立场，阻碍了个人用开放的心态去获取更多的资讯，甚至会对那些和自己的观点不符的看法产生抗拒，严重的，会质疑提出这些观点的人的用心。 </p>
<p>即使是现在，用“左”和“右”标签别人的例子依旧很多，如果一个人被别人说成很“左”，言下之意可能是说这个人思想僵化，甚至有一点独裁。而最近在国内，又出现了很多关于“新左”和“新右”两大阵营的争论，不过说老实话，区分的标准到底是什么，我还没有搞清楚。社会主义的中国，不是在“左派”阵营里面吗？ </p>
<p>法西斯主义，两者的意识形态是截然不同的，但有一个共同点，就是都排斥民主。左右派也有各自的温和主义，接受民主，而自由主义则在左右两派里面都存在。至于左右派的不同，就是对于公平性的理解，左派不接受不公平的社会，而右派却认为不公平是理所当然的。 </p>
<p>一种是具有垄断性的看法，就是对公平的承诺，包括经济和资源分配上的。另外一种；其目标是为普通人寻求一个更大空间（larger)的生活。他觉得，现在左派的发展障碍是，提出的方案往往不是距离现实太远、显得乌托邦，就是太近、不能够被人们接受。他提出三种思路，包括寻找公共机构利益和理想利益的内部关系、寻找二元结构关系、寻找对应关系。他说，他还在思考和寻求之中。 </p>
<p>在现在的中国，自由意味着右，保守则代表了左。 </p>
<p>要让民众关心是非，而不是先确定立场，要为民众说清事实，而不是引领大家的好恶，这些不正是现在的知识分子，也包括现在的媒体的责任吗？ </p>
<p>只是，新媒体的时代来得太快，这些高层还没有习惯，新闻已经不是传统的新闻模式：要学习在网络上寻找新闻线索，要承认传统媒体在速度上远远落后于网络，要去尝试理解，怎样才是草根文化，才是受众真正有兴趣的内容。 </p>
<p><strong>局外人的眼光</strong> </p>
<p>当我们发现了这些问题的时候，我们需要有足够的勇气把这样的思考说出来，把我们认为的这个社会存在的不足说出来，把政府做得不够的地方说出来。而这样的勇气，或者说不是勇气，而是自然而然地去这样做，来自于一个人是否具有一种品格，那就是对生命的一种真诚。 </p>
<p>除了真诚，我想对于媒体人来说，还有一种品格叫做理性。因为这种理性，不会被外界喧嚣的声音影响自己的思维，从而以一颗纯净的心灵去尝试追寻真相。虽然，这样的理性，很多时候会两面不讨好，甚至会感觉到孤独，但是只要想深一层，当你的坚持，能够为大家带来更多的资讯、角度，而这些资讯和角度能够让人们减少偏见的话，那么这样的孤独，是如此的值得，如此的难得。 </p>
]]></content>
      
        <categories>
            
            <category> 书摘 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 媒体 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[罗永浩：生命不息，折腾不止]]></title>
      <url>http://chuanqiang.github.io/2016/10/22/smartisan-m1/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>从『天生骄傲』的T1到『以傲慢与偏执回敬傲慢与偏执』的T2再到『成熟稳重』的M1，老罗一路走来充满了宗教般的过激反应，但不可否认的是他总给我们带来惊喜。看似摇摇欲坠的锤子，却彪悍地挺到了现在。</p>
<a id="more"></a>
<p><img src="http://oeckzejn4.bkt.clouddn.com/blog/20161022-222201100.jpg" alt=""></p>
<h2 id="产品"><a href="#产品" class="headerlink" title="产品"></a>产品</h2><h4 id="外观"><a href="#外观" class="headerlink" title="外观"></a>外观</h4><p>失望。没错，对于目睹了T系列的惊艳之后，对于这个趋同于其他手机外形的M1，真的是有些失望，尤其是背部的处理，失去了之前抛光的硕大锤子 Logo ,使得手机的外形大打折扣。对于正面而言，和苹果相似，当然并不是说不漂亮，只不过少了特立独行的气质。不过也能理解老罗的无奈，之前的三颗实体按键无法加入当下手机必备的指纹识别功能，而更优的前置指纹只有像三星的椭圆形和像苹果的圆形设计。既然都是趋同，不如趋同于一个更好看的。正如老罗说『做得不一样是为了更好，而不是为了不一样』。当然，Smartisan M1 / M1L  还是有自己的独特之处的：</p>
<blockquote>
<p>加入了新材质、新工艺、新颜色：『白·哑光铝合金咖啡金·皮革白·镜面不锈钢』<br>『无断』的金属中框<br>充电线头加入亮光，方便夜晚充电<br>左侧键，内藏双卡双待</p>
</blockquote>
<p><img src="http://oeckzejn4.bkt.clouddn.com/blog/20161022-222308602.jpg" alt=""></p>
<h4 id="性能"><a href="#性能" class="headerlink" title="性能"></a>性能</h4><p>火力全开，当前顶配。先看配置</p>
<blockquote>
<p>5.15 英寸 1080P JDI 显示屏 / 5.7 英寸 2K 夏普显示屏；<br>骁龙 821 处理器（ 最高主频为 2.35GHz ），4GB 或 6GB RAM + 32GB 或 64GB ROM；<br>前置 400 万像素 + 后置 2300 万像素摄像头；<br>USB Type-C 接口，支持高通 QC 3.0 快充，电池容量分别为 3050 / 4080mAh；<br>双卡双待全网通（ 7 模 37 频 ），支持 VoLTE 和 2xCA 载波聚合；<br>全功能 NFC，即将支持银行卡和公交卡支付。</p>
</blockquote>
<p>配置超出了我的预期，之前的手机配置不足一直是备受诟病的一块，今年发布会前，对新品的配置也没抱太大希望，但看到这些参数还是很惊讶。<br>相较于以往罗永浩对于硬件配置参数的「 漫不经心 」，Smartisan M1 系列机型的态度却来了个 180 度的大转弯，最明显的表现是其在第一时间就用上了「 最顶尖的处理器 + 最大的运行内存 」组合。Smartisan M1 系列新机的主摄像头搭载 2300 万像素索尼 IMX318 传感器，F2.0 光圈，支持光学 / 电子防抖以及反差 / 激光 / PDAF 相位对焦，“ 最快 0.03 秒自动对焦 ”；前置 400 万像素摄像头的单个像素尺寸达到 2 微米，同为 F2.0 光圈，还支持多种美颜效果。Smartisan M1 系列新机均支持 HiFi 音质，拥有左右声道德州仪器 OPA1622 运放。值得注意的是，Smartisan M1L 还搭载 Cirrus Logic CS4398 定制 DAC。</p>
<p>正如发布会 PPT 上：『继功夫和颜值之后，肌肉也有了…』</p>
<h4 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h4><p>虽然外观上打了折扣，但操作系统让人充满了惊喜。不愧于『锤子科技的一小步，智能手机进化的一大步』。</p>
<p>主打效率，主要有两点非常大的创新：</p>
<blockquote>
<p><strong>One Step（一步）</strong><br>通过拖拽完成将信息发送至应用或联系人的动作，节省了在不同应用之间切换的诸多步骤，第一次打通了手持设备中应用间的边界。<br><strong>Big Bang（大爆炸）</strong><br>用拇指大面积按压屏幕中的文字，“Big Bang” 会将你按住的那一段落文字全部“炸”开。按照语义智能拆分成易于选取的独立的字和词，由你随心所欲地选择，并可直接搜索、分享和复制。开创性地解决了在手机屏幕上难于处理文字的弊端。</p>
</blockquote>
<p>进过近一年的努力和完善，Smartisan OS 3.0 已变得完备好用，并且一如既往的精致。『工匠精神』不是谈情怀，而是对于产品精益求精的打磨，从细致入微处才能领略一个产品所注入的心血和制作者的良苦用心。比如，秒表的音效，并不是廉价的音效文件，而是从德国花了几百欧买了昂贵的秒表，在录音棚里收了声。这些地方并不会成为消费者购买这个手机的因素，甚至几乎不会被察觉，但却是一个打动人心的产品所应当拥有的态度。</p>
<p><strong>工业设计像是一个人的容颜，美不胜收才会赏心悦目；配置像是一个人的能力，才华横溢才可事事功成；系统像是一个人的性格和气质，体贴入微才会夺得芳心。</strong></p>
<p>这三者却一不可，不能有严重的短板，windows 手机是因为系统，当初的 Smartisan T 系列缺少了配置。如今的 Smartisan M1 / M1L  虽然设计不如T系列，但由于锤子科技是设计驱动型公司的属性，外观来说也还在前列，加上如今已经补足的配置短板，无疑给锤子加分不少。</p>
<p>另外，在硬件配置上与其他品牌旗舰不相让下的同时，价格同样也具有了一定的竞争力，同时搭配Smartisan操作系统的便利，M1的性价比得以凸显，从某种意义上说，M1在吸引新用户和罗永浩粉丝尝试锤子产品无疑是向前迈了一大步。再加上罗永浩个人赋予并坚持的理想主义和设计感无疑是锤子最为独特之处。</p>
<p>从产品本身上看，M系列或许是『吹过很多牛逼，却做不好一部手机』的最有利的回击。可以预见到的是无论是粉与黑的争论，还是消费者是否买单，抑或是罗永浩的自我取舍，都不会杀死罗永浩，正如海明威所说：<strong>一个人可以被毁灭，但不会被打败。</strong></p>
<p>相信锤子这次会有佳绩。</p>
<h2 id="老罗"><a href="#老罗" class="headerlink" title="老罗"></a>老罗</h2><blockquote>
<p>一个试图改变世界的产品经理暂时谨慎的“收起”了自己的“不切实际”的雄心。</p>
</blockquote>
<p>当下看来，市场的现实总是无情，万丈的豪情依旧不能脱离产业实际，而这从老罗初入行业的桀骜不逊到如今的处处妥协便可见一斑。而这种妥协，虽然或许让老罗变为了自己也讨厌的样子，但是这是一个企业家必须要拥有的成熟。对于锤子产品而言，妥协也才是锤子科技在当下的一剂良药。</p>
<blockquote>
<p>我只是表皮比较敏感，你试着再捅我一百刀、两百刀、三百刀，你也捅不死我。</p>
</blockquote>
<p>跨界到科技行业做手机，其背后的艰辛显而易见。经常担心锤子公司的脆弱，罗永浩却彪悍的挺到了现在。从理想主义到如今对现实的妥协，是无奈也是成长。低头并不意味着屈服，成功才会获得自尊。</p>
<p>从某种意义上说，罗永浩的理想主义和与乔布斯殊途同归，罗永浩以理想主义坚持着商业，而《成为乔布斯》中乔布斯说：『我不想成为商人，因为我所有认识的商人中，没有一个是我想成为的那种人。』。他具备精力充沛的独裁者气质，但并不自命不凡；他以出色的演讲能力和煽动能力著称。罗永浩说，自己糟糕的身体虽疲惫不堪，心里总有一股火苗在蹿。他把对世界的独特看法当成真相，这给他希望，也给他焦虑，正因为它的存在，才激发了罗永浩全部的心力与生命力，对抗事业的艰难起伏。他付出的代价，则是失望、毅力和坚持。【来自GQ中国对他的评价】</p>
<p>老罗有些偏激，有些理想主义，但丝毫掩饰不住他的才华，你不能否认他是手机圈卓越的产品经理人，可以说老罗带给锤子的远比锤子给予老罗的要多得多。在不惑的年纪，他依旧践行着『生命不息，奋斗不止』的箴言。不论成功与否，这种看得见的努力和对科技圈带来的实实在在的『一大步』，应该得到我们的尊重和鼓励。</p>
<h2 id="后语"><a href="#后语" class="headerlink" title="后语"></a>后语</h2><p>他践行的更是对待人生不妨大胆大胆再大胆，反正你好歹要失去它。如果这世上真有奇迹，那只是努力的另一个名字。这听起来像一碗经典的鸡汤，但确实也很少有人像罗永浩这样，屡屡急转弯式的改写人生故事，永不停顿地把偶发的内心冲动变现成山呼海啸般的壮观经历，穿梭在地狱与星辰大海之间。</p>
<p>『如果一开始你没能成功，拿个更大的锤子』，这是老罗发布会上劝勉自己的话。希望会有个更大的锤子出现，但是在成功之后拿起。</p>
]]></content>
      
        <categories>
            
            <category> 产品 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 锤子 </tag>
            
            <tag> 老罗 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[『湄公河行动』：主旋律电影的逆袭]]></title>
      <url>http://chuanqiang.github.io/2016/10/16/meigonghe/</url>
      <content type="html"><![CDATA[<p>国庆档，通常是电影厮杀的时候。可今年的国庆，在烂片当道的众多电影中，杀出一匹黑马 —— 『湄公河行动』。作为一部主旋律电影，反而完成了逆袭，完胜其他几部商业片，获得了票房和口碑的双丰收。</p>
<a id="more"></a>
<p><img src="http://oeckzejn4.bkt.clouddn.com/blog/20161016-235613737.jpg" alt=""></p>
<p>『湄公河行动』影片灵感源于真实故事『湄公河大屠杀』——两艘中国商船在世界最大毒品加工区之一的湄公河金三角流域遭遇埋伏。13名船员遭枪击死亡，而在遇难船只上却发现90万粒冰毒。为彻查案件始末，中国政府迅速派出一支由队长高刚（张涵予 饰）率领的精英缉毒行动组进入金三角地带，发掘谋杀案背后的真相。茶园主，金三角地区情报员方新武（彭于晏 饰）也加入此次调查中。经调查发现，藏在中国商船的毒品实际是由臭名昭著的毒枭糯康手下随从一手策划的。中国、泰国、老挝及缅甸四国政府联手行动，意欲逮捕犯罪分子。</p>
<p>但追求正义的道路，总是充满荆棘的。于是便有了影片中跌宕起伏的剧情。</p>
<p>作为一个真实故事改变的电影，在南海纷争频发的时代背景下，又作为国庆的主旋律影片，首先电影出场的契合度非常好，可谓占据了天时。同时，这部影片由林超贤导演执导，加上张涵予、彭于晏两位实力派老戏骨，更是促成了影片的成功。整部电影的风格，气质生猛，场面火爆，没有一般主旋律电影的做作和生硬，不拖泥带水，节奏感极强，能快速抓住观众的情绪，让人快速入戏。 不过凡事都有两面型，过于多的火爆场面和打斗剧情，使得文戏有些空虚，刚猛却少些饱满。看到这部戏加上张涵予，就情不自禁的想到另一部他参演的另一部主旋律电影『智取威虎山』，这部影片源于样板戏，借鉴了样板戏的节奏和内核，摆脱了样板戏的束缚，再加上武侠的快意恩仇，可谓上品。『湄公河行动』与之相比，仍差了点味儿。</p>
<p>但『湄公河行动』仍为国产动作片中的佳作，导演也为之下足了功夫。筹备阶段，导演林超贤率剧组赴金三角地区搜集资料，与当地警察深度交流，对整个事件进行了详细了解 ；编剧团队还以纪录片的形式记录下了糯康庭审的全过程，并从一线干警身上截取了很多人物特征  。为呈现出最贴近真实的效果，在长达三年的后期筹备中，导演林超贤数次与公安部缉毒部门探讨案情，博纳影业派出的“采风小组”搜集了大量有关案件的真实数据和信息，整理出几十万字录音资料。（资料查自网络）</p>
<p>以往的主旋律电影也很多，但往往得不到满意的票房，这部影片相比较以往的主旋律电影，我认为有几个特点：</p>
<p><strong>人物性格塑造饱满</strong><br>以往的主旋律电影，主人公脸谱化，一出来戴着英雄主义光环。而『湄公河行动』中主人公个人形象生动饱满。片中高刚的倔和方新武的痞气和流氓化这些特点，对于人物刻画来说，起了很好的作用。剧中方新武因为女友因被吸毒犯害死，当了缉毒卧底，在湄公河案件中面对当年害死自己女友的凶手，方新武并没有所谓大义凛然的把凶手交给法律处理，而是快意恩仇的把他给杀了。这是一个很人性化的处理方式，如果导演设置剧情为把罪犯交给法律的话，那就显得有些做作，和人物的痞气不符，也缺乏了点人性。在这里，这种处理选择很生动的塑造了人物形象。</p>
<p><strong>价值观输出方式人性化</strong><br>影片没有直接向人民宣传吸毒的危害，而是通过缉毒警察侦破一起案件的方式，揭示了毒品的危害。当看到毒枭利用儿童作为达到目的的武器，看到毒品环绕中的儿童那种扭曲的价值观和疯狂的举动，看到在与毒枭战斗的过程中产生的流血和牺牲，心中不觉对毒品产生了很深的愤恨。有网友说：</p>
<blockquote>
<p>为了禁毒我们死了那么战士，而那些吸毒的却只关那么几天。。。</p>
</blockquote>
<p><strong>运用商业大片的运作方式</strong><br>好的内容和立意必须加上精彩的演绎方式才能获得成功。『湄公河行动』运用商业大片的方式，激烈的打斗，跌宕起伏的剧情，险象环生，枪击，爆炸无处不在。这些商业片的运作方式，使影片耳目一新，有了好莱坞大片的感觉。电影是一种艺术，但却离不开技术形式来表达。想说什么和如何说的漂亮是非常不同的境界。比如李安新片『半场无战事』运用当前世界上第一部采用「3D、4K、120 帧放映技术」的电影制作，体现了他对艺术精益求精的追求。其实艺术和技术是分不开的，而中国电影种恰恰对技术沉淀的不足。</p>
<blockquote>
<p>艺术挑战技术，技术启发艺术。</p>
</blockquote>
<p>『湄公河行动』是主旋律电影的逆袭，其实主旋律的东西永远不会过时，像爱国主义、正能量的东西。几千年前，古人们著书立传弘扬的精神文化，到今天仍是社会的主流价值观。既然主旋律的东西不过时，那如果我们与时俱进的让他人性化，让他丰满起来，用商业大片的方式来运作。那就不光是主旋律电影的逆袭了，而是它的春天。
　　</p>
]]></content>
      
        <categories>
            
            <category> 电影 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 影评 </tag>
            
            <tag> 湄公河行动 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[网约车细则的背后]]></title>
      <url>http://chuanqiang.github.io/2016/10/16/net-about-car/</url>
      <content type="html"><![CDATA[<p>最近关于网约车的管理办法相继出台，同时也引发了巨大的争议。本文就网约车现象揭示了背后的潜台词。当一个现象从经济考量上说不通的时候，那就只能从政治上揭示了。</p>
<a id="more"></a>
<hr>
<p><img src="http://oeckzejn4.bkt.clouddn.com/blog/20161016-113430717.jpeg" alt=""><br>从对市场积极创新到争取到合法地位，快递行业用了整整10年，支付宝用了8年，而这次历史给网约车的时间又将是多久？</p>
<p>京沪广深四个一线城市在同一天推出苛刻的网约车细则，除了广州以外，其余三个一线城市的细则都颇为苛刻，应该是事先早有约定。</p>
<p>明眼人都可以看出来，由交通运输部、工信部等7部委折腾几年搞出来的《网络预约出租汽车经营服务管理暂行办法》在2016年7月27日发布，自2016年11月1日起施行。也就是说，中央7部委发布的网约车管理办法，尚未实施就已经是形同虚设。</p>
<p><strong>且不说三市的细则与“共享经济”大势和中央鼓励提倡的互联网创业政策背道而驰，更不用说京沪两地要求网约车从业人员本地户口涉嫌到地域歧视和就业歧视，这本身就是对《中华人民共和国宪法》的公然嘲讽以及对《劳动合同法》赤裸裸的蔑视，即使从燃油车辆轴距达2700毫米以上和排量要求来看，这些细则看起来也极端不专业，这么大轴距和排量，又置节能减排于何地呢？</strong></p>
<p>综合来看，从经济上来说，京沪深三地细则是十分不经济的，甚至可以说是匪夷所思。如果这个细则真的实施，网约车这个行业实际上等于成了一个变相的出租车公司，面对传统的出租车公司，等于丧失了它的竞争力，这对于网约车几乎是个致命的打击，这也无怪乎滴滴打车迅速做出反应。</p>
<p>从经济上考量说不通，那就只能从政治上解释了。</p>
<p>我们先从“京人京牌”说起，这是一个很显然的保护当地人就业的政策。如果只是要求本地牌照，还是可以理解，毕竟北京、上海作为一线城市，如果不加以限制，会导致大量外地牌照的车辆涌入北京，造成城市拥堵，限制这一点是完全必要的。</p>
<p>争议点在“京人”。为什么必须是京人？时至今日，出租车行业已经成为一个低端服务业，北京上海的土著，其实有大量低水平就业者，分布在这种低端服务业中，类似的还有公交售票员，在今天公交完全可以人工投币，已经不需要售票员了，为什么还有售票员这种行业存在？就是为了保障本地人就业。</p>
<p>从事这些行业的几乎都是当地最懒最不思进取的人，北京的出租车司机和售票员是出名的低素质服务差，但是这些人仗着户口本优势，政府还是会优先保证他们就业。</p>
<p>因为这些人的饭碗关系到地方政府的政绩，他们实际已经成为一些既得利益者，地方政府宁愿牺牲经济也要保障他们，换言之，把外地人赶出京沪，京沪不会乱，把京沪土著赶出京沪，一定会乱，而任何地方政府都是把维稳看在第一位的。</p>
<p>中国古代有句话，叫『京民四品官』，说的是京城的普通居民等于朝廷四品大员，虽然夸张了，但实际就是在说首都的户籍优势，在今天，不仅仅限于首都人民，几个一线城市尤其上海，实际上户籍优势都是优于外地的。</p>
<p>很多人这两天拿网约车和上海葱油饼那位上海阿大无照经营的事件来看。认为政府就是要为难普通劳动者，就是要把一切管起来，其实恰恰相反，这么解读纯粹是缺乏政治头脑。</p>
<p>实际上这个上海阿大和本地出租车司机一样，也是既得利益者，他经营34年都不去办照，可以看到当地的工商城管等管理部门拿他根本没有办法，所以他才敢34年不去办照。这次是他上了BBC，在网上火了以后，地方行政管理部门不得不消除影响，实际上这个阿大不应该只是停业完事，还要同时按照新《食品安全法》，最少处以十倍的罚款，按照他的营业额看，光是今年就差不多有20万的利润，处以他最少200万元的罚款是没有问题的。实际呢，当地的市场管理部门根本就处罚不下来，一直在睁一只眼闭一只眼。这就是本地人的优势，如果换一个外地人，早都被查封，予以处罚，料想这位阿大过不多久，葱油饼店又会开起来。</p>
<p>所以你看，中国的任何法律最后执行起来都是讲政治的，连一个小小的葱油饼店都是如此。</p>
<p>带着政治眼光回去看网约车细则，就能看出更多门道。尤其是轴距和排量这一项，可以想见的是，这一条实际没有多大实行空间，尤其对于北京上海而言，因为地方政府既然限定了本地户籍，实际上，如果跟那位上海阿大一样，网约车已经成为一位本地居民唯一生活来源时，这一条根本无法执行，只能选择性执行。</p>
<p>我们看到，京沪深对网约车限定虽然整体更严，但只有广州对车辆的限定最严，广州细则对车辆的准入门槛要求最高，只有广州要求必须是一年之内新车，深圳的要求是两年，而京沪没有对车辆年限的要求。为何总体最宽松的广州对车辆要求最高？只要看看广州市的GDP构成就知道了，汽车行业是广州三大支柱产业之一，GDP占到四分之一强，贡献财政收入占到五分之一，汽车工业是广州的第一产业，这就是广州市政府限车的内在驱动力，限制新车，才会拉动广州的GDP。</p>
<p>那么广州为什么不限人呢？广州不同于其它三个城市，它是一个传统的贸易中心，现代商业和零售业对它也十分重要，网上有种说法，广州有30万黑人，10万穆斯林，其实这反映了广州的城市产业特征，在这样的一个城市，限制网约车的户籍就是限制城市的活力，地方政府但凡脑子清醒是绝对不会这么做的。</p>
<p>限车，是为了经济，不限人，也是为了经济。</p>
<p>同样，四大城市网约车各有各的严，也各有各自严的逻辑。</p>
<p>谈到这里我们稍微说远一点，中国有个很奇怪的现象，作为一个发展中国家，在中国却有200多个城市禁止摩托车，实际上，对于所有的发展中国家来说，摩托车都是居民重要的出行工具，台湾最繁华的台北和高雄，都是不禁摩的，总不能说中国大陆的城市都超过了台北高雄吧？为什么限摩禁摩，官方的统一口径是污染环境，拥堵和交通安全。</p>
<p>除了交通安全的理由之外，剩下的理由都是瞎扯，小排量小体积的摩托车怎么会比汽车更拥堵，更污染？</p>
<p>其实在官方眼里，不但摩托车更污染，东南大学的交通运输专家王炜教授甚至背书提出神论：“中国城市环境污染不是由汽车造成的，而是由自行车造成的。自行车的污染比汽车更大。”</p>
<p>中国禁摩最严重的就是广州，自1991年起，就不断禁摩，更有甚者，在2006年禁止电动自行车，那么为何如此？</p>
<p>但是这种话不会明着说，要说我为了交通安全，我为了治堵。</p>
<p>在中国的大中城市中，却有一个城市是不禁摩的，那就是重庆，重庆这个城市恰恰与广州相反，它的摩托车产业是重要产业，我们耳熟能详的嘉陵、力帆、建设、隆鑫、宗申等摩托车品牌都是重庆的，是中国摩托车制造的领头羊，对于地方政府而言，禁止摩托车没有任何动力。</p>
<p>禁摩这件事从开始发酵，到全国大范围实施，现在无论在公众还是专家嘴里，本能地认为摩托车该禁。</p>
<p>参照中国禁摩的历史，我们不难发现，中国的一线城市有巨大的示范作用，而地方的主政者，即使是三四线城市，也有建设“国际化都市”的雄心和政治动机，他们会无视经济和社会规律，盲目追随这些先发的城市。</p>
<p>有些官员的逻辑很简单，对一个新鲜事物，他们不是先去尝试，而是想我先禁了，最好让别人实验，我来跟进。</p>
<p>今天的网约车细则出台并不新鲜，这种倒行逆施不但不会自动退出历史舞台，反而会因为地方政府的颟顸和官僚机构扩大事权的本能，愈演愈烈，只要不断有城市跟进，就会成为既成事实，到时候中央政府也会觉得尾大不掉，公众也会如同禁摩一般，对网约车人人喊打，那时候就真成了，“佛狸祠下，一片神鸦社鼓”。</p>
<p>老司机开倒车开习惯了，车上的乘客也不头晕了。</p>
<hr>
<h2 id="关于网约车的的分析"><a href="#关于网约车的的分析" class="headerlink" title="关于网约车的的分析"></a>关于网约车的的分析</h2><p>在自由主义最盛行的时代，对出租车的管治也一直存在。<br>从上世纪三十年代开始，出租车行业在北美一直是受到政府管治的。管治的框架可被总结为 QQE 模式，即：质量（Quality）控制,包括对车和人的各方面条件做出的限定；数量（Quantity）控制，主要是对一个区域内允许存在的出租车数量进行限定；经济（Economic）控制，主要是对出租车计价、收费等方面进行严格规定。这一框架后来被其他很多国家所采用，是全世界范围内规范的出租车市场基本的管治框架。那么，为什么要进行这样的管治呢？这主要是因为出租车行业的本质决定了其有三个维度上的内在问题。</p>
<p>第一，“凭信商品” 问题。凭信商品是指那些只有在被消费后其质量才能被确定和评价的商品或服务。出租车服务正具有这样的特质。对于乘客而言，无法预判旅程的质量、舒适度、安全性以及费用。对于司机来说，提高服务质量或者降低价格的动力不足，因为这不会带来额外的收益，却会提高成本。在这样的情况下，任由其发展就会导致劣币驱逐良币的结果。</p>
<p>第二，“开放型市场” 问题，即这一市场很容易进入。出租车行业的入场成本很低，美国的经验表明，当不对一个区域内的出租车数量进行严格限定时，会有大量的新从业者迅速涌入这一市场，因为他们只需要一辆二手车即可入场。而出租车市场本就是局限在一个特定区域内的市场，供应的迅速增多面对的却是基本不变的需求。因此，每个司机每天能接到乘客的次数会迅速下降。为了维持收支，司机们就不得不大幅度提升每次运载的价格。最终会出现出租车数量和价格均提升的吊诡现象。</p>
<p>第三，“薄弱市场” 问题。这是指市场中卖方和买方都数量较低，使得双方的匹配效率不高，交易量不大。在一个城市的不同区域中，一辆出租车找到乘客，或者一个乘客找到出租车的机会是不同的。在这样情况下，出租车会日益聚集于机会高的区域而抛弃机会低的区域，最终导致某些区域大量空车闲置，而某些区域没有车愿意前往。</p>
<p>以上三个本质性问题，使得出租车行业必须处在严格管控体系下。这也是为什么即便是在自由主义最盛行的时代，对出租车的管治也一直存在。这种管治的根本逻辑是：一方面，政府抽离了出租车市场的部分市场属性，以政府定价、数量控制、资格审核、牌照发放等方式代替市场的功能；另一方面，作为回报，政府也保证某几家公司在一个区域内的垄断地位，保护他们不受外来者的竞争。然而，网约车的出现对这种逻辑的三根支柱带来了挑战。</p>
<h3 id="网约车带来的变化：旧问题三去其二"><a href="#网约车带来的变化：旧问题三去其二" class="headerlink" title="网约车带来的变化：旧问题三去其二"></a>网约车带来的变化：旧问题三去其二</h3><p>网约车的出现，消解了薄弱市场问题和凭信商品问题。对于薄弱市场问题，网约车让大量私家车的入场成本降至极低，从而迅速提高供应量。城市中极高的智能手机使用比例以及几乎免费的 APP 安装，激发了巨大的网约车使用需求。 乘客和司机对网约车市场的积极预估也进一步增加了他们加入这个市场的意愿。最关键的是，传统薄弱市场的厚化往往面临一个无法应对迅猛增长的交易量的问题，从而出现交易拥堵和停滞，但现代信息科技让它也得到了解决。并且，弹性的价格机制使得供应量和需求量都可以弹性变化，避免了资源的浪费。</p>
<p>对于凭信商品问题，司机和乘客的信用评分制度可以适当解决。此外，网约车软件与诸如谷歌地图等其他技术的结合，使得乘客对行程的距离、价格以及道路状况等也可以有较为准确的预估，从而进一步解决了消费者信息不足的问题。</p>
<p>因此，网约车的发展实际上解决了出租车行业的两个内在问题，从而弱化了对这一市场采用传统 QQE 管理框架的必要性。不过，开放型市场问题，或者说，市场进入资格的问题，还没有得到完全解决。这也是目前该领域内争议的核心。</p>
<p><strong>旧问题和新问题</strong></p>
<p>市场进入资格问题是三个旧问题中没有得到解决的一个。它也是目前北美地区关于网约车的热议问题，尤其是在数起 Uber 司机犯罪案发生之后。关于这一问题，政府声称传统的出租车司机审核机制更安全，但 Uber 也声称自己的审核同样安全而且更具开放型，还能弱化就业歧视。不管怎样，目前还没有一个可信的研究结果。尽管 Uber 司机的犯罪被热议，传统出租车司机的犯罪案也依然存在，只不过前者被视为 “Uber 司机”，而后者往往被视作个体。因此，研究者认为，目前最重要的是，我们应该客观比较一下 Uber 司机的整体犯罪率和传统出租车司机的整体犯罪率究竟孰高孰低，然后才能进一步探讨。不过，由于无法获得数据，这一问题还有待后来者研究。</p>
<p>如何管理网约车企业是新问题，也或许是更为重要的问题。我们上面所说的网约车带来的各种优势，还仅仅是理论上的。而就实际来说，有一个侵蚀这些优势的现象：不同网约车企业之间的惨烈竞争。总体而言，同一区域内不同企业的激烈竞争很可能导致对于信任度、供需弹性以及可持续性等方面的弱化。而更为严重的是，经过一段时间竞争后，各个企业很快会看清这样竞争的不利性，从而会出现两种结果：一是一家企业击败各方，垄断市场，从而解决竞争性的副面影响。二是若干家企业达成 “协议”，制定共同标准，不再竞争。然而，无论是哪种结果，企业都可能不会把消费者和司机的利益考虑进其中。怎样管治行业，解决诸如此类的问题，这是政府需要关注的。</p>
<p>总而言之，随着网约车的崛起，整个出租车行业的本质实际上已经发生了变化，其需要被管理的问题也相应出现了改变。用于解决传统问题的 QQE 框架很显然已经不再适用于当下的状况。以政府为代表的管理者们不应该把目光局限于数量控制、价格控制等传统方向，而应该根据新的行业特点来管治市场，维护公众的利益。</p>
<hr>
<p>来源：</p>
<ul>
<li>霍老爷的小木屋（ddz_233）</li>
<li><a href="http://app.s-reader.com/article/getInfo/3270828?l=674ea305e2b6485179dbafa098fc8475&amp;site_id=1793" target="_blank" rel="external">政见CNPolitics</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 网约车 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Java 编码风格指南]]></title>
      <url>http://chuanqiang.github.io/2016/10/15/java-style-guide/</url>
      <content type="html"><![CDATA[<p>一个统一的编程风格不但能够增强代码可读性，也可以避免许多低级问题。一个严格遵从编码规范的团队，代码无论出自多少人之手，都像一个人写的一样。本文转载自 小土刀 的<a href="http://wdxtub.com/2016/10/13/java-style-guide/" target="_blank" rel="external">博客</a>。</p>
<a id="more"></a>
<hr>
<p>这份文档是 Google Java 编程风格规范的完整定义。当且仅当一个 Java 源文件符合此文档中的规则， 我们才认为它符合 Google 的 Java 编程风格。</p>
<p>与其它的编程风格指南一样，这里所讨论的不仅仅是编码格式美不美观的问题， 同时也讨论一些约定及编码标准。然而，这份文档主要侧重于我们所普遍遵循的规则， 对于那些不是明确强制要求的，我们尽量避免提供意见。</p>
<h4 id="1-1-术语说明"><a href="#1-1-术语说明" class="headerlink" title="1.1 术语说明"></a>1.1 术语说明</h4><p>在本文档中，除非另有说明：</p>
<ol>
<li>术语 <code>class</code> 可表示一个普通类，枚举类，接口或是 <code>annotation</code> 类型(@interface)</li>
<li>术语 <code>comment</code> 只用来指代实现的注释(implementation comments)，我们不使用 <code>documentation comments</code> 一词，而是用 <code>Javadoc</code>。</li>
</ol>
<p>其他的术语说明会偶尔在后面的文档出现。</p>
<h4 id="1-2-指南说明"><a href="#1-2-指南说明" class="headerlink" title="1.2 指南说明"></a>1.2 指南说明</h4><p>本文档中的示例代码并不作为规范。也就是说，虽然示例代码是遵循 Google 编程风格，但并不意味着这是展现这些代码的唯一方式。 示例中的格式选择不应该被强制定为规则。</p>
<h2 id="源文件基础"><a href="#源文件基础" class="headerlink" title="源文件基础"></a>源文件基础</h2><h3 id="2-1-文件名"><a href="#2-1-文件名" class="headerlink" title="2.1 文件名"></a>2.1 文件名</h3><p>源文件以其最顶层的类名来命名，大小写敏感，文件扩展名为 <code>.java</code>。</p>
<h3 id="2-2-文件编码：UTF-8"><a href="#2-2-文件编码：UTF-8" class="headerlink" title="2.2 文件编码：UTF-8"></a>2.2 文件编码：UTF-8</h3><p>源文件编码格式为 <code>UTF-8</code>。</p>
<h3 id="2-3-特殊字符"><a href="#2-3-特殊字符" class="headerlink" title="2.3 特殊字符"></a>2.3 特殊字符</h3><h4 id="2-3-1-空白字符"><a href="#2-3-1-空白字符" class="headerlink" title="2.3.1 空白字符"></a>2.3.1 空白字符</h4><p>除了行结束符序列，ASCII 水平空格字符(0x20，即空格)是源文件中唯一允许出现的空白字符，这意味着：</p>
<ol>
<li>所有其它字符串中的空白字符都要进行转义。</li>
<li>制表符不用于缩进。</li>
</ol>
<h4 id="2-3-2-特殊转义序列"><a href="#2-3-2-特殊转义序列" class="headerlink" title="2.3.2 特殊转义序列"></a>2.3.2 特殊转义序列</h4><p>对于具有特殊转义序列的任何字符(<code>\b, \t, \n, \f, \r, &quot;, &#39;</code>及 <code>\</code>)，我们使用它的转义序列，而不是相应的八进制(比如 <code>\012</code>)或 Unicode(比如<code>\u000a</code>)转义。</p>
<h4 id="2-3-3-非ASCII字符"><a href="#2-3-3-非ASCII字符" class="headerlink" title="2.3.3 非ASCII字符"></a>2.3.3 非ASCII字符</h4><p>对于剩余的非 ASCII 字符，是使用实际的 Unicode 字符(比如 <code>∞</code>)，还是使用等价的 Unicode 转义符(比如 <code>\u221e</code>)，取决于哪个能让代码更易于阅读和理解。</p>
<blockquote>
<p>Tip: 在使用 Unicode 转义符或是一些实际的 Unicode 字符时，建议做些注释给出解释，这有助于别人阅读和理解。<br>例如：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">String unitAbbrev = &quot;μs&quot;; | 赞，即使没有注释也非常清晰</div><div class="line"></div><div class="line">String unitAbbrev = &quot;\u03bcs&quot;; // &quot;μs&quot; | 允许，但没有理由要这样做</div><div class="line"></div><div class="line">String unitAbbrev = &quot;\u03bcs&quot;; // Greek letter mu, &quot;s&quot; | 允许，但这样做显得笨拙还容易出错</div><div class="line"></div><div class="line">String unitAbbrev = &quot;\u03bcs&quot;; | 很糟，读者根本看不出这是什么</div><div class="line"></div><div class="line">return&apos;\ufeff&apos; + content; // byte order mark | Good，对于非打印字符，使用转义，并在必要时写上注释</div></pre></td></tr></table></figure>
<blockquote>
<p>Tip: 大胆去用非ASCII字符，如果真的有需要的话</p>
</blockquote>
<h2 id="源文件结构"><a href="#源文件结构" class="headerlink" title="源文件结构"></a>源文件结构</h2><p>一个源文件包含(按顺序地)：</p>
<ol>
<li>许可证或版权信息(如有需要)</li>
<li>package语句</li>
<li>import语句</li>
<li>一个顶级类(只有一个)</li>
</ol>
<p>以上每个部分之间用一个空行隔开。</p>
<h3 id="3-1-许可证或版权信息"><a href="#3-1-许可证或版权信息" class="headerlink" title="3.1 许可证或版权信息"></a>3.1 许可证或版权信息</h3><p>如果一个文件包含许可证或版权信息，那么它应当被放在文件最前面。</p>
<h3 id="3-2-package语句"><a href="#3-2-package语句" class="headerlink" title="3.2 package语句"></a>3.2 package语句</h3><p>package 语句不换行，列限制(4.4节)并不适用于 package 语句。(即 package 语句写在一行里)</p>
<h3 id="3-3-import语句"><a href="#3-3-import语句" class="headerlink" title="3.3 import语句"></a>3.3 import语句</h3><h4 id="3-3-1-import-不要使用通配符"><a href="#3-3-1-import-不要使用通配符" class="headerlink" title="3.3.1 import 不要使用通配符"></a>3.3.1 import 不要使用通配符</h4><p>即，不要出现类似这样的import语句：<code>import java.util.*;</code></p>
<h4 id="3-3-2-不要换行"><a href="#3-3-2-不要换行" class="headerlink" title="3.3.2 不要换行"></a>3.3.2 不要换行</h4><p>import 语句不换行，列限制(4.4节)并不适用于 import 语句。(每个 import 语句独立成行)</p>
<h4 id="3-3-3-顺序和间距"><a href="#3-3-3-顺序和间距" class="headerlink" title="3.3.3 顺序和间距"></a>3.3.3 顺序和间距</h4><p>import 语句可分为以下几组，按照这个顺序，每组由一个空行分隔：</p>
<ol>
<li>所有的静态导入独立成组</li>
<li>com.google imports(仅当这个源文件是在 com.google 包下)</li>
<li>第三方的包。每个顶级包为一组，字典序。例如：<code>android, com, junit, org, sun</code></li>
<li>java imports</li>
<li>javax imports</li>
</ol>
<p>组内不空行，按字典序排列。</p>
<h3 id="3-4-类声明"><a href="#3-4-类声明" class="headerlink" title="3.4 类声明"></a>3.4 类声明</h3><h4 id="3-4-1-只有一个顶级类声明"><a href="#3-4-1-只有一个顶级类声明" class="headerlink" title="3.4.1 只有一个顶级类声明"></a>3.4.1 只有一个顶级类声明</h4><p>每个顶级类都在一个与它同名的源文件中(当然，还包含 .java 后缀)。</p>
<p>例外：<code>package-info.java</code>，该文件中可没有 <code>package-info</code> 类。</p>
<h4 id="3-4-2-类成员顺序"><a href="#3-4-2-类成员顺序" class="headerlink" title="3.4.2 类成员顺序"></a>3.4.2 类成员顺序</h4><p>类的成员顺序对易学性有很大的影响，但这也不存在唯一的通用法则。不同的类对成员的排序可能是不同的。最重要的一点，每个类应该以某种逻辑去排序它的成员，维护者应该要能解释这种排序逻辑。比如，新的方法不能总是习惯性地添加到类的结尾，因为这样就是按时间顺序而非某种逻辑来排序的。</p>
<p><em>3.4.2.1 重载：永不分离</em></p>
<p>当一个类有多个构造函数，或是多个同名方法，这些函数/方法应该按顺序出现在一起，中间不要放进其它函数/方法。</p>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><p>术语说明：块状结构(block-like construct)指的是一个类，方法或构造函数的主体。需要注意的是，数组初始化中的初始值可被选择性地视为块状结构(4.8.3.1节)。</p>
<h3 id="4-1-大括号"><a href="#4-1-大括号" class="headerlink" title="4.1 大括号"></a>4.1 大括号</h3><h4 id="4-1-1-使用大括号-即使是可选的"><a href="#4-1-1-使用大括号-即使是可选的" class="headerlink" title="4.1.1 使用大括号(即使是可选的)"></a>4.1.1 使用大括号(即使是可选的)</h4><p>大括号与 <code>if, else, for, do, while</code> 语句一起使用，即使只有一条语句(或是空)，也应该把大括号写上。</p>
<h4 id="4-1-2-非空块：K-amp-R-风格"><a href="#4-1-2-非空块：K-amp-R-风格" class="headerlink" title="4.1.2 非空块：K &amp; R 风格"></a>4.1.2 非空块：K &amp; R 风格</h4><p>对于非空块和块状结构，大括号遵循 <code>Kernighan 和 Ritchie</code> 风格 (Egyptian brackets):</p>
<ul>
<li>左大括号前不换行</li>
<li>左大括号后换行</li>
<li>右大括号前换行</li>
<li>如果右大括号是一个语句、函数体或类的终止，则右大括号后换行; 否则不换行。例如，如果右大括号后面是else或逗号，则不换行。</li>
</ul>
<p>示例：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="function">returnnew <span class="title">MyClass</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line"><span class="meta">@Overridepublicvoidmethod</span>()&#123;</div><div class="line"></div><div class="line"><span class="keyword">if</span> (condition()) &#123;</div><div class="line"></div><div class="line"><span class="keyword">try</span> &#123;</div><div class="line"></div><div class="line">something();</div><div class="line"></div><div class="line">&#125; <span class="keyword">catch</span> (ProblemException e) &#123;</div><div class="line"></div><div class="line">recover();</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>4.8.1 节给出了enum类的一些例外。</p>
<h4 id="4-1-3-空块：可以用简洁版本"><a href="#4-1-3-空块：可以用简洁版本" class="headerlink" title="4.1.3 空块：可以用简洁版本"></a>4.1.3 空块：可以用简洁版本</h4><p>一个空的块状结构里什么也不包含，大括号可以简洁地写成 <code>{}</code>，不需要换行。例外：如果它是一个多块语句的一部分(if/else 或 try/catch/finally) ，即使大括号内没内容，右大括号也要换行。</p>
<p>示例：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">voiddoNothing()&#123;&#125;</div></pre></td></tr></table></figure>
<h3 id="4-2-块缩进：2个空格"><a href="#4-2-块缩进：2个空格" class="headerlink" title="4.2 块缩进：2个空格"></a>4.2 块缩进：2个空格</h3><p>每当开始一个新的块，缩进增加2个空格，当块结束时，缩进返回先前的缩进级别。缩进级别适用于代码和注释。(见4.1.2节中的代码示例)</p>
<h3 id="4-3-一行一个语句"><a href="#4-3-一行一个语句" class="headerlink" title="4.3 一行一个语句"></a>4.3 一行一个语句</h3><p>每个语句后要换行。</p>
<h3 id="4-4-列限制：80-或-100"><a href="#4-4-列限制：80-或-100" class="headerlink" title="4.4 列限制：80 或 100"></a>4.4 列限制：80 或 100</h3><p>一个项目可以选择一行 80 个字符或 100 个字符的列限制，除了下述例外，任何一行如果超过这个字符数限制，必须自动换行。</p>
<p>例外：</p>
<ol>
<li>不可能满足列限制的行(例如，Javadoc 中的一个长 URL，或是一个长的 JSNI 方法参考)。</li>
<li><code>package</code> 和 <code>import</code> 语句(见3.2节和3.3节)。</li>
<li>注释中那些可能被剪切并粘贴到 <code>shell</code> 中的命令行。</li>
</ol>
<h3 id="4-5-自动换行"><a href="#4-5-自动换行" class="headerlink" title="4.5 自动换行"></a>4.5 自动换行</h3><p>术语说明：一般情况下，一行长代码为了避免超出列限制(80 或 100 个字符)而被分为多行，我们称之为自动换行(line-wrapping)。</p>
<p>我们并没有全面，确定性的准则来决定在每一种情况下如何自动换行。很多时候，对于同一段代码会有好几种有效的自动换行方式。</p>
<blockquote>
<p>Tip: 提取方法或局部变量可以在不换行的情况下解决代码过长的问题(是合理缩短命名长度吧)</p>
</blockquote>
<h4 id="4-5-1-从哪里断开"><a href="#4-5-1-从哪里断开" class="headerlink" title="4.5.1 从哪里断开"></a>4.5.1 从哪里断开</h4><p>自动换行的基本准则是：更倾向于在更高的语法级别处断开。</p>
<ol>
<li>如果在非赋值运算符处断开，那么在该符号前断开(比如 +，它将位于下一行)。注意：这一点与 Google 其它语言的编程风格不同(如 C++ 和 JavaScript)。 这条规则也适用于以下“类运算符”符号：点分隔符(.)，类型界限中的 &amp;（<t extends="" foo="" &="" bar="">)，catch 块中的管道符号(catch (FooException | BarException e)</t></li>
<li>如果在赋值运算符处断开，通常的做法是在该符号后断开(比如 =，它与前面的内容留在同一行)。这条规则也适用于 foreach 语句中的分号。</li>
<li>方法名或构造函数名与左括号留在同一行。</li>
<li>逗号(,)与其前面的内容留在同一行。</li>
</ol>
<h4 id="4-5-2-自动换行时缩进至少-4个空格"><a href="#4-5-2-自动换行时缩进至少-4个空格" class="headerlink" title="4.5.2 自动换行时缩进至少+4个空格"></a>4.5.2 自动换行时缩进至少+4个空格</h4><p>自动换行时，第一行后的每一行至少比第一行多缩进 4 个空格(注意：制表符不用于缩进。见 2.3.1节)。</p>
<p>当存在连续自动换行时，缩进可能会多缩进不只 4 个空格(语法元素存在多级时)。一般而言，两个连续行使用相同的缩进当且仅当它们开始于同级语法元素。</p>
<p>第 4.6.3 水平对齐一节中指出，不鼓励使用可变数目的空格来对齐前面行的符号。</p>
<h3 id="4-6-空白"><a href="#4-6-空白" class="headerlink" title="4.6 空白"></a>4.6 空白</h3><h4 id="4-6-1-垂直空白"><a href="#4-6-1-垂直空白" class="headerlink" title="4.6.1 垂直空白"></a>4.6.1 垂直空白</h4><p>以下情况需要使用一个空行：</p>
<ol>
<li><p>类内连续的成员之间：字段，构造函数，方法，嵌套类，静态初始化块，实例初始化块。</p>
<ul>
<li>例外：两个连续字段之间的空行是可选的，用于字段的空行主要用来对字段进行逻辑分组。</li>
</ul>
</li>
<li><p>在函数体内，语句的逻辑分组间使用空行。</p>
</li>
<li>类内的第一个成员前或最后一个成员后的空行是可选的(既不鼓励也不反对这样做，视个人喜好而定)。</li>
<li>要满足本文档中其他节的空行要求(比如3.3节：import 语句)</li>
<li>多个连续的空行是允许的，但没有必要这样做(我们也不鼓励这样做)。</li>
</ol>
<h4 id="4-6-2-水平空白"><a href="#4-6-2-水平空白" class="headerlink" title="4.6.2 水平空白"></a>4.6.2 水平空白</h4><p>除了语言需求和其它规则，并且除了文字，注释和 Javadoc 用到单个空格，单个 ASCII 空格也出现在以下几个地方：</p>
<ol>
<li>分隔任何保留字与紧随其后的左括号(()(如 if, for, catch 等)。</li>
<li>分隔任何保留字与其前面的右大括号(})(如 else, catch)。</li>
<li><p>在任何左大括号前({)，两个例外：</p>
<ul>
<li>@SomeAnnotation({a, b})(不使用空格)。</li>
<li>String[][] x = foo;(括号间没有空格，见下面的Note)。</li>
</ul>
</li>
<li><p>在任何二元或三元运算符的两侧。这也适用于以下“类运算符”符号：</p>
<ul>
<li>类型界限中的 <code>&amp;(&lt;T extends Foo &amp; Bar&gt;)</code>。</li>
<li><code>catch</code> 块中的管道符号(catch (FooException | BarException e)。</li>
<li><code>foreach</code> 语句中的分号。</li>
</ul>
</li>
<li><p>在<code>,, :, ;</code> 及右括号())后</p>
</li>
<li>如果在一条语句后做注释，则双斜杠(//)两边都要空格。这里可以允许多个空格，但没有必要。</li>
<li>类型和变量之间：<code>List list</code>。</li>
<li>数组初始化中，大括号内的空格是可选的，即 <code>new int[] {5, 6}</code> 和 <code>new int[] { 5, 6 }</code> 都是可以的。</li>
</ol>
<blockquote>
<p>Note：这个规则并不要求或禁止一行的开关或结尾需要额外的空格，只对内部空格做要求。</p>
</blockquote>
<h4 id="4-6-3-水平对齐：不做要求"><a href="#4-6-3-水平对齐：不做要求" class="headerlink" title="4.6.3 水平对齐：不做要求"></a>4.6.3 水平对齐：不做要求</h4><p>术语说明：水平对齐指的是通过增加可变数量的空格来使某一行的字符与上一行的相应字符对齐。</p>
<p>这是允许的(而且在不少地方可以看到这样的代码)，但Google编程风格对此不做要求。即使对于已经使用水平对齐的代码，我们也不需要去保持这种风格。</p>
<p>以下示例先展示未对齐的代码，然后是对齐的代码：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> <span class="keyword">int</span> x; <span class="comment">// this is fine</span></div><div class="line"></div><div class="line"><span class="keyword">private</span> Color color; <span class="comment">// this too</span></div><div class="line"></div><div class="line"><span class="keyword">private</span> <span class="keyword">int</span> x;                <span class="comment">// permitted, but future edits</span></div><div class="line"></div><div class="line"><span class="keyword">private</span> Color color;          <span class="comment">// may leave it unaligned</span></div></pre></td></tr></table></figure>
<blockquote>
<p>Tip：对齐可增加代码可读性，但它为日后的维护带来问题。考虑未来某个时候，我们需要修改一堆对齐的代码中的一行。 这可能导致原本很漂亮的对齐代码变得错位。很可能它会提示你调整周围代码的空白来使这一堆代码重新水平对齐(比如程序员想保持这种水平对齐的风格)， 这就会让你做许多的无用功，增加了reviewer的工作并且可能导致更多的合并冲突。</p>
</blockquote>
<h3 id="4-7-用小括号来限定组：推荐"><a href="#4-7-用小括号来限定组：推荐" class="headerlink" title="4.7 用小括号来限定组：推荐"></a>4.7 用小括号来限定组：推荐</h3><p>除非作者和 reviewer 都认为去掉小括号也不会使代码被误解，或是去掉小括号能让代码更易于阅读，否则我们不应该去掉小括号。 我们没有理由假设读者能记住整个 Java 运算符优先级表。</p>
<h3 id="4-8-具体结构"><a href="#4-8-具体结构" class="headerlink" title="4.8 具体结构"></a>4.8 具体结构</h3><h4 id="4-8-1-枚举类"><a href="#4-8-1-枚举类" class="headerlink" title="4.8.1 枚举类"></a>4.8.1 枚举类</h4><p>枚举常量间用逗号隔开，换行可选。</p>
<p>没有方法和文档的枚举类可写成数组初始化的格式：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> <span class="keyword">enum</span> Suit &#123; CLUBS, HEARTS, SPADES, DIAMONDS &#125;</div></pre></td></tr></table></figure>
<p>由于枚举类也是一个类，因此所有适用于其它类的格式规则也适用于枚举类。</p>
<h4 id="4-8-2-变量声明"><a href="#4-8-2-变量声明" class="headerlink" title="4.8.2 变量声明"></a>4.8.2 变量声明</h4><p><em>4.8.2.1 每次只声明一个变量</em></p>
<p>不要使用组合声明，比如 <code>int a, b;</code>。</p>
<p><em>4.8.2.2 需要时才声明，并尽快进行初始化</em></p>
<p>不要在一个代码块的开头把局部变量一次性都声明了(这是 c 语言的做法)，而是在第一次需要使用它时才声明。 局部变量在声明时最好就进行初始化，或者声明后尽快进行初始化。</p>
<h4 id="4-8-3-数组"><a href="#4-8-3-数组" class="headerlink" title="4.8.3 数组"></a>4.8.3 数组</h4><p><em>4.8.3.1 数组初始化：可写成块状结构</em></p>
<p>数组初始化可以写成块状结构，比如，下面的写法都是OK的：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">newint[] &#123;</div><div class="line"></div><div class="line"><span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span></div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">newint[] &#123;</div><div class="line"></div><div class="line"><span class="number">0</span>,</div><div class="line"></div><div class="line"><span class="number">1</span>,</div><div class="line"></div><div class="line"><span class="number">2</span>,</div><div class="line"></div><div class="line"><span class="number">3</span></div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">newint[] &#123;</div><div class="line"></div><div class="line"><span class="number">0</span>, <span class="number">1</span>,</div><div class="line"></div><div class="line"><span class="number">2</span>, <span class="number">3</span></div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">newint[]&#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</div></pre></td></tr></table></figure>
<p><em>4.8.3.2 非C风格的数组声明</em></p>
<p>中括号是类型的一部分：<code>String[] args</code>， 而非 <code>String args[]</code>。</p>
<h4 id="4-8-4-switch-语句"><a href="#4-8-4-switch-语句" class="headerlink" title="4.8.4 switch 语句"></a>4.8.4 switch 语句</h4><p>术语说明：switch 块的大括号内是一个或多个语句组。每个语句组包含一个或多个 switch 标签(case FOO: 或 default:)，后面跟着一条或多条语句。</p>
<p><em>4.8.4.1 缩进</em></p>
<p>与其它块状结构一致，switch 块中的内容缩进为 2 个空格。</p>
<p>每个 switch 标签后新起一行，再缩进 2 个空格，写下一条或多条语句。</p>
<p><em>4.8.4.2 Fall-through：注释</em></p>
<p>在一个 switch 块内，每个语句组要么通过 <code>break, continue, return</code> 或抛出异常来终止，要么通过一条注释来说明程序将继续执行到下一个语句组， 任何能表达这个意思的注释都是 OK 的(典型的是用 // fall through)。这个特殊的注释并不需要在最后一个语句组(一般是 default)中出现。示例：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">switch</span> (input) &#123;</div><div class="line"></div><div class="line">case1:</div><div class="line"></div><div class="line">case2:</div><div class="line"></div><div class="line">prepareOneOrTwo();</div><div class="line"></div><div class="line"><span class="comment">// fall through</span></div><div class="line"></div><div class="line">case3:</div><div class="line"></div><div class="line">handleOneTwoOrThree();</div><div class="line"></div><div class="line"><span class="keyword">break</span>;</div><div class="line"></div><div class="line"><span class="keyword">default</span>:</div><div class="line"></div><div class="line">handleLargeNumber(input);</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><em>4.8.4.3 default的情况要写出来</em></p>
<p>每个 switch 语句都包含一个 default 语句组，即使它什么代码也不包含。</p>
<h4 id="4-8-5-注解-Annotations"><a href="#4-8-5-注解-Annotations" class="headerlink" title="4.8.5 注解(Annotations)"></a>4.8.5 注解(Annotations)</h4><p>注解紧跟在文档块后面，应用于类、方法和构造函数，一个注解独占一行。这些换行不属于自动换行(第4.5节，自动换行)，因此缩进级别不变。例如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line"></div><div class="line">@Nullable</div><div class="line"></div><div class="line">public String getNameIfPresent()&#123; ... &#125;</div></pre></td></tr></table></figure>
<p>例外：单个的注解可以和签名的第一行出现在同一行。例如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">@OverridepublicinthashCode()&#123; ... &#125;</div></pre></td></tr></table></figure>
<p>应用于字段的注解紧随文档块出现，应用于字段的多个注解允许与字段出现在同一行。例如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">@Partial@Mock DataLoader loader;</div></pre></td></tr></table></figure>
<p>参数和局部变量注解没有特定规则。</p>
<p><strong>4.8.6 注释</strong></p>
<p><em>4.8.6.1 块注释风格</em></p>
<p>块注释与其周围的代码在同一缩进级别。它们可以是 /<em> … </em>/ 风格，也可以是 // … 风格。对于多行的 /<em> … </em>/ 注释，后续行必须从 <em> 开始， 并且与前一行的 </em> 对齐。以下示例注释都是 OK 的。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">* This is // And so /* Or you can</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">* okay. // is this. * even do this. */</span></div><div class="line"></div><div class="line">*/</div></pre></td></tr></table></figure>
<p>注释不要封闭在由星号或其它字符绘制的框架里。</p>
<blockquote>
<p>Tip：在写多行注释时，如果你希望在必要时能重新换行(即注释像段落风格一样)，那么使用 /<em> … </em>/。<br><strong>4.8.7 Modifiers</strong></p>
</blockquote>
<p>类和成员的 modifiers 如果存在，则按 Java 语言规范中推荐的顺序出现。</p>
<p><code>public protected private abstract static final transient volatile synchronized native strictfp</code></p>
<h2 id="命名约定"><a href="#命名约定" class="headerlink" title="命名约定"></a>命名约定</h2><h3 id="5-1-对所有标识符都通用的规则"><a href="#5-1-对所有标识符都通用的规则" class="headerlink" title="5.1 对所有标识符都通用的规则"></a>5.1 对所有标识符都通用的规则</h3><p>标识符只能使用 ASCII 字母和数字，因此每个有效的标识符名称都能匹配正则表达式 \w+。</p>
<p>在 Google 其它编程语言风格中使用的特殊前缀或后缀，如 <code>name\_, mName, s\_name</code> 和 <code>kName</code>，在 Java 编程风格中都不再使用。</p>
<h3 id="5-2-标识符类型的规则"><a href="#5-2-标识符类型的规则" class="headerlink" title="5.2 标识符类型的规则"></a>5.2 标识符类型的规则</h3><h4 id="5-2-1-包名"><a href="#5-2-1-包名" class="headerlink" title="5.2.1 包名"></a>5.2.1 包名</h4><p>包名全部小写，连续的单词只是简单地连接起来，不使用下划线。</p>
<h4 id="5-2-2-类名"><a href="#5-2-2-类名" class="headerlink" title="5.2.2 类名"></a>5.2.2 类名</h4><p>类名都以 <code>UpperCamelCase</code> 风格编写。</p>
<p>类名通常是名词或名词短语，接口名称有时可能是形容词或形容词短语。现在还没有特定的规则或行之有效的约定来命名注解类型。</p>
<p>测试类的命名以它要测试的类的名称开始，以 Test 结束。例如，HashTest<code>或</code>HashIntegrationTest`。</p>
<h4 id="5-2-3-方法名"><a href="#5-2-3-方法名" class="headerlink" title="5.2.3 方法名"></a>5.2.3 方法名</h4><p>方法名都以 <code>lowerCamelCase</code> 风格编写。</p>
<p>方法名通常是动词或动词短语。</p>
<p>下划线可能出现在 JUnit 测试方法名称中用以分隔名称的逻辑组件。一个典型的模式是：<code>test&lt;MethodUnderTest&gt;\_&lt;state&gt;</code>，例如 <code>testPop\_emptyStack</code>。 并不存在唯一正确的方式来命名测试方法。</p>
<h4 id="5-2-4-常量名"><a href="#5-2-4-常量名" class="headerlink" title="5.2.4 常量名"></a>5.2.4 常量名</h4><p>常量名命名模式为   <code>CONSTANT\_CASE</code>，全部字母大写，用下划线分隔单词。那，到底什么算是一个常量？</p>
<p>每个常量都是一个静态 <code>final</code> 字段，但不是所有静态 final 字段都是常量。在决定一个字段是否是一个常量时， 考虑它是否真的感觉像是一个常量。例如，如果任何一个该实例的观测状态是可变的，则它几乎肯定不会是一个常量。 只是永远不打算改变对象一般是不够的，它要真的一直不变才能将它示为常量。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Constants</span></div><div class="line"></div><div class="line">staticfinalint NUMBER = <span class="number">5</span>;</div><div class="line"></div><div class="line">staticfinal ImmutableList&lt;String&gt; NAMES = ImmutableList.of(<span class="string">"Ed"</span>, <span class="string">"Ann"</span>);</div><div class="line"></div><div class="line">staticfinal Joiner COMMA_JOINER = Joiner.on(<span class="string">','</span>); <span class="comment">// because Joiner is immutable</span></div><div class="line"></div><div class="line">staticfinal SomeMutableType[] EMPTY_ARRAY = &#123;&#125;;</div><div class="line"></div><div class="line"><span class="keyword">enum</span> SomeEnum &#123; ENUM_CONSTANT &#125;</div><div class="line"></div><div class="line"><span class="comment">// Not constants</span></div><div class="line"></div><div class="line"><span class="keyword">static</span> String nonFinal = <span class="string">"non-final"</span>;</div><div class="line"></div><div class="line"><span class="keyword">final</span> String nonStatic = <span class="string">"non-static"</span>;</div><div class="line"></div><div class="line">staticfinal Set&lt;String&gt; mutableCollection = <span class="keyword">new</span> HashSet&lt;String&gt;();</div><div class="line"></div><div class="line">staticfinal ImmutableSet&lt;SomeMutableType&gt; mutableElements = ImmutableSet.of(mutable);</div><div class="line"></div><div class="line">staticfinal Logger logger = Logger.getLogger(MyClass.getName());</div><div class="line"></div><div class="line">staticfinal String[] nonEmptyArray = &#123;<span class="string">"these"</span>, <span class="string">"can"</span>, <span class="string">"change"</span>&#125;;</div></pre></td></tr></table></figure>
<p>这些名字通常是名词或名词短语。</p>
<h4 id="5-2-5-非常量字段名"><a href="#5-2-5-非常量字段名" class="headerlink" title="5.2.5 非常量字段名"></a>5.2.5 非常量字段名</h4><p>非常量字段名以 <code>lowerCamelCase</code> 风格编写。</p>
<p>这些名字通常是名词或名词短语。</p>
<h4 id="5-2-6-参数名"><a href="#5-2-6-参数名" class="headerlink" title="5.2.6 参数名"></a>5.2.6 参数名</h4><p>参数名以 <code>lowerCamelCase</code> 风格编写。</p>
<p>参数应该避免用单个字符命名。</p>
<h4 id="5-2-7-局部变量名"><a href="#5-2-7-局部变量名" class="headerlink" title="5.2.7 局部变量名"></a>5.2.7 局部变量名</h4><p>局部变量名以 <code>lowerCamelCase</code> 风格编写，比起其它类型的名称，局部变量名可以有更为宽松的缩写。</p>
<p>虽然缩写更宽松，但还是要避免用单字符进行命名，除了临时变量和循环变量。</p>
<p>即使局部变量是 <code>final</code> 和不可改变的，也不应该把它示为常量，自然也不能用常量的规则去命名它。</p>
<h4 id="5-2-8-类型变量名"><a href="#5-2-8-类型变量名" class="headerlink" title="5.2.8 类型变量名"></a>5.2.8 类型变量名</h4><p>类型变量可用以下两种风格之一进行命名：</p>
<ul>
<li>单个的大写字母，后面可以跟一个数字(如：E, T, X, T2)。</li>
<li>以类命名方式(5.2.2节)，后面加个大写的T(如：RequestT, FooBarT)。</li>
</ul>
<h3 id="5-3-驼峰式命名法-CamelCase"><a href="#5-3-驼峰式命名法-CamelCase" class="headerlink" title="5.3 驼峰式命名法(CamelCase)"></a>5.3 驼峰式命名法(CamelCase)</h3><p>驼峰式命名法分大驼峰式命名法(UpperCamelCase)和小驼峰式命名法(lowerCamelCase)。有时，我们有不只一种合理的方式将一个英语词组转换成驼峰形式，如缩略语或不寻常的结构(例如 IPv6 或 iOS)。Google 指定了以下的转换方案。</p>
<p>名字从散文形式(prose form)开始:</p>
<ol>
<li>把短语转换为纯 ASCII 码，并且移除任何单引号。例如：Müller’s algorithm 将变成 Muellers algorithm。</li>
<li><p>把这个结果切分成单词，在空格或其它标点符号(通常是连字符)处分割开。</p>
<ul>
<li>推荐：如果某个单词已经有了常用的驼峰表示形式，按它的组成将它分割开(如AdWords 将分割成 ad words)。 需要注意的是 iOS 并不是一个真正的驼峰表示形式，因此该推荐对它并不适用。</li>
</ul>
</li>
<li><p>现在将所有字母都小写(包括缩写)，然后将单词的第一个字母大写：</p>
<ul>
<li>每个单词的第一个字母都大写，来得到大驼峰式命名。</li>
<li>除了第一个单词，每个单词的第一个字母都大写，来得到小驼峰式命名。</li>
</ul>
</li>
<li><p>最后将所有的单词连接起来得到一个标识符。</p>
</li>
</ol>
<p>示例：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">Prose form Correct Incorrect</div><div class="line"></div><div class="line">------------------------------------------------------------------</div><div class="line"></div><div class="line"><span class="string">"XML HTTP request"</span> XmlHttpRequest XMLHTTPRequest</div><div class="line"></div><div class="line"><span class="string">"new customer ID"</span> newCustomerId newCustomerID</div><div class="line"></div><div class="line"><span class="string">"inner stopwatch"</span> innerStopwatch innerStopWatch</div><div class="line"></div><div class="line"><span class="string">"supports IPv6 on iOS?"</span> supportsIpv6OnIos supportsIPv6OnIOS</div><div class="line"></div><div class="line"><span class="string">"YouTube importer"</span> YouTubeImporter</div><div class="line"></div><div class="line">YoutubeImporter*</div></pre></td></tr></table></figure>
<p>加星号处表示可以，但不推荐。</p>
<blockquote>
<p>Note：在英语中，某些带有连字符的单词形式不唯一。例如：nonempty 和 non-empty 都是正确的，因此方法名 checkNonempty 和 checkNonEmpty 也都是正确的。</p>
</blockquote>
<h2 id="编程实践"><a href="#编程实践" class="headerlink" title="编程实践"></a>编程实践</h2><h3 id="6-1-Override：能用则用"><a href="#6-1-Override：能用则用" class="headerlink" title="6.1 @Override：能用则用"></a>6.1 @Override：能用则用</h3><p>只要是合法的，就把 <code>@Override</code> 注解给用上。</p>
<h3 id="6-2-捕获的异常：不能忽视"><a href="#6-2-捕获的异常：不能忽视" class="headerlink" title="6.2 捕获的异常：不能忽视"></a>6.2 捕获的异常：不能忽视</h3><p>除了下面的例子，对捕获的异常不做响应是极少正确的。(典型的响应方式是打印日志，或者如果它被认为是不可能的，则把它当作一个 <code>AssertionError</code> 重新抛出。)</p>
<p>如果它确实是不需要在 <code>catch</code> 块中做任何响应，需要做注释加以说明(如下面的例子)。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">try</span> &#123;</div><div class="line"></div><div class="line"><span class="keyword">int</span> i = Integer.parseInt(response);</div><div class="line"></div><div class="line"><span class="keyword">return</span> handleNumericResponse(i);</div><div class="line"></div><div class="line">&#125; <span class="keyword">catch</span> (NumberFormatException ok) &#123;</div><div class="line"></div><div class="line"><span class="comment">// it's not numeric; that's fine, just continue</span></div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">return</span> handleTextResponse(response);</div></pre></td></tr></table></figure>
<p>例外：在测试中，如果一个捕获的异常被命名为 <code>expected</code>，则它可以被不加注释地忽略。下面是一种非常常见的情形，用以确保所测试的方法会抛出一个期望中的异常， 因此在这里就没有必要加注释。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">try</span> &#123;</div><div class="line"></div><div class="line">emptyStack.pop();</div><div class="line"></div><div class="line">fail();</div><div class="line"></div><div class="line">&#125; <span class="keyword">catch</span> (NoSuchElementException expected) &#123;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="6-3-静态成员：使用类进行调用"><a href="#6-3-静态成员：使用类进行调用" class="headerlink" title="6.3 静态成员：使用类进行调用"></a>6.3 静态成员：使用类进行调用</h3><p>使用类名调用静态的类成员，而不是具体某个对象或表达式。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Foo aFoo = ...;</div><div class="line"></div><div class="line">Foo.aStaticMethod(); <span class="comment">// good</span></div><div class="line"></div><div class="line">aFoo.aStaticMethod(); <span class="comment">// bad</span></div><div class="line"></div><div class="line">somethingThatYieldsAFoo().aStaticMethod(); <span class="comment">// very bad</span></div></pre></td></tr></table></figure>
<h3 id="6-4-Finalizers-禁用"><a href="#6-4-Finalizers-禁用" class="headerlink" title="6.4 Finalizers: 禁用"></a>6.4 Finalizers: 禁用</h3><p>极少会去重写 <code>Object.finalize</code>。</p>
<blockquote>
<p>Tip：不要使用 finalize。如果你非要使用它，请先仔细阅读和理解 Effective Java 第 7 条款：“Avoid Finalizers”，然后不要使用它。</p>
</blockquote>
<h2 id="Javadoc"><a href="#Javadoc" class="headerlink" title="Javadoc"></a>Javadoc</h2><h3 id="7-1-格式"><a href="#7-1-格式" class="headerlink" title="7.1 格式"></a>7.1 格式</h3><h4 id="7-1-1-一般形式"><a href="#7-1-1-一般形式" class="headerlink" title="7.1.1 一般形式"></a>7.1.1 一般形式</h4><p>Javadoc 块的基本格式如下所示：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">* Multiple lines of Javadoc text are written here,</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">* wrapped normally...</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">*/</span></div><div class="line"></div><div class="line">publicintmethod(String p1)&#123; ... &#125;</div></pre></td></tr></table></figure>
<p>或者是以下单行形式：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/** An especially short bit of Javadoc. */</span></div></pre></td></tr></table></figure>
<p>基本格式总是 OK 的。当整个 Javadoc 块能容纳于一行时(且没有 Javadoc 标记 @XXX)，可以使用单行形式。</p>
<h4 id="7-1-2-段落"><a href="#7-1-2-段落" class="headerlink" title="7.1.2 段落"></a>7.1.2 段落</h4><p>空行(即，只包含最左侧星号的行)会出现在段落之间和 Javadoc 标记(@XXX)之前(如果有的话)。除了第一个段落，每个段落第一个单词前都有标签 </p><p>，并且它和第一个单词间没有空格。</p>
<h4 id="7-1-3-Javadoc-标记"><a href="#7-1-3-Javadoc-标记" class="headerlink" title="7.1.3 Javadoc 标记"></a>7.1.3 Javadoc 标记</h4><p>标准的 Javadoc 标记按以下顺序出现：@param, @return, @throws, @deprecated, 前面这 4 种标记如果出现，描述都不能为空。当描述无法在一行中容纳，连续行需要至少再缩进 4 个空格。</p>
<h3 id="7-2-摘要片段"><a href="#7-2-摘要片段" class="headerlink" title="7.2 摘要片段"></a>7.2 摘要片段</h3><p>每个类或成员的 Javadoc 以一个简短的摘要片段开始。这个片段是非常重要的，在某些情况下，它是唯一出现的文本，比如在类和方法索引中。</p>
<p>这只是一个小片段，可以是一个名词短语或动词短语，但不是一个完整的句子。它不会以 A {@code Foo} is a… 或 This method returns… 开头, 它也不会是一个完整的祈使句，如 Save the record…。然而，由于开头大写及被加了标点，它看起来就像是个完整的句子。</p>
<blockquote>
<p>Tip：一个常见的错误是把简单的 Javadoc 写成 /<strong> @return the customer ID */，这是不正确的。它应该写成 /</strong> Returns the customer ID. */。</p>
</blockquote>
<h3 id="7-3-哪里需要使用-Javadoc"><a href="#7-3-哪里需要使用-Javadoc" class="headerlink" title="7.3 哪里需要使用 Javadoc"></a>7.3 哪里需要使用 Javadoc</h3><p>至少在每个 public 类及它的每个 <code>public</code> 和 <code>protected</code> 成员处使用 <code>Javadoc</code>，以下是一些例外：</p>
<h4 id="7-3-1-例外：不言自明的方法"><a href="#7-3-1-例外：不言自明的方法" class="headerlink" title="7.3.1 例外：不言自明的方法"></a>7.3.1 例外：不言自明的方法</h4><p>对于简单明显的方法如 <code>getFoo</code>，<code>Javadoc</code> 是可选的(即，是可以不写的)。这种情况下除了写 “Returns the foo”，确实也没有什么值得写了。</p>
<p>单元测试类中的测试方法可能是不言自明的最常见例子了，我们通常可以从这些方法的描述性命名中知道它是干什么的，因此不需要额外的文档说明。</p>
<blockquote>
<p>Tip：如果有一些相关信息是需要读者了解的，那么以上的例外不应作为忽视这些信息的理由。例如，对于方法名 <code>getCanonicalName</code>， 就不应该忽视文档说明，因为读者很可能不知道词语 canonical name 指的是什么。</p>
<h4 id="7-3-2-例外：重写"><a href="#7-3-2-例外：重写" class="headerlink" title="7.3.2 例外：重写"></a>7.3.2 例外：重写</h4></blockquote>
<p>如果一个方法重写了超类中的方法，那么 Javadoc 并非必需的。</p>
<h4 id="7-3-3-可选的-Javadoc"><a href="#7-3-3-可选的-Javadoc" class="headerlink" title="7.3.3 可选的 Javadoc"></a>7.3.3 可选的 Javadoc</h4><p>对于包外不可见的类和方法，如有需要，也是要使用 Javadoc 的。如果一个注释是用来定义一个类，方法，字段的整体目的或行为， 那么这个注释应该写成 Javadoc，这样更统一更友好。</p>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul>
<li><a href="http://wdxtub.com/2016/10/13/java-style-guide/" target="_blank" rel="external">小土刀 原文</a></li>
<li><a href="http://google-styleguide.googlecode.com/svn/trunk/javaguide.html" target="_blank" rel="external">Google Java Style</a></li>
<li>译者 @Hawstein</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> 编码风格 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle 查询]]></title>
      <url>http://chuanqiang.github.io/2016/10/12/Oracle-select/</url>
      <content type="html"><![CDATA[<p>本文讲解 Oracle 查询语句的使用。</p>
<a id="more"></a>
<hr>
<h1 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h1><h2 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><blockquote>
<p>分组函数作用于一组数据，并对一组函数返回一个值。</p>
</blockquote>
<h3 id="常用的分组函数"><a href="#常用的分组函数" class="headerlink" title="常用的分组函数"></a>常用的分组函数</h3><ul>
<li>avg</li>
<li>sum</li>
<li>min</li>
<li>max</li>
<li>count</li>
<li>wm_concat(行转列)<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">avg</span>(sal), <span class="keyword">sum</span>(sal) , <span class="keyword">max</span>(sal) ,<span class="keyword">min</span>(sal) <span class="keyword">from</span> emp;</div><div class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> emp;</div><div class="line"><span class="keyword">select</span> <span class="keyword">count</span>(<span class="keyword">distinct</span> empno) <span class="keyword">from</span> emp; <span class="comment">--去重部门数统计</span></div><div class="line"><span class="keyword">select</span> depno 部门号, wm_concat(ename) 部门中员工的姓名 <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno;</div></pre></td></tr></table></figure>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">部门号   |   部门中员工的姓名</div><div class="line">10  |   张三，李四</div><div class="line">20 | 王五，赵六</div></pre></td></tr></table></figure>
<p><strong>注意</strong>:NVL函数 使分组函数无法忽略空值。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">count</span>(nvl(comm,<span class="number">0</span>)) <span class="keyword">from</span> emp; <span class="comment">--comm若为空，置为0</span></div></pre></td></tr></table></figure></p>
<h3 id="分组数据"><a href="#分组数据" class="headerlink" title="分组数据"></a>分组数据</h3><ul>
<li>group by<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> deptno, job, <span class="keyword">sum</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno, job <span class="keyword">order</span> <span class="keyword">by</span> deptno;</div></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p><strong>当多个列分组时，用逗号分开。</strong><br><strong>select 列表中所有未包含在组函数中的列都应包含在group by 子句中。</strong><br><strong>eg:<code>select depno count(ename) from emp</code> 就会执行错误 </strong></p>
</blockquote>
<h3 id="过滤分组"><a href="#过滤分组" class="headerlink" title="过滤分组"></a>过滤分组</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> depno, <span class="keyword">avg</span>(sal) <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">having</span> <span class="keyword">avg</span>(sal) &gt; <span class="number">2000</span>;  <span class="comment">--平均工资大于两千的部门</span></div></pre></td></tr></table></figure>
<p><strong>where和having的区别</strong></p>
<blockquote>
<p>不能在where语句中使用组函数；<br>where不能放在group by 之后；<br>可以在having语句中使用组函数；<br>从SQL优化的角度，尽量使用where(where先过滤，后分组；having先分组后过滤)</p>
</blockquote>
<h3 id="分组查询中排序"><a href="#分组查询中排序" class="headerlink" title="分组查询中排序"></a>分组查询中排序</h3><blockquote>
<p>可以按照:列、别名、表达式、序号 进行排序</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> depno <span class="keyword">avg</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">avg</span>(<span class="keyword">sql</span>);</div><div class="line"><span class="keyword">select</span> depno <span class="keyword">avg</span>(sal) 平均工资 <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">order</span> <span class="keyword">by</span> 平均工资;</div><div class="line"><span class="keyword">select</span> depno <span class="keyword">avg</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno <span class="keyword">order</span> <span class="keyword">by</span> <span class="number">2</span> <span class="keyword">desc</span>;</div></pre></td></tr></table></figure>
<p><strong>分组函数嵌套</strong><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">max</span>(<span class="keyword">avg</span>(sal)) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno; <span class="comment">--求平均工资的最大值</span></div></pre></td></tr></table></figure></p>
<h3 id="GROUP-BY-语句增强"><a href="#GROUP-BY-语句增强" class="headerlink" title="GROUP BY 语句增强"></a>GROUP BY 语句增强</h3><ul>
<li>语法<ul>
<li><code>group by rollup(a,b)</code></li>
</ul>
</li>
<li>等价于以下三句相加:<ul>
<li>group by a,b （按照a和b分组）</li>
<li>group by a  （按照a分组）</li>
<li>group by null  （不按照任何条件直接分组）<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> deptno, job, <span class="keyword">sum</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">rollup</span>(deptno,job);</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<p><strong>用于报表</strong><br><img src="/image/2016-09-06-23-14-56.jpg" alt=""></p>
<h2 id="多表连接查询"><a href="#多表连接查询" class="headerlink" title="多表连接查询"></a>多表连接查询</h2><h3 id="笛卡儿积"><a href="#笛卡儿积" class="headerlink" title="笛卡儿积"></a>笛卡儿积</h3><ul>
<li>为了避免笛卡儿集，可以在where中加入有效的连接条件</li>
<li>在实际运行环境下，应避免使用笛卡尔全集</li>
<li>连接条件至少有n(表的个数)-1个<h3 id="等值连接"><a href="#等值连接" class="headerlink" title="等值连接"></a>等值连接</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span>  e.empno, e.empname, d.dname</div><div class="line">    <span class="keyword">from</span> emp e, dept d </div><div class="line">    <span class="keyword">where</span> e.deptno = d.deptno;</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="不等值连接"><a href="#不等值连接" class="headerlink" title="不等值连接"></a>不等值连接</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> e.empno, e.ename, e.sal, s.grade </div><div class="line">    <span class="keyword">from</span> emp e, salgrade s </div><div class="line">    <span class="keyword">where</span> e.sal <span class="keyword">between</span> s.losal <span class="keyword">and</span> s.hisal; </div><div class="line"><span class="comment">-- 显示薪水级别</span></div><div class="line"><span class="comment">-- between and 中小值在前</span></div></pre></td></tr></table></figure>
<h3 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h3><p><strong>核心</strong></p>
<ul>
<li>通过外连接，把对于连接不成立的记录，仍然包含在最后的结果中。</li>
<li>左外连接:当连接条件不成立的时候，等号左边的表仍然被包含</li>
<li>右外连接:当连接条件不成立的时候，等号右边的表仍然被包含<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> d.deptno 部门号, d.dname 部门名称， <span class="keyword">count</span>(e.empno) 人数</div><div class="line">    <span class="keyword">from</span> emp e, dept t</div><div class="line">    <span class="keyword">where</span> e.deptno(+)=d.deptno</div><div class="line">    <span class="keyword">group</span> <span class="keyword">by</span> d.deptno, d.dname; </div><div class="line"><span class="comment">-- 按照部门统计员工人数，要求显示:部门号，部门名称，人数</span></div><div class="line"><span class="comment">-- 右外连接，防止部门人数为0时不显示</span></div></pre></td></tr></table></figure>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">部门号|部门名称|人数</div><div class="line">10|accounting|3</div><div class="line">40|operations|0</div><div class="line">20|research|5</div></pre></td></tr></table></figure>
<h3 id="自连接"><a href="#自连接" class="headerlink" title="自连接"></a>自连接</h3><p><strong>核心:通过别名，将同一张表视为多张表</strong><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> e.ename 员工姓名, b,ename 老板姓名</div><div class="line">    <span class="keyword">from</span> emp e, emp b</div><div class="line">    <span class="keyword">where</span> e.mgr = b.empno</div><div class="line"><span class="comment">-- 查询员工的姓名和员工老板的姓名</span></div><div class="line"><span class="comment">-- mgr:老板号(老板也在员工中)</span></div></pre></td></tr></table></figure></p>
<p><strong>自连接存在的问题</strong></p>
<ul>
<li>不适合操作大表(笛卡尔集)</li>
<li>解决办法:层次查询<h3 id="层次查询"><a href="#层次查询" class="headerlink" title="层次查询"></a>层次查询</h3></li>
<li>某些情况下，可以代替自连接</li>
<li>本质上，是一个单表查询</li>
</ul>
<p><img src="/image/2016-09-07-22-33-29.jpg" alt=""></p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">level</span>, empno, ename, sal mgr</div><div class="line">    <span class="keyword">from</span> emp</div><div class="line">    <span class="keyword">connect</span> <span class="keyword">by</span> <span class="keyword">prior</span> empno = mgr</div><div class="line">    <span class="keyword">start</span> <span class="keyword">with</span> mgr <span class="keyword">is</span> <span class="literal">null</span></div><div class="line">    <span class="keyword">order</span> <span class="keyword">by</span> <span class="number">1</span>;</div></pre></td></tr></table></figure>
<p><img src="/image/2016-09-07-22-37-10.jpg" alt=""></p>
<h2 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h2><blockquote>
<p>eg:谁的工资比SCOTT高?</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> * </div><div class="line"><span class="keyword">from</span> emp </div><div class="line"><span class="keyword">where</span> sal &gt;(<span class="keyword">select</span> sal </div><div class="line">                    <span class="keyword">from</span> emp</div><div class="line">                    <span class="keyword">where</span> ename=<span class="string">'SCOTT'</span>);</div></pre></td></tr></table></figure>
<h3 id="子查询中的十个问题"><a href="#子查询中的十个问题" class="headerlink" title="子查询中的十个问题"></a>子查询中的十个问题</h3><ul>
<li>子查询语法中的小括号必须有</li>
<li>子查询的书写风格</li>
<li><p>可以使用子查询的位置:where,select,having,from</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> empno,ename, (<span class="keyword">select</span> job <span class="keyword">from</span> emp <span class="keyword">where</span> empno = <span class="number">7839</span>) 第四列 <span class="keyword">from</span> emp;</div><div class="line"><span class="comment">-- select中使用子查询(必须为单行子查询)</span></div><div class="line"><span class="keyword">select</span> deptno,<span class="keyword">avg</span>(<span class="keyword">sql</span>) frpm emp</div><div class="line"><span class="keyword">group</span> <span class="keyword">by</span> deptno </div><div class="line"><span class="keyword">having</span> <span class="keyword">avg</span>(sal) &gt; (<span class="keyword">select</span> <span class="keyword">max</span>(sal)</div><div class="line">                            <span class="keyword">from</span> emp</div><div class="line">                            <span class="keyword">where</span> deptno=<span class="number">30</span>);</div><div class="line"><span class="comment">-- having中使用子查询。不能用where代替，因为where中不能使用分组函数</span></div><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span>(<span class="keyword">select</span> empno, ename, sal <span class="keyword">from</span> emp);</div><div class="line"><span class="comment">-- 在from语句中使用子查询</span></div></pre></td></tr></table></figure>
</li>
<li><p>不可以使用子查询的位置:group by</p>
</li>
<li>from后面的子查询</li>
<li>主查询和子查询可以不是同一张表<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">-- 查询部门名称是sales的员工信息</span></div><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp </div><div class="line">    <span class="keyword">where</span> deptno=(<span class="keyword">select</span> deptno <span class="keyword">from</span> dept </div><div class="line">                        <span class="keyword">where</span> dname=<span class="string">'sales'</span>)</div><div class="line"><span class="comment">-- 用表连接的方法</span></div><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp e,deptno d </div><div class="line">    <span class="keyword">where</span> e.deptno=d.deptno <span class="keyword">and</span> d.dname=<span class="string">'sales'</span></div></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p><strong>注意</strong>:原则上使用表连接的方法性能高。因为只用一个<code>from</code>，只对数据库访问一次。<br>  但是多表查询会产生多卡尔集，从而影响性能。</p>
</blockquote>
<ul>
<li>一般不在子查询中，使用排序；但在Top-N分析问题中，必须对子查询排序<br><strong><code>rownum</code></strong>：行号，伪劣。</li>
</ul>
<ol>
<li>行号永远按照默认的顺序生成(不随位置变化而变化)</li>
<li>行号只能用<code>&lt;,&lt;=</code>，不能用<code>&gt;,&gt;=</code></li>
</ol>
<blockquote>
<p>因为行号在Oracle数据库中永远从1开始，所以不能用<code>&gt;,&gt;=</code></p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">-- 找出员工表种工资最高的前三名</span></div><div class="line"><span class="comment">-- 此方法错误，因为行号不随位置变化而变化</span></div><div class="line"><span class="keyword">select</span> <span class="keyword">rownum</span>,eno,ename,sal </div><div class="line"><span class="keyword">from</span> emp <span class="keyword">where</span> <span class="keyword">rownum</span>&gt;<span class="number">3</span></div><div class="line"><span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span>;</div><div class="line"><span class="comment">--以下方法为正确</span></div><div class="line"><span class="keyword">select</span> <span class="keyword">rownum</span>,eno,ename,sal</div><div class="line"><span class="keyword">from</span> (<span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span> <span class="keyword">where</span> <span class="keyword">rownum</span>&gt;<span class="number">3</span>)</div></pre></td></tr></table></figure>
<ul>
<li><p>一般先执行子查询，再执行主查询；但相关子查询例外</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">-- 找到员工表种薪水大于本部门平均薪水的员工</span></div><div class="line"><span class="keyword">select</span> empno,ename,sal,(<span class="keyword">select</span> <span class="keyword">avg</span>(sal) <span class="keyword">from</span> emp <span class="keyword">where</span> deptno = e.deptno)</div><div class="line"><span class="keyword">from</span> emp e</div><div class="line"><span class="keyword">where</span> sal&gt;(<span class="keyword">select</span> <span class="keyword">avg</span>(sal) <span class="keyword">from</span> emp <span class="keyword">where</span> deptno = e.deptno);</div></pre></td></tr></table></figure>
</li>
<li><p>单行子查询只能使用单行操作符；多行子查询只能使用多行操作符</p>
<ul>
<li>单行子查询：只返回一条记录<ul>
<li>单行操作符：<code>=,&gt;,&gt;=,&lt;,&lt;=,&lt;&gt;</code></li>
</ul>
</li>
<li>多行子查询：返回多行记录<ul>
<li>多行操作符：<code>IN,ANY,ALL</code><br><strong>单行子查询的相关例子</strong><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">-- 查询员工信息，要求：职位与7566一样；薪水大于7782员工薪水</span></div><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> job=(<span class="keyword">select</span> job <span class="keyword">from</span> emp <span class="keyword">where</span> empno=<span class="string">'7566'</span>)</div><div class="line"><span class="keyword">and</span>  sal &gt; (<span class="keyword">select</span> sal <span class="keyword">from</span> emp <span class="keyword">where</span> empno=<span class="string">'7782'</span>)</div><div class="line"><span class="comment">-- 查询最低工资大于20号部门最低工资的部门号和部门最低工资</span></div><div class="line"><span class="keyword">select</span> deptno,<span class="keyword">min</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno </div><div class="line"><span class="keyword">having</span> <span class="keyword">min</span>(sal)&gt;(<span class="keyword">select</span> <span class="keyword">min</span>(sal) <span class="keyword">from</span> emp <span class="keyword">where</span> deptno=<span class="string">'20'</span></div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<blockquote>
<p>单行子查询之能用单行操作符<br>在一个主查询种可以有多个子查询</p>
</blockquote>
<p><strong>多行子查询的相关例子</strong><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">--查询部门名称是sales和accounting的员工信息</span></div><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp </div><div class="line"><span class="keyword">where</span> deptno <span class="keyword">in</span> (<span class="keyword">select</span> deptno <span class="keyword">from</span> dept <span class="keyword">where</span> dname=<span class="string">'sales'</span> <span class="keyword">or</span> dname=<span class="string">'accounting'</span>)</div><div class="line"><span class="comment">--等价于</span></div><div class="line"><span class="keyword">select</span> e.* <span class="keyword">from</span> emp e,dept d</div><div class="line"><span class="keyword">where</span> e.deptno = d.deptno <span class="keyword">and</span> (d.dname=<span class="string">'sales'</span> <span class="keyword">or</span> d.dname=<span class="string">'accounting'</span>);</div></pre></td></tr></table></figure></p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">查询工资比30号部门任意一个员工高的员工信息</div><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> sal &gt; <span class="keyword">any</span> (<span class="keyword">select</span> sal <span class="keyword">from</span> emp <span class="keyword">where</span> deptno=<span class="string">'30'</span>)</div></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">查询工资比30号部门所有员工高的员工信息</div><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> sal &gt; all (<span class="keyword">select</span> sal <span class="keyword">from</span> emp <span class="keyword">where</span> deptno=<span class="string">'30'</span>)</div><div class="line"><span class="comment">--等价于</span></div><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> sal &gt;  (<span class="keyword">select</span> <span class="keyword">max</span>(mal) <span class="keyword">from</span> emp <span class="keyword">where</span> deptno=<span class="string">'30'</span>)</div></pre></td></tr></table></figure>
<ul>
<li>注意:子查询中的null值问题<br>只要子查询的结果集种包含控制，不要使用<code>NOT IN</code>操作符。<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">--查询不是老板的员工</span></div><div class="line">slect * from emp where empno not in (select mgr from emp where mgr is not null);</div><div class="line"><span class="comment">-- not in 后面的集合不能有空值，否则查询不出结果</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><blockquote>
<p>分页显示员工信息：显示员工号，姓名，月薪<br>每页显示四条记录<br>显示第二页的员工<br>按照月薪降序排列</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">-- Oracle 通过子查询的方式实现分页</span></div><div class="line"><span class="keyword">select</span> r,empno,ename,<span class="keyword">sql</span> </div><div class="line"><span class="keyword">from</span> (<span class="keyword">select</span>  <span class="keyword">rownum</span> r,empno,ename,sal </div><div class="line">          <span class="keyword">from</span> (  <span class="keyword">select</span> <span class="keyword">rownum</span> ,empno,ename,sal <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span> ) e1</div><div class="line">         <span class="keyword">where</span> r &lt; <span class="number">8</span>) e2</div><div class="line"><span class="keyword">where</span> r &gt;= <span class="number">5</span></div></pre></td></tr></table></figure>
<blockquote>
<p>找到员工表中薪水大于本部门平均薪水的员工</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">-- 使用相关子查询方法</span></div><div class="line"><span class="keyword">select</span> empno,ename,sal ,(<span class="keyword">select</span> <span class="keyword">avg</span>(sal) <span class="keyword">from</span> emp <span class="keyword">where</span> deptno = e.deptno) avgsal <span class="keyword">from</span> emp e</div><div class="line"><span class="keyword">where</span> sal &gt; (<span class="keyword">select</span> <span class="keyword">avg</span>(sal) <span class="keyword">from</span> emp <span class="keyword">where</span> deptno = e.deptno)</div><div class="line"><span class="comment">-- 使用嵌套子查询方法</span></div><div class="line"><span class="keyword">select</span> e.empno,e.ename,e.sal,d.avgsal</div><div class="line"><span class="keyword">from</span> emp e , ( <span class="keyword">select</span> deptno, <span class="keyword">avg</span>(sal) avgsal <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno ) d </div><div class="line"><span class="keyword">where</span> e.deptno = d.deptno <span class="keyword">and</span> e.sal&gt;d.avgsal</div><div class="line"><span class="comment">-- 第一种（相关子查询）的性能好，执行块</span></div></pre></td></tr></table></figure>
<blockquote>
<p>按照部门统计员工人数，按照如下格式输出</p>
</blockquote>
<p><img src="/image/2016-10-12-22-02-31.jpg" alt=""></p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*) Total,</div><div class="line">    <span class="keyword">sum</span>(<span class="keyword">decode</span>(to_char(hiredate,<span class="string">'YYYY'</span>),<span class="string">'1980'</span>,<span class="number">1</span>,<span class="number">0</span>)) <span class="string">"1980"</span>,</div><div class="line">    <span class="keyword">sum</span>(<span class="keyword">decode</span>(to_char(hiredate,<span class="string">'YYYY'</span>),<span class="string">'1981'</span>,<span class="number">1</span>,<span class="number">0</span>)) <span class="string">"1981"</span>,</div><div class="line">    <span class="keyword">sum</span>(<span class="keyword">decode</span>(to_char(hiredate,<span class="string">'YYYY'</span>),<span class="string">'1982'</span>,<span class="number">1</span>,<span class="number">0</span>)) <span class="string">"1982"</span>,</div><div class="line">    <span class="keyword">sum</span>(<span class="keyword">decode</span>(to_char(hiredate,<span class="string">'YYYY'</span>),<span class="string">'1987'</span>,<span class="number">1</span>,<span class="number">0</span>)) <span class="string">"1987"</span></div><div class="line"><span class="keyword">from</span> emp;</div><div class="line"><span class="comment">-- or</span></div><div class="line"><span class="keyword">select</span> </div><div class="line">    (<span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> emp) Total,</div><div class="line">    (<span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> emp <span class="keyword">where</span> to_char(hiredate,<span class="string">'YYYY'</span>)=<span class="string">'1980'</span>) <span class="string">"1980"</span>,  </div><div class="line">    (<span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> emp <span class="keyword">where</span> to_char(hiredate,<span class="string">'YYYY'</span>)=<span class="string">'1981'</span>) <span class="string">"1981"</span>, </div><div class="line">    (<span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> emp <span class="keyword">where</span> to_char(hiredate,<span class="string">'YYYY'</span>)=<span class="string">'1982'</span>) <span class="string">"1982"</span>, </div><div class="line">    (<span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> emp <span class="keyword">where</span> to_char(hiredate,<span class="string">'YYYY'</span>)=<span class="string">'1987'</span>) <span class="string">"1987"</span>,  </div><div class="line"><span class="keyword">from</span> dual;</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> Oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[一名3年工作经验的程序员应该具备的技能]]></title>
      <url>http://chuanqiang.github.io/2016/10/08/necessary-skills/</url>
      <content type="html"><![CDATA[<p>作为初出茅庐的新人，既要走进去，更要走出来。走进去是你要踏踏实实的学习技术，钻研知识；走出来是你要高瞻远瞩，有方向和规划，高能的进步和成长。这篇文章介绍了一名三年程序员的经验和心得，是对我这种开发的新人来说，受益良多。特摘至此处。感谢本文作者。</p>
<hr>
<a id="more"></a>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>因为和同事有约定再加上LZ自己也喜欢做完一件事之后进行总结，因此有了这篇文章。这篇文章大部分内容都是面向整个程序员群体的，当然因为LZ本身是做Java开发的，因此有一部分内容也是专门面向咱们Java程序员的。</p>
<p>简单先说一下，LZ坐标杭州，13届本科毕业，算上年前在阿里巴巴B2B事业部的面试，一共有面试了有6家公司（因为LZ不想请假，因此只是每个晚上去其他公司面试，所以面试的公司比较少），其中成功的有4家，另外两家失败的原因在于：</p>
<p>1、阿里巴巴B2B事业部的面试，两轮技术面试都过了，最后一轮面试是对方的主管，由于听说技术面试过了基本上90%都面试成功了，所以LZ在和主管的交谈中也是毫无顾忌，说得天花乱坠，很多自己介于知道和不知道的东西都直接脱口而出了，结果多次被对方一反问就问得哑口无言。事后想来，模棱两可的答案是面试中最忌讳的，这次的失败也让LZ认真地对待后面的每一次面试</p>
<p>2、另外一家失败的是一家小公司，也就20来个人吧，整个团队是支付宝出来创业的，非常厉害。面试完LZ多方了解了一下，对方认为我基本功什么的都不错，但是实际项目经验还是欠缺一些，因为对方是创业型公司，需要人上手就能干活，因此我在这个时候还不是特别适合他们团队</p>
<p>至于其他成功的四家公司，给LZ的面试评价都挺高的貌似，但LZ也不想记流水账，因此就不一一列举每家公司的面试过程了，下面LZ主要谈谈作为一名工作三年左右的Java程序员应该具备的一些技能以及个人的一些其他感悟。</p>
<h2 id="关于程序员的几个阶段"><a href="#关于程序员的几个阶段" class="headerlink" title="关于程序员的几个阶段"></a>关于程序员的几个阶段</h2><p>每个程序员、或者说每个工作者都应该有自己的职业规划，如果看到这里的朋友没有自己的职业规划，希望你可以思考一下自己的将来。</p>
<p>LZ常常思考自己的未来，也从自己的思考中总结出了一些东西，作为第一部分来谈谈。LZ认为一名程序员应该有几个阶段（以下时间都算上实习期）：</p>
<ul>
<li><strong>第一阶段—-三年</strong></li>
</ul>
<ul>
<li>我认为三年对于程序员来说是第一个门槛，这个阶段将会淘汰掉一批不适合写代码的人。这一阶段，我们走出校园，迈入社会，成为一名程序员，正式从书本上的内容迈向真正的企业级开发。我们知道如何团队协作、如何使用项目管理工具、项目版本如何控制、我们写的代码如何测试如何在线上运行等等，积累了一定的开发经验，也对代码有了一定深入的认识，是一个比较纯粹的Coder的阶段</li>
</ul>
<ul>
<li><strong>第二阶段—-五年</strong></li>
</ul>
<ul>
<li>五年又是区分程序员的第二个门槛。有些人在三年里，除了完成工作，在空余时间基本不会研究别的东西，这些人永远就是个Coder，年纪大一些势必被更年轻的人给顶替；有些人在三年里，除了写代码之外，还热衷于研究各种技术实现细节、看了N多好书、写一些博客、在Github上分享技术，这些人在五年后必然具备在技术上独当一面的能力并且清楚自己未来的发展方向，从一个Coder逐步走向系统分析师或是架构师，成为项目组中不可或缺的人物</li>
</ul>
<ul>
<li><strong>第三阶段—-十年</strong></li>
</ul>
<ul>
<li>十年又是另一个门槛了，转行或是继续做一名程序员就在这个节点上。如果在前几年就抱定不转行的思路并且为之努力的话，那么在十年的这个节点上，有些人必然成长为一名对行业有着深入认识、对技术有着深入认识、能从零开始对一个产品进行分析的程序员，这样的人在公司基本担任的都是CTO、技术专家、首席架构师等最关键的职位，这对于自己绝对是一件荣耀的事，当然老板在经济上也绝不会亏待你</li>
</ul>
<p>第一部分总结一下，我认为，随着你工作年限的增长、对生活对生命认识的深入，应当不断思考三个问题：</p>
<p>1、我到底适不适合当一名程序员？</p>
<p>2、我到底应不应该一辈子以程序员为职业？</p>
<p>3、我对编程到底持有的是一种什么样的态度，是够用就好呢还是不断研究？</p>
<p>最终，明确自己的职业规划，对自己的规划负责并为之努力。</p>
<h2 id="关于项目经验"><a href="#关于项目经验" class="headerlink" title="关于项目经验"></a>关于项目经验</h2><p>LZ在网上经常看到一些别的朋友有提出项目经验的问题，依照LZ面试的感觉来说，面试主要看几点：<strong>项目经验+基本技术+个人潜力</strong>（也就是值不值得培养）。</p>
<p>关于项目经验，我认为并发编程网的创始人方腾飞老师讲的一段话非常好：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">介绍产品时面试官会考察应聘者的沟通能力和思考能力，我们大部分情况都是做产品的一个功能或一个模块，但是即使是这样，自己有没有把整个系统架构或产品搞清楚，并能介绍清楚，为什么做这个系统？这个系统的价值是什么？这个系统有哪些功能？优缺点有哪些？如果让你重新设计这个系统你会如何设计？</div></pre></td></tr></table></figure>
<p>我觉得这就已经足以概括了。也许你仅仅工作一年，也许你做的是项目中微不足道的模块，当然这些一定是你的劣势且无法改变，但是如何弥补这个劣势，从方老师的话中我总结几点：</p>
<p>1、明确你的项目到底是做什么的，有哪些功能</p>
<p>2、明确你的项目的整体架构，在面试的时候能够清楚地画给面试官看并且清楚地指出从哪里调用到哪里、使用什么方式调用</p>
<p>3、明确你的模块在整个项目中所处的位置及作用</p>
<p>4、明确你的模块用到了哪些技术，更好一些的可以再了解一下整个项目用到了哪些技术</p>
<p>在你无法改变自己的工作年限、自己的不那么有说服力的项目经验的情况下（这一定是扣分项），可以通过这种方式来一定程度上地弥补并且增进面试官对你的好感度。</p>
<p>补充一点，在面试中聊你的项目的时候，有一个问题90%是绕不过的：<strong>谈一下你在项目中解决过的比较复杂的问题</strong>。这需要在工作中不断去发现和探索，不需要多，在你自己目前的项目中只要你找到一两个能说的问题就行。一个小技巧是，即使问题不是你解决的而是别人解决的，但是你把这个问题弄懂、搞透了，在面试的时候你一样可以把这个问题当作是你自己解决的来说—-毕竟，谁来管这个问题当时到底是不是你解决的呢？</p>
<h2 id="关于专业技能"><a href="#关于专业技能" class="headerlink" title="关于专业技能"></a>关于专业技能</h2><p>写完项目接着写写一名3年工作经验的Java程序员应该具备的技能，这可能是Java程序员们比较关心的内容。我这里要说明一下，以下列举的内容不是都要会的东西—-但是如果你掌握得越多，最终能得到的评价、拿到的薪水势必也越高。</p>
<h3 id="1、基本语法"><a href="#1、基本语法" class="headerlink" title="1、基本语法"></a>1、基本语法</h3><p>这包括static、final、transient等关键字的作用，foreach循环的原理等等。今天面试我问你static关键字有哪些作用，如果你答出static修饰变量、修饰方法我会认为你合格，答出静态块，我会认为你不错，答出静态内部类我会认为你很好，答出静态导包我会对你很满意，因为能看出你非常热衷研究技术。</p>
<p>最深入的一次，LZ记得面试官直接问到了我volatile关键字的底层实现原理（顺便插一句，面试和被面试本身就是相对的，面试官能问这个问题同时也让面试者感觉到面试官也是一个喜爱研究技术的人，增加了面试者对公司的好感，LZ最终选择的就是问了这个问题的公司），不要觉得这太吹毛求疵了—-越简单的问题越能看出一个人的水平，别人对你技术的考量绝大多数都是以<strong>深度**</strong>优先、广度次之**为标准的，切记。</p>
<h3 id="2、集合"><a href="#2、集合" class="headerlink" title="2、集合"></a>2、集合</h3><p>非常重要，也是必问的内容。基本上就是List、Map、Set，问的是各种实现类的底层实现原理，实现类的优缺点。</p>
<p>集合要掌握的是ArrayList、LinkedList、Hashtable、HashMap、ConcurrentHashMap、HashSet的实现原理，能流利作答，当然能掌握CopyOnWrite容器和Queue是再好不过的了。另外多说一句，ConcurrentHashMap的问题在面试中问得特别多，大概是因为这个类可以衍生出非常多的问题，关于ConcurrentHashMap，我给网友朋友们提供三点回答或者是研究方向：</p>
<p>（1）ConcurrentHashMap的锁分段技术</p>
<p>（2）ConcurrentHashMap的读是否要加锁，为什么</p>
<p>（3）ConcurrentHashMap的迭代器是强一致性的迭代器还是弱一致性的迭代器</p>
<h3 id="3、设计模式"><a href="#3、设计模式" class="headerlink" title="3、设计模式"></a>3、设计模式</h3><p>本来以为蛮重要的一块内容，结果只在阿里巴巴B2B事业部面试的时候被问了一次，当时问的是装饰器模式。</p>
<p>当然咱们不能这么功利，为了面试而学习，设计模式在工作中还是非常重要、非常有用的，23种设计模式中重点研究常用的十来种就可以了，面试中关于设计模式的问答主要是三个方向：</p>
<p>（1）你的项目中用到了哪些设计模式，如何使用</p>
<p>（2）知道常用设计模式的优缺点</p>
<p>（3）能画出常用设计模式的UML图</p>
<h3 id="4、多线程"><a href="#4、多线程" class="headerlink" title="4、多线程"></a>4、多线程</h3><p>这也是必问的一块了。因为三年工作经验，所以基本上不会再问你怎么实现多线程了，会问得深入一些比如说Thread和Runnable的区别和联系、多次start一个线程会怎么样、线程有哪些状态。当然这只是最基本的，出乎意料地，几次面试几乎都被同时问到了一个问题，问法不尽相同，总结起来是这么一个意思：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">假如有Thread1、Thread2、Thread3、Thread4四条线程分别统计C、D、E、F四个盘的大小，所有线程都统计完毕交给Thread5线程去做汇总，应当如何实现？</div></pre></td></tr></table></figure>
<p>聪明的网友们对这个问题是否有答案呢？不难，java.util.concurrent下就有现成的类可以使用。</p>
<p>另外，线程池也是比较常问的一块，常用的线程池有几种？这几种线程池之间有什么区别和联系？线程池的实现原理是怎么样的？实际一些的，会给你一些具体的场景，让你回答这种场景该使用什么样的线程池比较合适。</p>
<p>最后，虽然这次面试问得不多，但是多线程同步、锁这块也是重点。synchronized和ReentrantLock的区别、synchronized锁普通方法和锁静态方法、死锁的原理及排查方法等等，关于多线程，我在之前有些过文章总结过多线程的40个问题，可以参看40个Java多线程问题总结。</p>
<h3 id="5、IO"><a href="#5、IO" class="headerlink" title="5、IO"></a>5、IO</h3><p>再次补充IO的内容，之前忘了写了。</p>
<p>IO分为File IO和Socket IO，File IO基本上是不会问的，问也问不出什么来，平时会用就好了，另外记得File IO都是阻塞IO。</p>
<p>Socket IO是比较重要的一块，要搞懂的是阻塞/非阻塞的区别、同步/异步的区别，借此理解阻塞IO、非阻塞IO、多路复用IO、异步IO这四种IO模型，Socket IO如何和这四种模型相关联。这是基本一些的，深入一些的话，就会问NIO的原理、NIO属于哪种IO模型、NIO的三大组成等等，这有些难，当时我也是研究了很久才搞懂NIO。提一句，<strong>NIO并不是严格意义上的非阻塞IO而应该属于多路复用IO</strong>，面试回答的时候要注意这个细节，讲到NIO会阻塞在Selector的select方法上会增加面试官对你的好感。</p>
<p>如果用过Netty，可能会问一些Netty的东西，毕竟这个框架基本属于当前最好的NIO框架了（Mina其实也不错，不过总体来说还是比不上Netty的），大多数互联网公司也都在用Netty。</p>
<h3 id="6、JDK源码"><a href="#6、JDK源码" class="headerlink" title="6、JDK源码"></a>6、JDK源码</h3><p>要想拿高工资，JDK源码不可不读。上面的内容可能还和具体场景联系起来，JDK源码就是实打实地看你平时是不是爱钻研了。LZ面试过程中被问了不少JDK源码的问题，其中最刁钻的一个问了LZ，String的hashCode()方法是怎么实现的，幸好LZ平时String源代码看得多，答了个大概。JDK源码其实没什么好总结的，纯粹看个人，总结一下比较重要的源码：</p>
<p>（1）List、Map、Set实现类的源代码</p>
<p>（2）ReentrantLock、AQS的源代码</p>
<p>（3）AtomicInteger的实现原理，主要能说清楚CAS机制并且AtomicInteger是如何利用CAS机制实现的</p>
<p>（4）线程池的实现原理</p>
<p>（5）Object类中的方法以及每个方法的作用</p>
<p>这些其实要求蛮高的，LZ去年一整年基本把JDK中重要类的源代码研究了个遍，真的花费时间、花费精力，当然回头看，是值得的—-不仅仅是为了应付面试。</p>
<h3 id="7、框架"><a href="#7、框架" class="headerlink" title="7、框架"></a>7、框架</h3><p>老生常谈，面试必问的东西。一般来说会问你一下你们项目中使用的框架，然后给你一些场景问你用框架怎么做，比如我想要在Spring初始化bean的时候做一些事情该怎么做、想要在bean销毁的时候做一些事情该怎么做、MyBatis中$和#的区别等等，这些都比较实际了，平时积累得好、有多学习框架的使用细节自然都不成问题。</p>
<p>如果上面你的问题答得好，面试官往往会深入地问一些框架的实现原理。问得最多的就是Spring AOP的实现原理，当然这个很简单啦，两句话就搞定的的事儿，即使你不会准备一下就好了。LZ遇到的最变态的是让LZ画一下Spring的Bean工厂实现的UML图，当然面对这样一个有深度的问题，LZ是绝对答不出来的/(ㄒoㄒ)/~~</p>
<h3 id="8、数据库"><a href="#8、数据库" class="headerlink" title="8、数据库"></a>8、数据库</h3><p>数据库十有八九也都会问到。一些基本的像union和union all的区别、left join、几种索引及其区别就不谈了，比较重要的就是数据库性能的优化，如果对于数据库的性能优化一窍不通，那么有时间，还是建议你在面试前花一两天专门把SQL基础和SQL优化的内容准备一下。</p>
<p>不过数据库倒是不用担心，一家公司往往有很多部门，如果你对数据库不熟悉而基本技术又非常好，九成都是会要你的，估计会先把你放到对数据库使用不是要求非常高的部门锻炼一下。</p>
<h3 id="9、数据结构和算法分析"><a href="#9、数据结构和算法分析" class="headerlink" title="9、数据结构和算法分析"></a>9、数据结构和算法分析</h3><p>数据结构和算法分析，对于一名程序员来说，会比不会好而且在工作中绝对能派上用场。数组、链表是基础，栈和队列深入一些但也不难，树挺重要的，比较重要的树AVL树、红黑树，可以不了解它们的具体实现，但是要知道什么是二叉查找树、什么是平衡树，AVL树和红黑树的区别。记得某次面试，某个面试官和我聊到了数据库的索引，他问我：</p>
<blockquote>
<p>你知道索引使用的是哪种数据结构实现吗？</p>
</blockquote>
<p>LZ答到用的Hash表吧，答错。他又问，你知道为什么要使用树吗？LZ答到因为Hash表可能会出现比较多的冲突，在千万甚至是上亿级别的数据面前，会大大增加查找的时间复杂度。而树比较稳定，基本保证最多二三十次就能找到想要的数据，对方说不完全对，最后我们还是交流了一下这个问题，我也明白了为什么要使用树，这里不说，网友朋友们觉得索引为什么要使用树来实现呢？</p>
<p>至于算法分析，不会、不想研究就算了，记得某次面试对方问我，Collections.sort方法使用的是哪种排序方法，额，吐血三升。当然为了显示LZ的博学，对算法分析也有一定的研究(⊙﹏⊙)b，LZ还是硬着头皮说了一句可能是冒泡排序吧。当然答案肯定不是，有兴趣的网友朋友们可以去看一下Collections.sort方法的源代码，用的是一种叫做TimSort的排序法，也就是增强型的归并排序法。</p>
<h3 id="10、Java虚拟机"><a href="#10、Java虚拟机" class="headerlink" title="10、Java虚拟机"></a>10、Java虚拟机</h3><p>出乎LZ的意料，Java虚拟机应该是很重要的一块内容，结果在这几家公司中被问到的概率几乎为0。要知道，LZ去年可是花了大量的时间去研究Java虚拟机的，光周志明老师的《深入理解Java虚拟机：JVM高级特性与最佳实践》，LZ就读了不下五遍。</p>
<p>言归正传，虽然Java虚拟机没问到，但我觉得还是有必要研究的，LZ就简单地列一个提纲吧，谈谈Java虚拟机中比较重要的内容：</p>
<p>（1）Java虚拟机的内存布局</p>
<p>（2）GC算法及几种垃圾收集器</p>
<p>（3）类加载机制，也就是双亲委派模型</p>
<p>（4）Java内存模型</p>
<p>（5）happens-before规则</p>
<p>（6）volatile关键字使用规则</p>
<p>也许面试无用，但在走向大牛的路上，不可不会。</p>
<h3 id="11、Web方面的一些问题"><a href="#11、Web方面的一些问题" class="headerlink" title="11、Web方面的一些问题"></a>11、Web方面的一些问题</h3><p>Java主要面向Web端，因此Web的一些问题也是必问的。LZ碰到过问得最多的两个问题是：</p>
<blockquote>
<p>谈谈分布式Session的几种实现方式</p>
</blockquote>
<p>常用的四种能答出来自然是让面试官非常满意的，另外一个常问的问题是：</p>
<blockquote>
<p>讲一下Session和Cookie的区别和联系以及Session的实现原理</p>
</blockquote>
<p>这两个问题之外，web.xml里面的内容是重点，Filter、Servlet、Listener，不说对它们的实现原理一清二楚吧，至少能对它们的使用知根知底。另外，一些细节的方面比如get/post的区别、forward/重定向的区别、HTTPS的实现原理也都可能会被考察到。</p>
<p>噢，想起来了，一致性Hash算法貌似也被问到了几次，这个LZ以前专门深入研究过并且写了两篇博文，因此问到这个问题LZ自然是答得毫不费力。文章是MemCache超详细解读和对一致性Hash算法，Java代码实现的深入研究，特别说明，LZ真的不是在为自已以前写的文章打广告啊啊啊啊啊啊。</p>
<p>最后，如果有兴趣有时间，建议学习、研究一下SOA和RPC，面向服务体系，大型分布式架构必备，救命良方、包治百病、屡试不爽。</p>
<h2 id="关于HR面试"><a href="#关于HR面试" class="headerlink" title="关于HR面试"></a>关于HR面试</h2><p>如果你过五关斩六将，成功地通过了所有的技术面，那么恭喜你，你离升职加薪、出任CEO、迎娶白富美、走向人生巅峰又进了一步。但是还没有到谈薪资待遇的时候，最后还有一个考验：HR面试。基本所有的大公司都有这一轮的面试，不要小看HR面试，很多公司的HR对于面试者都有一票否决权的—-即使前面的面试对你的评价再高。</p>
<p>所以，这轮的面试也必须重视起来，HR面试主要问的是几点：</p>
<p>1、简历中写的过去工作经历的离职原因</p>
<p>2、当前公司薪资待遇</p>
<p>3、期望能到怎样的一家公司</p>
<p>4、个人未来的发展方向</p>
<p>我专门提一下第2点。可能有人比较排斥也不想说这个，我个人倒是持开放状态，问了就说了，当然一些的夸大还是必要的，当前公司薪资待遇多报个一千块钱完全没问题（毕竟是一家互联网公司总多多少少有些补贴啊什么的嘛）。因为这和你在新公司能拿到的薪水关系不大，新公司能拿到的薪水的决定因素是整个公司的薪资情况以及根据你的面试情况在公司的定位，都是有固定的薪资范围的。HR问这个主要也就是心里有个数并且看你是否诚信—-有些公司入职时会要求你提供最近一家单位的银行流水号。</p>
<p>HR面试就说到这里了，总结起来其实就是四个字：<strong>滴水不漏</strong>。整个面试过程态度积极向上，不要有任何悲观消极的态度（尤其在谈到以前公司情况的时候，即使有再多的不满），就不会有问题。</p>
<h2 id="关于面试心态"><a href="#关于面试心态" class="headerlink" title="关于面试心态"></a>关于面试心态</h2><p>这个嘛，LZ其实在公司也面试过几个人，一半以上的面试者回答问题的时候都属于那种双腿发抖、声音颤抖的类型。在LZ看来这大可不必并且这还是扣分项，回答问题的时候最最基本的两个要求：</p>
<p>1、不紧不慢，平心静气</p>
<p>2、条理清晰</p>
<p>表达能力绝对是面试的时候重要的考察项目。咱们做的是程序员这一行，讲究的是团队协作，不是写作、画画，一支笔、一个人就行了，一个表达能力不行的程序员，要来又有什么用呢？</p>
<p>除此之外，就是保持良好的心态。古语说得好，只要功夫深，铁杵磨成针，面试的成功与否，在于平时的积累，临时抱抱佛脚，看两道面试题是没有用的，只要平时足够努力，成功是水到渠成的事情，平时不怎么研究技术的，那也就是个听天由命的事情，只要充分地展示平时自己的所学就可以了。</p>
<p>因此在我看来，不要把面试当作面试，当做一次技术交流，把<strong>面试的心态从我要找到一份工作转变为我要通过面试去发现不足、提升自己</strong>，这样就会平和多了，即使失败也不会有太多失望的感觉。</p>
<p>另外，如果平时自己热衷于研究技术的朋友，真的要有自信，不要觉得别人面试你别人就比你厉害。面试官未必比你优秀，他问的问题往往都是他平时研究得比较多的问题，你一样有很多自己的研究面试官未必知道。</p>
<h2 id="关于Java"><a href="#关于Java" class="headerlink" title="关于Java"></a>关于Java</h2><p>网上常看到一种说法：Java比较简单。某种程度上这会打击Java程序员的信心—-原来咱们平时用的是这种小儿科的玩意儿啊，在我看来这种想法大可不必，这一部分我来讲讲对于这个话题的看法。</p>
<p>这种说法有些片面，得分开两部分来看，我用四个自总结一下就是：<strong>易学难精</strong>。</p>
<h3 id="1、易学部分"><a href="#1、易学部分" class="headerlink" title="1、易学部分"></a>1、易学部分</h3><p>Java易学我认为有两部分的原因：</p>
<p>（1）很多培训公司包括大四的学生找工作都会学习Java，绝大多数是因为易学。Java从C/C++发展而来，感谢前人的智慧，它消除了C/C++中最复杂和让人困惑的语法、它消除了平台的差异性、它不需要用户手动释放内存空间、它避免了Java程序员和本地语言的交互，让程序员只需要专注于语法层面和应用层面。</p>
<p>（2）Java作为一门面向对象的语言，在企业级开发中体现出了它无与伦比的特性，整个开发流程比较固定化、模块化，需求分析起来也相对容易。我举个自己以前的例子吧，我在大一学习C语言的时候，用C语言写了一个图书管理系统写了2000行+的代码，大四学了C++之后，用面向对象的语言C++取代面向过程的语言C语言重新写了一个功能相似的图书管理系统，只写了1100行的样子，这就是面向对象的优势。</p>
<h3 id="2、难精部分"><a href="#2、难精部分" class="headerlink" title="2、难精部分"></a>2、难精部分</h3><p>接着咱们聊聊难精的部分。</p>
<p>Java语言的设计者帮助Java程序员做了这么多事情，这有利也有弊。有利的部分前面已经说过了，让Java易学，不过有弊的部分同样明显。假如在应用运行过程中遇到了语法层面和应用层面之外的错误，应当如何处理？比如线上环境出现内存溢出怎么办？GC时间过长怎么办？IO长时间没反应怎么办？方法抛出莫名其妙的异常怎么办？</p>
<p>凡此种种，绝不是一名只会写几个if…else…的Java程序员就可以解决的，这需要大量的经历、大量的实践、大量对Java底层实现细节的研究，而这往往是最难、最考验Java程序员的部分，一些人根本就不想往深去研究，另外一些人研究了一点点就研究不下去了。</p>
<p>Java为什么难精？就是这个原因。除非你水平特别高，否则五年工作经验以下的Java程序员在简历上写”精通Java”绝对是一件非常愚蠢的事情。</p>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>文章写到这里，感觉有点像鸡汤文了，那就以最后的鸡汤作为结尾吧。</p>
<p>在以前博客园的一篇文章中，讲到了奔三程序员的困惑，大致说的是三十岁之后程序员要转行之类的云云，LZ在博文中留下了如下的评论：</p>
<p><img src="http://oeckzejn4.bkt.clouddn.com/blog/20161008-222950611.png" alt=""></p>
<p>就以这段话自勉、共勉吧。越努力、越幸运，如果你不是官二代、富二代、红二代，那么请记住：<strong>勤奋才是改变你命运的唯一捷径</strong>。</p>
<p>摘自 <a href="http://www.cnblogs.com/xrq730/" target="_blank" rel="external">五月的仓颉</a></p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 干货 </tag>
            
            <tag> 技能 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[个人godaddy域名备案解决方案]]></title>
      <url>http://chuanqiang.github.io/2016/10/08/blog-record-by-aliyun/</url>
      <content type="html"><![CDATA[<p>Godaddy申请的域名怎么样备案？不在国内申请的域名能不能备案？为什么一定要备案？自己就写个个人博客，不备案不行吗？这几个问题是当我开始运营独立博客的时候，遇到的困惑，我在网络上疯狂的找资料，却没有发现有一篇文章能够清楚的说明些问题，当然如果你已经很熟悉备案的整个事情，那么这篇文章不适合你看，没必要浪费你的时间！</p>
<a id="more"></a>
<h1 id="一、什么是备案？"><a href="#一、什么是备案？" class="headerlink" title="一、什么是备案？"></a>一、什么是备案？</h1><p>来自百度百科的解释 <a href="http://baike.baidu.com/view/33319.htm" target="_blank" rel="external">http://baike.baidu.com/view/33319.htm</a></p>
<blockquote>
<p>网站备案是指向主管机关报告事由存案以备查考。行政法角度看备案，实践中主要是《立法法》和《法规规章备案条例》的规定。<strong>网站备案的目的就是为了防止在网上从事非法的网站经营活动，打击不良互联网信息的传播</strong>，如果网站不备案的话，很有可能被查处以后关停。<br>网站备案、ICP备案、域名备案和空间备案这四个名词本质是讲是<strong>一样</strong>的，即为<strong>网站申请ICP备案号</strong>，不管你的域名是什么，在哪里注册，空间是什么，服务商在哪里。但这并不意味着你建立个个人博客站点就一定需要备案！</p>
</blockquote>
<h2 id="1-1-哪些情况需要备案"><a href="#1-1-哪些情况需要备案" class="headerlink" title="1.1 哪些情况需要备案"></a>1.1 哪些情况需要备案</h2><ol>
<li>在国内申请的域名，如万网等服务商</li>
<li>凡是在中国大陆境内购买服务器的用户需备案，即你的网站空间在国内。</li>
</ol>
<p>如果你像我一样，域名ixirong.com申请自国外服务商，如 <a href="http://www.godaddy.com/" target="_blank" rel="external">Godaddy</a> ，网站内容托管在国外服务商，如github或者买的国外的虚拟主机，那么<strong>你不需要备案</strong>！！这也就意味着，如果你想搭建个博客站点，还不想捣鼓这麻烦的备案流程，那么你唯一的做法就是，<strong>在国外服务商申请域名+购买国外的空间</strong>（或者使用国外免费的空间如github托管静态站点），常见的国外域名服务商如Godaddy等</p>
<h2 id="1-2-备案流程"><a href="#1-2-备案流程" class="headerlink" title="1.2 备案流程"></a>1.2 备案流程</h2><p>备案有两种方式，一种是自己去下载资料按照步骤一步步操作（很麻烦），另一种（推荐）找个国内的服务商，如阿里云、腾讯云等，都提供了备案的流程，按照操作来做就很简单。</p>
<p>第一种介绍：<a href="http://beian.vhostgo.com/wen.asp" target="_blank" rel="external">互联网非经营性网站 ICP 备案系统</a>，按照这个流程来即可。<br>第二种也是整篇文章的主旨重点，详细如下：</p>
<h3 id="1-2-1-Godaddy注册域名托管国外github服务商如何备案？"><a href="#1-2-1-Godaddy注册域名托管国外github服务商如何备案？" class="headerlink" title="1.2.1 Godaddy注册域名托管国外github服务商如何备案？"></a>1.2.1 Godaddy注册域名托管国外github服务商如何备案？</h3><p>ixirong.com 注册自国外域名厂商 godaddy ，文章内容使用 <a href="http://hexo.io/" target="_blank" rel="external">hexo</a>博客系统生成静态文件托管到 <a href="https://github.com/" target="_blank" rel="external">Github</a>上面，个人认为很Geek，而且免费的！<br>可是当文章越来越多，静态资源如图片、下载文件等需要放到专业的存储上，ixirong.com 采用的是国内的<a href="https://portal.qiniu.com/signup?code=3lkd3gonyuhjm" target="_blank" rel="external">七牛云存储</a>，有免费的策略，当流量越来越大的时候，想使用一些CDN服务，如阿里云、腾讯云CDN、七牛CDN，可是这些厂商<strong>自定义域名，要求域名必须备案</strong>，这也就是这篇文章的由来，说说我的解决方案：</p>
<ul>
<li>ixirong.com 域名注册自Godaddy，内容部署到Github上，上面已经讲过，DNS解析选择DNSPod，这样整个网站访问就ok了，具体参考<a href="https://support.dnspod.cn/Kb/showarticle/tsid/42/" target="_blank" rel="external">Godaddy注册商域名修改DNS地址</a></li>
<li>申请 <a href="http://www.net.cn/hosting/free/?spm=5334.734987.6.1.J2A9Cq" target="_blank" rel="external">万网免费虚拟主机</a> ，部署自己的博客程序内容</li>
<li>依托 <a href="http://beian.aliyun.com/?spm=5334.1600347.1.23.P4msho" target="_blank" rel="external">万网的备案系统</a> ，按照步骤一步步操作，申请备案。</li>
</ul>
<p>阿里云的这个备案的流程很清楚详细，我就是按照这个流程来进行备案的<a href="http://help.aliyun.com/knowledge_detail.htm?knowledgeId=5974952" target="_blank" rel="external">http://help.aliyun.com/knowledge_detail.htm?knowledgeId=5974952</a> ，写这篇文章的时候，备案正在过程中，不过这样子是ok的，可以搞定！ <strong>整个备案过程没有花费一分钱</strong>，感谢这些伟大的互联网公司。</p>
<p>虽然国外注册的域名+国外的服务商<strong>不需要备案</strong>，如果要有我这样子的需求，还是得备案下，这就是我的解决方案，仅供参考!</p>
<p>2015-04-30 更新<br>整个备案过程ok，ixirong.com 已经备案，备案号可参考页脚，整个过程从04-15日提交申请到04-27日批准，12天，不到两周工作日，还算顺利。</p>
<p>另外，你如果使用阿里元提供的服务，比如云主机、云数据库、监控等，可以使用xirong的优惠码SA7V6K，享受10%的优惠！</p>
<p>摘自 <a href="http://www.ixirong.com/2015/04/15/how-blog-record-by-aliyun/" target="_blank" rel="external">自由的博客</a></p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 域名 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[古龙·断章·小札【壹】：多情剑客无情剑]]></title>
      <url>http://chuanqiang.github.io/2016/10/02/GuLong-duoqingjkwqj/</url>
      <content type="html"><![CDATA[<p>十年前，朝廷里的风流翰林，兵器谱上排名第三的探花郎黯然出关，展开自我放逐生涯。十年后，流放者归来。</p>
<a id="more"></a>
<p>这本书在台湾出版时，分为上下两部《风云第一刀》和《铁胆大侠魂》。上部写歼灭梅花盗，下部叙与上官金虹争雄。上部极写“冬”，李寻欢十年后从关外回家，不管眼见何物，都将他迅速带入十年前的情境，带出李寻欢对林诗音的苦恋，寒气逼人；下部极写“秋”，兵器谱上的名角纷纷出场，几乎每一场决战都足以载入武侠史册，带出阿飞对林仙儿的痴恋，风雨萧瑟。</p>
<p>小说的两个部分，味道节奏泾渭分明。上部抒情、舒缓，下部铿锵、紧凑。把它们像珍珠般串在一起的，是李寻欢的回忆。</p>
<h2 id="追忆"><a href="#追忆" class="headerlink" title="追忆"></a>追忆</h2><p>《多情》倾尽了古龙的热情和心血，这是一部用他的生命书写的失败之书。作品里头，找不到一个真正的赢家。</p>
<p>从李寻欢入关，到阿飞远行，淡淡的忧伤笼罩全书。和其它武侠人物不同的是，李寻欢并不生活在此时此地，他真正为之沉醉的，只有自己的回忆：</p>
<blockquote>
<p>十年前，他放弃了他所有的一切，黯然出关去的时候，也曾路过这里，那时正是春暖花开的时候。<br>他记得这附近有个小小的酒家，远远就可以看到那高挑的青帘，所以他也曾停下车来，去喝了几斤酒。<br>酒虽不佳，但那地方面对青山，襟带绿水，春日里的游人很多，他望着那些欢笑着的红男绿女，一杯杯喝着自己的苦酒，准备从此向这十丈软红告别，这印像令他永远也不能忘记。<br>现在，他想不到自己又回到这里，经过了十年的岁月，人面想必已全非，昔日的垂髫幼女，如今也许已嫁作人妇，昔日的恩爱夫妻，如今也许已归于黄土，就连昔日的桃花，如今已被掩埋在冰雪里。<br>可是他希望那小小的酒家仍在。<br>……<br>冰雪中的世界，虽然和春风中大不相同，但他经过这条路时，心里仍不禁隐隐感觉到一阵阵刺痛。<br>财富、权势、名誉和地位，都比较容易舍弃，只是那些回忆，那些辛酸多于甜蜜的回忆，却像是沉重的枷锁，是永远也抛不开，甩不脱的。<br>李寻欢自怀中摸出个扁扁的酒瓶，将瓶中的酒全灌进喉咙，等咳嗽停止之后，才再往前走。<br>他果然看到了那小小的酒家。<br>那是建筑在山脚下的几间敞轩，屋外四面都有宽阔的走廊，朱红的栏杆，配上碧绿的纱窗。<br>他记得春日里这里四面都开遍了一种不知名的山花，缤纷馥郁，倚着朱红的栏杆赏花饮酒，淡酒也变成了佳酿。<br>如今栏杆上的红漆已剥落，红花也被白雪代替，白雪上车辙马蹄纵横，还可以听到屋后有马嘶声随风传出。</p>
<p>李寻欢一走进门，又一脚踏入十年前的回忆里。<br>这屋子里的一切竟都和十年前没有丝毫变化，一桌一几，也依旧全都安放在十年前的位置，甚至连桌上的笔墨书籍，都没有丝毫变动，若不是在雪夜，那窗前明月，屋角斜阳，想必也都依旧无恙。<br>李寻欢仿佛骤然又回到十年前，时光若倒退十年，他也许刚陪林诗音数过梅花，也许正想回来取一件狐裘为她披上，也许是回来将他们方自吟出的佳句记下，免得以后遗忘。<br>但现在李寻欢想去遗忘时，才知道那件事是永远无法遗忘的，早知如此，那时他又何苦去用笔墨记下？<br>雪，又在落了。<br>雪花轻轻地洒在窗子上，宛如情人的细语。<br>……<br>李寻欢在一张宽大的、铺着虎皮的紫檀木椅上坐了下来，这张椅子，只怕比他的年纪还要大些。<br>他记得自己很小的时候，总是喜欢爬到这张椅子上来为他的父亲磨墨，他只希望能快些长高，能坐到椅子上，那时他心里总有一种奇妙的想法，总是怕椅子也会和人一样，也会渐渐长高。<br>终于有一天，他能坐到椅子上了，他也已知道椅子绝不长高，那时他又不禁暗暗为这张椅子悲哀，觉得它很可怜。<br>但现在，他只希望自己能和这张椅子一样，永不长大，也永远没有悲伤，只可惜现在椅子仍依旧，人却已老了。</p>
</blockquote>
<p>《多情》最大的魅力，也许就在于对逝去时光的追忆和感伤。往者不可留，逝者不可追。李寻欢的肉身驻留在“此时”，他的灵魂却一次次地回到十年前的“彼日”。失去的东西是最宝贵的，因为我们无法改变历史，而记忆仿佛一个过滤器，把悲惨和不幸逐渐筛选剔尽，最后只剩下甜蜜的回忆。所以李寻欢永远郁郁寡欢，就算林诗音重回他的怀抱，也无法让他停止感伤。</p>
<p>王国维《人间词话》有言：“不知一切景语，皆情语也。”冰雪、酒家、梅花，特别是充当李寻欢记忆载体的“小楼”，这些富于视觉冲击力的意象，凝结着李寻欢的痴情和苦恋。小楼虽近在咫尺，又远在天外。李寻欢在孙驼子的酒家里一呆三年，既是守候小楼，也是守候自己记忆和情感的故乡。</p>
<p>空间不变，而时间在“十年前”和“十年后”不断切换，只为了传达一个讯息：故园还是十年前的故园，人却已不是十年前的人了。人面不知何处去，桃花依旧笑春风……这不仅仅是李寻欢一个人的悲欢，也是全人类共有的悲欢。古龙借助李寻欢不断回忆的遭遇过往，准确击中了每个读者的软肋。</p>
<p>按照接受美学的理论，文学史是读者阅读的效应史，一本好书应该由作者和读者共同创作。从这个角度看来，古龙无疑深得其中三昧，他的反覆吟咏一唱三叹，充分调动起读者隐藏（甚至已忘却）的记忆，李寻欢的情义两难、无以为家，也与他们的期待视野暗合。正如一千个人就有一千个《哈姆雷特》一样，每个人都可以有自己心中的《多情》。</p>
<h2 id="求道"><a href="#求道" class="headerlink" title="求道"></a>求道</h2><p>《多情》一书，没有完全的反面角色。赵正义之流的卑鄙小人，只是江湖里的渣滓和边角料，不值一提。活跃在《多情》舞台上的主要角色，无不超越了狭隘的道德立场，他们的矛盾与冲突，皆来源于对“道”的索求。</p>
<p>1999年，作家李弘发表了不大为人注意的中篇小说《春江花月夜》，把禅宗引入声色犬马的城市生活。主人公“我”花钱包了一个歌舞团的三流舞星，给她念吕洞宾的诗和禅宗的偈子，最终使她凤凰涅磐，跳出惊天一舞。在此之前，“我”只是压抑自己的欲望，因为在求得“道”之前，必须经历苦行。“我”追求的，是舞之道。</p>
<p>刀之锋刃，渡之者稀。能够摆脱红尘束缚，最终得道的，自然是江湖的宠儿，武林中的成功人士。</p>
<p>《多情剑客无情剑》里的各色人等呢？</p>
<p>李寻欢追求情之道，郭嵩阳追求武之道，林仙儿追求欲之道，上官金虹追求权之道……他们忠实于自己的追求，除此之外别无其它。有趣的是，当他们背叛自己追求的“道”时，不论出发点是否向善，他们都遭到了“道”的无情嘲弄。</p>
<p>李寻欢极痴于情，却把林诗音拱手相让，换来了十年的郁郁寡欢。郭嵩阳从未将对手放在眼里，独与李寻欢惺惺相惜，结果败于后者之手，以醇酒美人打发时日。林仙儿肉身布施永无真情，她爱上阿飞的一刻，就是她彻底崩溃的一刻。上官金虹为了权力活着，在最后关头却以身试刀，这一刹那间他似乎忘记了权力——代价就是他的生命。</p>
<p>小说里出现了如此之多的痴于“道”的角色，他们不为活着本身活着，也懒得去追寻生命的意义，因为他们已经把自己的一切都奉献于“道”。这是一条苦行僧之路，倘若出轨，万劫不复。“道”就是他们的枷锁，锁住了他们的肉体和灵魂。</p>
<p>小说外的人呢？《多情》是古龙颠峰期的开始，也是古龙破旧立新、斩断前缘的标志性作品，他痴迷的“道”，就是创作。当他发现自己已无力为武侠小说再开新局的时候，死神就攫取了他的生命。</p>
<p>十年后，古龙在《英雄无泪》里说：</p>
<blockquote>
<p>歌女的歌，舞者的舞，剑客的剑，文人的笔，英雄的斗志，只要是不死，就不能放弃。</p>
</blockquote>
<h2 id="情道"><a href="#情道" class="headerlink" title="情道"></a>情道</h2><p>李寻欢的诗人气质注定了他的孤独。他肯定同意里尔克的一句话：</p>
<blockquote>
<p>爱你的寂寞，负担那它以悠扬的怨诉给你引来的痛苦。</p>
</blockquote>
<p>他最后选择了孙小红，这个选择实在缺乏说服力。与孙小红在一起的时候，李寻欢游刃有余，在林诗音面前，他却手足无措：</p>
<blockquote>
<p>李寻欢刚踏上小楼，就骤然呆住。<br>漫长的十年，似已在这一刹那间忽然消逝，他似已又回到十年前，望着那静垂着的珠帘，他的心忽然急促地跳了起来，跳得就像是个正坠入初恋的少年——十年前的温柔、十年前的旧梦……</p>
</blockquote>
<p>再来看看李寻欢和林诗音的初次相遇：</p>
<blockquote>
<p>李寻欢第一次看到林诗音的时候，他也还是个孩子。<br>那天正在下雪。<br>庭园中的梅花开得正好，梅树下的雪也仿佛分外洁白。<br>那天李寻欢正在梅树下堆雪人，他找了两块最黑最亮的煤，正准备为这雪人嵌上一双明亮的眼睛。<br>这是他最愉快的时候。<br>他并不十分喜欢堆雪人，他堆雪人，只不过是为了要享受这一刹那间的愉快——每当他将“眼睛”嵌上去的时候，这臃肿而愚蠢的雪人就像是忽然变得有了生命。每当这一刹那间，他总会感觉到说不出的满足和愉快。<br>他一向喜欢建设，憎恶破坏。<br>他热爱着生命。<br>他总是一个人偷偷地跑来堆雪人，因为他不愿任何人来分享他这种秘密的欢愉，那时他还不知道欢愉是绝不会因为分给别人而减少的。<br>后来他才懂得，欢乐就像是个聚宝盆，你分给别人的越多，自己所得的也越多。<br>痛苦也一样。<br>你若想要别人来分担你的痛苦，反而会痛苦得更深。<br>雪人的脸是圆的。<br>他正考虑着该在什么地方嵌上这双眼睛，他多病的母亲忽然破例走入了庭园，身旁还带着个披着红氅的女孩子。<br>猩红的风氅，比梅花还鲜艳。<br>但这女孩子的脸却是苍白的，比雪更白。<br>红和白永远是他最喜爱的颜色，因为“白”象征纯洁，“红”象征热情。<br>他第一眼看到她，就对她生出了一种说不出的同情和怜惜，几乎忍不住要去拉住她的手，免得她被寒风吹倒。<br>他母亲告诉他：“这是你姨妈的女儿，你姨妈到很远很远的地方去了，所以她从今天开始，就要住在我们家里。”<br>“你总是埋怨自己没有妹妹，现在我替你找了个妹妹来了，你一定要对她好些，绝不能让她生气。”<br>可是他几乎没有听到他母亲在说些什么。<br>因为这小女孩已走了过来，走到他身边，看着他的雪人。<br>“他为什么没有眼睛？”她忽然问。<br>“你喜不喜欢替他装上对眼睛？”<br>她喜欢，她点头。<br>他将手里那双黑亮的“眼睛”送了过去。<br>他第一次让别人分享了他的欢愉。<br>自从这一次后，他无论有什么，都要和她一齐分享，甚至连别人给他一块小小的金橘饼，他也会藏起来，等到见着她时，分给她一半。<br>只要看到她的眼睛里露出一丝光亮，他就会觉得前所未有的愉快，永远没有任何能代替的愉快。<br>他甚至不惜和她分享自己的生命。<br>“她也一样。”他知道，他确信。<br>甚至当他们分离的时候，在他心底深处，他还是认为只有他才能分享她的痛苦，她的欢乐，她的秘密，她的一切。<br>他确信如此，直到现在……</p>
</blockquote>
<p>引用的部分很长，但我实在割舍不下——单拈出此一章节，已是很优美的一篇关于初恋的散文。可惜，十年之后，李寻欢和林诗音的每一次会面，空气里仿佛都有佛家三苦萦绕。</p>
<p>怨憎会。龙啸云被李寻欢一手赐予的幸福生活，在他入关后被打得粉碎。像龙啸云这样意图染指江湖统治权的野心家，绝对无法忍受别人的施舍，哪怕这种施舍仅仅出于善意的友情。林诗音识破了他的真面目，却又离不开他。</p>
<p>爱别离。李寻欢佯装放荡疏浪，逼着林诗音另投怀抱，随后就是十年的别离。重逢后的李寻欢对她有两种面孔，一种友善亲切，仿佛古井不波，总是保持着适当距离；一种是尖锐的讥刺，继续扮演无行浪子的角色。林诗音看穿了他的真心，却又见不得他。</p>
<p>求不得。最爱的情人和最好的朋友，这样的一个两难选择，对于真正的浪子而言，恐怕根本不是问题。遗憾的是李寻欢骨子里是名士，而不是浪子。他是科举考试的胜利者，也曾站在百官行列中向天子跪拜。他遵守世俗的规矩和准则，由此丧失了与林诗音复合的可能性。他的理智一直强有力地控制着他的感情，只有通过酒精和雕刻才能发泄一二。</p>
<p>拒绝爱情成全了李寻欢。他成为堕落于红尘中的王子，他的飞刀技艺从未衰退，因为他一定要维护他的秘密与他的骄傲。李寻欢绝不热爱漂泊无依的生活，不喜欢逢迎酬酢，在日复一日的孤独里，依靠与生俱来的优越感，他的内心淬练得愈加强大。上官金虹第一次看到这个落拓沧桑的刀客，就以敏感的锐识洞穿了他的内心，知道自己遇到了一生中最可怕的对手。</p>
<p>古龙在散文《却让幽兰枯萎》里说：</p>
<blockquote>
<p>有时候我也会想，在我那一阵终日忙着去灌溉野生的蔷薇时，是不是也曾有幽兰为我枯萎。</p>
</blockquote>
<p>这就是浪子的秘密。与他们一起厮混的，是豪爽、活泼、出身市井、不让须眉的风四娘和孙小红，但他们内心里向往的，却是文静、高贵、书卷气浓的沈璧君和林诗音。</p>
<p>最后的“蛇足”，古龙很慷慨地给了李寻欢和孙小红一个美好的结局，林诗音也哀哀地对孙小红说：“你比我更适合他。”这很像是有人痛揍了你一顿，然后用力把你的嘴角掰开，希望你脸上能够露出一丝类似笑容的东西。当然了，对他的好意，我们很感激。有了这个蛇足，古龙才成其为古龙，躺在黑暗泥沼中仰望星空的古龙。</p>
<h2 id="欲道"><a href="#欲道" class="headerlink" title="欲道"></a>欲道</h2><p>如果要推选武侠小说里的荡妇代表，林仙儿当仁不让，舍我其谁。她不是在床上，就是在去床上的路上。</p>
<p>古龙对待爱情的态度消极无力。他小说里的男人往往是感情上的被动角色，如楚留香、陆小凤之类的风流浪子，也大多有女孩子主动投怀送抱，他们只要视乎情况，加以选择。《多情》里出现的就是两种典型范式：邻家少女对中年男子的出击（孙小红对李寻欢），性感尤物对青涩少年的诱惑（林仙儿对阿飞）。</p>
<p>这种设计，当然有男权主义的影子在，但是究其根底，是不是也有作家本人自卑的灵魂作祟呢？</p>
<p>情欲对男人为人处事所产生的影响，很少有人能比出入欢场如家常便饭的古龙更清楚。所以他把荷尔蒙的味道注入作品，直接迈过武侠小说的童真年代，一手提升了武侠小说的成熟维度。早在《护花铃》，古龙已经开始描写在理智和情感之间摇摆沉沦的情欲焚身的少年人。那些行过处花香细生，坐下时淹然百媚的性感少妇，是古龙小说里的美杜莎，身上释放出无孔不入的致命诱惑。</p>
<p>对这类女人的恐惧，东西方竟然有不约而同的认识。一战后，美国硬汉派小说和好莱坞黑色电影充斥着蛇蝎心肠的金发美女，男人若是拜倒在石榴裙下，等待他们的很可能就是绞架。而中国《水浒传》式的江湖传统逻辑更是为人熟悉：能够视美女如粪土的，才是真正的英雄好汉。</p>
<p>初出茅庐的阿飞遇上了林仙儿，这是江湖赐予他最严厉的一次考验。他的困境正如浮士德所言：</p>
<blockquote>
<p>有两种精神居住在我的心胸，一个要沉溺在迷离的爱欲之中，另一个是猛烈地要离尘凡向崇高的灵的境界飞驰。</p>
</blockquote>
<p>不是沉沦苦海，就是欲火重生，其间没有第二种选择。</p>
<p>阿飞最终“忽然想通了”，他完成了不亚于李寻欢战胜上官金虹一般的壮举，完成了从武艺到精神的一次飞跃。到了《边城浪子》，已是千帆过尽的阿飞坐在小铺里慢慢吃面，面对傅红雪的快刀，内心完全平静。</p>
<p>在欲场的决斗里，林仙儿一败涂地。她的失败在之前已经埋下了种子，第一次，她想挑拨阿飞与李寻欢的关系：</p>
<blockquote>
<p>在这一瞬间，林仙儿才知道自己错了。<br>她本来一直以为自己已完全控制住了阿飞，现在才知道这想法错得多么厉害。<br>阿飞的确是爱她的，爱得很深。<br>但在一个男人的生命中，却还有很多很多比“爱”更重要的事——比生命都重要的事。<br>……<br>阿飞道：“我要你明白，李寻欢是我的朋友，我不许任何人侮辱我的朋友……任何人！”</p>
</blockquote>
<p>最致命的打击是在第二次，阿飞坦然应承杀死了上官金虹的儿子，林仙儿觉察到自己的心动：</p>
<blockquote>
<p>他随随便便就将这句话说了出来，连眼睛都没有眨，简直就像是完全不知道这句话能引起什么样的后果。<br>屋子里的少女们都吓呆了。<br>就连林仙儿都吓了一跳，在这刹那间，她心里忽然有了种很奇异的情感，竟仿佛有些悲哀，有些怜惜。<br>她不知道自己怎会对阿飞有这种感情。</p>
</blockquote>
<p>这很可能是她一生中唯一一次为别人的真情感动。情感迷惑了她的判断，让她走出大俗手，孤注一掷，把所有的筹码都押在了上官金虹身上。</p>
<p>上官金虹是什么人？予智予雄，人皆工具，一切为我所用。林仙儿的悲惨结局就此注定。</p>
<h2 id="权道"><a href="#权道" class="headerlink" title="权道"></a>权道</h2><p>当魅力四射的枭雄们想在江湖建立等级秩序的时候，他们遭到了无政府主义者的强烈抵抗。</p>
<p>金庸的《笑傲江湖》，任我行、岳不群、左冷禅等人都想成为江湖霸主，于是阴谋诡计钩心斗角无所不为。金庸写的是寓言，官场政治的寓言。</p>
<p>古龙笔下的权力角逐者与他们大异其趣。快活王、上官金虹、老刀把子等人不屑搞暗地里的腌臜勾当，他们依靠的是自己的强人魅力。古龙对官场文化毫无兴趣，他关心的始终是张扬着强烈生命力的个人——或正或邪，生要精彩，死要灿烂。古龙写的是童话，世道人心的童话。</p>
<p>上官金虹摒弃了一切享乐，他办公的地方甚至没有一张椅子，因为他和写作时的海明威一样，随时随地都要站着，保持清醒冷静的头脑。上官金虹为什么要对李寻欢除之而后快？在《多情》的个体江湖里，李寻欢只是一个独立于江湖秩序之外的逍遥派，上官金虹完全可以对他不管不顾，追求自己的王图霸业。他刮起了席卷武林的风暴，何必在意一粒尘埃？</p>
<blockquote>
<p>克尔凯郭尔说：每一种事情都变得非常容易之际，人类就只有一种需要了——需要困难。</p>
</blockquote>
<p>所以快活王在明知沈浪并不可靠的情况下，还是收他当了心腹；所以老刀把子计划成功，完全压倒陆小凤的一刻，依然和后者奋力一搏，要让对手力尽下跪；所以上官金虹单独与李寻欢决战，甚至手下留情，只为了接一次传说中例不虚发的小李飞刀。</p>
<p>在征服了一切，包括权力的时候，他们又对自己提出了更高的目标。他们不仅要超越他人，还要超越自己，超越恐惧和一切未知的事物。</p>
<p>这是古龙式的浪漫主义，你可以邪恶，但你不能猥琐。你追求权力，但你内心里始终有比权力更重要的东西在。若不是如此，你不仅没资格成为大侠，甚至没资格成为大盗。</p>
<p>传统武侠小说的游戏规则是，主人公战胜仇人之后，马上娇妻美妾左拥右抱，当上武林盟主，从此过着幸福快乐的日子。古龙的小说呢？他多次描写主角胜利后说不出的疲倦和无奈。因为他们击败的是值得尊敬的对手，有些对手，在精神境界上甚至比他们更强大。</p>
<p>有何胜利可言？挺住即是一切。</p>
<h2 id="武道"><a href="#武道" class="headerlink" title="武道"></a>武道</h2><p>每个社会都有阶级。划分阶级的标准，可能是金钱，可能是出身，可能是权力，可能是才华，当然也可能是武艺。</p>
<p>如果把江湖看成现实社会的缩影，那么在竞技场上角逐的武林高手们，相当于如今占据各个行业、争夺资源分配权的大佬。福布斯百富排行榜何尝不是商业社会的兵器谱？</p>
<p>武侠武侠，侠不可缺，武也万万不可缺，否则小说立成无源之水无本之木，失去了它的隐喻价值。</p>
<p>古龙的小说里，兵器和武艺往往是侠客本人气质的投射，使用不同的武器，人品心性可能判然分明。用拳脚者，多是人情练达、左右逢源的快乐侠客，如沈浪、楚留香、陆小凤、卜鹰；用剑者，多是沉迷于武道的武坛艺术家，如白衣人、郭嵩阳、西门吹雪、燕十三；用刀者，多流连市井，食人间烟火，内心中往往有不为人知的隐痛，如李寻欢、萧十一郎、傅红雪。</p>
<p>古龙似乎认为，剑客与其它的侠客不同，他们来自一个没有感情的世界，剑就是他们的信仰和神氏，他们必须抛弃十丈软红，在追索剑道的过程中淬练生命。正如郭嵩阳所说：“郭某此生已献与武道，哪有余力再交朋友？”</p>
<p>他选择了与李寻欢为敌，并与后者携手上演了一场新派武侠史上的经典之战。他在决斗中落败，却赢回了一个朋友。</p>
<p>郭嵩阳是《多情》里最纯粹的武人，他没有丝毫的私心杂念，用剑捍卫自己的尊严，毕生为攀登武道颠峰而活着，不对任何人和事动情。直到他遇到李寻欢。</p>
<p>荒木飞吕彦的《乔乔奇妙冒险》第二部，反派卡滋败于主角之手，不仅毫无怨尤，反而在即将死亡的一刻，说了这么一句话：</p>
<blockquote>
<p>我流浪了一万年，可能是为了遇到你……</p>
</blockquote>
<p>技艺已达常人无法想望的平台，高处不胜寒。若有谁能够了解他们的内心世界，便是肝胆相照的知己仇敌。所以郭嵩阳为李寻欢慨然赴死，吕凤先为李寻欢佯败给阿飞，甚至上官金虹也破例与李寻欢干杯。</p>
<p>在这个社会里，武艺低微的人是没有发言权的，只有被同情和被拯救的价值。当然也有例外，比如铁传甲。</p>
<h2 id="义道"><a href="#义道" class="headerlink" title="义道"></a>义道</h2><p>《多情》一书，人物有各种千奇百怪的死法，小配角如游龙生之流，死亡场面也大有可观。但最让我动容的，还不是郭嵩阳的舍生取义，而是铁传甲和中原八义在地下室里的火拼：</p>
<blockquote>
<p>铁传甲忽然笑了，此时此刻，谁也不知道他为何而笑。<br>他笑得实在有些令人毛骨悚然，大笑道：“原来你们只不过想亲手杀了我，这容易……”<br>他反手一拳，击退了面前的黄衣人，身体突然向公孙雨冲了过去——对准公孙雨的刀锋冲了过去。<br>公孙雨一惊，短刀已刺入了铁传甲的胸膛！<br>铁传甲胸膛还在往前挺，牛一般喘息着，道：“现在……我的债总可还清了吧！你们还不走？”<br>公孙雨的脸在扭曲，忽然狂吼一声，拔出了刀。<br>鲜血雨点般溅在他胸膛上。<br>他的吼声突然中断，扑地倒下，背脊上插着柄三尺花枪。<br>枪头的红缨还在不停地颤抖。<br>铁传甲也已倒下，还在重复着那句话。<br>“我的债总算还清了……你们为何还不走？”<br>公孙雨突又狂吼一声，扑在他身上，哽声道：“我们一定错了，他绝不是……”<br>声音又中断。<br>公孙雨背上又多了柄花枪，枪！双枪！<br>……<br>易明堂那已瞎了几十年的眼睛里，竟慢慢地流出了两滴眼泪。<br>李寻欢在看着，看得很清楚。<br>他第一次知道瞎子原来也会流泪。<br>他自己又何尝不是早已热泪盈眶？<br>热泪就滴在铁传甲已逐渐发冷的脸上，他俯下身，用衣角轻轻擦拭铁传甲脸上的血和汗。</p>
</blockquote>
<p>在礼崩乐坏的年代，以李寻欢跟班面目出现的铁传甲，阐释了义薄云天四个字的含义。在这一瞬间，他让李寻欢黯然失色。</p>
<p>做李寻欢的朋友，实在是一件很危险的事情——李寻欢介入朋友的生活，他们无不偏离自己的行动轨道，然后或疾或徐陨灭。到了最后，我们惊奇地发现，最年轻、最不成熟的阿飞，反而是李寻欢身边唯一一个存活的朋友。</p>
<p>李寻欢和阿飞的相交，从第一章“飞刀与快剑”开始，到最后一章“蛇足”结束，贯穿了整部《多情》。阿飞为李寻欢冒充梅花盗，李寻欢为阿飞束手就缚，两人之间的情义纠缠，是《多情》交响乐中最响亮的音符。</p>
<p>但他们的感情并不是纯粹的友情，反而更像是亦师亦友的父子之情。父亲一方面可以为儿子牺牲，另一方面又希望儿子可以沿着他布置好的道路走下去，却不知儿子早在不知不觉间已走出了他的视线范围。阿飞后来对李寻欢的痛责，定有着反抗父权般的心理因素存在。</p>
<p>幸运的是，李寻欢施加给阿飞的影响是绝对正面的。他以自己的温情和坚持，慢慢同化了这个秉持“不成名，只有死”原则的孤傲少年：</p>
<blockquote>
<p>李寻欢道：“你就算将他们全都杀了也没有用，还是没有人会承认你杀了梅花盗，这道理你难道还不明白么？”<br>阿飞发亮的眼睛渐渐变成灰色，缓缓道：“不错，我明白了，我明白了……”<br>李寻欢笑了笑道：“你若想成名，最好先明白这道理，否则你就会像我一样，迟早还是要变成梅花盗。”<br>阿飞道：“你的意思是说，我若想成名，最好先学会听话，是么？”<br>李寻欢笑道：“一点也不错，只要你肯将出风头的事都让给这些大侠们，这些大侠们就会认为你‘少年老成’，是个‘可造之才’，再过个十年二十年，等到这些大侠们都进了棺材，就会轮到你成名了。”<br>阿飞沉默了半晌，忽然笑了笑。<br>这笑容看来是那么潇洒，却又是那么寂寞。<br>他微笑着道：“如此看来，我只怕是永远也不会成名的了。”</p>
</blockquote>
<p>这是阿飞在《多情》里最潇洒的瞬间，和他最后甩脱林仙儿的段落不相伯仲。义之所在，虽千万人吾往矣。</p>
<p>两人的友情使得《多情》拥有了武侠小说中少见的双线结构，齐头并进，一边是阿飞成熟化的成长故事，一边是李寻欢世俗化的回归故事，时进时退，形成了奇妙的对比。</p>
<h2 id="文道"><a href="#文道" class="headerlink" title="文道"></a>文道</h2><p>纵观古龙六十八部小说，《多情剑客无情剑》无疑是其中最重要、也最有代表性的一部。作家的才华至此爆发，进入了真正意义上的“古龙写作”。</p>
<p>武侠小说的文体革命正式掀起，以诗为文，一句一段，长短句交错，字里行间又有内在的逻辑，形成强烈的张力。文字之外，古龙在人性的冲突和矛盾中提炼出残酷的诗意，熔冶成文，充沛饱满的感情几乎要溢出书外。</p>
<p>场景蒙太奇的切换技巧，已经完全成熟。李寻欢和上官金虹以禅论战探索武学颠峰的同时，阿飞正在绝望的沉沦和堕落。一页之中已是两重天地，古龙精确控制着读者的情绪，欲大起时大起，欲大落时大落，行于所当行，止于不可不止。</p>
<p>存在主义思想的引入、极端人性的刻画、对武学的新定义、兵器谱概念的提出……很难想象，一部小说可以同时取得这么多方面的成就。</p>
<p>《多情》是动人心弦的悲剧，李寻欢身边虽有一友一女，但他孤星入命的形象，已经印在每一个读者心中。</p>
<blockquote>
<p>瓦莱里说：美的定义是容易的：它是让人绝望的东西。</p>
</blockquote>
<p>不管古龙本人是否承认，也许悲剧真的比喜剧更动人心魄。</p>
<p>最后一章“蛇足”，古龙强颜欢笑，他写了一对青年男女在长亭依依惜别，男子希望自己能成为下一个上官金虹、李寻欢，是不是暗示着江湖即将开始新一轮的轮回？</p>
<p>无论如何，那都是之后的故事了。我们所能做的，就是感谢古龙带来这样的杰作，沸腾了四海少年的热血，又让他们低回不已的杰作。</p>
<p>最后，让我引用一句对菲茨杰拉德的评语来结束本文，这句话安在古龙身上一样合适：</p>
<blockquote>
<p>终其一生，他都只是在作品里描写自己……但他写的是如此出色，以至于我们在他的作品里看到了整个世界。</p>
</blockquote>
<hr>
<p>读罢【多情剑客无情剑】，畅快淋漓的快感之后，心中感触颇多。感动亦或无奈，正如窗外萧瑟的秋意。然读罢此评，方才读懂此书。才知晓境界不同，风景各异。仰之弥高，钻之弥坚。遂摘录至此。</p>
<p>摘自 <a href="https://book.douban.com/review/5082665/" target="_blank" rel="external">豆瓣 | 边城不浪</a></p>
]]></content>
      
        <categories>
            
            <category> 书评 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 古龙 </tag>
            
            <tag> 武侠 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[区块链浅析]]></title>
      <url>http://chuanqiang.github.io/2016/09/29/Blockchain/</url>
      <content type="html"><![CDATA[<p>关于比特币，大家都听说过，但要说清楚比特币是什么，若是没有仔细研究研究，很难说得出。区块链（Blockchain）是比特币的一个重要概念，作为比特币的底层技术，要想弄清楚比特币，就不得不去研究区域链。况且，区域链作为一项技术，它的价值及价值潜力，远不止货币。</p>
<a id="more"></a>
<hr>
<h2 id="区域链是什么"><a href="#区域链是什么" class="headerlink" title="区域链是什么"></a>区域链是什么</h2><p>区块链（Blockchain）是由去中心化的网络协议和n个存储节点组成的分布式数据库系统，也可以将其理解为去中心化的账簿系统（ledger）。它的特点是存储的信息不可更改，不可伪造。</p>
<p><img src="/image/2016-09-29-21-59-51.jpg" alt=""><br><strong>区块链的宣传与实际情况（2016）</strong><br><img src="/image/2016-09-29-22-00-20.jpg" alt=""></p>
<h2 id="区块链的特点"><a href="#区块链的特点" class="headerlink" title="区块链的特点"></a>区块链的特点</h2><ol>
<li>去中心化：没有中介机构，所有节点的权利和义务都相等，任一节点停止工作都会不影响系统整体的运作；</li>
</ol>
<p><img src="/image/2016-09-29-22-01-23.jpg" alt=""></p>
<ol>
<li>去信任：系统中所有节点之间无需信任也可以进行交易，因为数据库和整个系统的运作是公开透明的，在系统的规则和时间范围内，节点之间无法欺骗彼此；</li>
<li>集体维护（Collectively Maintain）：系统是由其中所有具有维护功能的节点共同维护的，系统中所有人共同参与维护工作；</li>
<li>可靠数据库（Reliable Database）：系统中每一个节点都拥有最新的完整数据库拷贝，修改单个节点的数据库是无效的，因为系统会自动比较，认为最多次出现的相同数据记录为真。<h2 id="朴素地理解区块链"><a href="#朴素地理解区块链" class="headerlink" title="朴素地理解区块链"></a>朴素地理解区块链</h2><blockquote>
<p>区块链是个分布式账簿</p>
</blockquote>
</li>
</ol>
<ul>
<li>账簿放在那里？<br>  分布式存储上，保存了多份</li>
<li>谁来记账？<br>  POW或者POS的方式决定一个人记账，其他人抄录</li>
</ul>
<h2 id="区块链源自何处"><a href="#区块链源自何处" class="headerlink" title="区块链源自何处"></a>区块链源自何处</h2><p>区块链源自于比特币<br>比特币源自于对电子货币的持续探索</p>
<h3 id="电子货币"><a href="#电子货币" class="headerlink" title="电子货币"></a>电子货币</h3><p>自互联网诞生以来，电子货币因其方便和难以追踪，并能脱离政府和银行的监管，而成为一个热门话题。<br>上世纪90年代，一个名为“密码朋克”（CypherPunk）的密码破译组织就致力于创建电子货币，但付出的努力没有收到任何成效。之后出现的各种对于电子货币的尝试，也无一例外地失败了，直到比特币的出现。</p>
<h3 id="历史上的电子货币"><a href="#历史上的电子货币" class="headerlink" title="历史上的电子货币"></a>历史上的电子货币</h3><p><em>亚当·贝克（Adam Back）</em><br>    1997年，hashcash，工作量证明机制（proof of work）。<br>哈伯和斯托尼塔（Haber and Stornetta）<br>    1997年，时间戳的方法保证数字文件安全的协议。<br><em>戴伟（Wei Dai）</em><br>    1998年，加密货币——B-money，点对点的交易和不可更改的交易记录。中本聪发明比特币的时候，借鉴了很多戴伟的设计，并和戴伟有很多交流。<br><em>哈尔·芬尼（Hal Finney）</em><br>    2004年，可重复使用的工作量证明机制（RPOW）。是第一笔比特币转账的接受者，在比特币发展的早期与中本聪有大量互动与交流。</p>
<p>2008年10月31日纽约时间下午2点10分，一个自称中本聪（Satoshi Nakamoto）的人在一个“密码朋克”的电子邮件组上发出了一封电子邮件，“我一直在研究一个新的电子现金系统，这完全是点对点的，无需任何可信的第三方”，然后他将他们引向一个九页的白皮书：《Bitcoin: A Peer-to-Peer Electronic Cash System》。</p>
<p>2009年1月3日，中本聪在位于芬兰赫尔辛基的一个小型服务器上挖出了比特币的第一个区块——创世区块(Genesis Block)，并获得了首矿奖励——50个比特币。</p>
<p>如今，比特币已经成为数字货币领域的翘楚，拥有数十亿美元的市值，但中本聪却于2010年选择隐退。</p>
<h3 id="比特币与区块链"><a href="#比特币与区块链" class="headerlink" title="比特币与区块链"></a>比特币与区块链</h3><p>在比特币的系统中，最重要的并不是“币”的概念，而是一个没有中心存储机构的“帐簿”的概念。<br>区块链是比特币的核心与基础架构，是一个去中心化的账簿系统。<br>区块链脱胎于比特币，但区块链无论作为一个系统还是作为一项技术，它的应用领域及发展潜力，远不止货币。</p>
<h3 id="区块链的发展历史"><a href="#区块链的发展历史" class="headerlink" title="区块链的发展历史"></a>区块链的发展历史</h3><ul>
<li>2008年 Blockchain 1.0<br>加密货币<br>去中心化的电子货币交易体系</li>
<li>2012年 Blockchain 2.0<br>币外应用：智能合约<br>交易市场去中心化</li>
<li>2014年 Blockchain 3.0<br>由智能合约扩展为去中心化的应用<br>用于政府、医疗、科学、文化和艺术等领域</li>
</ul>
<h2 id="比特币与区块链-1"><a href="#比特币与区块链-1" class="headerlink" title="比特币与区块链"></a>比特币与区块链</h2><p><img src="/image/2016-09-29-22-10-41.jpg?r=67" alt=""></p>
<h3 id="区块链四种不同的解释："><a href="#区块链四种不同的解释：" class="headerlink" title="区块链四种不同的解释："></a>区块链四种不同的解释：</h3><blockquote>
<p>针对区块链的讨论常常会陷入混淆</p>
</blockquote>
<ul>
<li>狭义范围下：比特币中记录交易的账本</li>
<li>竞争技术：其他metacoin平台的分布式总账的替代机制</li>
<li>Blockchain-washing：对IT技术的重新包装</li>
<li>一厢情愿的想法：一种看不见的神秘物质，会以某种方式解决我们的问题</li>
</ul>
<h3 id="银行和其他金融组织为什么会有兴趣？"><a href="#银行和其他金融组织为什么会有兴趣？" class="headerlink" title="银行和其他金融组织为什么会有兴趣？"></a>银行和其他金融组织为什么会有兴趣？</h3><ol>
<li>“恐惧”：管理和阻止潜在的干扰，提前掌控新技术</li>
<li>“贪婪”：期望借助外部共享资源来节约基础设施投入和运营成本</li>
<li>“贪婪”：可能是新的商业机会</li>
</ol>
<h2 id="区块链详解"><a href="#区块链详解" class="headerlink" title="区块链详解"></a>区块链详解</h2><h3 id="区块（Block）"><a href="#区块（Block）" class="headerlink" title="区块（Block）"></a>区块（Block）</h3><p>区块链由n（n&gt;0）个区块组成。<br>区块是一个可以将数据（交易记录、资产等）永久记录在网络上的文件。一个区块写满之后，就会通过工作量证明机制（记账）产生新的区块，新的区块会被添加到区块链的末端，所有的区块一旦形成就很难修改或移除。<br>例：比特币区块大小：1M</p>
<h3 id="区块的结构"><a href="#区块的结构" class="headerlink" title="区块的结构"></a>区块的结构</h3><p>以比特币使用的区块链为例，区块由区块头和交易记录两部分组成。<br>交易记录在区块头之后。其中的第一笔交易是Coinbase交易，这是一笔为了让矿工获得奖励及手续费的特殊交易。<br>区块的大致结构如右图所示。</p>
<p><img src="/image/2016-09-29-22-16-01.jpg" alt=""></p>
<h3 id="哈希算法"><a href="#哈希算法" class="headerlink" title="哈希算法"></a>哈希算法</h3><p>哈希函数（Hash Function），也称为散列函数，给定一个输入x，它会算出相应的输出H(x)。哈希函数的主要特征是：</p>
<ul>
<li>输入x可以是任意长度的字符串</li>
<li>输出结果即H(x)的长度是固定的</li>
<li>计算H(x)的过程是高效的（对于长度为n的字符串x，计算出H(x)的时间复杂度应为O(n)）</li>
</ul>
<p>对于比特币这种加密系统所使用的哈希函数，它需要另外具备以下的性质：</p>
<ol>
<li>免碰撞。即不会出现输入x≠y，但是H(x)=H(y)<blockquote>
<p>其实这个特点在理论上并不成立。比如，比特币使用的SHA256算法，会有2^256种输出，如果我们进行2^256+1次输入，那么必然会产生一次碰撞；甚至从概率的角度看，进行2^130次输入就会有99%的可能发生一次碰撞。不过我们可以计算一下，假设一台计算机以每秒10000次的速度进行哈希运算，要经过10^27年才能完成2^128次哈希！甚至可以这么说，即便是人类制造的所有计算机自宇宙诞生开始一直运算到今天，发现碰撞的几率也是极其小的。</p>
</blockquote>
</li>
<li>隐匿性。也就是说，对于一个给定的输出结果H(x)，想要逆推出输入x，在计算上是不可能的。</li>
<li>不存在比穷举更好的，可以使哈希结果H(x)落在特定范围的方法。</li>
</ol>
<h3 id="工作量证明（比特币）"><a href="#工作量证明（比特币）" class="headerlink" title="工作量证明（比特币）"></a>工作量证明（比特币）</h3><ul>
<li>生成Coinbase交易，并与其他所有准备打包进区块的交易组成交易列表，通过Merkle Tree算法生成Merkle Root Hash</li>
<li>把Merkle Root Hash及其他相关字段组装成区块头，将区块头的80字节数据（Block Header）作为工作量证明的输入</li>
<li>不停的变更区块头中的随机数，即nonce的数值，并对每次变更后的的区块头做双重SHA256运算（即SHA256(SHA256(Block_Header))），将结果值与当前网络的目标值做对比，如果小于目标值，则解题成功，工作量证明完成。<h3 id="Merkle-tree"><a href="#Merkle-tree" class="headerlink" title="Merkle tree"></a>Merkle tree</h3></li>
</ul>
<p><img src="/image/2016-09-29-22-19-18.jpg?r=74" alt=""></p>
<h3 id="一笔新交易"><a href="#一笔新交易" class="headerlink" title="一笔新交易"></a>一笔新交易</h3><p>某节点产生一笔新交易时，会先被广播到区块链网络中的其它参与节点。<br>每个节点会将数笔未验证的交易收集到区块中，每个区块可以包含数百笔或上千笔交易。<br>各节点进行POW的计算来决定谁可以验证交易，由最快算出结果的节点来验证交易，这就是取得共识的做法。<br>取得验证权的节点将区块广播给所有节点。其他节点会确认这个区块所包含的交易是否有效，确认没被重复花费且具有效数位签章后，接受该区块，此时区块才正式接上区块链。<br>所有节点一旦接受该区块后，先前没算完POW工作的区块会失效，各节点会重新建立一个区块，继续下一回POW计算工作。</p>
<h3 id="Blockchain"><a href="#Blockchain" class="headerlink" title="Blockchain"></a>Blockchain</h3><p><img src="/image/2016-09-29-22-20-44.jpg" alt=""></p>
<h3 id="区块链的衍生概念"><a href="#区块链的衍生概念" class="headerlink" title="区块链的衍生概念"></a>区块链的衍生概念</h3><p><strong>公链</strong>（public blockchain），是指全世界任何人都可读取、发送交易且能获得有效确认的共识区块链。这些区块链通常被认为是“完全去中心化”的。<br><strong>共同体区块链</strong>（Consortium blockchains），是指其共识过程受到预选节点控制的区块链；例如，有15个金融机构组成一个共同体，每个机构都运行着一个节点，而且为了使每个区块生效需要获得其中10个机构的确认。这些区块链可视为“部分去中心化”。<br><strong>私链</strong>（private blockchain)，又称无代币区块链（Token-less blockchain） 完全私有的区块链 , 是指其写入权限仅在一个组织手里的区块链。</p>
<h3 id="区块链的问题"><a href="#区块链的问题" class="headerlink" title="区块链的问题"></a>区块链的问题</h3><ul>
<li>区块链分叉</li>
<li>51%攻击</li>
<li>区块生成速度慢的问题</li>
<li>挖矿（POW）的高碳排放</li>
</ul>
<h2 id="区块链的应用场景"><a href="#区块链的应用场景" class="headerlink" title="区块链的应用场景"></a>区块链的应用场景</h2><h3 id="区块链技术栈"><a href="#区块链技术栈" class="headerlink" title="区块链技术栈"></a>区块链技术栈</h3><p><img src="/image/2016-09-29-22-22-37.jpg" alt=""><br><strong>应用场景</strong></p>
<p><img src="/image/2016-09-29-22-23-16.jpg" alt=""></p>
<ul>
<li>电子货币<ul>
<li>比特币（POW）</li>
<li>莱特毕（POW）</li>
<li>以太坊（POW + POS）</li>
</ul>
</li>
<li>清算（清分 + 结算）<ul>
<li>银行间结算</li>
<li>跨境结算</li>
</ul>
</li>
<li>产权交易<ul>
<li>股权交易</li>
<li>房产交易</li>
<li>专利交易</li>
<li>版权交易</li>
</ul>
</li>
<li>智能合约<ul>
<li>代扣业务</li>
<li>工资代发</li>
<li>定投彩票</li>
<li>共享经济</li>
<li>众筹</li>
<li>物联网<blockquote>
<p>尼克·萨博（Nick Szabo）：“一个智能合约是一套以数字形式定义的承诺（promises） ，包括合约参与方可以在上面执行这些承诺的协议。”</p>
</blockquote>
</li>
</ul>
</li>
<li>可信信息记录<ul>
<li>健康记录</li>
<li>反腐</li>
<li>反洗钱</li>
<li>公正</li>
<li>自证</li>
<li>物流追踪</li>
<li>药品、食物追踪</li>
</ul>
</li>
</ul>
<p><strong>信用保险——保前阶段</strong><br>资信：假定对于大多数的公司，其经营信息越公开，越受信任，越容易融资，也就越容易快速发展。那么在此假定下，这些公司会倾向于将经营信息记录在区块链上，并对外公开。那么我司就可以利用这些信息形成资信报告。<br>如果公司的交易信息也可以记录在区块链上，那么就可以通过对这些交易信息进行数据挖掘，从而识别虚假交易，或者预判一个公司的经营状况。<br>保单：如果买方的经营信息，出口企业和买方的交易信息都，以及海关的出运信息都记录在区块链上，那么通过这些信息，就可以形成智能合约。<br>这份智能合约的可编程部分为：实际出运的金额对应保户应缴纳的保费和我司应承担的责任。<br><strong>信用保险——保后阶段</strong><br>可损：如果交易信息记录在区块链上，那么当出口企业未在收汇日期内收汇时，可以直接形成可损。<br>保后跟踪：如果交易信息记录在区块链上，就能直接获知被保险人的收汇情况，从而控制风险。<br><strong>信用保险——其他</strong><br>保单融资：如果通过区块链记录交易信息，或者进行资金的流转（基于法币），交易的可信度更高，那么可以据此给买方更高的信用限额，也可以据此获得更多银行的授信。<br>如果通过保单融资获得的资金，其使用情况全部记录在区块链，那么就可以轻而易举地监控资金的流向，便于降低风险。<br>通知书：我司发给保户、合作机构的各种通知书，如果通过区块链进行发送，那么可以降低成本和流程的复杂度。</p>
<h2 id="区块链的发展现状"><a href="#区块链的发展现状" class="headerlink" title="区块链的发展现状"></a>区块链的发展现状</h2><p>区块链技术已引起了全世界的高度重视，美国、欧盟、荷兰、波兰、德国、英国、澳大利亚、加拿大、俄罗斯、日本、韩国、新加坡、日本和印度等国家都在开展区块链相关的研究。</p>
<p>各知名银行、保险公司、证券交易所、IT公司也都已经加入到了区块链的研究。包括高盛、摩根大通、汇丰银行、花旗银行、纽约梅隆银行、巴克莱银行、瑞银（UBS）、苏格兰皇家银行、摩根士丹利在内的众多金融机构，均与区块链公司进行了合作，研究区块链技术在金融市场的应用。</p>
<p>世界经济论坛更是大胆预测，到2027年世界GDP的10％将被存储在区块链网络上。</p>
<blockquote>
<p>2016.01.20 中国人民银行数字货币研讨会在北京召开。<br>2016.05.24 中国平安保险(集团)股份有限公司正式加入R3分布式分类账联盟。<br>2016.05.31 金融区块链合作联盟（深圳）正式成立，该联盟由京东金融，微众银行等25家企业共同发起，腾讯和华为等6加机构作为成员单位加入。<br>2016.07.05 瑞士全球银行和金融机构Vontobel已经推出了一种允许其用户间接交易比特币的新产品。<br>2016.07.09 蚂蚁金服在杭州举办的首届全球XIN公益大会上宣布区块链技术即将上线，并首先用于支付宝的爱心捐赠平台。</p>
</blockquote>
<h2 id="区块链应用"><a href="#区块链应用" class="headerlink" title="区块链应用"></a>区块链应用</h2><p>公证防伪：公证通（factom）、Monegraph、Stampery、Bitproof、Uproov、Chronicled、Blockai;<br>智能合约：彩色币（coloredcoin）、闪电网络（lightning-network）、侧链（sidechain）、Tendermint、Chronicled、SuperNET、Blocknet、Tezos、Openchain、Crypti、Rubix、MultiChain、超级账本（hyperledger）、The DAO（the-dao）、WAVES;<br>物联网：ADEPT、Filament、Tilepay、Slock.it（slock-it）;<br>身份验证：BlockScore、Shocard、LaunchKey、BitNation;<br>预测市场：Augur、Truthcoin、Futarchy;<br>资产交易：OpenLedger、Medici、SETL、Symbiont、DAH、SETL、小蚁（antshares）、SWARM、Koinify、Lighthouse、Safe Cash（safe-cash）、tØ（t0）、Linq、Colu;</p>
<h2 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h2><ul>
<li>富有战略性地思考，富有战术性地行动</li>
<li>无论你选择哪种区块链技术，它都将在18到24个月后过时</li>
<li>但是，了解这一技术非常重要</li>
<li>从主要平台上学习证明的概念</li>
<li>在可控制的真实的平台上实践部署</li>
<li>时刻准备在24个月内可离开该平台</li>
<li>学习和构想在可编程经济环境中的业务流程、业务模式、市场和产品</li>
<li>时刻准备好你的组织可能遭受业务、经济的瓦解和流动性问题</li>
<li>采用不同的管理理念，关注灵活性、创新性和自主性</li>
<li>规划和测试一个不同的非层次结构模型作为简政放权的一部分</li>
<li>在长期的时间内，重新思考商业模式、市场和生态系统</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 比特币 </tag>
            
            <tag> 区域链 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Markdown 语法]]></title>
      <url>http://chuanqiang.github.io/2016/09/25/markdown-grammar/</url>
      <content type="html"><![CDATA[<p>如果你是一个经常用电脑进行文字书写的人，那不管你是不是理工科，不管你懂不懂编程，只要你会用电脑打字，我都建议你学习和使用Markdown语法。不要被语法、语言、Markdown这些词汇所迷惑，Markdown的语法十分简单。常用标记符号也不超过十个，学习成本十分低，却是一劳永逸，受益无穷。就像从二指禅打键盘到使用盲打的转变，只是Markdown的学习更加容易而已。</p>
<a id="more"></a>
<h2 id="Markdown-介绍"><a href="#Markdown-介绍" class="headerlink" title="Markdown 介绍"></a>Markdown 介绍</h2><p>Markdown 是一种轻量级的「标记语言」，是一个 Web 上使用的文本到 HTML 的转换工具，可以通过简单、易读易写的文本格式生成结构化的 HTML 文档。用Markdown码字不需要不需要你用鼠标进行复杂耗时的排版工作，你用键盘啪啪打出就已经是排版好的文档，能满足码字手速和排版流畅度的要求。</p>
<h2 id="Markdown特点"><a href="#Markdown特点" class="headerlink" title="Markdown特点"></a>Markdown特点</h2><ol>
<li>高效率，自动排版。</li>
<li>语法简洁优雅，轻量级，记忆负担小。</li>
<li>更专注于内容，标签对内容的侵入性低。</li>
<li>纯文本，不受编辑工具限制。</li>
<li>Markdown 转 HTML 非常方便。HTML 是整个万维网（web）的标记语言，但更重要的是，它也是目前主流电子书格式所用的标记语言。若采用 Markdown，对于日后的文件转换工作也大有裨益。</li>
</ol>
<h2 id="Markdown-语法"><a href="#Markdown-语法" class="headerlink" title="Markdown 语法"></a>Markdown 语法</h2><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># 一级标题</div><div class="line">## 二级标题</div><div class="line">### 三级标题</div><div class="line">#### 四级标题</div><div class="line">##### 五级标题</div><div class="line">###### 六级标题</div></pre></td></tr></table></figure>
<p>分别对应HTML中的<code>&lt;h1&gt;一级标题&lt;/h1&gt;</code>，以此类推。</p>
<h3 id="粗体、斜体和删除线"><a href="#粗体、斜体和删除线" class="headerlink" title="粗体、斜体和删除线"></a>粗体、斜体和删除线</h3><p><img src="/image/2016-09-26-23-18-44.jpg" alt=""><br>用两个星号标记起来，表示加粗，一个星号，表示斜体，两个<code>~~</code>表示删除线。</p>
<h3 id="插入链接"><a href="#插入链接" class="headerlink" title="插入链接"></a>插入链接</h3><p><strong>语法</strong>：<code>[链接](http://url.com/)</code><br><strong>效果</strong>：这是一个 <a href="http://url.com/" target="_blank" rel="external">链接</a></p>
<h4 id="快速链接"><a href="#快速链接" class="headerlink" title="快速链接"></a>快速链接</h4><blockquote>
<p>只需要在网址头尾用尖括号包裹即可</p>
</blockquote>
<p><strong>语法</strong>：<code>&lt;http://url.com&gt;</code><br><strong>效果</strong>： <a href="http://url.com" target="_blank" rel="external">http://url.com</a></p>
<h3 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h3><blockquote>
<p>插入图片的语法跟插链接很像，在有些编辑器中，可以通过拖拽的方式进行插图，不一定会看到这个语法，而可能直接看到图片本身。</p>
</blockquote>
<p><strong>语法</strong>：<code>![图片的alt信息，可空)](图片的url)</code><br><strong>效果</strong>：<br><img src="/image/2016-09-26-23-34-01.jpg" alt=""></p>
<h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><blockquote>
<p>一个<code>-</code>加一个空格</p>
</blockquote>
<p><strong>语法</strong>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">- Red</div><div class="line">- Green</div><div class="line">- Blue</div></pre></td></tr></table></figure></p>
<p><strong>效果</strong>：</p>
<ul>
<li>Red</li>
<li>Green</li>
<li>Blue<h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><blockquote>
<p>则使用数字接着一个英文句点加空格</p>
</blockquote>
</li>
</ul>
<p><strong>语法</strong>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">1.  Bird</div><div class="line">2.  McHale</div><div class="line">3.  Parish</div></pre></td></tr></table></figure></p>
<p><strong>效果</strong>：</p>
<ol>
<li>Bird</li>
<li>McHale</li>
<li>Parish</li>
</ol>
<h4 id="列表混合使用"><a href="#列表混合使用" class="headerlink" title="列表混合使用"></a>列表混合使用</h4><p><strong>语法</strong>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">-   Bird</div><div class="line">    - blue bird</div><div class="line">-   McHale</div><div class="line">    1.  a man</div><div class="line">    2.  HoustonRockets</div><div class="line">-   Parish</div></pre></td></tr></table></figure></p>
<p><strong>效果</strong>：</p>
<ul>
<li>Bird<ul>
<li>blue bird</li>
</ul>
</li>
<li>McHale<ol>
<li>a man</li>
<li>HoustonRockets</li>
</ol>
</li>
<li>Parish</li>
</ul>
<h3 id="内容引用"><a href="#内容引用" class="headerlink" title="内容引用"></a>内容引用</h3><p>用<code>&gt;</code>放在段首，之后是空格，输入文字:<br><strong>语法</strong>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&gt; 你</div><div class="line">&gt; 一会看我</div><div class="line">&gt; 一会看云</div><div class="line"></div><div class="line">&gt;  我觉得</div><div class="line">&gt;  你看我时很远</div><div class="line">&gt;  你看云时很近</div></pre></td></tr></table></figure></p>
<p><strong>效果</strong>：</p>
<blockquote>
<p>你<br>一会看我<br>一会看云</p>
<p> 我觉得<br> 你看我时很远<br> 你看云时很近</p>
</blockquote>
<h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><blockquote>
<p><code>-</code>加上空格组成，三个以上</p>
</blockquote>
<p><strong>语法：</strong><code>---</code><br><strong>效果</strong>：</p>
<hr>
<h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><blockquote>
<p>注释后的内容，最终会以 HTML 的注释格式<code>&lt;!--我是内容--&gt;</code>存在，不会显示在正文中，但包含在 HTML 的源码中；<br><strong>语法</strong>：<code>&lt;!--我是内容--&gt;</code></p>
</blockquote>
<h3 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h3><blockquote>
<p>分代码块和行级代码两种</p>
</blockquote>
<p><strong>如图</strong>：</p>
<p><img src="/image/2016-09-26-23-49-40.jpg" alt=""></p>
<h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p><strong>语法</strong>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">书名 | 作者 | 内容 | 简评</div><div class="line">:---:|:---:|:---:|:---:</div><div class="line">周鸿祎自述：我的互联网方法论|周鸿祎|[书摘](/2016/09/22/周鸿祎自述：我的互联网方法论/)| 周鸿祎的互联网思维</div><div class="line">从0到1| 彼得·蒂尔;布莱克·马斯特斯  | [书摘](/2015/06/24/从0到1/) | 最反主流的行动不是抵制潮流，而是在潮流中不丢弃自己的独立思考</div><div class="line">大数据时代| 维克托·迈尔-舍恩伯格 | [书评](/2015/05/06/《大数据时代》——生活、工作与思维的大变革/) | 世界的又一种形态——数据</div><div class="line">风口上的猪| 无 | [书评](/2015/05/26/风口上的猪——一本书看懂互联网金融/) |一本书看懂互联网金融</div><div class="line">黑客与画家| Paul Graham  | [书摘](/2015/10/15/黑客与画家/) | 重新思考计算机编程的本质</div></pre></td></tr></table></figure></p>
<p><strong>效果</strong>：（表格还可以混入链接）：</p>
<table>
<thead>
<tr>
<th style="text-align:center">书名</th>
<th style="text-align:center">作者</th>
<th style="text-align:center">内容</th>
<th style="text-align:center">简评</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">周鸿祎自述：我的互联网方法论</td>
<td style="text-align:center">周鸿祎</td>
<td style="text-align:center"><a href="http://qixiantong.info/2016/09/22/周鸿祎自述：我的互联网方法论/" target="_blank" rel="external">书摘</a></td>
<td style="text-align:center">周鸿祎的互联网思维</td>
</tr>
<tr>
<td style="text-align:center">从0到1</td>
<td style="text-align:center">彼得·蒂尔;布莱克·马斯特斯</td>
<td style="text-align:center"><a href="http://qixiantong.info/2015/06/24/从0到1/" target="_blank" rel="external">书摘</a></td>
<td style="text-align:center">最反主流的行动不是抵制潮流，而是在潮流中不丢弃自己的独立思考</td>
</tr>
<tr>
<td style="text-align:center">大数据时代</td>
<td style="text-align:center">维克托·迈尔-舍恩伯格</td>
<td style="text-align:center"><a href="http://qixiantong.info/2015/05/06/《大数据时代》——生活、工作与思维的大变革/" target="_blank" rel="external">书评</a></td>
<td style="text-align:center">世界的又一种形态——数据</td>
</tr>
<tr>
<td style="text-align:center">风口上的猪</td>
<td style="text-align:center">无</td>
<td style="text-align:center"><a href="http://qixiantong.info/2015/05/26/风口上的猪——一本书看懂互联网金融/" target="_blank" rel="external">书评</a></td>
<td style="text-align:center">一本书看懂互联网金融</td>
</tr>
<tr>
<td style="text-align:center">黑客与画家</td>
<td style="text-align:center">Paul Graham</td>
<td style="text-align:center"><a href="http://qixiantong.info/2015/10/15/黑客与画家/" target="_blank" rel="external">书摘</a></td>
<td style="text-align:center">重新思考计算机编程的本质</td>
</tr>
</tbody>
</table>
<blockquote>
<p>表格可以设置居中居左居右的状态。</p>
</blockquote>
<p><strong><code>:---:</code>为居中；<code>:--</code>为居左；<code>--:</code>为居右。</strong></p>
<hr>
<p>Markdown的语法大致就这么多，简洁而优雅。学会只是第一步，重点是在码字的时候熟练使用，这样以后就可以<code>下笔如有神</code>了。</p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> 语法 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[关于写博客]]></title>
      <url>http://chuanqiang.github.io/2016/09/25/about-writing-blog/</url>
      <content type="html"><![CDATA[<p>写博客不像发微博，发空间状态，那样寥寥几笔，随性而为。博客作为富内容式的输出和分享载体，虽然需要投入时间和精力，但回报和收获的却也不仅仅是别人点个赞那么简单。为什么写博客，写博客的意义在哪里。之前我也没有想的很透彻。导致心智没有跟上，只写一些关于自己的零零碎碎的东西，长远来看并没有达到写作的意义。后来逐渐看到一些别人的博客，看他们优质的输出和构建的价值体系，才一步步提升了自己的心智，开始了自己的博客之旅。</p>
<a id="more"></a>
<p>以下内容是关于博客的思考，解答了为什么你应该写博客和如何长期写博客。</p>
<p>内容摘自博主<a href="http://mindhacks.cn/" target="_blank" rel="external">刘未鹏</a>，仅作整理和排版。点击<a href="http://mindhacks.cn/2009/02/15/why-you-should-start-blogging-now/" target="_blank" rel="external">原文</a></p>
<hr>
<h1 id="（一）为什么你应该写博客"><a href="#（一）为什么你应该写博客" class="headerlink" title="（一）为什么你应该写博客"></a>（一）为什么你应该写博客</h1><p>用一句话来说就是，写一个博客有很多好处，却没有任何明显的坏处。（阿灵顿的情况属于例外，而非常态，就像不能拿抽烟活到一百岁的英国老太太的个例来反驳抽烟对健康的极大损伤一样）</p>
<p>让我说得更明确一点：用博客的形式来记录下你有价值的思考，会带来很多好处，却没有任何明显的坏处。Note：碎碎念不算思考、心情琐记不算思考、唠唠叨叨也不算思考、没话找话也不算思考，请以此类推。</p>
<p>下面是我个人认为写一个长期的价值博客的最大的几点好处：</p>
<h2 id="能够交到很多志同道合的朋友。"><a href="#能够交到很多志同道合的朋友。" class="headerlink" title="能够交到很多志同道合的朋友。"></a>能够交到很多志同道合的朋友。</h2><p>我自己既写博客，也读别人的博客，在这个时代，对于生活中的绝大多数人来说，拓宽朋友圈子的途径几乎只有一个，通过网络，而如何在网络中寻找到气味相投的朋友，如何判断别人和自己是否有共同语言？显然，通过天天在SNS上碎碎念的那些日记是难以做到的。我佩服的一些朋友几乎全都是长期用博客记录想法的人，因此，和他们即便不打照面，也是心照不宣。即便素未谋面也能坐下来就聊得热火朝天。</p>
<h4 id="为什么博客在结交志同道合的朋友方面的潜力要远胜于原始的交谈方式？"><a href="#为什么博客在结交志同道合的朋友方面的潜力要远胜于原始的交谈方式？" class="headerlink" title="为什么博客在结交志同道合的朋友方面的潜力要远胜于原始的交谈方式？"></a>为什么博客在结交志同道合的朋友方面的潜力要远胜于原始的交谈方式？</h4><p>第一，博客无地域限制，整个互联网上从A到B只有一个点击的距离，而传统的建立朋友圈子的方法则受到地域限制。第二，也是更重要的一点，即如果按照以前结交朋友的方式，需要互相聊天，交流观点，然后才逐渐熟悉起来，这需要一个较长的过程，而且更糟糕的是，当你遇到另一个陌生人，又要把整个过程重复一次，表达你已经对老友表达过的那番想法。可博客却做到了“一次表达，无数次阅读”，当我看到一个写了好几年的博客，看完了之后我仿佛和这个人交谈了很久，用程序员们喜欢听的话来说就是，“<strong>博客极大地增强了话语的复用性</strong>”。</p>
<p>我曾在CSDN上写了近六年的博客，在一年半前建立了一个Google Groups（TopLanguage），由于我的博客的长期阅读者都是互相有共同语言的，因此这个Group一开始就热火朝天，而高质量的技术讨论则进一步吸引了更多的牛人的参与，雪球滚起来之后，就很难停下来了，将近一年半下来，从这个Group的讨论中我获益良多。而对于非程序员朋友，科学松鼠会则是一个很好的例子。</p>
<h2 id="书写是为了更好的思考。"><a href="#书写是为了更好的思考。" class="headerlink" title="书写是为了更好的思考。"></a>书写是为了更好的思考。</h2><p>我在《书写是为了更好的思考》里面详细总结了书写的好处，这里就不拷贝粘贴了。有些想法如果不写下来，也就忘掉了，有一个广为流传的《数学牛人们的轶事》（荣耀属于ukim）里面讲了希尔伯特的一个故事：一次在Hilbert的讨论班上，一个年轻人报告，其中用了一个很漂亮的定理，Hilbert说“这真是一个妙不可言（wunderbaschon）的定理呀,是谁发现的？”那个年轻人茫然的站了很久，对Hilbert说：“是你.……”。 </p>
<h2 id="“教”是最好的“学”。"><a href="#“教”是最好的“学”。" class="headerlink" title="“教”是最好的“学”。"></a>“教”是最好的“学”。</h2><p>如果一件事情你不能讲清楚，十有八九你还没有完全理解。绝大多数人应该都知道在程序员行业面试官经常要求你讲解一个东西给他听，他会说他不懂这个东西（他如果真的不懂的话效果其实是最好的），而你的任务则是说到让他理解为止。</p>
<p>为了让一个不明白的人做到明白，你必须要知道从明白到不明白他究竟需要掌握哪些概念，这就迫使我们对我们大脑中整个的知识体系来个寻根究底，把藏在水面之下的那些东西统统挖出来，把大脑中的那些我们知道、但不知道自己知道的潜在概念或假设（assumptions）都挖出来，把它们从内隐记忆拉扯到外显记忆中。因为只有完全知道、并知道自己知道一切来龙去脉的人，才能真正把一件事情讲得通通透透。</p>
<p>但是，你可能会怀疑，那除了能够讲清楚之外，弄清自己到底知道哪些东西还有其他什么好处吗？如果没有其他好处，那我又何必费这个劲呢？我又不当老师。</p>
<p>TopLanguage上的一位朋友sagasw曾经讲了这样一个小故事：据说在某个著名软件公司里，开发组的桌上会放着一只小熊，大家互相问问题之前，先对着小熊把问题说一遍，看能不能把问题描述的清晰，基本上说的比较有条理以后，答案也就随之而来了。当然，你不一定要对小熊说，你可以在大脑中虚构一个听众，一个不懂行的听众，然后你说给他听。这是可行的，我经常在路上用。不过如果你能坐下来，我建议你还是说给实际的听众听——即写下你的思考，<strong>因为书写是更好的思考</strong>。</p>
<p>我们的绝大多数知识在绝大多数时候都隐藏在潜意识中，其实我们意识的窗口很小，我们的工作记忆只能容纳寥寥数个条目（记得那个“看你能够记住屏幕上同时闪现的多少个数字”的flash小游戏吗？），我们平时所作的推理过程很大部分都是自动的，发生在潜意识中，而我们只能感知到一些中间结论。不信你回忆一下你在和别人讨论问题的时候有多少次觉得“反正就是这样，我感觉得到它是对的，但是你问我，我也说不清到底怎么回事”，对此你不觉得很奇怪吗？如果你都不能从逻辑上支持你的结论，你怎么就能确信它是对的呢？仅仅因为你的直觉强烈地告诉你它是对的？那如果旁边有另一个人，他和你持相反的观念，而他的直觉也强烈地告诉他他是对的。这时候你又怎么想？“他的直觉错了，我的直觉是对的”？难道你这么自信你的直觉是世界上最可靠的？</p>
<p>我自己则是非常珍惜类似这样的机会，即当“我强烈地觉得它是对的，但我却说不出所以然来”，这时候往往是到大脑中翻箱倒柜的时候，弄清来龙去脉的时候，深入反思的时候，纠正一直以来错误的潜在前提假设的时候。另一方面，“我强烈地觉得这个说法有问题，但我却说不清它为什么有问题，到底哪有问题”，这也是一个极有意义的瞬间，它几乎总是意味着你对一个问题的认识有潜在的偏差，肯定是在你自己都没有觉知到的地方引入了一个潜在的假设、偷换了一个重要的概念，等等。而这种时候就是深入反思的时候，当你终于潜到问题的底层，触摸到问题的实质，把水面之下的冰山整体看清了的时候你会有一种通体舒泰的感觉。</p>
<p>为什么说以上这些？因为刚才说的是你必须等待这样的反思机会，但如果你选择经常总结自己的知识体系，并说出来给你的读者听，你就会发现你自己创造了这样的机会。如果我们平时不反思，我们觉得很多事情都是当然的，但结果如果要你一开口说给别人听，常常会发现事情就开始变得不那么明显了，你说着说着，就开始莫名其妙地发现自己需要用到“反正”这个词了。<br>于是，反思的机会就来了。</p>
<p>一旦你把自己潜意识里面的东西从幕后拉出来，你就有了面对并反思它们的可能，而不是任它们在幕后阴险地左右你的思维。很多时候我们的思路出了问题并不是我们不会反思，而是不知道自己的思维中有那些隐含的假设（assumptions），如果你只感觉到答案，却不知道你大脑得到这个答案之前做了哪些推理，你又怎么知道哪一环可能出了问题呢？另一方面，一旦你弄清了自己到底是怎么想的，离意识到问题就不远了，很简单的道理——如果别人和你争辩的时候总是只摆立场，你就很难和他辩，但如果他把自己的推理过程原原本本暴露给你，批判起来总是容易得多的。（也正因为这个原因有很多人总是把逻辑藏在背后，不敢暴露出来）</p>
<p>绝大多数时候其实我们都会不假思索地得出一些结论，就像上了发条的自动机，但其实我们并不知道这些结论到底怎么来的，在思维的背后到底发生了哪些事情，故而当我们发现我们的结论错了的时候，一头雾水，没法着手寻找到底在哪错了。如果你注意一下很多人的发言（论坛、博客等等），如果你把他们的发言分为“前提”、“假设”、“逻辑”、“结论”这四个部分，你会发现一大堆人只会不停地下结论，摆立场，却见不到这些结论或离场的前提、假设和个中逻辑，倒也不是他们不愿意写出逻辑，而是因为反思自己的思维过程实在是一件困难非常的事情，我们的推理过程很大一部分发生在意识的水面之下，只有当有了重要结论的时候这条逻辑链才会浮出来冒一个泡，让我们的意识捕捉到。更何况绝大多数时候我们用的其实并不是完整严密的逻辑思维，而是思维捷径。</p>
<p>去教一个完全不懂的人，则是一种最最强大和彻底的反思途径——因为他没有任何预备的知识，所以要让他弄懂你所知道的，你就必须彻底反思你的知识体系，弄清这座大厦的根基在什么地方，弄清它的骨架在什么地方，一砖一瓦到底是怎么垒起来的，你不能自己站在11层上，然后假设你的读者站在第10层，指望着只要告诉他第11层有那些内容就让他明白。你的读者站在第一层，你必须知道你脚下踩着的另外10层到底是怎么构造的。这就迫使你对你所掌握的、或之前认为正确的那些东西作彻彻底底的、深刻的反思，你的受众越是不懂，你需要反思得就越深刻。</p>
<h2 id="讨论是绝佳的反思。"><a href="#讨论是绝佳的反思。" class="headerlink" title="讨论是绝佳的反思。"></a>讨论是绝佳的反思。</h2><p>另一方面，很多时候我们并不是有机会说给完全不懂的人听，更大的可能性是说给同领域有一定基础的人听，这个时候并不代表就不能促使反思了，实际上，你会发现，如果你公开你的想法，几乎总能看到与你持不同意见的人，然后你通过比较你和他的观念之间的差别，会发现你们在一开始的思路上就存在差异，差异从哪里来的？在进一步讨论中你们就会不断地迫使对方拿出更深层次的理由，这同样也是一种非常有效地促使自己反思的方法，在讨论的过程中双方的理由自然会变得越来越深入，越来越接近问题的本质，一些平时难以注意到的深层面的差异性就会逐渐浮现出来，你也就多了一次难得的机会去审视自己的思维中到底存放了哪些错误的信息。</p>
<h2 id="激励你去持续学习和思考。"><a href="#激励你去持续学习和思考。" class="headerlink" title="激励你去持续学习和思考。"></a>激励你去持续学习和思考。</h2><p>如果你没有持续学习和思考的习惯，你的博客很快就会没有内容可写，就只能整点碎碎念或者转载，然后你就会失去读者，然后你就会关掉博客，然后一旦关掉博客之后你也就死了写博客的心，然后就少了一条激励你去思考和总结的途径，然后你变得更不高兴总结和思考，然后… </p>
<p>为了打破这个死循环，不要永久停止更新你的博客，就算你两个月，三个月都不写，只要你每篇都是写自己思考的产物，写有价值的东西，在互联网上，金子的确总是会发光的，因为有无数的信息聚合平台在期待这些有价值的内容，有搜索引擎为你的内容提供海量的潜在读者，有海量的人肉在手动挖掘和转载那些有价值的东西。我们所能做的最差的一个决策莫过于停止做一件没有任何坏处，却有一大堆好处的事情。</p>
<p>为了让你的博客有价值，你必须不断总结自己学习的结果，你必须不断思考，给出比别人深刻、独到的见解。这看起来有点本末倒置，但很快本和末就会正过来。</p>
<p>6) 学会持之以恒地做一件事情。很多人在生活中容易觉得迷失，不知道想要做什么，是因为没有一件能够持续地做的事情，用俗话来说就是没有主心骨。用积极心理学的话来说就是没有一件能够创造流体验的事情，而书写自己的思想则是一件容易产生流体验的事情，在书写的时候，特别是理性地书写的时候，大脑逐渐进入推理分析模块，一切不愉快的情绪，烦躁感都会逐渐消隐下去。不过前提是你得开始，并且坚持过一开始的困难期，以后的一切便成了习惯成自然。</p>
<p>7) 一个长期的价值博客是一份很好的简历。这里的“简历”并非是狭义上的求职简历，毕竟现在还没有到价值博客的时代，很多人写博客都是到处转载或者干脆碎碎念，正因此面试官未必拿个人博客当成了解一个人的更可靠窗口。这里的“简历”是指一个让别人了解自己的窗口，虽然我们未必做得到像罗永浩、Keso这样的博客，个人的影响力已经足以支撑出一份事业（牛博和5gme），但至少你会因此而结识更多的人，你的博客价值越高，你结识的人就越牛，跟牛人交流又会让你的眼界得到极大的开阔，打开一扇又一扇你原本不知道的门，于是你就变得更牛… 这是一个良性循环。</p>
<h1 id="（二）怎么做到长期写一个价值博客"><a href="#（二）怎么做到长期写一个价值博客" class="headerlink" title="（二）怎么做到长期写一个价值博客"></a>（二）怎么做到长期写一个价值博客</h1><p>注意到我并没有说“怎么做到长期坚持写一个价值博客”，因为当思考和总结成为习惯之后，诉诸文字以及借助书写来进一步思考就变成了一件自然而然的事情，就变成了一件“因为你在思考和总结从而必须书写下来”的事情，博客就变成了副产品。</p>
<p>一开始的时候你是因为要写博客而去使劲地思考和总结，指望给出令人眼睛一亮的东西，到了后来，就变成了因为你习惯了思考和总结，因为你意识到书写是更好的思考，你就必须使你的想法成为文字。至此本和末就会各归原位，不再颠倒。</p>
<p>怎样做到长期写一个价值博客？也许有人会给出很多有趣有用的小技巧来提供动机和激励，譬如如何做SEO，如何鼓励读者留言等等，但是这些我都不想说，我只想说最最重要的，那就是：</p>
<blockquote>
<p>让你自己成为一个持续学习和思考的人，并只写你真正思考和总结之后的产物，其他一切就会随之而来。</p>
</blockquote>
<p>就像那句经常被人传阅的话：只做你最感兴趣的事情，钱会随之而来。</p>
<p>这方面的具体例子大家可以留意一下，随处可见，就不一一举了。我想再重复一下的是，千万不要碎碎念，我能理解每个人都想偶尔发发牢骚的冲动，但是现在已经有了一个很好的窗口：twitter，所以立即停止在你的博客上碎碎念，阅读博客的人希望得到信息而非噪音。如果实在忍不住想碎碎念的话不妨换一下位置，这么来告诉自己：如果你看到别人博客来上这么一段，你会有兴趣看吗？</p>
<h1 id="（三）可能出现的问题以及怎样应付"><a href="#（三）可能出现的问题以及怎样应付" class="headerlink" title="（三）可能出现的问题以及怎样应付"></a>（三）可能出现的问题以及怎样应付</h1><p>即便上文给出了N条写博客的理由，但有时候只要一条不写的理由就会让人停止做一件事情。所以我特别加上一节“可能出现的问题以及怎样应付”，《影响力2》第五章雄辩地证明，“Much of Will is Skill”，意志力很大程度上来源于有正确的方法，而非天生。</p>
<h2 id="担心别人认为没有价值。"><a href="#担心别人认为没有价值。" class="headerlink" title="担心别人认为没有价值。"></a>担心别人认为没有价值。</h2><p>事实是，你面临过的问题总会有人面临过，你独立思考了，别人没有，你的文章对他们就会有价值。当然，肯定会对某些人没有价值，他们早就知道了，但就算你再厉害，也总是有人比你厉害的，不能说因为这些原因就不记录你自己的想法了，你自己思考了之后理解得最深刻，就算有别人想过了，总有人没有想到的。况且，思考成了习惯，你的思考能力也会越来越强，你的文章也会越来越有价值。重复，无论你面临什么困惑，总会有很多人同样面临过，于是你苦苦思索之后的结果，肯定会对很多人有意义。</p>
<p>或者，你想通了之后觉得其实也很简单于是不愿意或者不好意思写了，但要知道，问题在想通了之后总是简单的，问题的困难程度不在于想通了之后还觉得有多难，而在于从你觉得它难到你觉得它简单需要耗费多少思维体力，你耗费的时间越长，说明有越多的人最终还是没有想明白（路越长走到底的人越少）。</p>
<p>最后，虽然我现在看一年前的文章觉得挺不成熟，但是如果没有那些不成熟的思考，也不会有现在更成熟的思考，我几年后来看现在写的东西，还是会觉得不成熟。</p>
<h2 id="担心想法太幼稚或有漏洞等等被别人笑话。"><a href="#担心想法太幼稚或有漏洞等等被别人笑话。" class="headerlink" title="担心想法太幼稚或有漏洞等等被别人笑话。"></a>担心想法太幼稚或有漏洞等等被别人笑话。</h2><p>人非圣贤。正是因为单个人的想法总是有漏洞，才值得拿出来交流（《书写是更好的思考》，讨论是绝佳的反思），被别人指出问题正是改进的空间，藏着掖着的想法永远不可能变得更成熟。</p>
<p>Much of intelligence is knowledge，有这么一个非常发人深省的经典心理学实验：将孩子们分成两组，通过给他们不同的阅读材料让一组相信智力是天生的，不可在后天改变的，另一组则让他们相信智力其实只是知识和技能的代名词，完全是后天习得的。接下来让他们做一组任务，那些被相信智力天生说的孩子，倾向于回避困难的任务，选择较容易的任务，这里的逻辑想必是这样的：如果做困难的任务，就增大了失败的几率，就在降低了自己在别人和自己心目中的智力的值。为了保护这个智力的值不被降低，应该避免那些有失败风险的项目。而另一组孩子则对于有挑战性的事情跃跃欲试，并且在失败的时候明显没有前者沮丧，因为失败也是学得新的东西，不管怎样都是“智力”的提高。</p>
<p>况且，只会批判乃至嘲笑别人的人是最不知道怎么建设的人，忽略他们。</p>
<h2 id="得不到激励。"><a href="#得不到激励。" class="headerlink" title="得不到激励。"></a>得不到激励。</h2><p>这其实是个最无聊的问题了，只有写碎碎念的博客才会面对“激励”的问题。如果写自己的总结，写自己独立的思考，那么书写下来、理解通透，本身就是一个极大的激励。就算放在自己的私密笔记本里面也一样有成就感。况且，如果你真做到了书写价值博客，那么绝对不用担心你的观点得不到传播，也许一开始会耗时长一点，但是这在任何事情上都是必要的初始阶段，Gmail小组的核心人物、FriendFeed创始人Paul Buchheit，和编程界名博Coding Horror的博主Jeff Atwood都曾经感叹过：Overnight success takes a long time （(1)，(2)），不过对于价值博客来说，现在网络上的聚合类服务这么多，机器的、人肉的、半人肉的都有，情况又要好得多了，而且我相信情况还会越来越好。</p>
<h2 id="写不出来。"><a href="#写不出来。" class="headerlink" title="写不出来。"></a>写不出来。</h2><p>这个问题也比较无聊，思考本不是一件急于求成的事情。长期订阅我的博客的朋友知道我一般发文频率在一个月三五篇，实际上有不少次我个把月也不发布文章，原因很简单，要么是有手头的事情要处理思考的时间被压缩了，要么是遇到比较大或者比较困难的问题需要长时间的思考和积淀，没有关系，如果没有想清楚就再想想，爱思考的人和不爱思考的人有一个本质的区别，前者在生活中总是挂着几个问题在大脑中，它们时常都会冒出来骚扰你一下，让你琢磨琢磨，不爱思考的则是没事不主动想问题，遇到问题还要先想想是否能找捷径（找人帮忙）解决。</p>
<p>无论如何，不用急于求成，在一个主题上深入下去思考，总能挖到别人挖不到的角落。你能让一个问题在大脑中停留的时间越长，就越是能够发现新的东西，一般来说，我认为有价值的问题我会让他在意识或潜意识中待短则一个星期，长则一个月（视问题大小而定），利用走路吃饭的时间琢磨（我发现很多我佩服的人也都有这个习惯），有时即便已经想通了写下来了发出去了，大脑仍然还是会在回味问题，还没有把它撤出潜意识，然后看到某篇文章或某本书的时候忽然又有所新的感悟。</p>
<p>能够把问题长时间停靠在潜意识中是一种技能，能够带来很大的好处，停留得越长你越琢磨得透彻，比别人看到的就越多。我们必须要带着问题的眼镜看待事物才能发现新的视角，否则就会出现视而不见效应，别的不说，广为人知的例子是阿基米德的“尤里卡！”，如果不是长时间琢磨着一个问题，一直把它放在思维中，是不会从洗澡领悟到“排水测体积”的，否则他洗了那么多年澡怎么不早发现呢？</p>
<p>所以，如果你习惯了思考问题，就总会有东西写，先有思考，然后有总结，然后在总结中进一步思考。</p>
<p>当然你也可以试试把不成熟的想法写下来，试图整理成条理清晰的文字，然后看看能否在整理的过程中走得更远。这往往是可行的。比如这篇文章在我的简记里面原本其实只有三行字（包含大约十来个备忘关键词），而最初在我的大脑里面其实只有一个走路时冒出来的问题——为什么要写博客？</p>
<p>[全文完]</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 思考 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[搭建我的独立博客]]></title>
      <url>http://chuanqiang.github.io/2016/09/24/CreateMyBlog/</url>
      <content type="html"><![CDATA[<p>写作，一直是思考和表达的一种重要的途径，而博客是一个很好的表达和分享的平台。网络上的博客平台有很多，自己也有在用<a href="http://zcqqixiantong.lofter.com/jianshu" target="_blank" rel="external">简书</a>和<a href="http://zcqqixiantong.lofter.com" target="_blank" rel="external">Lofter</a>。但同时作为一个理想主义的程序员，总是向往更加简单和自由的写作方式。由此，经过一番折腾，才有了我的第一个<strong><a href="http://qixiantong.info" target="_blank" rel="external">独立博客</a></strong>以及这篇博客搭建的文章。</p>
<a id="more"></a>
<hr>
<h2 id="Github-Hexo"><a href="#Github-Hexo" class="headerlink" title="Github+Hexo"></a>Github+Hexo</h2><p>博客程序有很多，也都有各自的优缺点，关于选用哪一个，也因人而异，毕竟适合自己的才是做好的。</p>
<blockquote>
<p>可以看这一篇进行了解  : <a href="http://www.zhihu.com/question/21981094" target="_blank" rel="external">各种博客程序有什么特点</a></p>
</blockquote>
<p>我所选用的是Github+hexo进行搭建。理由如下：</p>
<ul>
<li>用 Node.js 搭建的博客平台，速度快，免费</li>
<li>Hexo 操作比 Jekyll 简单，命令少，易于记忆。 </li>
<li>搭建在 Github 上，Github稳定，空间免费。</li>
</ul>
<h2 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h2><h3 id="1-安装-Git"><a href="#1-安装-Git" class="headerlink" title="1. 安装 Git"></a>1. 安装 Git</h3><p>Git是目前世界上最先进的分布式版本控制系统。在这里主要用来把本地内容提交到github上去。</p>
<h4 id="安装方式："><a href="#安装方式：" class="headerlink" title="安装方式："></a>安装方式：</h4><ol>
<li><strong>下载</strong>  <a href="http://msysgit.github.io/" target="_blank" rel="external">http://msysgit.github.io/</a></li>
<li><strong>安装</strong><br>安装过程中，询问是否修改环境变量，选择“Use Git Bash Only”. 即只在msysGit提供的Shell<h4 id="运行-Git-前的配置"><a href="#运行-Git-前的配置" class="headerlink" title="运行 Git 前的配置"></a>运行 Git 前的配置</h4></li>
<li>配置你个人的用户名称和电子邮件地址<blockquote>
<p>$ git config –global user.name “xxx”<br>$ git config –global user.email xxx@example.com</p>
</blockquote>
</li>
<li>配置GitHub SSH<br>（1）首先使用 ssh-keygen 生成 SSH 密钥<br><code>$ ssh-keygen -t rsa -C &quot;youremail@163.com&quot;</code><br>（2） 配置Github SSH。<br>登陆GitHub-&gt;Settings-&gt;“SSH Keys”，然后，点“Add SSH Key”，起个Title，在Key文本框里粘贴id_rsa.pub文件的内容，点“Add Key”。<h3 id="2-安装-node-js"><a href="#2-安装-node-js" class="headerlink" title="2. 安装 node.js"></a>2. 安装 node.js</h3></li>
<li><strong>下载</strong><br>下载：<a href="http://nodejs.org/download/" target="_blank" rel="external">http://nodejs.org/download/</a><br>作用：用来生成静态页面<h2 id="配置Github"><a href="#配置Github" class="headerlink" title="配置Github"></a>配置Github</h2><strong>Github网址：</strong>：<a href="https://github.com/" target="_blank" rel="external">https://github.com/</a><br><strong>作用：</strong>用来做远程博客的仓库<h3 id="1-建立Repository"><a href="#1-建立Repository" class="headerlink" title="1. 建立Repository"></a>1. 建立Repository</h3>建立与你用户名对应的仓库，仓库名必须为【your_user_name<strong>.github.io</strong>】<h3 id="2-配置SSH-Key"><a href="#2-配置SSH-Key" class="headerlink" title="2. 配置SSH-Key"></a>2. 配置SSH-Key</h3>参考<a href="http://www.cnblogs.com/zhcncn/p/3787849.html" target="_blank" rel="external">http://www.cnblogs.com/zhcncn/p/3787849.html</a></li>
</ol>
<h2 id="搭建-Hexo"><a href="#搭建-Hexo" class="headerlink" title="搭建 Hexo"></a>搭建 Hexo</h2><h3 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h3><p>打开Git命令行，执行如下命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g hexo</div></pre></td></tr></table></figure></p>
<h3 id="2-Quick-Start"><a href="#2-Quick-Start" class="headerlink" title="2 Quick Start"></a>2 Quick Start</h3><h4 id="1-建立你的博客"><a href="#1-建立你的博客" class="headerlink" title="1. 建立你的博客"></a>1. 建立你的博客</h4><p>在电脑中建立一个文件夹（比如我建在了D:\blog），然后在此文件夹中右键打开Git Bash。执行下面的命令</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ hexo init </div><div class="line">[info] Copying data </div><div class="line">[info] You are almost done! Don&apos;t forget to run `npm install` before you start b logging with Hexo!</div></pre></td></tr></table></figure>
<p>Hexo随后会自动在目标文件夹建立网站所需要的文件。然后按照提示，运行 <code>npm install</code>（在 /D/blog下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install</div></pre></td></tr></table></figure></p>
<p>会在D:\blog目录中安装<code>node\_modules</code></p>
<h4 id="2-打开服务"><a href="#2-打开服务" class="headerlink" title="2. 打开服务"></a>2. 打开服务</h4><p>运行下面的命令（在 /D/blog下）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo server </div><div class="line">[info] Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</div></pre></td></tr></table></figure>
<p>表明Hexo Server已经启动了，在浏览器中打开 <a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a>，这时可以看到Hexo已为你生成了一篇blog。</p>
<p>你可以按<code>Ctrl+C</code>停止Server。</p>
<p><strong>文件目录为</strong>：</p>
<blockquote>
<p>blog<br>_config_yml  – 注配置文件<br>db.json     –数据<br>debug.log   – 调试日志<br>_node_mudules   – nodejs 相关依赖<br>package.json    – 配置依赖<br>scaffolds   – 脚手架 - 也就是一个工具模板<br>source  – 存放blog正文的地方<br>themes  – 存放皮肤的地方</p>
</blockquote>
<h4 id="3-创建一篇文章"><a href="#3-创建一篇文章" class="headerlink" title="3. 创建一篇文章"></a>3. 创建一篇文章</h4><p>新打开一个<code>git bash</code>命令行窗口，cd到/D/blog下，执行下面的命令</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new &quot;My New Post&quot;</div></pre></td></tr></table></figure>
<p>刷新<a href="http://localhost:4000/，可以发现已生成了一篇新文章" target="_blank" rel="external">http://localhost:4000/，可以发现已生成了一篇新文章</a> “My New Post”。</p>
<blockquote>
<p>注意</p>
</blockquote>
<p>在创建文章时，要<code>ctrl+c</code>关掉<code>hexo server</code></p>
<h4 id="4-生成静态页面"><a href="#4-生成静态页面" class="headerlink" title="4. 生成静态页面"></a>4. 生成静态页面</h4><p>执行下面的命令，将你自己写的markdown文件生成静态网页。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure></p>
<p>该命令执行完后，会在 D:\blog\public\ 目录下生成一系列html，css等文件。</p>
<h4 id="5-编辑文章"><a href="#5-编辑文章" class="headerlink" title="5. 编辑文章"></a>5. 编辑文章</h4><p>hexo new “My New Post”会在D:\blog\source\_posts目录下生成一个markdown文件：My-New-Post.md</p>
<p>可以使用一个支持markdown语法的编辑器（推荐MarkEditor 或 Sublime Text 2）来编辑该文件。</p>
<h4 id="6-部署到Github"><a href="#6-部署到Github" class="headerlink" title="6. 部署到Github"></a>6. 部署到Github</h4><p>部署到Github前需要配置_config.yml文件，首先找到下面的内容</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># Deployment </div><div class="line">## Docs: http://hexo.io/docs/deployment.html </div><div class="line">deploy: </div><div class="line">type:</div></pre></td></tr></table></figure>
<p>将它们修改为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># Deployment</div><div class="line">## Docs: https://hexo.io/docs/deployment.html</div><div class="line">deploy:</div><div class="line">type: git</div><div class="line">repository: git@github.com:chuanqiang/chuanqiang.github.io.git</div><div class="line">branch: master</div></pre></td></tr></table></figure></p>
<h4 id="7-测试"><a href="#7-测试" class="headerlink" title="7.  测试"></a>7.  测试</h4><p>当部署完成后，在浏览器中打开<a href="http://chuanqiang.github.io/">http://chuanqiang.github.io/</a> 正常显示网页，表明部署成功。</p>
<h3 id="Hexo-命令总结"><a href="#Hexo-命令总结" class="headerlink" title="Hexo 命令总结"></a>Hexo 命令总结</h3><h4 id="1-常用命令"><a href="#1-常用命令" class="headerlink" title="1. 常用命令"></a>1. 常用命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">hexo new &quot;postName&quot; #新建文章</div><div class="line">hexo new page &quot;pageName&quot; #新建页面</div><div class="line">hexo generate #生成静态页面至public目录</div><div class="line">hexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）</div><div class="line">hexo deploy #将.deploy目录部署到GitHub</div><div class="line">hexo help  # 查看帮助</div><div class="line">hexo version  #查看Hexo的版本</div></pre></td></tr></table></figure>
<h4 id="2-复合命令"><a href="#2-复合命令" class="headerlink" title="2. 复合命令"></a>2. 复合命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo deploy -g  #生成加部署</div><div class="line">hexo server -g  #生成加预览</div></pre></td></tr></table></figure>
<p>命令的简写为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">hexo n == hexo new</div><div class="line">hexo g == hexo generate</div><div class="line">hexo s == hexo server</div><div class="line">hexo d == hexo deploy</div></pre></td></tr></table></figure></p>
<h2 id="为博客添加域名"><a href="#为博客添加域名" class="headerlink" title="为博客添加域名"></a>为博客添加域名</h2><h3 id="1-域名购买"><a href="#1-域名购买" class="headerlink" title="1. 域名购买"></a>1. 域名购买</h3><p><strong>网站</strong>：推荐去<a href="https://sg.godaddy.com/zh" target="_blank" rel="external">GoDaddy</a> 购买<br><strong>优点</strong>：安全，支持支付宝。<br><strong>注意</strong>：</p>
<ul>
<li>注册时用户填写信息时一定要输入正确的邮箱名字。</li>
<li>买完域名之后一定要记得去自己的邮箱查看激活邮件，否则域名激活不了。<h3 id="2-域名和-Github-空间绑定"><a href="#2-域名和-Github-空间绑定" class="headerlink" title="2.域名和 Github 空间绑定"></a>2.域名和 Github 空间绑定</h3><h4 id="1-GitHub-Pages的设置"><a href="#1-GitHub-Pages的设置" class="headerlink" title="1. GitHub Pages的设置"></a>1. GitHub Pages的设置</h4>方法1：在Repository的根目录下面，新建一个名为CNAME的文本文件，里面写入你要绑定的域名，不用写<code>http://</code>，直接写域名。比如我的是<code>qixiantong.info</code>。<br>方法2：到我的github仓库，点击右下角的「Download ZIP」，下载源文件，解压，修改CNAME，改成你想要的域名，放进Hexo\source目录下，用hexo命令提交上去。</li>
</ul>
<p><img src="/image/2016-09-24-19-14-56.jpg" alt=""></p>
<h4 id="2-DNS设定"><a href="#2-DNS设定" class="headerlink" title="2.DNS设定"></a>2.DNS设定</h4><p><strong>网站</strong>：<a href="https://www.dnspod.cn/" target="_blank" rel="external">DNSpod</a><br><strong>步骤</strong>：</p>
<ol>
<li>登录或者注册<a href="https://www.dnspod.cn/" target="_blank" rel="external">DNSpod</a></li>
<li>之后进入到了域名下一解析管理窗口，这里需记录两个记录值：\<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">f1g1ns1.dnspod.net.</div><div class="line">f1g1ns2.dnspod.net.</div></pre></td></tr></table></figure>
</li>
</ol>
<p><img src="/image/2016-09-24-19-20-29.jpg" alt=""><br><img src="/image/2016-09-24-19-19-39.jpg" alt=""></p>
<ol>
<li>点击添加记录，按图所述：</li>
</ol>
<p><img src="/image/2016-09-24-19-22-31.jpg" alt=""></p>
<ol>
<li>等待全球递归DNS服务器刷新（最多72小时）。</li>
</ol>
<h2 id="Hexo-配置"><a href="#Hexo-配置" class="headerlink" title="Hexo 配置"></a>Hexo 配置</h2><h3 id="1-配置文件介绍"><a href="#1-配置文件介绍" class="headerlink" title="1. 配置文件介绍"></a>1. 配置文件介绍</h3><p>文件名：<code>_config.yml</code>（在文件根目录下）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div></pre></td><td class="code"><pre><div class="line"># Hexo Configuration</div><div class="line">## Docs: http://hexo.io/docs/configuration.html</div><div class="line">## Source: https://github.com/tommy351/hexo/</div><div class="line"></div><div class="line"># Site #整站的基本信息</div><div class="line">title: 1000 words a Day #网站标题</div><div class="line">subtitle: Writing 1000 Words a Day Changes My Life #网站副标题</div><div class="line">description: 学习总结 思考感悟 知识管理 #网站描述</div><div class="line">author:  cnFeat #网站作者，在下方显示</div><div class="line">email: cnFeat@gmail.com #联系邮箱</div><div class="line">language: zh-CN</div><div class="line"></div><div class="line"># URL</div><div class="line">## If your site is put in a subdirectory</div><div class="line">url: http://www.cnfeat.com #你的域名</div><div class="line">root: /</div><div class="line">permalink: :year/:month/:day/:title/</div><div class="line">tag_dir: tags</div><div class="line">archive_dir: archives</div><div class="line">category_dir: categories</div><div class="line">code_dir: downloads/code</div><div class="line"></div><div class="line"># Directory</div><div class="line">source_dir: source</div><div class="line">public_dir: public</div><div class="line"></div><div class="line"># Writing</div><div class="line">new_post_name: :title.md # File name of new posts</div><div class="line">default_layout: post</div><div class="line">auto_spacing: false # Add spaces between asian characters and western characters</div><div class="line">titlecase: false # Transform title into titlecase</div><div class="line">external_link: true # Open external links in new tab</div><div class="line">max_open_file: 100</div><div class="line">multi_thread: true</div><div class="line">filename_case: 0</div><div class="line">render_drafts: false</div><div class="line">post_asset_folder: false</div><div class="line">highlight:</div><div class="line">enable: true</div><div class="line">line_number: true</div><div class="line">tab_replace:</div><div class="line"></div><div class="line"># Category &amp; Tag</div><div class="line">default_category: uncategorized</div><div class="line">category_map:</div><div class="line">tag_map:</div><div class="line"></div><div class="line"># Archives</div><div class="line">## 2: Enable pagination</div><div class="line">## 1: Disable pagination</div><div class="line">## 0: Fully Disable</div><div class="line">archive: 2</div><div class="line">category: 2</div><div class="line">tag: 2</div><div class="line"></div><div class="line"># Server</div><div class="line">## Hexo uses Connect as a server</div><div class="line">## You can customize the logger format as defined in</div><div class="line">## http://www.senchalabs.org/connect/logger.html</div><div class="line">port: 4000</div><div class="line">server_ip: 0.0.0.0</div><div class="line">logger: false</div><div class="line">logger_format:</div><div class="line"></div><div class="line"># Date / Time format</div><div class="line">## Hexo uses Moment.js to parse and display date</div><div class="line">## You can customize the date format as defined in</div><div class="line">## http://momentjs.com/docs/#/displaying/format/</div><div class="line">date_format: YYYY-MM-DD</div><div class="line">time_format: H:mm:ss</div><div class="line"></div><div class="line"># Pagination</div><div class="line">## Set per_page to 0 to disable pagination</div><div class="line">per_page: 15 #每页15篇文章</div><div class="line">pagination_dir: page</div><div class="line"></div><div class="line"># Disqus #社会化评论disqus，我使用多说，在主题中配置</div><div class="line">disqus_shortname:</div><div class="line"></div><div class="line"># Extensions</div><div class="line">## Plugins: https://github.com/tommy351/hexo/wiki/Plugins</div><div class="line">## Themes: https://github.com/tommy351/hexo/wiki/Themes</div><div class="line">theme: jacman</div><div class="line">exclude_generator:</div><div class="line">Plugins:</div><div class="line">- hexo-generator-feed</div><div class="line">- hexo-generator-sitemap</div><div class="line"></div><div class="line">#sitemap</div><div class="line">sitemap:</div><div class="line">path: sitemap.xml</div><div class="line"></div><div class="line">#Feed Atom</div><div class="line">feed:</div><div class="line">type: atom</div><div class="line">path: atom.xml</div><div class="line">limit: 20</div><div class="line"></div><div class="line"># Markdown</div><div class="line">## https://github.com/chjj/marked</div><div class="line">markdown:</div><div class="line">gfm: true</div><div class="line">pedantic: false</div><div class="line">sanitize: false</div><div class="line">tables: true</div><div class="line">breaks: true</div><div class="line">smartLists: true</div><div class="line">smartypants: true</div><div class="line"></div><div class="line"># Stylus</div><div class="line">stylus:</div><div class="line">compress: false</div><div class="line"></div><div class="line"># Deployment</div><div class="line">## Docs: https://hexo.io/docs/deployment.html</div><div class="line">deploy:</div><div class="line">type: git</div><div class="line">repository: git@github.com:chuanqiang/chuanqiang.github.io.git</div><div class="line">branch: master</div></pre></td></tr></table></figure></p>
<h3 id="2-修改局部页面"><a href="#2-修改局部页面" class="headerlink" title="2. 修改局部页面"></a>2. 修改局部页面</h3><p>页面展现的全部逻辑都在每个主题中控制，源代码在hexo\themes\jacman\中：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">├── languages  #多语言</div><div class="line">|   ├── default.yml#默认语言</div><div class="line">|   └── zh-CN.yml  #中文语言</div><div class="line">├── layout #布局，根目录下的*.ejs文件是对主页，分页，存档等的控制</div><div class="line">|   ├── _partial   #局部的布局，此目录下的*.ejs是对头尾等局部的控制</div><div class="line">|   └── _widget#小挂件的布局，页面下方小挂件的控制</div><div class="line">├── source #源码</div><div class="line">|   ├── css#css源码 </div><div class="line">|   |   ├── _base  #*.styl基础css</div><div class="line">|   |   ├── _partial   #*.styl局部css</div><div class="line">|   |   ├── fonts  #字体</div><div class="line">|   |   ├── images #图片</div><div class="line">|   |   └── style.styl #*.styl引入需要的css源码</div><div class="line">|   ├── fancybox   #fancybox效果源码</div><div class="line">|   └── js #javascript源代码</div><div class="line">├── _config.yml#主题配置文件</div><div class="line">└── README.md  #用GitHub的都知道</div></pre></td></tr></table></figure></p>
<h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><h3 id="1-下载主题"><a href="#1-下载主题" class="headerlink" title="1. 下载主题"></a>1. 下载主题</h3><p>这里以我安装的主题为例。<br>如果你熟悉 Git， 建议你使用 克隆最新版本 的方式，之后的更新可以通过 git pull 来快速更新， 而不用再次下载压缩包替换。<br>在终端窗口下，定位到 Hexo 站点目录下。使用 Git checkout 代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ cd your-hexo-site</div><div class="line">$ git clone https://github.com/iissnan/hexo-theme-next themes/next</div></pre></td></tr></table></figure></p>
<h3 id="2-启用主题"><a href="#2-启用主题" class="headerlink" title="2. 启用主题"></a>2. 启用主题</h3><p>与所有 Hexo 主题启用的模式一样。 当 克隆/下载 完成后，打开 站点配置文件， 找到 theme 字段，并将其值更改为 next。 </p>
<p>启用 NexT 主题</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">theme: next</div></pre></td></tr></table></figure>
<p>到此，NexT 主题安装完成。下一步我们将验证主题是否正确启用。在切换主题之后、验证之前， 我们最好使用 hexo clean 来清除 Hexo 的缓存。</p>
<p>首先启动 Hexo 本地站点，并开启调试模式（即加上 –debug），整个命令是 hexo s –debug。 在服务启动的过程，注意观察命令行输出是否有任何异常信息，如果你碰到问题，这些信息将帮助他人更好的定位错误。 当命令行输出中提示出： </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">INFO Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.</div></pre></td></tr></table></figure>
<p>此时即可使用浏览器访问 <a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a>，检查站点是否正确运行。</p>
<p>现在，已经成功安装并启用了 主题。下一步要做的是更改一些主题的设定，包括个性化以及集成第三方服务。这个因主题而异。</p>
<h3 id="3-主题设定"><a href="#3-主题设定" class="headerlink" title="3. 主题设定"></a>3. 主题设定</h3><p>这里叙述的是各主题通用的功能。</p>
<h4 id="设定语言"><a href="#设定语言" class="headerlink" title="设定语言"></a>设定语言</h4><p>编辑 站点配置文件， 将 language 设置成你所需要的语言。建议明确设置你所需要的语言，例如选用简体中文，配置如下： </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">language: zh-Hans</div></pre></td></tr></table></figure>
<h4 id="多说评论"><a href="#多说评论" class="headerlink" title="多说评论"></a>多说评论</h4><blockquote>
<p>注意：duoshuo_shortname 不是你的多说登录的 id</p>
</blockquote>
<p>使用多说前需要先在 多说 创建一个站点。具体步骤如下：</p>
<ol>
<li>登录后在首页选择 “我要安装”。</li>
<li>创建站点，填写站点相关信息。 <strong>多说域名</strong> 这一栏填写的即是你的 <code>duoshuo\_shortname</code>，如图：</li>
</ol>
<p><img src="/image/2016-09-24-20-36-43.jpg" alt=""></p>
<ol>
<li>创建站点完成后在 站点配置文件 中新增 <code>duoshuo_shortname</code> 字段，值设置成上一步中的值。<br>【eg】:<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">duoshuo_shortname: iissnan-notes</div></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="百度统计"><a href="#百度统计" class="headerlink" title="百度统计"></a>百度统计</h4><blockquote>
<p>注意： baidu_analytics 不是你的百度 id 或者 百度统计 id</p>
</blockquote>
<ol>
<li>登录 <a href="http://tongji.baidu.com/" target="_blank" rel="external">百度统计</a>， 定位到站点的代码获取页面 </li>
<li>复制 hm.js? 后面那串统计脚本 id，如： </li>
</ol>
<p><img src="/image/2016-09-24-20-39-13.jpg" alt=""></p>
<ol>
<li>编辑 站点配置文件， 新增字段 baidu_analytics 字段，值设置成你的百度统计脚本 id <h4 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h4></li>
</ol>
<p><strong>JiaThis</strong></p>
<p>编辑 站点配置文件， 添加字段 jiathis，值为 true。 </p>
<p>JiaThis 内容分享服务配置示例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># JiaThis 分享服务</div><div class="line">jiathis: true</div></pre></td></tr></table></figure></p>
<p><strong><a href="http://share.baidu.com/" target="_blank" rel="external">百度分享</a></strong></p>
<p>编辑 站点配置文件，添加字段 baidushare，值为 true。</p>
<p>百度内容分享服务配置示例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># 百度分享服务</div><div class="line">baidushare: true</div></pre></td></tr></table></figure></p>
<p><strong>多说分享</strong><br>多说分享必须与多说评论同时使用<br>编辑 站点配置文件， 添加字段 duoshuo_share， 值为 true。<br>多说内容分享服务配置示例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># 多说分享服务</div><div class="line">duoshuo_share: true</div></pre></td></tr></table></figure></p>
<h4 id="404页面"><a href="#404页面" class="headerlink" title="404页面"></a>404页面</h4><p>GitHub Pages有提供制作404页面的指引：<a href="https://help.github.com/articles/custom-404-pages" target="_blank" rel="external">Custom 404 Pages</a>。<br>直接在根目录下创建自己的404.html或者404.md就可以。但是自定义404页面仅对绑定顶级域名的项目才起作用，GitHub默认分配的二级域名是不起作用的，使用hexo server在本机调试也是不起作用的。</p>
<p>推荐使用<a href="http://www.qq.com/404" target="_blank" rel="external">腾讯公益404</a>。为公益尽自己的一份微薄之力。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>博客的搭建看似简单，其实过程中还是有许多磕磕绊绊。这时，需要的就是自己解决问题的能力：如何利用互联网搜索你需要的答案，如何借鉴别人的经验。这个也是搭建博客之外的宝贵收获。</p>
<p>另外，博客只是一种输出和展现形式，关键还是在于内容本身。盛酒的容器美观与否固然重要，但瓶子里酒的味道才是真谛。所以，重要的还是不断<a href="/2015/07/09/输入与输出/">输入和输出</a>。</p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Kindle使用指南]]></title>
      <url>http://chuanqiang.github.io/2016/09/22/Kindle%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
      <content type="html"><![CDATA[<p>随着个人对于电子书以及电子阅读器理解的深入，我决定把这篇文章做一次彻底的更新。<strong>这次的更新去除了一些有盗版嫌疑的资源，增加了一些最近更新的内容，并将图片进行了整体优化，方便大家阅读。</strong>如你所见，这是一篇集科普、入门、进阶于一体的综合分享。而下面这幅思维导图集合了本次分享的主要内容，方便您在阅读之前对文章有一个整体感。</p>
<a id="more"></a>
<p><a href="http://sspai.com/attachment/origin/2016/09/20/347928.png?origin" target="_blank" rel="external"><img src="http://sspai.com/attachment/origin/2016/09/20/347928.png?origin" alt=""></a></p>
<h2 id="Kindle-适合什么样的人"><a href="#Kindle-适合什么样的人" class="headerlink" title="Kindle 适合什么样的人"></a>Kindle 适合什么样的人</h2><h3 id="想要沉浸阅读的人"><a href="#想要沉浸阅读的人" class="headerlink" title="想要沉浸阅读的人"></a><strong>想要沉浸阅读的人</strong></h3><p>世界上有什么习惯的人，就有什么样的产品。沉醉娱乐的人有了 iPad，爱玩游戏的人有了 PSP，而想要沉浸阅读的人则有了 Kindle。Kindle 作为专注阅读的不二利器，目前同类产品还是没有能出其右的。</p>
<h3 id="经常出差、旅行的人"><a href="#经常出差、旅行的人" class="headerlink" title="经常出差、旅行的人"></a><strong>经常出差、旅行的人</strong></h3><p>如果你是一个经常出差、旅行的人，自然少不了坐火车、灰机的经历，你大可给自己的 Kindle 内装一本休闲类的书籍，体验一下不一样的旅途景观。</p>
<h3 id="有语言学习诉求的人"><a href="#有语言学习诉求的人" class="headerlink" title="有语言学习诉求的人"></a><strong>有语言学习诉求的人</strong></h3><p>不论是英语、日语、法语抑或是文言文，在 Kindle 里你都可以找到对应的靠谱词典，原生的词典若不够用也可以去相关网站下载。</p>
<h3 id="经常坐公交、地铁的人"><a href="#经常坐公交、地铁的人" class="headerlink" title="经常坐公交、地铁的人"></a><strong>经常坐公交、地铁的人</strong></h3><p>这点在北上广深的朋友大概体会会深一点，因为房租而不得不住得远的朋友，在漫长上班途中有了 Kindle，那简直 biu 一下就到站了。笔者曾经住在深圳西乡，去南山科技园上班需要很长的时间，因此经常通过 Kindle 来规划时间，基本几天就能看下来一本书，把碎片化时间利用起来的感觉不要太好！</p>
<h3 id="有护眼想法的电子书深度用户"><a href="#有护眼想法的电子书深度用户" class="headerlink" title="有护眼想法的电子书深度用户"></a><strong>有护眼想法的电子书深度用户</strong></h3><p>有些朋友一直是电子书的深度用户，但是却想保护眼睛，有办法吗？有！E-ink 屏的 Kindle 帮你搞定一切。此处大家需要注意一点，像 Kindle Fire 没有 E-ink 屏而是 <strong>IPS 屏</strong>的，购买时须注意，而同等价位的 New Kindle 是 E-ink 的，但是 ppi 有点低，大家大概需要割舍一下了。</p>
<h3 id="有长期阅读规划、想省钱省空间的人"><a href="#有长期阅读规划、想省钱省空间的人" class="headerlink" title="有长期阅读规划、想省钱省空间的人"></a><strong>有长期阅读规划、想省钱省空间的人</strong></h3><p>有一类人，TA 们深谙时间管理之道，知道自己需要什么，有着比较清晰的规划，在 TA 们的脑子里，这一年要看的书都已经列出来了，缺的就是一个阅读器能把它们都装进去。想要既省钱又省空间，还容易整理归纳和总结，是否有办法？答案：有，Kindle 结合 Kindle Mate 与云笔记的搭配便可以搞定。</p>
<h3 id="经常无聊又不知道做什么的人"><a href="#经常无聊又不知道做什么的人" class="headerlink" title="经常无聊又不知道做什么的人"></a><strong>经常无聊又不知道做什么的人</strong></h3><p>如果你经常发呆又不知道做什么，那么告诉你，Kindle 绝对是你消磨时间的好工具。喜欢悬疑小说可以去看看东野圭吾的《嫌疑人 X 的献身》，喜欢电影《北京爱上西雅图 2》你可以去看《查令街 84 号》，甚至喜欢网剧《余罪》你可以去看《余罪 - 我的刑侦笔记》。嗯，就是这么方便。</p>
<h3 id="海外留学买不到中文书的人"><a href="#海外留学买不到中文书的人" class="headerlink" title="海外留学买不到中文书的人"></a><strong>海外留学买不到中文书的人</strong></h3><p>此条来源于知乎某留学汪的推荐。拾书小记创号至今发现关注者中不乏留学生，TA 们在外看点中文书真不容易，但是如果你买了 Kindle 就不一样了！可以在中亚买五本书，不过超了要申请。当然如果你学会了我下面说的邮箱传书并通过网络途径找到需要的电子书，就可以解决这个问题。</p>
<h2 id="关于书籍来源"><a href="#关于书籍来源" class="headerlink" title="关于书籍来源"></a>关于书籍来源</h2><h3 id="Amazon"><a href="#Amazon" class="headerlink" title="Amazon"></a><a href="http://www.amazon.cn/" target="_blank" rel="external">Amazon</a></h3><p>这里主要说的是亚马逊中国的官网。亚马逊中国 Kindle 业务入华已有三年，目前已与 600 多家中国出版机构和进口商建立了密切的联系，其 Kindle 电子书城拥有的电子书已超 350000 本，其中原版书就超过了 160000 册，免费书籍高达 10000 余册，并且还处在一个不断上升的阶段。建议爱书的人可以根据需求适度购买电子书，这里会是你的宝库。</p>
<p><a href="http://cdn.sspai.com/attachment/thumbnail/2016/09/06/0cec51c3a05382e5fc96a17ecb8bf44354785_mw_800_wm_1_wmp_3.jpg" target="_blank" rel="external"><img src="http://cdn.sspai.com/attachment/thumbnail/2016/09/06/0cec51c3a05382e5fc96a17ecb8bf44354785_mw_800_wm_1_wmp_3.jpg" alt=""></a></p>
<h3 id="Gutenberg"><a href="#Gutenberg" class="headerlink" title="Gutenberg"></a><a href="http://www.gutenberg.org/" target="_blank" rel="external"><strong>Gutenberg</strong></a></h3><p>古腾堡计划（Project Gutenberg，简称 PG）是世界上第一个数字图书馆，书籍所涉范围十分之广，包括小说、诗歌、故事、喜剧、食谱、期刊等超过 100000 册的书籍可供下载。在豆瓣发现一个豆友甚至一口气下了王尔德的《狱中记》、《雷丁监狱之歌》以及剧本无数，这得有多少网友在义务地做这些事情啊！</p>
<p>下图是我今天早上测试王尔德的搜索，第一次搜索会在左边显示匹配作者，然后选择了作者还会有具体的分类选择，用户体验非常好，重点它是公版书。</p>
<p><a href="http://cdn.sspai.com/attachment/thumbnail/2016/09/06/e274a23ba07844c30d7d4c96e69fd13054786_mw_800_wm_1_wmp_3.jpg" target="_blank" rel="external"><img src="http://cdn.sspai.com/attachment/thumbnail/2016/09/06/e274a23ba07844c30d7d4c96e69fd13054786_mw_800_wm_1_wmp_3.jpg" alt=""></a></p>
<h3 id="尊重作者，支持正版"><a href="#尊重作者，支持正版" class="headerlink" title="尊重作者，支持正版"></a><strong>尊重作者，支持正版</strong></h3><p>在看书这事儿上，大家千万不要觉得市面上有很多免费的资源就往自己 Kindle 上肆意地装。我的建议是：<strong>买你想读的书，选对你有用的书。</strong>优先选择在亚马逊 kindle 书店购买正版电子书籍，既节省了时间成本，也是对作者和版权方劳动的尊重。</p>
<h2 id="从菜鸟到高手有多远"><a href="#从菜鸟到高手有多远" class="headerlink" title="从菜鸟到高手有多远"></a>从菜鸟到高手有多远</h2><h3 id="基本技巧"><a href="#基本技巧" class="headerlink" title="基本技巧"></a><strong>基本技巧</strong></h3><p><strong>1. 截屏：</strong>截屏这个功能很实用，但是似乎很多人都不知道，或者不会用。其实并没有多难。大家只需要打开 Kindle 后，<strong>同时摁下左上角和右下角或者右上角和左下角</strong>，就可以完成截屏操作了。接着通过 USB 连接到电脑，打开 Kindle 磁盘，在根目录就可以找到刚刚截图的图片了。</p>
<p><a href="http://cdn.sspai.com/attachment/thumbnail/2016/09/06/310c8cb280015ffd8e4f3d64d187ff6254787_mw_800_wm_1_wmp_3.jpg" target="_blank" rel="external"><img src="http://cdn.sspai.com/attachment/thumbnail/2016/09/06/310c8cb280015ffd8e4f3d64d187ff6254787_mw_800_wm_1_wmp_3.jpg" alt=""></a></p>
<p><strong>2. 收藏夹：</strong>很多书友都知道 Kindle 有收藏夹功能，可就不知道如何利用，其实妥善运用收藏夹的话，可以让你的 Kindle 主页更加工整。重点是它能让你有的放矢，建立月份书单什么的，都是不错的。</p>
<p><a href="http://cdn.sspai.com/attachment/thumbnail/2016/09/06/e55b6ef57b6551b1d3655d7ba138ff7d54788_mw_800_wm_1_wmp_3.jpg" target="_blank" rel="external"><img src="http://cdn.sspai.com/attachment/thumbnail/2016/09/06/e55b6ef57b6551b1d3655d7ba138ff7d54788_mw_800_wm_1_wmp_3.jpg" alt=""></a></p>
<p><strong>3. Kindle Unlimited：</strong>KU（Kindle Unlimited）是亚马逊中国近期推出的电子书服务，类似「借书卡」又不同于「借书卡」。你的借书信息会被储存在云端，即使过期了也会在再次被借阅的时候激活。KU 自推出起不断提升电子书的数量，目前已超过五万本。至于这个服务合不合适你，可以参考我的<a href="http://mp.weixin.qq.com/s?__biz=MzI4MDA2MzUwNQ==&amp;mid=401322363&amp;idx=1&amp;sn=9ca1467395c45c9b19e9e4cee20f90ed&amp;scene=21#wechat_redirect" target="_blank" rel="external">另一篇文章</a>。</p>
<p><a href="http://cdn.sspai.com/attachment/thumbnail/2016/09/06/6cef2d0c51a80dbc62564fdb371e28e454789_mw_800_wm_1_wmp_3.jpg" target="_blank" rel="external"><img src="http://cdn.sspai.com/attachment/thumbnail/2016/09/06/6cef2d0c51a80dbc62564fdb371e28e454789_mw_800_wm_1_wmp_3.jpg" alt=""></a></p>
<p><strong>4. 磁盘传书：</strong>此方法最简单实用，为快速通道，是不会占用云端内存的，这样的话就不太方便书籍误删后的二度下载了，因此建议慎用。</p>
<h3 id=""><a href="#" class="headerlink" title=""></a><strong><a href="http://cdn.sspai.com/attachment/thumbnail/2016/09/06/55465909b2ce6e26a1b604758aef57935478a_mw_800_wm_1_wmp_3.jpg" target="_blank" rel="external"><img src="http://cdn.sspai.com/attachment/thumbnail/2016/09/06/55465909b2ce6e26a1b604758aef57935478a_mw_800_wm_1_wmp_3.jpg" alt=""></a></strong></h3><h3 id="提升技巧"><a href="#提升技巧" class="headerlink" title="提升技巧"></a><strong>提升技巧</strong></h3><p><strong>1. 固件升级：</strong>亚马逊 Kindle 本月已将固件更新至 5.8.1，而 Kindle Paperwhite 1 及以前的机型已经停更了。建议大家购买新机的时候从第七代（Kindle Paperwhite 3、Kindle Voyage）往上走（第八代 Kindle Oasis、New Kindle），笔者第一时间便对自己的 Kindle 进行了更新。</p>
<p><a href="http://cdn.sspai.com/attachment/thumbnail/2016/09/06/f845e6844c5e8b8043039595a521ed155478b_mw_800_wm_1_wmp_3.jpg" target="_blank" rel="external"><img src="http://cdn.sspai.com/attachment/thumbnail/2016/09/06/f845e6844c5e8b8043039595a521ed155478b_mw_800_wm_1_wmp_3.jpg" alt=""></a></p>
<p>以下是官方提供的更新方式，分为自动和手动两种。自动因为速度较慢且受客观条件影响比较大，不太推荐，因此特别建议采用手动安装。</p>
<p><a href="http://cdn.sspai.com/attachment/thumbnail/2016/09/06/aca263c5b9cdc4466e30d0a53c040ad05478c_mw_800_wm_1_wmp_3.jpg" target="_blank" rel="external"><img src="http://cdn.sspai.com/attachment/thumbnail/2016/09/06/aca263c5b9cdc4466e30d0a53c040ad05478c_mw_800_wm_1_wmp_3.jpg" alt=""></a></p>
<p>实操图如下：</p>
<p><a href="http://cdn.sspai.com/attachment/thumbnail/2016/09/06/09f75554fd35a70fd99fa9ff1aa30f6a5478d_mw_800_wm_1_wmp_3.jpg" target="_blank" rel="external"><img src="http://cdn.sspai.com/attachment/thumbnail/2016/09/06/09f75554fd35a70fd99fa9ff1aa30f6a5478d_mw_800_wm_1_wmp_3.jpg" alt=""></a></p>
<p><strong>2. 邮箱传书：</strong>这是必备技能哦！这里特别介绍一下亚马逊的云端，在这里你可以永久保存你的电子书数据，即使在 Kindle 本地删除了，你还是可以通过云端继续下载到本地，可谓有备无患！当然，如果你有文字版的 PDF、MOBI、TXT 等格式并想在 Kindle 体验最大化的话，可以通过 convert 来转化目标格式为亚马逊 Kindle 最匹配的格式，具体方法如下方流程图。</p>
<p><strong><a href="http://cdn.sspai.com/attachment/thumbnail/2016/09/06/192c11194031f30cca91300de93613015478e_mw_800_wm_1_wmp_3.jpg" target="_blank" rel="external"><img src="http://cdn.sspai.com/attachment/thumbnail/2016/09/06/192c11194031f30cca91300de93613015478e_mw_800_wm_1_wmp_3.jpg" alt=""></a></strong></p>
<p><strong>3.  学外语：</strong>Kindle 内置多国语言词典，满足了 Kindle 爱好者的语言学习诉求。在最新的 5.8.1 版本中，更是加入了中英文生词提示的替换功能，更多维度地方便了学习英语的朋友。大家可以<strong>登入中亚官网→找到亚马逊商店→管理我的内容和设备→词典与用户指南</strong>，就可看到各种语言的词典了，可根据自身需求推送合适的词典。</p>
<p>你也可以通过相关途径购买词典然后通过 USB 连接到 PC，然后将词典复制到 Documents 的 Dictionaries 中，接着打开 Kindle，<strong>单击右上方的点点点→设备选项→语言和词典→词典→选择自己默认需要的中文和英文的词典。</strong>接着，便可开始畅游你的阅读世界了，下图为原生配置的词典☟</p>
<p><a href="http://cdn.sspai.com/attachment/thumbnail/2016/09/06/efe8fbcfae51eca8196e32627df720c25478f_mw_800_wm_1_wmp_3.jpg" target="_blank" rel="external"><img src="http://cdn.sspai.com/attachment/thumbnail/2016/09/06/efe8fbcfae51eca8196e32627df720c25478f_mw_800_wm_1_wmp_3.jpg" alt=""></a></p>
<p>注：技巧 2 和 3 中的细节我在公众号的文章<a href="http://mp.weixin.qq.com/s?__biz=MzI4MDA2MzUwNQ==&amp;mid=2649275034&amp;idx=1&amp;sn=8871d7c97d2f94ac610c7af2054fa6a1&amp;scene=21#wechat_redirect" target="_blank" rel="external">《如何优雅地用 Kindle 学习英语》</a>中已有详述。</p>
<p><strong>4. 玩转书摘：</strong>观察了很多在用着 Kindle 的朋友，他们完全不清楚怎么用 Kindle 整理书摘、做读书笔记或者体系化阅读。其实结合标注神器 Kindle Mate 抑或是 <a href="https://www.clippings.io/" target="_blank" rel="external">Clippings</a> 就可以做到。前者可以按照作者进行 txt 导出，然后传到有道云笔记或者印象笔记中进行笔记整理；后者可以直接在网页上绑定到印象笔记中进行标注内容传输操作。</p>
<p><strong><a href="http://cdn.sspai.com/attachment/thumbnail/2016/09/06/ed917011c9cca31958c13fadded9641e54790_mw_800_wm_1_wmp_3.jpg" target="_blank" rel="external"><img src="http://cdn.sspai.com/attachment/thumbnail/2016/09/06/ed917011c9cca31958c13fadded9641e54790_mw_800_wm_1_wmp_3.jpg" alt=""></a></strong></p>
<p><strong>5. Send to Kindle：</strong>大家应该都知道可以通过公众号推送内容到 Kindle 吧？没错，在亚马逊的服务号（微信号：cn_kindle）就提供了 Send to Kindle 的功能，只要你看到喜欢的内容，就可以简单操作后进行推送了。</p>
<p>目前这种方法在<strong>印象笔记、有道云笔记</strong>的微信号中同样适用，书友们可以好好研究下。</p>
<p><a href="http://cdn.sspai.com/attachment/thumbnail/2016/09/06/b5baffbd2c5900abd27d2459b179ae8854791_mw_800_wm_1_wmp_3.jpg" target="_blank" rel="external"><img src="http://cdn.sspai.com/attachment/thumbnail/2016/09/06/b5baffbd2c5900abd27d2459b179ae8854791_mw_800_wm_1_wmp_3.jpg" alt=""></a></p>
<h2 id="从高手到大神的几大神器"><a href="#从高手到大神的几大神器" class="headerlink" title="从高手到大神的几大神器"></a>从高手到大神的几大神器</h2><h3 id="全能神器-Calibre"><a href="#全能神器-Calibre" class="headerlink" title="全能神器 Calibre"></a><strong>全能神器 <a href="http://calibre-ebook.com/download" target="_blank" rel="external">Calibre</a></strong></h3><p>Calibre 是一款电子图书管理软件，其提供「一站式」的电子书解决方案，可以满足你对电子书一切需求，甚至可以利用它组织成属于自己的电子图书馆。它的功能多种多样，不仅可以用它对图书进行格式转换，归类整理电子书，还可以将文本图像材料、在线内容（RSS）加入并转换为电子书。更重要的是 Calibre 是免费的、开源的，拥有跨平台的设计，可在 Linux，OS X 和 Windows 操作系统中运行，堪称电子书管理神器。</p>
<p><a href="http://cdn.sspai.com/attachment/thumbnail/2016/09/06/8526e288b55f76a53f7f0b48b33d95c554793_mw_800_wm_1_wmp_3.jpg" target="_blank" rel="external"><img src="http://cdn.sspai.com/attachment/thumbnail/2016/09/06/8526e288b55f76a53f7f0b48b33d95c554793_mw_800_wm_1_wmp_3.jpg" alt=""></a> </p>
<h3 id="标注神器二连推"><a href="#标注神器二连推" class="headerlink" title="标注神器二连推"></a><strong>标注神器二连推</strong></h3><p><strong>1. <a href="https://www.clippings.io/" target="_blank" rel="external">Clippings.io</a>：</strong>看名字就知道它是通过导入 <strong>Clippings.txt </strong>文件来操作的网页程序，它没有机型限制，在电脑、手机、iPad 都可以操作，并且支持二次编辑。绑定大象之后便可以直接进行内容的传输，比较简单高效，英语学习者可以根据个人需要去整理自己的标注，具体见下图。</p>
<p><a href="http://cdn.sspai.com/attachment/thumbnail/2016/09/06/e5bb62bcb221d36a32a8cd7e393443e054794_mw_800_wm_1_wmp_3.jpg" target="_blank" rel="external"><img src="http://cdn.sspai.com/attachment/thumbnail/2016/09/06/e5bb62bcb221d36a32a8cd7e393443e054794_mw_800_wm_1_wmp_3.jpg" alt=""></a></p>
<p><strong>2. <a href="http://kmate.me/cn/" target="_blank" rel="external">Kindle Mate</a>：**</strong>Kindle Mate **是运行在 Windows 计算机上管理 Kindle 设备内容的辅助工具。通过 Kindle Mate，你可以在计算机侧同步、浏览管理 Kindle 设备上的内容，回顾阅读笔记或进行英语生词本的整合学习。另外，Kindle Mate 是免费软件，你可以永久免费使用，无任何功能与时间限制。当然如果你是 macOS 系统也是可以解决的，安装一个虚拟机就完事儿了。</p>
<p>目前最新版本为 1.31，开发者 Harvey 正在紧锣密鼓进行着 1.35 版的研发，新版本将于近期上线，有电子书阅读产出想法的朋友不妨好好期待一下。</p>
<p><a href="http://cdn.sspai.com/attachment/thumbnail/2016/09/06/b2549ddc054db84aa19a1ffadfcebdab54795_mw_800_wm_1_wmp_3.jpg" target="_blank" rel="external"><img src="http://cdn.sspai.com/attachment/thumbnail/2016/09/06/b2549ddc054db84aa19a1ffadfcebdab54795_mw_800_wm_1_wmp_3.jpg" alt=""></a></p>
<h2 id="你可能会有的一些疑问"><a href="#你可能会有的一些疑问" class="headerlink" title="你可能会有的一些疑问"></a>你可能会有的一些疑问</h2><h3 id="如何选择合适自己的-Kindle"><a href="#如何选择合适自己的-Kindle" class="headerlink" title="如何选择合适自己的 Kindle?"></a><strong>如何选择合适自己的 Kindle?</strong></h3><p>以下是当前比较流行的几款机型，已经可以满足各个消费端的人群了。圈起来的是都关键因素，我打箭头的地方大家尤其要注意一下。</p>
<p><a href="http://cdn.sspai.com/attachment/thumbnail/2016/09/06/a26929e45eba9dcca5177d41e87fa2d854796_mw_800_wm_1_wmp_3.jpg" target="_blank" rel="external"><img src="http://cdn.sspai.com/attachment/thumbnail/2016/09/06/a26929e45eba9dcca5177d41e87fa2d854796_mw_800_wm_1_wmp_3.jpg" alt=""></a></p>
<p>如果你问我应该买哪一台？我会建议加点预算买最好的。那句老话说得好：<strong>单反穷三代，Kindle 富一生。</strong>从经验看来，Kindle 不上背光就和单反不上全副一个道理，在资金允许的前提下，能买最好就买最好的。</p>
<p>作为一项长线投资，我会建议你在第七代的 Kindle Paperwhite 3 和 Kindle Voyage 中选，至于选哪一个，就仁者见仁了。</p>
<p>大家应该有看到下表中分辨率的一些数字指标，这里涉及到一个名词叫 ppi（Pixels Per Inch，也叫像素密度，说的是每平方英寸所拥有的像素数量）<strong>。</strong>因此 ppi 数值越高，即代表显示屏能够以越高的密度显示图像。大家应该可以在下表中看到第八代的 New Kindle 和其它机型的差距，足足有 133 ppi。至于背光，我认为是十分必要的，适用各种应用场景，用起来不会太纠结。</p>
<p>当然，这里的价格只是中亚的，会海淘的朋友也可自行通过日亚、美亚购买。另外，再给学生党一个建议，可以入新出的<strong>第八代的 New Kindle</strong>，基于第七代的改进，速度提升了而重量却降低了，最重要的是便宜啊！如果想买点进阶款（KPW、KV）又囊中羞涩的话，可以通过闲鱼同城寻觅「馅饼」，不过买前务必要做足功课哦！</p>
<h3 id="是否要刷机"><a href="#是否要刷机" class="headerlink" title="是否要刷机"></a><strong>是否要刷机</strong></h3><p>这里说的刷机，统一解释为刷多看系统。我们在做一件事之前，就应该先考虑做这个东西是否对于自己的必要性，考虑完了再去做。刷机虽然并不太难，但也算折腾，而且还有一定的风险性。</p>
<p>作为一个曾经把固件降到 5.4.3.2 再刷多看的人，我想告诉你，刷机意义不大！多看系统除了可以支持 Epub 和优化排版外，其他特点对我而言都没啥新鲜的，并且不支持 Azw3 格式。原生系统经过几次的更新之后，体验已经越来越好了。除非拥有两台 Kindle，不然我是不会随意刷机的:）</p>
<h3 id="是否要贴膜"><a href="#是否要贴膜" class="headerlink" title="是否要贴膜"></a><strong>是否要贴膜</strong></h3><p>回答这个问题前先让我们了解下 Kindle 屏幕的构造，它是由一层 E-ink 屏、一个电容屏和一个前置光构成，最外面是一层磨砂玻璃屏幕。相当于其屏幕本身就有一层「磨砂膜」了，再贴膜显得有点多此一举，重点是贴了还会一定程度影响大家看书的视觉效果，因此我是不太建议大家贴膜的。</p>
<h3 id="是否需要皮套"><a href="#是否需要皮套" class="headerlink" title="是否需要皮套"></a><strong>是否需要皮套</strong></h3><p>笔者早期的 KPW2 选了原生的皮套，带休眠，非常好用，它有效地保护了我的小 K，平时在地铁上单手可进行特技开合皮套，超级酷炫！X 宝的皮套质量良莠不齐，款式也多种多样，大家完全可以根据自己的喜好去买适合自己的款，我就差点入手了一个神奈川冲浪里的皮套，最后还是忍住了！自从有了 KO，就再也没纠结过这事。虽然很多人强调裸奔，我依旧觉得带个自己喜欢款式的皮套一定程度还是能够提升阅读的愉悦感。</p>
<h2 id="我的一些看法"><a href="#我的一些看法" class="headerlink" title="我的一些看法"></a>我的一些看法</h2><p>说点心里话吧，我是个很喜欢纸质书的人，也很享受用笔记录一切的感觉，因此经常会用多种类型的笔来记录自己喜欢的句子，然而这些操作不基于纸质书也可以做到。随着时代的变迁，我们需要适当地去做一些变化。</p>
<p>随着古登堡计划的不断推进以及亚马逊方面的不懈努力，电子书以及相关阅读器开始逐渐被阅读爱好者所认知。越来越多人关注到了 Kindle 以及相关延伸产品的开发和普及上，我很敬佩这群人。也希望他们能带着 Kindle 的匠心精神，把他们的产品做到极致。我也希望在不久的将来，我可以在那个 Donate 上面献上一笔有重量的东西。</p>
<p><em>（题图来自 <a href="https://techcrunch.com/2016/04/13/meet-oasis-amazons-smaller-lighter-grippier-kindle/" target="_blank" rel="external">TechCrunch</a>）</em></p>
]]></content>
      
        <categories>
            
            <category> 工具 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> kindle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[经济机器是怎样运行的(文字稿)]]></title>
      <url>http://chuanqiang.github.io/2016/09/22/%E7%BB%8F%E6%B5%8E%E6%9C%BA%E5%99%A8%E6%98%AF%E6%80%8E%E6%A0%B7%E8%BF%90%E8%A1%8C%E7%9A%84%E2%80%94%E2%80%94%E6%96%87%E5%AD%97%E7%A8%BF/</url>
      <content type="html"><![CDATA[<p>本文是视频<a href="https://www.youtube.com/watch?v=rFV7wdEX-Mo" target="_blank" rel="external">『经济机器是怎样运行的』</a>的自制文字稿，这个视频用简单清晰的方式把经济这个大事儿说清楚了。</p>
<a id="more"></a>
<hr>
<p>经济虽然看起来复杂，其实是以简单和机械的方式运行的。经济有几个简单的零部件和无数次重复的简单交易组成。这些交易首先是由人的天性驱动的，因而形成三股主要的经济动力：</p>
<ol>
<li>生产率的提高</li>
<li>短期债务周期</li>
<li>长期债务周期</li>
</ol>
<p>我们来看看这三个动力是如何相互作用的。</p>
<h2 id="交易"><a href="#交易" class="headerlink" title="交易"></a>交易</h2><p>交易可以看做是无数交易的总和，而交易是一件非常简单的事情，交易时刻都在发生，每次买东西都是进行一笔交易。在每次交易中，买方使用货币或信用，向卖方交换商品、服务或金融资产。货币加上信用等于支出总额。</p>
<p>支出总额是经济的驱动力。</p>
<p>如果用支出总额除以产销总量，就得出价格。交易是经济最基本零件，所有的经济周期都是交易造成的。所以理解了交易，就理解了整个经济。</p>
<p>一个市场，由买卖所有商品的所有买方和卖方构成。经济就是由所有市场内的全部交易构成。把全部市场的总支出和销量加在一起，就得到了了解经济运行状况的所有信息。</p>
<p>个人、企业、银行和政府都在以上述方式从事交易，用货币和信用，交换商品、服务和金融资产。政府是最大的买方和卖方，而政府有两个组成部分，即收税和花钱的中央政府和中央银行。央行控制着经济中的货币和信贷数量，因此不同于其他买方和卖方。央行通过利率和发行更多货币来实现这种控制。因此，央行在信贷流通中发挥着重要作用。</p>
<h2 id="信贷"><a href="#信贷" class="headerlink" title="信贷"></a>信贷</h2><p>信贷是经济中最重要的组成部分，但也许是人们最不了解的部分。它之所以重要，是因为它是经济中最大也最变幻莫测的部分。贷款人和借款人，与市场交易中的买方和卖方没有两样。通常，贷款人希望自己的钱生出更多的钱，而借款人是想购买当前无法承担的东西。借贷可以同时满足贷款人和借款人的需要。</p>
<p>借款人保证偿还借款，称为本金，并支付额外的款额，称为利息。利率高时借贷就会减少，因为利息昂贵，反过来，利率低时借贷就会增加，因为利息便宜。如果借款人保证偿还债务，而贷款人相信这一承诺，信贷就产生了。任何两个人都可以通过协定，凭空创造出信贷。</p>
<p>信贷看似简单，实则复杂。信贷一旦产生，立即成为债务。债务是贷款人的资产，是借款人的负债。等到借款人之后偿还了贷款，并支付了利息，这些资产和负债将会消失，交易得以完成。</p>
<p>借款人一旦获得了信贷，便可以增加自己的支出，而支出是经济的驱动力，因为一个人的支出是另一个人的收入。如果某人的收入增加，其信用度就会提高，贷款人就更愿意把钱交给他。</p>
<p>信用良好的借款人具备两个条件：</p>
<ol>
<li>偿还能力</li>
<li>不能还债时的抵押物</li>
</ol>
<p>收入与债务的比率高，借款人就具有良好的偿还能力。如果不能偿还，借款人还可以用有价值可以出售的资产作为抵押物。这样贷款人可以放心地把钱借给他们。</p>
<p>所以收入增加，借贷也增加，从而能够增加支出，由于一个人的支出是另一个人的收入，这将导致借贷进一步增加，并不断循环。这一自我驱动的模式导致经济增长，也正是因为如此，才产生了经济周期。</p>
<h2 id="周期"><a href="#周期" class="headerlink" title="周期"></a>周期</h2><p>在一项交易中，为了获得某样东西，你必须付出另一样东西。长期来看，你得到多少取决于你生产了多少。我们的知识虽时间而逐渐增多，知识的积累会提高我们的生活水平，我们将此称为生产率的提高。</p>
<p>一个善于创新和勤奋的人，会比那些自满且懒惰的人更快提高生产率和生活水平，但在短期内不一定体现出来。</p>
<p>生产率在长期内最关键。信贷在短期内最重要。这是因为生产率的提高不会剧烈波动，因此不是经济起伏的重要动力。但是债务是这样定义的，借贷时消费超过产出，还债是消费低于产出。</p>
<p>债务量的波动有两大周期，其中一个周期持续大约 5-8 年，另一个大约持续 75-100 年。虽然每个人都在波动中，因为距离太近，往往意识不到。</p>
<p>如上所示，经济波动不是取决于创新，而是跟信贷更有关系。我们先想象一个没有信贷的经济运行。在这样的环境里，增加支出的唯一方式是增加收入，因此需要提高生产率和工作量，提高生产率是经济增长的唯一途径。由于我的支出是另一个人的收入，当我或另一个人提高生产率的时候，经济就会增长，而且是一个稳步增长。</p>
<p>但是由于我们借债，于是产生了周期，原因并不是任何法规，而是人的天性和信贷的运作方式。借债不过是提前消费，为了购买现在买不起的东西，你的支出必然超过收入，因此你需要借钱，实际上是像未来的自己借钱，这样马上就形成了一个周期。通常，一旦你借钱，就制造了一个周期。对个人是这样，对整个经济运行也是这样。这就是为什么需要理解信贷，因为信贷创造了一系列机械的和可以预料的将在未来发生的事件。这就是信贷不同于货币的地方。</p>
<p>完成交易需要使用货币，交易立即完成。利用信用开始交易，买卖双方创造了信贷，只有当偿还债务之后，交易才算完成。</p>
<p>现实生活中，大部分所谓的钱，其实都是信贷。美国国内的信贷总额大约为 50 万亿美元，而货币总额只有大约 3 万亿美元。在有信贷的经济运行中，不仅可以通过提高生产率提高支出，还可以通过借贷来提高支出。因此信贷可以使收入增长在短期内超过生产率的增长，但在长期内并非如此。</p>
<p>信贷并不是坏事，只是会导致周期性变化。</p>
<p>信贷如果造成超过偿还能力的过度消费，就是不良信贷。但是，如果信贷高效率地分配资源产生收入并偿还债务，就是良性信贷。在有信贷的经济运行中，我们可以观察各种交易，了解信贷如何带来经济增长，是一个链式增长的过程，但借债形成周期。</p>
<h2 id="短期经济周期"><a href="#短期经济周期" class="headerlink" title="短期经济周期"></a>短期经济周期</h2><p>随着经济活动的增加，出现了扩张，这是短期债务周期的第一阶段，支出继续增加，价格开始上涨。原因是，导致支出增加的是信贷，而信贷可以立刻凭空产生。如果支出和收入的增长速度超过所出售的商品的生产速度，价格就会上涨，我们把价格的上涨称为通货膨胀。</p>
<p>央行不希望通货膨胀过高，因为这会导致许多问题。央行在看到价格上涨时就会提高利率，随着利率的上升，有能力借钱的人就会减少，同时，现有的债务成本也会上升，每个月信用卡的还款额会增加。由于人们减少借债，并且还款额度增长，所以剩下来用于支出的资金将会减少，因此支出速度放慢，而由于一个人的支出是另一个人的收入，环环相扣，人们的收入将下降。由于支出减少，价格就会下跌，我们称之为通货紧缩，经济活动减少，经济便陷入衰退。如果衰退过于严重，而通货膨胀不再成为问题，央行将降低利率，使经济活动重新加速。随着利率降低，偿债成本下降，借债和支出增加，出现另一次经济扩张。</p>
<p>在短期债务周期中，限制支出的唯一因素，是贷款人和借款人的贷款意愿。如果信贷易于获得，经济就会扩张，如果信贷不易获得，经济就会衰退。请注意，这个周期主要由央行控制。</p>
<p>短期债务周期通常持续 5-8 年，在几十年里不断重复。但是请注意在每个周期的低谷和高峰后，经济增长和债务都超过前一个周期。为什么会这样，这是人促成的。人具有借更多钱和花更多钱的倾向而不喜欢偿还债务，这是人的天性，因此在长期内，债务增加的速度超过收入，从而形成长期债务周期。</p>
<h2 id="长期债务周期"><a href="#长期债务周期" class="headerlink" title="长期债务周期"></a>长期债务周期</h2><p>尽管人们的债务增加，但贷款人会提供更宽松的借贷条件，这是为什么？这是因为大家都以为形势一片大好，因为仅注意最近出现的情况。最近出现的情况是什么呢？收入一直在增加，资产价值不断上升，股票市场欣欣向荣，现在是繁荣时期，用借来的钱购买各类资产，很划算。当人们过度借贷消费时，泡沫便产生了。</p>
<p>因此，尽管债务一直增加，但是收入也已相近的速度增加，从而抵消了债务。我们把债务与收入比例称为债务负担，只要收入继续上升，债务负担就可以承受。于此同时资产价格迅猛上升，人们大量借钱来购买资产，因为投资促使资产价格日益升高，人们感觉自己很富有，因此即使积累了大量债务，收入和资产价值的上升帮助借款人在长期内保持良好的信用。但是这种情况显然无法永久持续下去。</p>
<p>几十年来，债务负担不断增加使偿贷成本越来越高，到了一定的时候，偿贷成本的增加速度超过收入，迫使人们削减支出，由于一个人的支出是另一个人的收入，收入开始减少，而偿贷成本继续增加，导致支出继续减少，周期开始逆转。</p>
<p>这时到达了长期债务的顶峰，债务负担变得过重。美国和欧洲在 2008 年就发生了这一情况。日本在 1989 年和美国在 1929 年因同样原因发生了这一情况。现在经济进入了去杠杆化时代。</p>
<h2 id="去杠杆化"><a href="#去杠杆化" class="headerlink" title="去杠杆化"></a>去杠杆化</h2><p>在去杠杆化过程中，人们削减支出，收入下降，信贷消失，资产价格下跌，银行发生挤兑，股票市场暴跌，社会紧张加剧，整个过程开始下滑并形成恶性循环，随着收入下降和偿债成本增加，借款人倍感拮据，随着信用消失，信贷枯竭，借款人再也无法借到足够的钱来偿还债务，借款人竭力填补这个窟窿，不得不出售资产，在支出下降的同时，出售热潮使市场充满待售资产。这时股票市场暴跌，不动产市场一蹶不振，银行陷入困境，随着资产价格下跌，借款人的抵押物价值也在降低，进一步降低了借款人的信用，人们觉得自己很穷，信贷迅速消失，支出减少，收入减少，财富减少，信贷减少，借债减少，这是一个恶性循环。看起来和衰退相似，但是无法通过降低利率来改变局面。</p>
<p>在衰退中，可以通过降低利率来刺激借贷。但是在去杠杆化过程中，由于利率已经很低，低至零，从而丧失刺激功能，因此降低利率不起作用。</p>
<p>美国国内的利率在 1930 年代的去杠杆化期间下降到零，在 2008 年也是如此。</p>
<p>衰退与去杠杆化的区别在于，在去杠杆化过程中，借款人的债务负担变得过重，无法通过降低利率来减轻。贷款人意识到债务过于庞大，根本无法足额偿还。借款人失去了偿带能力，其抵押物失去价值，他们觉得受到了债务的极大伤害，不想再介入更多债务。贷款人停止放贷，借款人停止借贷。整个经济体与个人一样都失去了信用度。</p>
<p>那么应该怎样应对去杠杆化？问题在于债务负担太重，必须减轻，为此可以采用四种办法：</p>
<ol>
<li>削减支出（紧缩）</li>
<li>减少债务（债务违约和重组）</li>
<li>财务再分配</li>
<li>发行货币</li>
</ol>
<p>历史上每一个去杠杆化阶段都是如此：</p>
<ul>
<li>美国（1930年代）</li>
<li>英国（1950年代）</li>
<li>日本（1990年代）</li>
<li>西班牙和意大利（2010年代）</li>
</ul>
<p>削减支出会导致收入下降，收入下降速度超过还债的速度，因此债务负担实际上更为沉重。削减支出的办法引起通货紧缩。企业不得不削减成本，这意味着工作机会减少，失业率上升。这导致下一个步骤，即必须减少债务。</p>
<p>借款人不还钱，存款人会担心银行没钱，于是纷纷取出存款，银行受到挤兑，个人、企业、银行出现债务违约，这种严重的经济收缩，就是萧条。萧条的一个主要特征是人们发现原来属于自己的财富中很大一部分其实并不存在。</p>
<p>很多贷款人不希望自己的资产消失，同意债务重组。债务重组意味着贷款人得到的还款减少，或偿还期延长，或利率低于当初商定的水平，无论如何，合约被破坏，结果是债务减少，贷款人希望多少收回一些贷款，这强过血本无归。债务重组让债务消失，但是由于它导致收入和资产价值以更快的速度消失，债务负担继续日趋沉重。削减债务和削减支出一样令人痛苦，并且导致通货紧缩，所有这些都对中央政府产生影响，因为收入降低和就业减少，意味着政府的税收减少，于此同时，由于失业率上升，中央政府需要增加支出，很多失业者储蓄不足，需要政府的财务资助。此外政府制定刺激计划和增加支以弥补经济活动的减少。</p>
<p>在去杠杆化过程中，政府的预算赤字飙升，原因是政府的支出超过税收。政府必须加税或者举债以填补赤字。但是要从哪里拿钱？</p>
<p>从富人手中，通过征税把财富从富人那里转到穷人手中。这样会产生阶级矛盾，如果萧条继续下去，就会爆发社会动荡，不仅国家内部的紧张加剧，而且国家之间也会这样，债务国和债权国之间尤其如此，这种局势会导致政治变革，尤其是极端的变革。</p>
<p>1930 年代，这种情况导致希特勒掌权，欧洲爆发战争，和美国的大萧条。</p>
<p>因为支出的很大一部分是信贷，但是萧条时期信贷消失，所以人们钱不够花，那么怎么办，央行发行更多货币，但这个会引起通货膨胀和刺激经济。</p>
<p>央行通过用这些货币购买金融资产，帮助推升了资产价格，从而提高了人们的信用，但是这仅仅有助于那些拥有金融资产的人。</p>
<p>因此，为了刺激经济，央行和政府必须合作。央行通过购买政府债券，其实是把钱借给政府，使其可以通过刺激计划和失业救济金，来增加购买商品和服务的支出，这增加了人们的收入，也增加了政府的债务，但是这个办法将降低经济中的总债务负担。</p>
<p>这是一个风险很大的时刻，决策者需要平衡考虑降低债务负担的四种办法，必须平衡兼顾通货紧缩和通货膨胀以便保持稳定，如果取成适当的平衡，就可以带来<strong>和谐的去杠杆化</strong>。</p>
<p>所以说去杠杆化可以是痛苦的，也可以是和谐的。怎样才能实现和谐的去杠杆化？需要结合使用这四种办法。</p>
<p>那么发行的货币是否会增加通货膨胀呢，如果增发的货币抵消了信贷的降幅就不会引发通货膨胀，因为影响价格的因素是支出，而支出包括货币和信贷。</p>
<p>央行为了扭转局面，不仅需要推动收入的增长，而且需要让收入的增长率，超过所积累债务的利率。也就是收入一定要比债务增长得快。但发行过多货币会导致恶性通货膨胀。</p>
<p>实际上去杠杆化是一个把高债务水平变化到低债务水平的过程。为了使经济再次恢复正常，这个通货再膨胀的阶段大约要持续 7-10 年，因此有失去的 10 年这个说法。</p>
<h2 id="三条经验法则"><a href="#三条经验法则" class="headerlink" title="三条经验法则"></a>三条经验法则</h2><ol>
<li>不要让债务的增长速度超过收入</li>
<li>不要让收入的增长速度超过生产率</li>
<li>尽一切可能提高生产率</li>
</ol>
<p>摘自 <a href="http://wdxtub.com/2016/09/07/how-economic-works/" target="_blank" rel="external">小土刀</a></p>
]]></content>
      
        <categories>
            
            <category> 书摘 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 经济 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[周鸿祎自述：我的互联网方法论]]></title>
      <url>http://chuanqiang.github.io/2016/09/22/%E5%91%A8%E9%B8%BF%E7%A5%8E%E8%87%AA%E8%BF%B0%EF%BC%9A%E6%88%91%E7%9A%84%E4%BA%92%E8%81%94%E7%BD%91%E6%96%B9%E6%B3%95%E8%AE%BA/</url>
      <content type="html"><![CDATA[<p>在《周鸿祎自述：我的互联网方法论》中，周鸿祎首次讲述了自己的互联网观、产品观和管理思想，厘清了互联网产品的本质特征和互联网时代的新趋势，列举了颠覆式创新在现实中的实践和应用。</p>
<a id="more"></a>
<h2 id="三个价值观"><a href="#三个价值观" class="headerlink" title="三个价值观"></a>三个价值观</h2><p>看一个人是不是具备创新力，先看一点，是不是敢想敢干。这是我的第一个价值观。第二个价值观是在互联网里干，做什么都不如做一件产品改变世界来得彻底。做出一些别人没有做出来的产品，让这种产品能够影响很多人，能够改变很多人的生活，这样才值得尊敬。第三个价值观，就是要与众不同。按照苹果的说法，就是“ think different”（非同凡“想”）。</p>
<h2 id="第一章-欢迎来到互联网时代"><a href="#第一章-欢迎来到互联网时代" class="headerlink" title="第一章 欢迎来到互联网时代"></a>第一章 欢迎来到互联网时代</h2><h4 id="趋势"><a href="#趋势" class="headerlink" title="趋势"></a>趋势</h4><p>任何企业都可以找最强的竞争对手打，但有一个对手你是打不过的，那就是趋势。趋势一旦爆发，就不会是一种线性的发展。它会积蓄力量于无形，最后突然爆发出雪崩效应。任何不愿意改变的力量都会在雪崩面前被毁灭，被市场边缘化。 混沌理论认为在混沌系统中，初始条件十分微小的变化，经过不断放大，对其未来状态会造成极其巨大的影响。混沌理论最形象的比喻是“蝴蝶效应”：一只黑天鹅后来泛指那些不可预测、意料之外却又改变一切的东西。 </p>
<p>互联网已经干掉了很多行业。它是一个价值的创造者，但它首先是一个价值的毁灭者，它在毁灭很多传统的商业模式，谁离互联网最近，互联网就先毁灭谁。在毁灭的同时，它再去建立新的商业模式。</p>
<p>大公司失败不是因为愚蠢，实际上它们有很多聪明的人才，而往往是因为自大。大公司看不懂新的模式，所以凭借老经验，对新生的事物报以嘲笑；但即使看懂了新的模式，它们又因为不愿意放弃既有的业务收入而错失转型的良机，而这给了小公司足够的发展时间和空间。</p>
<h4 id="互联网思维"><a href="#互联网思维" class="headerlink" title="互联网思维"></a>互联网思维</h4><p>这个时代是互联网的时代，你需要互联网思维，当然不是那种越来越成为玄学的互联网思维，而是一种回归常识的互联网思维。 </p>
<p>用户为什么非要用这款产品？这款产品能为用户解决什么问题？这款产品与竞争对手的产品到底有哪些不同？ </p>
<p>遇到希望转型的企业，我都会劝他们放弃在概念上的论证，放弃在平台上的规划，放弃所谓大战略，放弃下很大一盘棋的想法，还是应该聚焦在用户身上。 </p>
<h4 id="核心是产品体验"><a href="#核心是产品体验" class="headerlink" title="核心是产品体验"></a>核心是产品体验</h4><p>我要做的东西或者我已经做的东西，用户是什么人？用户在用我的产品的时候，会遇到什么问题？有什么问题是竞争对手没有解决好的？那可能对我来说就是一个机会。有些什么问题我做得不好，但我还可以做得更好？这代表着其中有创新的机会。 </p>
<p>所有伟大的东西都是虚的，因为你要打开市场，最终需要撬动用户的心。这是一个切入点。这个切入点找不到，所有的战略都是空气。 </p>
<p>很多创新不是从企业自身的角度出发，而是从改善用户的体验出发。</p>
<h4 id="商业模式不是赚钱模式"><a href="#商业模式不是赚钱模式" class="headerlink" title="商业模式不是赚钱模式"></a>商业模式不是赚钱模式</h4><p>一说商业模式就想到怎么去挣钱。这样想是非常危险的，因为一个商业模式的基础是用户，没有用户，任何商业模式都是浮云。他们不知道一个商业模式的核心是产品，本质是通过产品为用户创造价值。商业 </p>
<p>什么是商业模式？其实，商业模式不是赚钱模式。它至少包含了四方面内容：产品模式、用户模式、推广模式，最后才是收入模式，也就是怎么去赚钱。一句话，商业模式就是你能提供什么样的产品，给什么样的用户创造什么样的价值，在创造用户价值的过程中，用什么样的方法获得商业价值。 </p>
<p>真正的推广模式是要根据你的用户群和产品，去设计相应的推广方法。 真正的推广是对产品的不断完善和提升。在推广的过程中，你要研究市场，跟目标用户打交道，了解用户真正的需求，了解用户使用产品时遇到的困惑和问题，再反馈到产品上进行改进，由此不断调整和完善。</p>
<p>对创业者来说，谈论收入模式，谈论如何赚钱，是最不靠谱、最没有意义的事情。 </p>
<p>没有用户价值，就没有商业价值。</p>
<p>互联网是虚拟的东西，如果没有一种用户至上的服务精神，没有每周 7天紧张工作的奋斗精神，很难做成功。</p>
<h2 id="第二章-互联网里的用户至上"><a href="#第二章-互联网里的用户至上" class="headerlink" title="第二章 互联网里的用户至上"></a>第二章 互联网里的用户至上</h2><p>用户的定义在我看来就是那些你能长期提供一种服务，能长期让他感知你的存在，能长期跟你保持一种联系的人。你只有在互联网上积累了足够多的用户，才有能力把其中一些用户转成你的客户。 </p>
<h4 id="用户是互联网商业模式的基础。"><a href="#用户是互联网商业模式的基础。" class="headerlink" title="用户是互联网商业模式的基础。"></a>用户是互联网商业模式的基础。</h4><p>只有想办法给用户提供高品质的服务，甚至是免费服务，才能拥有一个强大的用户基础，拥有了一个强大的用户基础之后，才可能构建商业模式。 </p>
<p>我们判断一款产品好不好，不是看它能帮公司赚多少钱，而是看能帮助用户解决什么问题。</p>
<h4 id="互联网产品的本质是为用户服务"><a href="#互联网产品的本质是为用户服务" class="headerlink" title="互联网产品的本质是为用户服务"></a>互联网产品的本质是为用户服务</h4><p>所以好的互联网产品总结起来都有两个特性：第一，它要能在一个点上打动用户；第二，它一定是在持续改进、持续运营。这是互联网产品的一个魅力。 </p>
<p>因此不要期望某一个版本带来革命，而是要靠很多小版本来实现革命。也就是说，并不是在一开始就策划一个庞大的技术体系，而是从一个点开始切入，甚至是做一些比较简陋的原型，或比较粗糙的第一个版本，最重要的是尽快发布、争取用户，在得到市场的验证和指点之后，再进行调整。</p>
<p>在这样的时代，做产品一定要做减法，一定要找对一个点，在这一个点上做到极致。</p>
<h2 id="第三章-颠覆式创新"><a href="#第三章-颠覆式创新" class="headerlink" title="第三章 颠覆式创新"></a>第三章 颠覆式创新</h2><h4 id="颠覆式创新是人性的表达"><a href="#颠覆式创新是人性的表达" class="headerlink" title="颠覆式创新是人性的表达"></a>颠覆式创新是人性的表达</h4><p>创新有三种形式。第一种形式很难发生，那就是发明。发明一种从来没有过的新技术、新材料在。第二种是从商业模式上创新，就是把贵的东西做成便宜的，收费的做成免费的；第三种是从体验上创新，就是把复杂难用的东西变简单，把笨重的东西变便携。</p>
<p>商业的本质就是让人性得到释放，颠覆式创新也不例外，归根结底就是怎样满足人性。</p>
<p>熊彼特是创新理论的鼻祖，他认为创新就是生产技术的革新和生产方法的变革，对现代资本主义的经济发展起着至高无上的作用。</p>
<p>我认为“破坏性创新”和“颠覆式创新”是一回事，用更地道的话说，就是商业“革命”。 </p>
<p>破坏和颠覆，都是强调打破原有的平衡，建立新秩序。</p>
<p>颠覆式创新是好是坏，用厂商的立场进行道德评判是没有意义的。 </p>
<p>一定不能以一种藐视的态度看待新生事物。它可能满身缺点，你用自己的优点比它的缺点，基本上你会全胜。但是，颠覆你的这个东西，不需要做成十项全能，它只要在一个点上追求极致，做得远远超过你，这就足够了。 </p>
<p>巴菲特有一句名言：别人贪婪时我恐惧，别人恐惧时我贪婪。</p>
<h4 id="颠覆式创新，需要逆向思维"><a href="#颠覆式创新，需要逆向思维" class="headerlink" title="颠覆式创新，需要逆向思维"></a>颠覆式创新，需要逆向思维</h4><p>各种商业战争的案例，都教给我们一个道理，就是当你面对强手的时候，一定不要按照它的节拍跳舞，按照它的节拍跳舞你就死定了。你要想办法通过反向思维，通过逆向操作，在用户体验和商业模式上创造一种新的游戏规则。 </p>
<p>如果要学习乔布斯，就要学习他的精髓，那一定得从 iPod学起。这就像一个人吃了七个馒头吃饱了，你就觉得第七个馒头很神奇，看是用什么特殊面粉做的。</p>
<p>在某种程度上，壳比核还重要。用户体验好不好，都体现在壳上，都反映在你在核心上做了什么。</p>
<h4 id="颠覆的力量来自于侧翼和聚焦。"><a href="#颠覆的力量来自于侧翼和聚焦。" class="headerlink" title="颠覆的力量来自于侧翼和聚焦。"></a>颠覆的力量来自于侧翼和聚焦。</h4><p>就是颠覆的力量从来不是来自于主流的、热门的市场，而是来自于边缘地带，来自于侧翼。 </p>
<p>遇到创业者，我都强调一点，不要满脑子想着做平台，而是要找一个大公司看不到的角落，给用户解决问题。平台是大公司玩儿的事情。颠覆要的是微观力，而不是平台力。平台是产生不了颠覆力量的，大公司之所以能够成为平台，是因为它在解决用户问题的过程中把规模做大了，自然就变成了一个平台。</p>
<h2 id="第四章-免费时代"><a href="#第四章-免费时代" class="headerlink" title="第四章 免费时代"></a>第四章 免费时代</h2><p>互联网上的软件必须免费，彻底免费，然后再从企业级市场上去赚钱。而且，免费也的确是一种推广产品的强有力手段，能够使产品迅速推广，短时间内成为事实标准，建立竞争壁垒。 </p>
<p>免费，英文词就是 free。我觉得 free是互联网的重要精神，它有三层含义。第一层含义是免费。我不挣老百姓的钱，但免费可以为我带来最大的市场份额，可以为我带来忠诚的用户群，带来品牌的知名度与价值。第二层含义是自在、便利。无论做软件还是做服务，都应该让人感到网络生活的自在、便利。第三层含义是自由。在互联网上，你要放开了去想去创新，想到了就去做，而不模仿他人。 </p>
<h4 id="互联网的商业模式"><a href="#互联网的商业模式" class="headerlink" title="互联网的商业模式"></a>互联网的商业模式</h4><p>互联网的商业模式主要是两种：一种是广告，一种是增值服务。<br>广告模式，有的人说是“羊毛出在猪身上”。这种“羊毛出在猪身上”的模式，换成很学术的说法，就是第三方补贴。<br>什么是增值服务？其实很简单。只要是在互联网上每个人都需要的服务，我们就认为它是基础服务，基础服务一定是免费的，这样的话不会形成价值歧视。就是说，只要这种服务是每个人都一定要用的，我一定免费提供，而且是无条件免费。增值服务不是所有人都需要的，这个比例可能会相当低，它只是百分之几甚至更少比例的人需要，所以这种服务一定要收费。互联网上伟大的公司刚开始都是以免费、好的产品集聚用户的力量，在此基础上再构建商业模式。 </p>
<p>你应该回答清楚以下几个问题：你究竟拿什么免费？这个东西会不会成为一项基础服务？通过免费能不能得到用户？在得到用户和免费的基础上，有没有机会做出新的增值服务？增值服务的用户愿意付费吗？如果你能回答清楚这些问题，就是一个好的商业模式。不要因为只是赢利模式暂时不清晰，就否定它的整个商业模式。 </p>
<p>免费既是商业模式，又是一种革命的手法，也是一种营销手段，也是互联网的一种精神。<br>用户是互联网所有业务收入的基础。你可以暂时放弃收入，只要用户还在，就可以把收入再挣回来。但如果为了收入和业务，你损害了用户的价值，用户跑掉了，你有再多的收入都会崩溃。 </p>
<p>如果你只会生产硬件、卖硬件，一旦你的价值链被人免费，对不起，你最后只能沦为代工，挣点微薄的利润。要想生存下去，你需要建立一种新的商业模式，要创造新的价值链。所以，“硬件免费”必须要创造新的价值链来支撑，这也是传统企业转型互联网时必须要考虑的问题。 硬件免费之后，如同免费的软件一样，不再是一个价值链里唯一的一环，而是变成了第一环，变成了厂商和用户之间交互的窗口，变成了厂商与用户沟通的桥梁。</p>
<h4 id="互联网化"><a href="#互联网化" class="headerlink" title="互联网化"></a>互联网化</h4><p>硬件的互联网化分为以下“四化”。第一是商业模式互联网化。《连线》杂志主编凯文·凯利早就预言说，未来的硬件一定是免费的。虽然移动终端的利润趋近于零，但通过内置的各种增值服务，同样可以建立起互联网化的商业模式。 第二是产品体验互联网化。第三是市场推广的互联网化。进入互联网时代，产品的推广要基于好的产品体验，依靠口碑进行推广传播。作为新媒体，互联网的 SNS特点打乱了传统广告对人群的划分方式。第四是产品销售的互联网化。互联网既是媒体传播平台，也是电子商务平台。电子商务是扁平化的销售模式，压缩了中间渠道的沉淀成本。 </p>
<h4 id="免费之后"><a href="#免费之后" class="headerlink" title="免费之后"></a>免费之后</h4><p>免费具有一种颠覆性的力量，它会破坏传统的商业模式，同时又建立新的价值体系。 免费之后怎么办？我的回答是，一定要延长自己的价值链。打比方说，你卖手机都不赚钱了，那你一定要在手机里留下赚钱的东西。<br>文·凯利预言了。他在《技术想要免费》的文章里说：“在未来（至少在很短的一段时间内），我们所制造的一切几乎都将免费，包括冰箱、滑雪板、激光投影机、服装等等。实现的前提，是这些东西融合在网络节点中，成为网络服务的载体。” </p>
<p>怎么才能实现跨界、成功转型呢？难度还是挺大的，成功案例真的也不多，但我觉得可以从两个方面入手。第一，在内部培养容忍失败、鼓励创新的文化。第二，通过合作培育突变的基因，短时间内获取不具备的能力。</p>
<h4 id="第五章-体验为王"><a href="#第五章-体验为王" class="headerlink" title="第五章 体验为王"></a>第五章 体验为王</h4><p>超出预期的才叫用户体验 。所有的行业都是娱乐业，怎样让用户很爽，从头爽到尾，这就是娱乐业的精神。 </p>
<p>要应对变化的商业环境，要进行自我革新，你需要重新回过头来，研究你的业务流程，研究你的用户消费习惯，重新看你的用户如何使用你的产品，你的产品是否给用户解决了问题。这样点滴改进，用户体验一定会改善。 </p>
<p>消费者其实是不理性的，他们选择和拒绝一款产品，往往来源于人性很小的点。所有成功的产品都是从人性的角度出发的。 大部分人天生就是懒惰的。人性的懒惰就使大家会自动自发地选择更易于操作的产品，所以要让简单也成为一种重要创新，带来一种全新的体验。</p>
<h2 id="第六章-互联网方法论"><a href="#第六章-互联网方法论" class="headerlink" title="第六章 互联网方法论"></a>第六章 互联网方法论</h2><h4 id="微创新"><a href="#微创新" class="headerlink" title="微创新"></a>微创新</h4><p>从用户的角度来看问题，从行业巨头看不到、看不懂、看不起的小处着眼切入市场，通过快速地、持续地改进产品的用户体验，从而达到颠覆市场格局的目标，这种持续不断的创新就叫微创新。 </p>
<p>有两点很关键：第一从小处着眼，贴近用户需求心理；第二要小步快跑，快速出击，不断试错。我把这两点称为互联网上的“微创新”规律。 所以现在互联网讲究的是用最低的成本、最小的规模、最快的速度去尝试一个粗糙的东西，快速拿到市场上去试，市场好就趁热打铁，乘胜追击，不好就赶快换方向。 </p>
<p>我说先别跟我谈 1亿用户，你先让 100个用户来试试，看看反应。如果 100个用户使用反馈很好，那我们再多买两台服务器，看 1万个用户行不行。如果 1万个用户反馈情况不错，那我们可以批量采购服务器了。所以按照这个小步快跑的微创新理论，很多企业的研发方法、产品发布方法和迭代更新的速度都会有所改变。 </p>
<p>所以，做产品不要在乎绝对数，而是要关注相对的增长趋势。 功能更贵精，不贵多，要在每一个点上做到极致。 有头大象，我们怎么也推不动它，但如果你把力量变成一把锥子，很有可能就把它刺痛了。很多人说，未来要做成一个伟大的公司，但我觉得再伟大的目标，也要从小的引爆点开始突破。 </p>
<p>衡量什么算微创新，其实有一个很简单的标准：用户会不会用最屌丝的语言在用户间流传。 </p>
<h4 id="容忍失败"><a href="#容忍失败" class="headerlink" title="容忍失败"></a>容忍失败</h4><p>在我们这个文化里，创新的失败率很高，到处存在这种无形的压力，这会让很多人不愿意去做真正的创新。 虽然我们嘴巴上喜欢讲创新，但创新一旦出来，我们对它进行价值判断的时候，包括我在内，对少数派的不宽容，对从众心理的需求，也会有意无意地压制创新。</p>
<p>而法律从来不保护商业模式，法律只保护知识产权，只保护商标。 全球任何国家的法律从来不保护商业模式，在中国却是个例外。 </p>
<p>一定会形成美国那种创新和创业的氛围，最后中国才能出现真正的硅谷精神和乔布斯。 </p>
<p>在这样的价值观里，很多人都不敢创新，因为害怕失败。当你真正去创新的时候，很多时候缺的不是智商，也不是情商，而是胆量。 </p>
<h4 id="战略必须要落地到产品"><a href="#战略必须要落地到产品" class="headerlink" title="战略必须要落地到产品"></a>战略必须要落地到产品</h4><p>谈概念，我觉得是最乏味的，因为概念都是正确的废话。概念正确，并不意味着消费者一定要用你的产品。硅谷的产品经理精神，可能太务实，太实用主义，没有战略，但任何伟大的公司都是从做一款产品开始的。 </p>
<p>你要能脱颖而出，无非是两种思路：要么是进入很新的领域，产生很新的想法；要么是在大家都知道的领域，想得比别人深，想到和别人不一样的解决方法。 </p>
<p>战略不管规划得如何宏大，最终要落地，就需要打开市场，而要打开市场，最重要的是打动用户的心。这是一个很关键的切入点，这个切入点找不到，所有的战略都是空气。 </p>
<h4 id="互联网产品的几个特点"><a href="#互联网产品的几个特点" class="headerlink" title="互联网产品的几个特点"></a>互联网产品的几个特点</h4><p>互联网产品有几个容易被忽视的特点。第一，互联网产品要有一个灵魂，要符合相关领域的游戏规则，能打动用户的心。 第二，互联网产品需要不断运营、持续打磨。从前面两点可以推出第三个特点，大家都说产品要做到专注和极致。在产品方向上，一定要先学会做减法，而不是做加法。要先找对一个点做到极致，否则你什么功能都做，最后都不突出，没有鲜明的卖点。 </p>
<p>怎样才能找到用户的需要？我经常说，一线的客服、运营员工才是创新的动力。只有不断地接触用户，不放过每一个小抱怨，才能找到真正的点。企业 </p>
<p>在日常生活中这种体验无处不在，如果你能够处处留心，把自己当成一个抱怨的用户之后，可以再上升一个层次，在抱怨的地方想想如何去改善用户体验。 </p>
<h3 id="做产品需要“现场力”-。"><a href="#做产品需要“现场力”-。" class="headerlink" title="做产品需要“现场力” 。"></a>做产品需要“现场力” 。</h3><p>我建议要学会摆脱本位主义，少从个人角度思考，多站在用户的角度看问题。<br>我觉得做互联网企业一定要有现场力，产品经理要有“柔性的头脑”和“坚强的腿脚”，要接触用户，在第一线才能保持手感和接地气。接地气的一个方法，就是多从生活中的真实案例出发，时刻关注产品的用户体验。 </p>
<p>强需求产品可以自我发展成强大的渠道，而弱需求产品独立做很难，必须有一个强大的渠道。</p>
<h4 id="做产品要有一颗粗糙的心"><a href="#做产品要有一颗粗糙的心" class="headerlink" title="做产品要有一颗粗糙的心"></a>做产品要有一颗粗糙的心</h4><p>比尔·盖茨曾经说过，初出茅庐的时候你要自尊干什么？那自尊是假的，当你做出真正的好产品的时候，当你成功的时候，大家都会尊重你。放下身段，倾听用户的需求，甚至倾听用户的羞辱，当年我们都是这么过来的。 </p>
<p>做一个好的产品经理，要对产品的结果负责，心要粗糙一点，要迟钝一点，不要管别人怎么说，要能够经受这种失败，因为好的产品，是经过不断失败、不断打磨才出来的。好的体验绝对不会一次到位，要不断地一点一滴地去改进。 </p>
<h4 id="如何建立一个“铁打的营盘”"><a href="#如何建立一个“铁打的营盘”" class="headerlink" title="如何建立一个“铁打的营盘”"></a>如何建立一个“铁打的营盘”</h4><p>如何建立一支优秀团队，仁者见仁，智者见智，但我认为万变不离其宗，关键是把握三个要点。第一，不能以发财为目标，一定要有某种程度的理想主义情怀。第二，财散人聚，要有激励机制，把大家的利益捆绑在一起。第三，解决新老交替的问题，留一部分利益给未来。</p>
<p>管理模式应该是什么样的，我们需要一起探索。但是有一点是可以肯定的，那一定是扁平化的，一定是以产品和用户为核心的，一定是小而美的。扁平化就是减少行政层级，把传统层层汇报的金字塔组织结构改为两层，最多三层。小而美就是把团队分解成无数小团队，按项目或业务分类等进行划分，人员灵活组合，项目启动快，能对市场和用户的需求做出快速反应。 </p>
<p>在今天这个时代，评价员工、评价团队、评价公司，价值标准永远应该是能不能做出对用户有价值的产品。这也是 360最看重的。 </p>
<h2 id="周鸿祎批注“遗失的乔布斯访谈”"><a href="#周鸿祎批注“遗失的乔布斯访谈”" class="headerlink" title="周鸿祎批注“遗失的乔布斯访谈”"></a>周鸿祎批注“遗失的乔布斯访谈”</h2><p>很多时候大家为了追求表面上的和谐而委曲求全，很多想法不愿意讲出来。好的想法是需要争论的，就像石头需要经过摩擦、磨砺、打磨，最后才能变得美丽光滑。这个比喻既是说团队也是说合作伙伴，他们都会有碰撞、争论、大吵。 </p>
<p>会找答案——这就是好产品的关键因素——不在于管理流程而在于答案本身。 </p>
<p>我觉得所有的管理流程，实际上都是为公司的业务服务的。如果我们抛弃了业务的目标，变成了为管理而管理，天天在那儿搞架构，搞流程。但一旦脱离了产品，实际上就脱离了市场，脱离了用户需求。这种公司基本上就是靠惯性在发展，它很快就会被市场颠覆。 </p>
<p>所以我认为至少要像开设经济特区一样，在一块特殊区域，放弃流程，聚集一帮很特别的人才，把眼睛聚焦到产品之上。 </p>
<p>毕加索曾说过，“好的艺术家懂得复制，伟大的艺术家则擅长偷窃”，而我们不羞于窃取伟大的想法。 </p>
<p>乔布斯还说过一句经典的话“ Stay hungry, stay foolish”（求知若饥，虚心若愚）。</p>
<p>我当然鼓励以产品为核心，因为一个公司真正的价值就在于给用户提供有价值的产品。</p>
]]></content>
      
        <categories>
            
            <category> 书摘 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 产品 </tag>
            
            <tag> 互联网 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SQL指南]]></title>
      <url>http://chuanqiang.github.io/2016/09/20/SQL%E6%8C%87%E5%8D%97/</url>
      <content type="html"><![CDATA[<p>这里记录一下对于 SQL 基本操作的理解和优化。</p>
<a id="more"></a>
<hr>
<h2 id="SQL-是一种声明式语言"><a href="#SQL-是一种声明式语言" class="headerlink" title="SQL 是一种声明式语言"></a>SQL 是一种声明式语言</h2><p>首先要把这个概念记在脑中：“声明”。 SQL 语言是为计算机声明了一个你想从原始数据中获得什么样的结果的一个范例，而不是告诉计算机如何能够得到结果。这是不是很棒？</p>
<p>（译者注：简单地说，SQL 语言声明的是结果集的属性，计算机会根据 SQL 所声明的内容来从数据库中挑选出符合声明的数据，而不是像传统编程思维去指示计算机如何操作。）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT first_name, last_name FROM employees WHERE salary &gt; 100000</div></pre></td></tr></table></figure>
<p>上面的例子很容易理解，我们不关心这些雇员记录从哪里来，我们所需要的只是那些高薪者的数据（译者注： salary&gt;100000 ）。</p>
<p>我们从哪儿学习到这些？</p>
<p>如果 SQL 语言这么简单，那么是什么让人们“闻 SQL 色变”？主要的原因是：我们潜意识中的是按照命令式编程的思维方式思考问题的。就好像这样：“电脑，先执行这一步，再执行那一步，但是在那之前先检查一下是否满足条件 A 和条件 B ”。例如，用变量传参、使用循环语句、迭代、调用函数等等，都是这种命令式编程的思维惯式。</p>
<h2 id="SQL-的语法并不按照语法顺序执行"><a href="#SQL-的语法并不按照语法顺序执行" class="headerlink" title="SQL 的语法并不按照语法顺序执行"></a>SQL 的语法并不按照语法顺序执行</h2><p>SQL 语句有一个让大部分人都感到困惑的特性，就是：SQL 语句的执行顺序跟其语句的语法顺序并不一致。SQL 语句的语法顺序是：</p>
<ul>
<li>SELECT[DISTINCT]</li>
<li>FROM</li>
<li>WHERE</li>
<li>GROUP BY</li>
<li>HAVING</li>
<li>UNION</li>
<li>ORDER BY</li>
</ul>
<p>为了方便理解，上面并没有把所有的 SQL 语法结构都列出来，但是已经足以说明 SQL 语句的语法顺序和其执行顺序完全不一样，就以上述语句为例，其执行顺序为：</p>
<ul>
<li>FROM</li>
<li>WHERE</li>
<li>GROUP BY</li>
<li>HAVING</li>
<li>SELECT</li>
<li>DISTINCT</li>
<li>UNION</li>
<li>ORDER BY</li>
</ul>
<p>关于 SQL 语句的执行顺序，有三个值得我们注意的地方：</p>
<p>1、 FROM 才是 SQL 语句执行的第一步，并非 SELECT 。数据库在执行 SQL 语句的第一步是将数据从硬盘加载到数据缓冲区中，以便对这些数据进行操作。（译者注：原文为“The first thing that happens is loading data from the disk into memory, in order to operate on such data.”，但是并非如此，以 Oracle 等常用数据库为例，数据是从硬盘中抽取到数据缓冲区中进行操作。）</p>
<p>2、 SELECT 是在大部分语句执行了之后才执行的，严格的说是在 FROM 和 GROUP BY 之后执行的。理解这一点是非常重要的，这就是你<strong>不能在 WHERE 中使用在 SELECT 中设定别名的字段作为判断条件</strong>的原因。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SELECT A.x + A.y AS z</div><div class="line">FROM A</div><div class="line">WHERE z = 10</div></pre></td></tr></table></figure>
<p>z 在此处不可用，因为SELECT是最后执行的语句！<br>如果你想重用别名z，你有两个选择。要么就重新写一遍 z 所代表的表达式：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SELECT A.x + A.y AS z</div><div class="line">FROM A</div><div class="line">WHERE (A.x + A.y) = 10</div></pre></td></tr></table></figure>
<p>或者求助于衍生表、通用数据表达式或者视图，以避免别名重用。请看下文中的例子。</p>
<p>3、 无论在语法上还是在执行顺序上， UNION 总是排在在 ORDER BY 之前。很多人认为每个 UNION 段都能使用 ORDER BY 排序，但是根据 SQL 语言标准和各个数据库 SQL 的执行差异来看，这并不是真的。尽管某些数据库允许 SQL 语句对子查询（subqueries）或者派生表（derived tables）进行排序，但是这并不说明这个排序在 UNION 操作过后仍保持排序后的顺序。</p>
<p>注意：并非所有的数据库对 SQL 语句使用相同的解析方式。如 MySQL、PostgreSQL和 SQLite 中就不会按照上面第二点中所说的方式执行。</p>
<p>我们学到了什么？</p>
<p>既然并不是所有的数据库都按照上述方式执行 SQL 预计，那我们的收获是什么？我们的收获是永远要记得： SQL 语句的语法顺序和其执行顺序并不一致，这样我们就能避免一般性的错误。如果你能记住 SQL 语句语法顺序和执行顺序的差异，你就能很容易的理解一些很常见的 SQL 问题。</p>
<p>当然，如果一种语言被设计成语法顺序直接反应其语句的执行顺序，那么这种语言对程序员是十分友好的，这种编程语言层面的设计理念已经被微软应用到了 LINQ 语言中。</p>
<h2 id="SQL-语言的核心是对表的引用（table-references）"><a href="#SQL-语言的核心是对表的引用（table-references）" class="headerlink" title="SQL 语言的核心是对表的引用（table references）"></a>SQL 语言的核心是对表的引用（table references）</h2><p>由于 SQL 语句语法顺序和执行顺序的不同，很多同学会认为SELECT 中的字段信息是 SQL 语句的核心。其实真正的核心在于对表的引用。</p>
<p>根据 SQL 标准，FROM 语句被定义为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;from clause&gt; ::= FROM &lt;table reference&gt; [ &#123; &lt;comma&gt; &lt;table reference&gt; &#125;... ]</div></pre></td></tr></table></figure>
<p>FROM 语句的“输出”是一张联合表，来自于所有引用的表在某一维度上的联合。我们们慢慢来分析：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">FROM a, b</div></pre></td></tr></table></figure>
<p>上面这句 FROM 语句的输出是一张联合表，联合了表 a 和表 b 。如果 a 表有三个字段， b 表有 5 个字段，那么这个“输出表”就有 8 （ =5+3）个字段。</p>
<p>这个联合表里的数据是 a<em>b，即 a 和 b 的笛卡尔积。换句话说，也就是 a 表中的每一条数据都要跟 b 表中的每一条数据配对。如果 a 表有3 条数据， b 表有 5 条数据，那么联合表就会有 15（=5</em>3）条数据。</p>
<p>FROM 输出的结果被 WHERE 语句筛选后要经过 GROUP BY 语句处理，从而形成新的输出结果。我们后面还会再讨论这方面问题。</p>
<p>如果我们从集合论（关系代数）的角度来看，一张数据库的表就是一组数据元的关系，而每个 SQL 语句会改变一种或数种关系，从而产生出新的数据元的关系（即产生新的表）。</p>
<p>我们学到了什么？</p>
<p>思考问题的时候从表的角度来思考问题提，这样很容易理解数据如何在 SQL 语句的“流水线”上进行了什么样的变动。</p>
<h2 id="灵活引用表能使-SQL-语句变得更强大"><a href="#灵活引用表能使-SQL-语句变得更强大" class="headerlink" title="灵活引用表能使 SQL 语句变得更强大"></a>灵活引用表能使 SQL 语句变得更强大</h2><p>灵活引用表能使 SQL 语句变得更强大。一个简单的例子就是 JOIN 的使用。严格的说 JOIN 语句并非是 SELECT 中的一部分，而是一种特殊的表引用语句。 SQL 语言标准中表的连接定义如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;tablereference&gt; ::=</div><div class="line">&lt;tablename&gt;</div><div class="line">| &lt;derivedtable&gt;</div><div class="line">| &lt;joinedtable&gt;</div></pre></td></tr></table></figure>
<p>就拿之前的例子来说：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">FROM a, b</div></pre></td></tr></table></figure>
<p>a 可能输如下表的连接：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">a1 JOIN a2 ON a1.id = a2.id</div></pre></td></tr></table></figure>
<p>将它放到之前的例子中就变成了：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">FROM a1 JOIN a2 ON a1.id = a2.id, b</div></pre></td></tr></table></figure>
<p>尽管将一个连接表用逗号跟另一张表联合在一起并不是常用作法，但是你的确可以这么做。结果就是，最终输出的表就有了 a1+a2+b 个字段了。</p>
<p>（译者注：原文这里用词为 degree ，译为维度。如果把一张表视图化，我们可以想象每一张表都是由横纵两个维度组成的，横向维度即我们所说的字段或者列，英文为columns；纵向维度即代表了每条数据，英文为 record ，根据上下文，作者这里所指的应该是字段数。）</p>
<p>在 SQL 语句中派生表的应用甚至比表连接更加强大，下面我们就要讲到表连接。</p>
<p>我们学到了什么？</p>
<p>思考问题时，要从表引用的角度出发，这样就很容易理解数据是怎样被 SQL 语句处理的，并且能够帮助你理解那些复杂的表引用是做什么的。</p>
<p>更重要的是，要理解 JOIN 是构建连接表的关键词，并不是 SELECT 语句的一部分。有一些数据库允许在 INSERT 、 UPDATE 、 DELETE 中使用 JOIN 。</p>
<h2 id="SQL-语句中推荐使用表连接"><a href="#SQL-语句中推荐使用表连接" class="headerlink" title="SQL 语句中推荐使用表连接"></a>SQL 语句中推荐使用表连接</h2><p>我们先看看刚刚这句话：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">FROM a, b</div></pre></td></tr></table></figure>
<p>高级 SQL 程序员也许学会给你忠告：尽量不要使用逗号来代替 JOIN 进行表的连接，这样会提高你的 SQL 语句的可读性，并且可以避免一些错误。</p>
<p>利用逗号来简化 SQL 语句有时候会造成思维上的混乱，想一下下面的语句：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">FROM a, b, c, d, e, f, g, h</div><div class="line">WHERE a.a1 = b.bx</div><div class="line">AND a.a2 = c.c1</div><div class="line">AND d.d1 = b.bc</div><div class="line">-- etc...</div></pre></td></tr></table></figure>
<p>我们不难看出使用 JOIN 语句的好处在于：</p>
<ul>
<li>安全。 JOIN 和要连接的表离得非常近，这样就能避免错误。</li>
<li>更多连接的方式，JOIN 语句能去区分出来外连接和内连接等。</li>
</ul>
<p>我们学到了什么？</p>
<p>记着要尽量使用 JOIN 进行表的连接，永远不要在 FROM 后面使用逗号连接表。</p>
<h2 id="SQL-语句中不同的连接操作”-SQL-语句中不同的连接操作"><a href="#SQL-语句中不同的连接操作”-SQL-语句中不同的连接操作" class="headerlink" title="SQL 语句中不同的连接操作”)SQL 语句中不同的连接操作"></a>SQL 语句中不同的连接操作”)SQL 语句中不同的连接操作</h2><p>SQL 语句中，表连接的方式从根本上分为五种：</p>
<ul>
<li>EQUI JOIN </li>
<li>SEMI JOIN</li>
<li>ANTI JOIN</li>
<li>CROSS JOIN</li>
<li>DIVISION</li>
</ul>
<h3 id="EQUI-JOIN"><a href="#EQUI-JOIN" class="headerlink" title="EQUI JOIN"></a>EQUI JOIN</h3><p>这是一种最普通的 JOIN 操作，它包含两种连接方式：</p>
<ul>
<li>INNER JOIN（或者是 JOIN ）</li>
<li>OUTER JOIN（包括： LEFT 、 RIGHT、 FULL OUTER JOIN）</li>
</ul>
<p>用例子最容易说明其中区别：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">-- This table reference contains authors and their books.</div><div class="line">-- There is one record for each book and its author.</div><div class="line">-- authors without books are NOT included</div><div class="line">author JOIN book ON author.id = book.author_id</div><div class="line"></div><div class="line">-- This table reference contains authors and their books</div><div class="line">-- There is one record for each book and its author.</div><div class="line">-- ... OR there is an &quot;empty&quot; record for authors without books</div><div class="line">-- (&quot;empty&quot; meaning that all book columns are NULL)</div><div class="line">author LEFT OUTER JOIN book ON author.id = book.author_id</div></pre></td></tr></table></figure>
<h3 id="SEMI-JOIN"><a href="#SEMI-JOIN" class="headerlink" title="SEMI JOIN"></a>SEMI JOIN</h3><p>这种连接关系在 SQL 中有两种表现方式：使用 IN，或者使用 EXISTS。“ SEMI ”在拉丁文中是“半”的意思。这种连接方式是只连接目标表的一部分。这是什么意思呢？再想一下上面关于作者和书名的连接。我们想象一下这样的情况：我们不需要作者 / 书名这样的组合，只是需要那些在书名表中的书的作者信息。那我们就能这么写：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">-- UsingIN</div><div class="line">FROM author</div><div class="line">WHERE author.id IN (SELECT book.author_id FROM book)</div><div class="line"></div><div class="line">-- Using EXISTS</div><div class="line">FROM author</div><div class="line">WHERE EXISTS (SELECT1FROM book WHERE book.author_id = author.id)</div></pre></td></tr></table></figure>
<p>尽管没有严格的规定说明你何时应该使用 IN ，何时应该使用 EXISTS ，但是这些事情你还是应该知道的：</p>
<ul>
<li>IN 比 EXISTS 的可读性更好</li>
<li>EXISTS 比IN 的表达性更好（更适合复杂的语句）</li>
<li>二者之间性能没有差异（但对于某些数据库来说性能差异会非常大）</li>
</ul>
<p>因为使用 INNER JOIN 也能得到书名表中书所对应的作者信息，所以很多初学者机会认为可以通过 DISTINCT 进行去重，然后将 SEMI JOIN 语句写成这样：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">-- Find only those authors who also have books</div><div class="line">SELECT DISTINCT first_name, last_name</div><div class="line">FROM author</div><div class="line">JOIN book ON author.id = book.author_id</div></pre></td></tr></table></figure>
<p>这是一种很糟糕的写法，原因如下：</p>
<ul>
<li>SQL 语句性能低下：因为去重操作（ DISTINCT ）需要数据库重复从硬盘中读取数据到内存中。（译者注： DISTINCT 的确是一种很耗费资源的操作，但是每种数据库对于 DISTINCT 的操作方式可能不同）。</li>
<li>这么写并非完全正确：尽管也许现在这么写不会出现问题，但是随着 SQL 语句变得越来越复杂，你想要去重得到正确的结果就变得十分困难。</li>
</ul>
<h3 id="ANTI-JOIN"><a href="#ANTI-JOIN" class="headerlink" title="ANTI JOIN"></a>ANTI JOIN</h3><p>这种连接的关系跟 SEMI JOIN 刚好相反。在 IN 或者 EXISTS 前加一个 NOT 关键字就能使用这种连接。举个例子来说，我们列出书名表里没有书的作者：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">-- UsingIN</div><div class="line">FROM author</div><div class="line">WHERE author.id NOTIN (SELECT book.author_id FROM book)</div><div class="line"></div><div class="line">-- Using EXISTS</div><div class="line">FROM author</div><div class="line">WHERENOT EXISTS (SELECT1FROM book WHERE book.author_id = author.id)</div></pre></td></tr></table></figure>
<p>关于性能、可读性、表达性等特性也完全可以参考 SEMI JOIN。</p>
<h3 id="CROSS-JOIN"><a href="#CROSS-JOIN" class="headerlink" title="CROSS JOIN"></a>CROSS JOIN</h3><p>这个连接过程就是两个连接的表的乘积：即将第一张表的每一条数据分别对应第二张表的每条数据。我们之前见过，这就是逗号在 FROM 语句中的用法。在实际的应用中，很少有地方能用到 CROSS JOIN，但是一旦用上了，你就可以用这样的 SQL语句表达：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">-- Combine every author with every book</div><div class="line">author CROSS JOIN book</div></pre></td></tr></table></figure>
<h3 id="DIVISION"><a href="#DIVISION" class="headerlink" title="DIVISION"></a>DIVISION</h3><p>DIVISION 的确是一个怪胎。简而言之，如果 JOIN 是一个乘法运算，那么 DIVISION 就是 JOIN 的逆过程。DIVISION 的关系很难用 SQL 表达出来，介于这是一个新手指南，解释 DIVISION 已经超出了我们的目的。</p>
<p>我们学到了什么？</p>
<p>学到了很多！让我们在脑海中再回想一下。 SQL 是对表的引用， JOIN 则是一种引用表的复杂方式。但是 SQL 语言的表达方式和实际我们所需要的逻辑关系之间是有区别的，并非所有的逻辑关系都能找到对应的 JOIN 操作，所以这就要我们在平时多积累和学习关系逻辑，这样你就能在以后编写 SQL 语句中选择适当的 JOIN 操作了。</p>
<h2 id="SQL-中如同变量的派生表"><a href="#SQL-中如同变量的派生表" class="headerlink" title="SQL 中如同变量的派生表"></a>SQL 中如同变量的派生表</h2><p>在这之前，我们学习到过 SQL 是一种声明性的语言，并且 SQL 语句中不能包含变量。但是你能写出类似于变量的语句，这些就叫做派生表：</p>
<p>说白了，所谓的派生表就是在括号之中的子查询：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">-- A derived table</div><div class="line">FROM (SELECT * FROM author)</div></pre></td></tr></table></figure>
<p>需要注意的是有些时候我们可以给派生表定义一个相关名（即我们所说的别名）。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">-- A derived table with an alias</div><div class="line">FROM (SELECT * FROM author) a</div></pre></td></tr></table></figure>
<p>派生表可以有效的避免由于 SQL 逻辑而产生的问题。举例来说：如果你想重用一个用 SELECT 和 WHERE 语句查询出的结果，这样写就可以（以 Oracle 为例）：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">-- Get authors&apos; first and last names, and their age in days</div><div class="line">SELECT first_name, last_name, age</div><div class="line">FROM (</div><div class="line">SELECT first_name, last_name, current_date - date_of_birth age</div><div class="line">FROM author</div><div class="line">)</div><div class="line">-- If the age is greater than 10000 days</div><div class="line">WHERE age &gt; 10000</div></pre></td></tr></table></figure>
<p>需要我们注意的是：在有些数据库，以及 SQL ： 1990 标准中，派生表被归为下一级——通用表语句（ common table experssion）。这就允许你在一个 SELECT 语句中对派生表多次重用。上面的例子就（几乎）等价于下面的语句：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">WITH a AS (</div><div class="line">SELECT first_name, last_name, current_date - date_of_birth age</div><div class="line">FROM author</div><div class="line">)</div><div class="line">SELECT *</div><div class="line">FROM a</div><div class="line">WHERE age &gt; 10000</div></pre></td></tr></table></figure>
<p>当然了，你也可以给“ a ”创建一个单独的视图，这样你就可以在更广泛的范围内重用这个派生表了。更多信息可以阅读下面的文章（<a href="http://en.wikipedia.org/wiki/View_%28SQL%29%EF%BC%89%E3%80%82" target="_blank" rel="external">http://en.wikipedia.org/wiki/View_%28SQL%29）。</a></p>
<p>我们学到了什么？</p>
<p>我们反复强调，大体上来说 SQL 语句就是对表的引用，而并非对字段的引用。要好好利用这一点，不要害怕使用派生表或者其他更复杂的语句。</p>
<h2 id="SQL-语句中-GROUP-BY-是对表的引用进行的操作"><a href="#SQL-语句中-GROUP-BY-是对表的引用进行的操作" class="headerlink" title="SQL 语句中 GROUP BY 是对表的引用进行的操作"></a>SQL 语句中 GROUP BY 是对表的引用进行的操作</h2><p>让我们再回想一下之前的 FROM 语句：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">FROM a, b</div></pre></td></tr></table></figure>
<p>现在，我们将 GROUP BY 应用到上面的语句中：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">GROUP BY A.x, A.y, B.z</div></pre></td></tr></table></figure>
<p>上面语句的结果就是产生出了一个包含三个字段的新的表的引用。我们来仔细理解一下这句话：当你应用 GROUP BY 的时候， SELECT 后没有使用聚合函数的列，都要出现在 GROUP BY 后面。（译者注：原文大意为“当你是用 GROUP BY 的时候，你能够对其进行下一级逻辑操作的列会减少，包括在 SELECT 中的列”）。</p>
<p>需要注意的是：其他字段能够使用聚合函数：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">SELECT A.x, A.y, SUM(A.z)</div><div class="line">FROM A</div><div class="line">GROUP BY A.x, A.y</div></pre></td></tr></table></figure>
<p>还有一点值得留意的是： MySQL 并不坚持这个标准，这的确是令人很困惑的地方。（译者注：这并不是说 MySQL 没有 GROUP BY 的功能）但是不要被 MySQL 所迷惑。 GROUP BY 改变了对表引用的方式。你可以像这样既在 SELECT 中引用某一字段，也在 GROUP BY 中对其进行分组。</p>
<p>我们学到了什么？</p>
<p>GROUP BY，再次强调一次，是在表的引用上进行了操作，将其转换为一种新的引用方式。</p>
<h2 id="SQL-语句中的-SELECT-实质上是对关系的映射"><a href="#SQL-语句中的-SELECT-实质上是对关系的映射" class="headerlink" title="SQL 语句中的 SELECT 实质上是对关系的映射"></a>SQL 语句中的 SELECT 实质上是对关系的映射</h2><p>我个人比较喜欢“映射”这个词，尤其是把它用在关系代数上。（译者注：原文用词为 projection ，该词有两层含义，第一种含义是预测、规划、设计，第二种意思是投射、映射，经过反复推敲，我觉得这里用映射能够更直观的表达出 SELECT 的作用）。一旦你建立起来了表的引用，经过修改、变形，你能够一步一步的将其映射到另一个模型中。 SELECT 语句就像一个“投影仪”，我们可以将其理解成一个将源表中的数据按照一定的逻辑转换成目标表数据的函数。</p>
<p>通过 SELECT语句，你能对每一个字段进行操作，通过复杂的表达式生成所需要的数据。</p>
<p>SELECT 语句有很多特殊的规则，至少你应该熟悉以下几条：</p>
<ul>
<li>你仅能够使用那些能通过表引用而得来的字段；</li>
<li>如果你有 GROUP BY 语句，你只能够使用 GROUP BY 语句后面的字段或者聚合函数；</li>
<li>当你的语句中没有 GROUP BY 的时候，可以使用开窗函数代替聚合函数；</li>
<li>当你的语句中没有 GROUP BY 的时候，你不能同时使用聚合函数和其它函数；</li>
<li>有一些方法可以将普通函数封装在聚合函数中；</li>
<li>……</li>
</ul>
<p>一些更复杂的规则多到足够写出另一篇文章了。比如：为何你不能在一个没有 GROUP BY 的 SELECT 语句中同时使用普通函数和聚合函数？（上面的第 4 条）</p>
<p>原因如下：</p>
<ul>
<li>凭直觉，这种做法从逻辑上就讲不通。</li>
<li>如果直觉不能够说服你，那么语法肯定能。 SQL : 1999 标准引入了 GROUPING SETS，SQL： 2003 标准引入了 group sets : GROUP BY() 。无论什么时候，只要你的语句中出现了聚合函数，而且并没有明确的 GROUP BY 语句，这时一个不明确的、空的 GROUPING SET 就会被应用到这段 SQL 中。因此，原始的逻辑顺序的规则就被打破了，映射（即 SELECT ）关系首先会影响到逻辑关系，其次就是语法关系。（译者注：这段话原文就比较艰涩，可以简单理解如下：在既有聚合函数又有普通函数的 SQL 语句中，如果没有 GROUP BY 进行分组，SQL 语句默认视整张表为一个分组，当聚合函数对某一字段进行聚合统计的时候，引用的表中的每一条 record 就失去了意义，全部的数据都聚合为一个统计值，你此时对每一条 record 使用其它函数是没有意义的）。</li>
</ul>
<p>糊涂了？是的，我也是。我们再回过头来看点浅显的东西吧。</p>
<p>我们学到了什么？</p>
<p>SELECT 语句可能是 SQL 语句中最难的部分了，尽管他看上去很简单。其他语句的作用其实就是对表的不同形式的引用。而 SELECT 语句则把这些引用整合在了一起，通过逻辑规则将源表映射到目标表，而且这个过程是可逆的，我们可以清楚的知道目标表的数据是怎么来的。</p>
<p>想要学习好 SQL 语言，就要在使用 SELECT 语句之前弄懂其他的语句，虽然 SELECT 是语法结构中的第一个关键词，但它应该是我们最后一个掌握的。</p>
<h2 id="SQL-语句中的几个简单的关键词：-DISTINCT-，-UNION-，-ORDER-BY-和-OFFSET"><a href="#SQL-语句中的几个简单的关键词：-DISTINCT-，-UNION-，-ORDER-BY-和-OFFSET" class="headerlink" title="SQL 语句中的几个简单的关键词： DISTINCT ， UNION ， ORDER BY 和 OFFSET"></a>SQL 语句中的几个简单的关键词： DISTINCT ， UNION ， ORDER BY 和 OFFSET</h2><p>在学习完复杂的 SELECT 之后，我们再来看点简单的东西：</p>
<ul>
<li>集合运算（ DISTINCT 和 UNION ）</li>
<li>排序运算（ ORDER BY，OFFSET…FETCH）</li>
<li>集合运算（ set operation）：</li>
</ul>
<p>集合运算主要操作在于集合上，事实上指的就是对表的一种操作。从概念上来说，他们很好理解：</p>
<ul>
<li>DISTINCT 在映射之后对数据进行去重</li>
<li>UNION 将两个子查询拼接起来并去重</li>
<li>UNION ALL 将两个子查询拼接起来但不去重</li>
<li>EXCEPT 将第二个字查询中的结果从第一个子查询中去掉</li>
<li>INTERSECT 保留两个子查询中都有的结果并去重</li>
</ul>
<p>排序运算（ ordering operation）：</p>
<p>排序运算跟逻辑关系无关。这是一个 SQL 特有的功能。排序运算不仅在 SQL 语句的最后，而且在 SQL 语句运行的过程中也是最后执行的。使用 ORDER BY 和 OFFSET…FETCH 是保证数据能够按照顺序排列的最有效的方式。其他所有的排序方式都有一定随机性，尽管它们得到的排序结果是可重现的。</p>
<p>OFFSET…SET是一个没有统一确定语法的语句，不同的数据库有不同的表达方式，如 MySQL 和 PostgreSQL 的 LIMIT…OFFSET、SQL Server 和 Sybase 的 TOP…START AT 等。</p>
<p>转载自:<a href="http://wdxtub.com/2016/03/20/sql-guide/" target="_blank" rel="external">小土刀</a></p>
]]></content>
      
        <categories>
            
            <category> 数据库 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 技术 </tag>
            
            <tag> 数据库 </tag>
            
            <tag> SQL </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle 函数]]></title>
      <url>http://chuanqiang.github.io/2016/09/20/Oracle%20%E5%87%BD%E6%95%B0/</url>
      <content type="html"><![CDATA[<p>介绍Oracle的基础函数的使用。</p>
<a id="more"></a>
<hr>
<h2 id="函数的作用"><a href="#函数的作用" class="headerlink" title="函数的作用"></a>函数的作用</h2><ul>
<li>方便数据的统计</li>
<li>处理查询结果<h2 id="函数的分类"><a href="#函数的分类" class="headerlink" title="函数的分类"></a>函数的分类</h2><h3 id="数值函数"><a href="#数值函数" class="headerlink" title="数值函数"></a>数值函数</h3><h4 id="1-四舍五入"><a href="#1-四舍五入" class="headerlink" title="1. 四舍五入"></a>1. 四舍五入</h4><blockquote>
<p><strong>ROUND(n[,m])</strong></p>
</blockquote>
</li>
<li>省略m:0</li>
<li>m&gt;0:小数点后m位</li>
<li>m&lt;0:小数点前m位<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">round</span>(<span class="number">23.4</span>),<span class="keyword">round</span>(<span class="number">23.42</span>,<span class="number">1</span>),<span class="keyword">round</span>(<span class="number">23.42</span>,<span class="number">-1</span>) <span class="keyword">from</span> dual;</div><div class="line"><span class="comment">-- 结果分别为23/23.4/20</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="2-取整函数"><a href="#2-取整函数" class="headerlink" title="2. 取整函数"></a>2. 取整函数</h4><blockquote>
<p><strong>CEIL(n):取整时取最大值</strong><br><strong>FLOOR(n):取整时取最小值</strong></p>
</blockquote>
<h4 id="3-其他函数"><a href="#3-其他函数" class="headerlink" title="3. 其他函数"></a>3. 其他函数</h4><ul>
<li><strong>ABS(n):取绝对值</strong></li>
<li><strong>MOD(m,n):取余函数</strong></li>
<li><strong>POWER(m,n):m的n次幂</strong></li>
<li><strong>SQRT(n):平方根</strong></li>
<li><strong>sin(n)、asin(n)、cos(n)、acos(n)、tan(n)、atan(n):三角函数</strong><h3 id="字符函数"><a href="#字符函数" class="headerlink" title="字符函数"></a>字符函数</h3><h4 id="大小写转换函数"><a href="#大小写转换函数" class="headerlink" title="大小写转换函数"></a>大小写转换函数</h4></li>
<li><strong>upper(char)</strong>:小写变成大写</li>
<li><strong>lower(char)</strong>:大写变成小写</li>
<li><strong>initcap</strong>:把首字母变成大写<h4 id="获取子字符串函数"><a href="#获取子字符串函数" class="headerlink" title="获取子字符串函数"></a>获取子字符串函数</h4></li>
<li><strong>substr(char,[m[n])</strong><ul>
<li>char:字符串源</li>
<li>m:取字串的开始位置</li>
<li>n:截取字串的位数(可省略，截取为m到结尾的字符串)<h4 id="获取子字符串长度函数"><a href="#获取子字符串长度函数" class="headerlink" title="获取子字符串长度函数"></a>获取子字符串长度函数</h4></li>
</ul>
</li>
<li><strong>length(char)</strong><h4 id="字符串连接函数"><a href="#字符串连接函数" class="headerlink" title="字符串连接函数"></a>字符串连接函数</h4></li>
<li><strong>concat(char1,char2)</strong></li>
<li>与||操作符的作用一样<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">concat</span>(<span class="string">'a'</span>,<span class="string">'bc'</span>) <span class="keyword">from</span> dual;</div><div class="line"><span class="keyword">select</span> <span class="string">'a'</span> || <span class="string">'bc'</span> <span class="keyword">from</span> dual;</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="去除子串函数"><a href="#去除子串函数" class="headerlink" title="去除子串函数"></a>去除子串函数</h4><ul>
<li><strong>trim(c2 from char1)</strong>:从字符串c1中去除一个字符c2</li>
<li><strong>ltrip(c1,c2)</strong>:从c1中去除c2，只去除一个，从头部开始</li>
<li><strong>rtrip(c1,c2)</strong>:从c1中去除c2，只去除一个，从尾部开始</li>
<li><strong>trip(char)</strong>:去除空格<h4 id="替换函数"><a href="#替换函数" class="headerlink" title="替换函数"></a>替换函数</h4></li>
<li><strong>replace(char,s_string,r_string)</strong><ul>
<li>省略r_string用空格替换(即把s_string去除)<h3 id="日期函数"><a href="#日期函数" class="headerlink" title="日期函数"></a>日期函数</h3></li>
</ul>
</li>
<li><strong>sysdate</strong><ul>
<li>默认格式:D-MON–Y</li>
</ul>
</li>
<li><strong>add_months(date,i)</strong><ul>
<li>i为月份，当i&lt;0时，为减去月份</li>
</ul>
</li>
<li><p><strong>next_day(date,char)</strong></p>
<ul>
<li>返回date这个指定日期的下周几<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> next_day(<span class="keyword">sysdate</span>,<span class="string">'星期一'</span>) <span class="keyword">from</span> dual;</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p><strong>last_day(date)</strong></p>
<ul>
<li>返回日期所在月的最后一天</li>
</ul>
</li>
<li><strong>months_between(date1,date2)</strong><ul>
<li>计算两个日期的间隔时间</li>
</ul>
</li>
<li><strong>extract(date from datetime)</strong><ul>
<li>返回datetime的日期部分(例如年月日时分秒) <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">extract</span>(<span class="keyword">hour</span> <span class="keyword">from</span> <span class="keyword">timestamp</span> <span class="string">'2016=9-1 14:34:22'</span>) <span class="keyword">from</span> dual;</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h3 id="转换函数"><a href="#转换函数" class="headerlink" title="转换函数"></a>转换函数</h3><h4 id="日期转换成字符的函数"><a href="#日期转换成字符的函数" class="headerlink" title="日期转换成字符的函数"></a>日期转换成字符的函数</h4><ul>
<li><strong>tochar(date,fmt,params)</strong><ul>
<li>date:将要转化的日期</li>
<li>fmt:转换的格式<ul>
<li>(年:YY|YYYY|YEAR 月:MM|MONTH 日:DD|DAY 时:HH24|HH12 分:MI 秒:SS)</li>
</ul>
</li>
<li>params:日期的语言<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> to_char(<span class="keyword">sysdate</span>,<span class="string">'YYYY-MM-DD HH24:MI:SS'</span>) <span class="keyword">from</span> dual;</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h4 id="字符转换成日期的函数"><a href="#字符转换成日期的函数" class="headerlink" title="字符转换成日期的函数"></a>字符转换成日期的函数</h4><ul>
<li><strong>to_date(char,fmt,params)</strong><ul>
<li>char:将要转化的字符</li>
<li>fmt:转化的格式</li>
<li>params:日期的语言<h4 id="数字转换成字符的函数"><a href="#数字转换成字符的函数" class="headerlink" title="数字转换成字符的函数"></a>数字转换成字符的函数</h4></li>
</ul>
</li>
<li><strong>to_char(number,fmt)</strong><ul>
<li>9:显示数字并忽略前面的0</li>
<li>0:显示数字，位数不足，用0补齐</li>
<li>.或D:显示小数点</li>
<li>,或G:显示千位符</li>
<li>$:美元符号</li>
<li>S:加正负号(前后都可以)<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> to_char(<span class="number">12345.678</span>,<span class="string">'$99,999.99'</span>) <span class="keyword">from</span> dual;    <span class="comment">--结果为:$12,345.678</span></div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h4 id="字符转换成数字的函数"><a href="#字符转换成数字的函数" class="headerlink" title="字符转换成数字的函数"></a>字符转换成数字的函数</h4><ul>
<li><strong>to_number(char,fmt)</strong><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> to_number(<span class="string">'$1,000'</span>,<span class="string">'$9999'</span>) <span class="keyword">from</span> dual;</div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 数据库 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 技术 </tag>
            
            <tag> 数据库 </tag>
            
            <tag> Oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Oracle 基础]]></title>
      <url>http://chuanqiang.github.io/2016/09/20/Oracle%20%E5%9F%BA%E7%A1%80/</url>
      <content type="html"><![CDATA[<p>介绍Oracle的基础知识和使用。</p>
<a id="more"></a>
<hr>
<h2 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h2><h3 id="Oracle的安装"><a href="#Oracle的安装" class="headerlink" title="Oracle的安装"></a>Oracle的安装</h3><p><strong>下载地址：</strong><a href="http://www.oracle.com/technetwork/database/enterprise-edition/downloads/index.html" target="_blank" rel="external">oracle官网</a><br><strong>卸载：</strong> 安装目录/dbhome_1/deinstall/deinstall.bat(点击运行)</p>
<!--more-->
<h2 id="二、用户与表空间"><a href="#二、用户与表空间" class="headerlink" title="二、用户与表空间"></a>二、用户与表空间</h2><h3 id="1-Sql-Plus-登录"><a href="#1-Sql-Plus-登录" class="headerlink" title="1. Sql Plus 登录"></a>1. Sql Plus 登录</h3><h4 id="系统用户"><a href="#系统用户" class="headerlink" title="系统用户"></a>系统用户</h4><ul>
<li>sys,system</li>
<li>sysman</li>
<li>scott (默认密码是tiger)<h4 id="使用系统用户登录"><a href="#使用系统用户登录" class="headerlink" title="使用系统用户登录"></a>使用系统用户登录</h4><blockquote>
<p> [username/password][@server][as sysdba|sysoper]</p>
</blockquote>
</li>
</ul>
<h4 id="查看用户登录"><a href="#查看用户登录" class="headerlink" title="查看用户登录"></a>查看用户登录</h4><ul>
<li>show user 命令 </li>
<li>desc dba_users 数据字典</li>
</ul>
<h4 id="启用scott用户"><a href="#启用scott用户" class="headerlink" title="启用scott用户"></a>启用scott用户</h4><ul>
<li>alter user username account unlock;    – (lock 是启用)</li>
<li>connect scott/tiger;  –登录</li>
</ul>
<h3 id="2-表空间"><a href="#2-表空间" class="headerlink" title="2. 表空间"></a>2. 表空间</h3><h4 id="表空间的概述"><a href="#表空间的概述" class="headerlink" title="表空间的概述"></a>表空间的概述</h4><ul>
<li>永久表空间 （表、视图、存储过程）</li>
<li>临时表空间 （执行结束，存放被释放）</li>
<li>UNDO表空间 （事物所修改的旧址，用于事物的回滚）</li>
</ul>
<h4 id="查看用户的表空间"><a href="#查看用户的表空间" class="headerlink" title="查看用户的表空间"></a>查看用户的表空间</h4><ul>
<li>dba_tablespaces (系统管理员级的用户)</li>
<li>user_tablespaces  （普通用户登陆查看）</li>
<li>dba_users （系统管理员级查看）</li>
<li>user_users    （普通登录用户查看）<br><strong> 设置用户的默认和临时表空间</strong><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">alter</span> <span class="keyword">user</span> user_name <span class="keyword">default</span>|<span class="keyword">temporary</span> <span class="keyword">tablespace</span> tablespace_name</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="创建修改删除表空间"><a href="#创建修改删除表空间" class="headerlink" title="创建修改删除表空间"></a>创建修改删除表空间</h4><ol>
<li><p>创建表空间</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">create</span> <span class="keyword">tablespace</span> tablespace_name <span class="keyword">datafile</span> <span class="string">'filename.dbf'</span> <span class="keyword">size</span> <span class="number">10</span>m; <span class="comment">--永久表空间</span></div><div class="line"><span class="keyword">create</span> <span class="keyword">temporary</span> <span class="keyword">tablespace</span> tablespace_name tempfile <span class="string">'filename.dbf'</span> <span class="keyword">size</span> <span class="number">10</span>m;   <span class="comment">--临时表空间</span></div></pre></td></tr></table></figure>
</li>
<li><p>差看创建的表空间路径</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">desc dba_data_files;</div><div class="line"><span class="keyword">select</span> file_name <span class="keyword">from</span> dba_data_files <span class="keyword">where</span> tablespace_name = <span class="string">'tablespace_nameXXX'</span> <span class="comment">--注意tablespace_name大写</span></div></pre></td></tr></table></figure>
</li>
<li><p>修改表空间</p>
</li>
</ol>
<p><strong>修改表空间的状态</strong></p>
<ul>
<li><p>设置联机或脱机状态</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">alter</span> <span class="keyword">tablespace</span> tablespace_name <span class="keyword">online</span>|<span class="keyword">offline</span>;</div><div class="line"><span class="keyword">select</span> <span class="keyword">status</span> <span class="keyword">from</span> dba_tablespaces <span class="keyword">where</span> tablespace_name=<span class="string">'NAME_TABLESPACE'</span>; <span class="comment">--查看状态</span></div></pre></td></tr></table></figure>
</li>
<li><p>设置只读或可读写状态</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">alter</span> <span class="keyword">tablespace</span> tablespace_name <span class="keyword">read</span> <span class="keyword">only</span>|<span class="keyword">read</span> write;</div></pre></td></tr></table></figure>
</li>
</ul>
<p><strong>修改表空间的数据文件</strong></p>
<ul>
<li><p>增加数据文件</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">alter</span> <span class="keyword">tablespace</span> tablespace_name <span class="keyword">add</span> <span class="keyword">datafile</span> <span class="string">'xx.dbf'</span> <span class="keyword">size</span> xx;</div></pre></td></tr></table></figure>
</li>
<li><p>删除数据文件</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">alter</span> <span class="keyword">tablespace</span> tablespace_name <span class="keyword">drop</span> <span class="keyword">datafile</span> <span class="string">'filename.dbf'</span>;  <span class="comment">--注意 不能删除创建表空间时的第一个数据文件</span></div></pre></td></tr></table></figure>
</li>
<li><p>删除表空间</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">drop</span> <span class="keyword">tablespace</span> tablespace_name;    <span class="comment">--只删除表空间</span></div><div class="line"><span class="keyword">drop</span> <span class="keyword">tablespace</span> tablespace_name <span class="keyword">including</span> <span class="keyword">contents</span>;  <span class="comment">--删除表空间和数据文件</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="三、表与约束"><a href="#三、表与约束" class="headerlink" title="三、表与约束"></a>三、表与约束</h2><h3 id="管理表"><a href="#管理表" class="headerlink" title="管理表"></a>管理表</h3><h4 id="1-数据类型"><a href="#1-数据类型" class="headerlink" title="1. 数据类型"></a>1. 数据类型</h4><ul>
<li>字符型</li>
<li>[] char(n) | nchar(n)  //长度不可变</li>
<li>[ ] varchar2(n) | nvarchar(n)  //长度可变，节省空间</li>
<li>数值型</li>
<li>[ ] number(5,2) //有效数字5位，保留两位有效小数，eg：123.45</li>
<li>日期型</li>
<li>[ ] date</li>
<li>[ ] timestamp //时间戳，精确度高</li>
<li>其他</li>
<li>[ ] blob //4GB二进制数据</li>
<li>[ ] clob //4GB字符串数据</li>
</ul>
<h4 id="2-基本语法"><a href="#2-基本语法" class="headerlink" title="2. 基本语法"></a>2. 基本语法</h4><ul>
<li><p>创建表</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">create</span> <span class="keyword">table</span> table_name(</div><div class="line">    column_name datatype,...</div><div class="line">)</div></pre></td></tr></table></figure>
</li>
<li><p>修改表</p>
</li>
</ul>
<p><strong>添加字段</strong><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">alter</span> <span class="keyword">table</span> table_name <span class="keyword">add</span> column_name datatype;</div></pre></td></tr></table></figure></p>
<p><strong>更改字段数据类型</strong><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">alter</span> <span class="keyword">table</span> table_name <span class="keyword">modify</span> column_name datatype;</div></pre></td></tr></table></figure></p>
<p><strong>删除字段</strong><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">alter</span> <span class="keyword">table</span> table_name <span class="keyword">drop</span> <span class="keyword">column</span> column_name;</div></pre></td></tr></table></figure></p>
<p><strong>修改字段名字</strong><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">alter</span> <span class="keyword">table</span> table_name <span class="keyword">rename</span> <span class="keyword">column</span> column_name <span class="keyword">to</span> new_column_name;</div></pre></td></tr></table></figure></p>
<p><strong>修改表名</strong><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">alter</span> table_name <span class="keyword">to</span> new_table_name;</div></pre></td></tr></table></figure></p>
<ul>
<li>删除表<br><strong>delete语句</strong><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">delete</span> <span class="keyword">from</span> table_name;</div><div class="line"><span class="keyword">truncate</span> table_name;</div></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p><strong>truncate和delete的区别？</strong></p>
<p>（1）都是清空表中的数据，即删除表中的记录。</p>
<p>（2）truncate 的速度要比delete快。</p>
<p>（3）delete可以指定删除符合条件的记录<br><code>delete from test where name=&#39;35&#39;;</code></p>
</blockquote>
<h3 id="操作表中的数据"><a href="#操作表中的数据" class="headerlink" title="操作表中的数据"></a>操作表中的数据</h3><h4 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> table_name(column1,comlumn2,...)<span class="keyword">values</span>(value1,value2,...)</div></pre></td></tr></table></figure>
<p><strong>复制表数据</strong><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">create</span> <span class="keyword">table</span> table_new <span class="keyword">as</span> <span class="keyword">select</span> * <span class="keyword">from</span> table_old;</div></pre></td></tr></table></figure></p>
<p><strong>修改数据</strong><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">update</span> table_name <span class="keyword">set</span> column1=value1,...[<span class="keyword">where</span> conditions];</div></pre></td></tr></table></figure></p>
<h3 id="约束"><a href="#约束" class="headerlink" title="约束"></a>约束</h3><h4 id="非空约束"><a href="#非空约束" class="headerlink" title="非空约束"></a>非空约束</h4><ul>
<li><code>not null</code><blockquote>
<p>在修改表时添加非空约束</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">alter</span> <span class="keyword">table</span> table_name modity column_name datatype <span class="keyword">not</span> <span class="literal">null</span>;</div></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<h4 id="主键约束-也是非空约束"><a href="#主键约束-也是非空约束" class="headerlink" title="主键约束(也是非空约束)"></a>主键约束(也是非空约束)</h4><ul>
<li><code>primary key</code></li>
<li><code>constraint constraint_name primary key(column_name1,...)</code><blockquote>
<p>查找约束</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> constraint_names <span class="keyword">from</span> user_constraints <span class="keyword">where</span> table_name=<span class="string">' '</span>;</div></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<blockquote>
<p>在修改表时添加主键约束<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">add constraint constraint_names primary key (column_name1,...);</div></pre></td></tr></table></figure></p>
<p>更改约束的名字<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">rename</span> <span class="keyword">constraint</span> old_name <span class="keyword">to</span> new_name;</div></pre></td></tr></table></figure></p>
<p>删除主键约束<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">disable | enable constraint constraint_names;   <span class="comment">--禁用约束</span></div><div class="line"><span class="keyword">drop</span> <span class="keyword">constraint</span> constraint_names;   <span class="comment">--删除约束</span></div><div class="line"><span class="keyword">drop</span> primary <span class="keyword">key</span>[<span class="keyword">cascade</span>];  <span class="comment">--cascade用于级联删除约束</span></div></pre></td></tr></table></figure></p>
</blockquote>
<h4 id="外键约束"><a href="#外键约束" class="headerlink" title="外键约束"></a>外键约束</h4><blockquote>
<p>在创建表时设置外键约束(两种方式)<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">create</span> <span class="keyword">table</span> typeinfo (typeid varchar2(<span class="number">10</span>) primary <span class="keyword">key</span> , typename varchar2(<span class="number">30</span>));    <span class="comment">--主表(类型信息表)</span></div><div class="line"><span class="keyword">create</span> <span class="keyword">table</span> userinfo (</div><div class="line">    userid varchar2(<span class="number">10</span>) primary <span class="keyword">key</span> ,</div><div class="line">    username varchar2(<span class="number">20</span>),</div><div class="line">    typeid_new varchar2(<span class="number">10</span>) <span class="keyword">references</span> typeinfo(typeid);</div><div class="line">);    <span class="comment">--从表</span></div><div class="line"></div><div class="line"><span class="comment">-------</span></div><div class="line"><span class="keyword">create</span> <span class="keyword">table</span> userinfo_f1 (</div><div class="line">    <span class="keyword">id</span> varchar2(<span class="number">10</span>) primary <span class="keyword">key</span>,</div><div class="line">    <span class="keyword">name</span> varchar2(<span class="number">30</span>),</div><div class="line">    typeid_new varchar2(<span class="number">10</span>),</div><div class="line">    <span class="keyword">constraint</span> fk_typeid_new foreign <span class="keyword">key</span>(typeid_new) <span class="keyword">references</span> typeinfo(typeid)</div><div class="line">    <span class="keyword">on</span> <span class="keyword">delete</span> <span class="keyword">cascade</span>;</div><div class="line">)</div></pre></td></tr></table></figure></p>
<p>在修改表时添加约束<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">create</span> <span class="keyword">table</span> userinfo(</div><div class="line">    <span class="keyword">id</span> varchar2(<span class="number">10</span>) primary <span class="keyword">key</span>,</div><div class="line">    <span class="keyword">name</span> varchar2(<span class="number">30</span>),</div><div class="line">    typeid_new varchar2(<span class="number">10</span>);</div><div class="line">)</div><div class="line"><span class="keyword">alter</span> <span class="keyword">table</span> userinfo <span class="keyword">add</span> <span class="keyword">constraint</span> fk_typeid foreign <span class="keyword">key</span> (typeid_new) </div><div class="line"><span class="keyword">references</span> typeinfo(typeid);</div></pre></td></tr></table></figure></p>
</blockquote>
<p><strong>注:</strong></p>
<ol>
<li>主从表中响应字段必须是同一个数据类型。</li>
<li>从表中外键字段的值必须来自于主表中相应字段的值，或为null值。</li>
<li><code>on delete caseade</code>是级联删除。<br><strong>删除约束</strong><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">alter</span> <span class="keyword">table</span> table_names <span class="keyword">disable</span> | <span class="keyword">enable</span> <span class="keyword">constraint</span> constraint_names;</div><div class="line"><span class="keyword">alter</span> <span class="keyword">table</span> table_names <span class="keyword">drop</span> <span class="keyword">constraint</span> constraint_names;</div><div class="line"><span class="keyword">select</span> constraint_name,constraint_type,<span class="keyword">status</span> <span class="keyword">from</span> user_constraints <span class="keyword">where</span> <span class="keyword">table</span> <span class="keyword">name</span> = <span class="string">""</span>;</div><div class="line"><span class="comment">-- 查询约束</span></div></pre></td></tr></table></figure>
</li>
</ol>
<h4 id="唯一约束"><a href="#唯一约束" class="headerlink" title="唯一约束"></a>唯一约束</h4><blockquote>
<p>唯一约束和主键约束的不同</p>
<ol>
<li>主键字段值必须是非空的；唯一约束允许有一个空值。</li>
<li>主键在一张表中只能有一个，但是唯一约束可以有多个。<br>在创建表时设置唯一约束<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">create</span> <span class="keyword">table</span> table_names (column_name datatype <span class="keyword">unique</span>,...); <span class="comment">--列级</span></div><div class="line"><span class="keyword">create</span> <span class="keyword">table</span> table_names (</div><div class="line">    column_name datatype,...</div><div class="line">    <span class="keyword">constraint</span> constraint_name <span class="keyword">unique</span>(column_name); <span class="comment">--表级</span></div><div class="line">)</div></pre></td></tr></table></figure>
</li>
</ol>
<p>在修改表时添加唯一约束<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">alter</span> <span class="keyword">table</span> table_name <span class="keyword">add</span> <span class="keyword">constraint</span> constraint_names <span class="keyword">unique</span>(column_name);</div></pre></td></tr></table></figure></p>
<p>删除唯一约束<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">alter</span> <span class="keyword">table</span> table_names <span class="keyword">disable</span> | <span class="keyword">enable</span> <span class="keyword">constraint</span> constraint_names;</div><div class="line"><span class="keyword">alter</span> <span class="keyword">table</span> table_names <span class="keyword">drop</span> <span class="keyword">constraint</span> constraint_names;</div></pre></td></tr></table></figure></p>
</blockquote>
<h4 id="检查约束"><a href="#检查约束" class="headerlink" title="检查约束"></a>检查约束</h4><p>作用:表中的值更具有实际意义。</p>
<blockquote>
<p>在创建时设置检查约束<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">create</span> <span class="keyword">table</span> table_names (column_name datetype <span class="keyword">check</span>(expressions),...) <span class="comment">--列级</span></div><div class="line">eg:</div><div class="line">    <span class="keyword">create</span> <span class="keyword">table</span> userinfo_c(</div><div class="line">        <span class="keyword">id</span> varchar2(<span class="number">10</span>) primary <span class="keyword">key</span>,</div><div class="line">        username varchar2(<span class="number">20</span>),</div><div class="line">        salary <span class="built_in">number</span>(<span class="number">5</span>,<span class="number">0</span>) <span class="keyword">check</span>(salary&gt;<span class="number">0</span>)</div><div class="line">    )</div><div class="line"><span class="keyword">constraint</span> constraint_names <span class="keyword">check</span>(expressions) <span class="comment">--表级</span></div></pre></td></tr></table></figure></p>
<p>在修改表时添加检查约束<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">alter</span> <span class="keyword">table</span> table_names <span class="keyword">add</span> <span class="keyword">constraint</span> constraint_name <span class="keyword">check</span>(expressions);</div></pre></td></tr></table></figure></p>
</blockquote>
<h2 id="四、查询语句"><a href="#四、查询语句" class="headerlink" title="四、查询语句"></a>四、查询语句</h2><h3 id="基本查询语句"><a href="#基本查询语句" class="headerlink" title="基本查询语句"></a>基本查询语句</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> [<span class="keyword">distinct</span>] column_names1,... |* <span class="keyword">from</span> table_name [<span class="keyword">where</span> conditions];</div></pre></td></tr></table></figure>
<h4 id="在SQL-Plus中的设置格式"><a href="#在SQL-Plus中的设置格式" class="headerlink" title="在SQL*Plus中的设置格式"></a>在SQL*Plus中的设置格式</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">column column_names HEADING new_name;  <span class="comment">--修改字段名称(column可以简写成COL)</span></div><div class="line">column column_names format dataformat;  <span class="comment">--设置结果显示格式</span></div><div class="line">column column_names clear;  <span class="comment">--清除之前设置的格式</span></div></pre></td></tr></table></figure>
<h4 id="给字段设置别名"><a href="#给字段设置别名" class="headerlink" title="给字段设置别名"></a>给字段设置别名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> column_names <span class="keyword">AS</span> new_name <span class="keyword">from</span> table_names;   <span class="comment">--AS可以省略</span></div></pre></td></tr></table></figure>
<h4 id="运算符和表达式"><a href="#运算符和表达式" class="headerlink" title="运算符和表达式"></a>运算符和表达式</h4><ul>
<li>算术运算符(+,-,*,/)</li>
<li>比较运算符(&gt;,&gt;=,&lt;,&lt;=,=,&lt;&gt;[不等于])</li>
<li>逻辑运算符(and,or,not) <ul>
<li>优先级:按照 not、and、or 递减<br><strong>eg:</strong><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> <span class="keyword">id</span>,username,salary+<span class="number">200</span> <span class="keyword">from</span> <span class="keyword">users</span>;  <span class="comment">--只是查询的结果视图+200</span></div><div class="line"><span class="keyword">select</span> username <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> salary &gt; <span class="number">800</span> <span class="keyword">and</span> salary &lt;&gt; <span class="number">1200</span>;</div><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> <span class="keyword">not</span>(user_name = <span class="string">'aaa'</span>);</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<h4 id="模糊查询"><a href="#模糊查询" class="headerlink" title="模糊查询"></a>模糊查询</h4><ul>
<li>通配符(_,%)<ul>
<li>一个_只能代表一个字符</li>
<li>%可以代表0到多个任意字符</li>
</ul>
</li>
<li>LIKE<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> user_name <span class="keyword">LIKE</span> <span class="string">'_张%'</span>; <span class="comment">--查询第2个字是张的人的信息</span></div><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> user_name <span class="keyword">LIKE</span> <span class="string">'%张%'</span>; <span class="comment">--查询名字中含有张的人的信息</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="范围查询"><a href="#范围查询" class="headerlink" title="范围查询"></a>范围查询</h4><ul>
<li>BETWEEN…AND</li>
<li>IN / NOT IN<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> salary <span class="keyword">not</span> <span class="keyword">between</span> <span class="number">800</span> <span class="keyword">and</span> <span class="number">1000</span>;</div><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> user_name <span class="keyword">not</span> <span class="keyword">in</span> (<span class="string">'a'</span>,<span class="string">'b'</span>); <span class="comment">--用户名不等于a且不等于b</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h4><ul>
<li><strong>select…from …[where…] ORDER BY…DESC/ASC;</strong><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">id</span> <span class="keyword">desc</span> , dalary <span class="keyword">asc</span>; <span class="comment">--在id相同的情况下salary才按升序排列</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="case…when"><a href="#case…when" class="headerlink" title="case…when"></a>case…when</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> username , </div><div class="line">    <span class="keyword">case</span> username <span class="keyword">when</span> <span class="string">'a'</span> <span class="keyword">then</span> <span class="string">'语文'</span> <span class="keyword">when</span> <span class="string">'b'</span> <span class="keyword">then</span> <span class="string">'数学'</span> <span class="keyword">else</span> <span class="string">'其他'</span> <span class="keyword">end</span> <span class="keyword">as</span> 科目 </div><div class="line"><span class="keyword">from</span> <span class="keyword">users</span>;</div></pre></td></tr></table></figure>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> username,<span class="keyword">case</span> <span class="keyword">when</span> username=<span class="string">'aaa'</span> <span class="keyword">then</span> <span class="string">'计算机部门'</span></div><div class="line">    <span class="keyword">when</span> username=<span class="string">'bbb'</span> <span class="keyword">then</span> <span class="string">'市场部门'</span> <span class="keyword">else</span> <span class="string">'其他部门'</span> <span class="keyword">end</span> <span class="keyword">as</span> 部门</div><div class="line">    <span class="keyword">from</span> <span class="keyword">users</span>;</div></pre></td></tr></table></figure>
<h4 id="decode"><a href="#decode" class="headerlink" title="decode"></a>decode</h4><ul>
<li>decode (column_name,value1,result1,…,defaultValue)<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> username , <span class="keyword">decode</span>(username,<span class="string">'aaa'</span>,<span class="string">'计算机部门'</span>,<span class="string">'bbb'</span>,<span class="string">'市场部门'</span>,<span class="string">'其他'</span>) <span class="keyword">as</span> 部门</div><div class="line"><span class="keyword">from</span> <span class="keyword">users</span>;</div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 数据库 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 技术 </tag>
            
            <tag> 数据库 </tag>
            
            <tag> Oracle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Spring MVC 之 参数绑定]]></title>
      <url>http://chuanqiang.github.io/2016/09/20/Spring%20MVC%20%E4%B9%8B%E5%8F%82%E6%95%B0%E7%BB%91%E5%AE%9A/</url>
      <content type="html"><![CDATA[<p>介绍Spring MVC 相关参数的绑定使用。</p>
<a id="more"></a>
<hr>
<h2 id="1-基本数据类型-以int为例，其他类似-："><a href="#1-基本数据类型-以int为例，其他类似-：" class="headerlink" title="1. 基本数据类型(以int为例，其他类似)："></a>1. 基本数据类型(以int为例，其他类似)：</h2><ul>
<li><p>Controller代码：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"saysth.do"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">(<span class="keyword">int</span> count)</span> </span>&#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>表单代码：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;form action=<span class="string">"saysth.do"</span> method=<span class="string">"post"</span>&gt;</div><div class="line">    &lt;input name=<span class="string">"count"</span> value=<span class="string">"10"</span> type=<span class="string">"text"</span>/&gt;</div><div class="line">......</div><div class="line">&lt;/form&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>表单中<code>input</code>的<code>name</code>值和<code>Controller</code>的参数变量名保持一致，就能完成数据绑定，如果不一致可以使用<code>@RequestParam</code>注解。需要注意的是，如果Controller方法参数中定义的是基本数据类型，但是从页面提交过来的数据为null或者””的话，会出现数据转换的异常。也就是必须保证表单传递过来的数据不能为null或””，所以，在开发过程中，对可能为空的数据，最好将参数数据类型定义成包装类型，具体参见下面的例子。</p>
<h2 id="2-包装类型-以Integer为例，其他类似-："><a href="#2-包装类型-以Integer为例，其他类似-：" class="headerlink" title="2. 包装类型(以Integer为例，其他类似)："></a>2. 包装类型(以Integer为例，其他类似)：</h2><ul>
<li><p>Controller代码：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Controller代码：</div><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"saysth.do"</span>)</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">(Integer count)</span> </span>&#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>表单代码：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;form action=<span class="string">"saysth.do"</span> method=<span class="string">"post"</span>&gt;</div><div class="line">    &lt;input name=<span class="string">"count"</span> value=<span class="string">"10"</span> type=<span class="string">"text"</span>/&gt;</div><div class="line">......</div><div class="line">&lt;/form&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>和基本数据类型基本一样，不同之处在于，表单传递过来的数据可以为<code>null</code>或””，以上面代码为例，如果表单中<code>num</code>为””或者表单中无<code>num</code>这个<code>input</code>，那么，<code>Controller</code>方法参数中的<code>num</code>值则为<code>null</code>。</p>
<h2 id="3-自定义对象类型："><a href="#3-自定义对象类型：" class="headerlink" title="3. 自定义对象类型："></a>3. 自定义对象类型：</h2><ul>
<li><p>Model代码：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> String firstName;</div><div class="line">    <span class="keyword">private</span> String lastName;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getFirstName</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> firstName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFirstName</span><span class="params">(String firstName)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.firstName = firstName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getLastName</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> lastName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLastName</span><span class="params">(String lastName)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.lastName = lastName;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Controller代码：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"saysth.do"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">(User user)</span> </span>&#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>表单代码：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;form action=<span class="string">"saysth.do"</span> method=<span class="string">"post"</span>&gt;</div><div class="line">    &lt;input name=<span class="string">"firstName"</span> value=<span class="string">"张"</span> type=<span class="string">"text"</span>/&gt;</div><div class="line">    &lt;input name=<span class="string">"lastName"</span> value=<span class="string">"三"</span> type=<span class="string">"text"</span>/&gt;</div><div class="line">......</div><div class="line">&lt;/form&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>非常简单，只需将对象的属性名和<code>input</code>的<code>name</code>值一一匹配即可。</p>
<h2 id="4-自定义复合对象类型："><a href="#4-自定义复合对象类型：" class="headerlink" title="4. 自定义复合对象类型："></a>4. 自定义复合对象类型：</h2><ul>
<li><p>Model代码：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ContactInfo</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> String tel;</div><div class="line">    <span class="keyword">private</span> String address;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getTel</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> tel;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTel</span><span class="params">(String tel)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.tel = tel;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAddress</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> address;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAddress</span><span class="params">(String address)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.address = address;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> String firstName;</div><div class="line">    <span class="keyword">private</span> String lastName;</div><div class="line">    <span class="keyword">private</span> ContactInfo contactInfo;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getFirstName</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> firstName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFirstName</span><span class="params">(String firstName)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.firstName = firstName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getLastName</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> lastName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLastName</span><span class="params">(String lastName)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.lastName = lastName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> ContactInfo <span class="title">getContactInfo</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> contactInfo;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setContactInfo</span><span class="params">(ContactInfo contactInfo)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.contactInfo = contactInfo;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Controller代码：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"saysth.do"</span>)</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">(User user)</span> </span>&#123;</div><div class="line">    System.out.println(user.getFirstName());</div><div class="line">    System.out.println(user.getLastName());</div><div class="line">    System.out.println(user.getContactInfo().getTel());</div><div class="line">    System.out.println(user.getContactInfo().getAddress());</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>表单代码：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"saysth.do"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"firstName"</span> <span class="attr">value</span>=<span class="string">"张"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"lastName"</span> <span class="attr">value</span>=<span class="string">"三"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"contactInfo.tel"</span> <span class="attr">value</span>=<span class="string">"13809908909"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"contactInfo.address"</span> <span class="attr">value</span>=<span class="string">"北京海淀"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Save"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>User对象中有<code>ContactInfo</code>属性，Controller中的代码和第3点说的一致，但是，在表单代码中，需要使用“属性名(对象类型的属性).属性名”来命名<code>input</code>的<code>name</code>。</p>
<h2 id="5-List绑定："><a href="#5-List绑定：" class="headerlink" title="5. List绑定："></a>5. List绑定：</h2><p>List需要绑定在对象上，而不能直接写在<code>Controller</code>方法的参数中。</p>
<ul>
<li><p>Model代码：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> String firstName;</div><div class="line">    <span class="keyword">private</span> String lastName;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getFirstName</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> firstName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFirstName</span><span class="params">(String firstName)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.firstName = firstName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getLastName</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> lastName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLastName</span><span class="params">(String lastName)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.lastName = lastName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserListForm</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> List&lt;User&gt; users;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">getUsers</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> users;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsers</span><span class="params">(List&lt;User&gt; users)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.users = users;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Controller代码：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"saysth.do"</span>)</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">(UserListForm userForm)</span> </span>&#123;</div><div class="line">    <span class="keyword">for</span> (User user : userForm.getUsers()) &#123;</div><div class="line">        System.out.println(user.getFirstName() + <span class="string">" - "</span> + user.getLastName());</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>表单代码：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"saysth.do"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">table</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">thead</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>First Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>Last Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">tfoot</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Save"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">tfoot</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"users[0].firstName"</span> <span class="attr">value</span>=<span class="string">"aaa"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"users[0].lastName"</span> <span class="attr">value</span>=<span class="string">"bbb"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"users[1].firstName"</span> <span class="attr">value</span>=<span class="string">"ccc"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"users[1].lastName"</span> <span class="attr">value</span>=<span class="string">"ddd"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"users[2].firstName"</span> <span class="attr">value</span>=<span class="string">"eee"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"users[2].lastName"</span> <span class="attr">value</span>=<span class="string">"fff"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>其实，这和第4点User对象中的contantInfo数据的绑定有点类似，但是这里的<code>UserListForm</code>对象里面的属性被定义成List，而不是普通自定义对象。所以，在表单中需要指定List的下标。值得一提的是，Spring会创建一个以最大下标值为<code>size</code>的<code>List</code>对象，所以，如果表单中有动态添加行、删除行的情况，就需要特别注意，譬如一个表格，用户在使用过程中经过多次删除行、增加行的操作之后，下标值就会与实际大小不一致，这时候，List中的对象，只有在表单中对应有下标的那些才会有值，否则会为<code>null</code>，看个例子：</p>
<ul>
<li>表单代码：<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"saysth.do"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">thead</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>First Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>Last Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">thead</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tfoot</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Save"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tfoot</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tbody</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"users[0].firstName"</span> <span class="attr">value</span>=<span class="string">"aaa"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"users[0].lastName"</span> <span class="attr">value</span>=<span class="string">"bbb"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"users[1].firstName"</span> <span class="attr">value</span>=<span class="string">"ccc"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"users[1].lastName"</span> <span class="attr">value</span>=<span class="string">"ddd"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"users[20].firstName"</span> <span class="attr">value</span>=<span class="string">"eee"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"users[20].lastName"</span> <span class="attr">value</span>=<span class="string">"fff"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>这个时候，<code>Controller</code>中的<code>userForm.getUsers()</code>获取到List的size为21，而且这21个User对象都不会为null，但是，第2到第19的User对象中的<code>firstName</code>和<code>lastName</code>都为<code>null</code>。打印结果：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">aaa - bbb</div><div class="line">ccc - ddd</div><div class="line"><span class="keyword">null</span> - <span class="keyword">null</span></div><div class="line"><span class="keyword">null</span> - <span class="keyword">null</span></div><div class="line"><span class="keyword">null</span> - <span class="keyword">null</span></div><div class="line"><span class="keyword">null</span> - <span class="keyword">null</span></div><div class="line"><span class="keyword">null</span> - <span class="keyword">null</span></div><div class="line"><span class="keyword">null</span> - <span class="keyword">null</span></div><div class="line"><span class="keyword">null</span> - <span class="keyword">null</span></div><div class="line"><span class="keyword">null</span> - <span class="keyword">null</span></div><div class="line"><span class="keyword">null</span> - <span class="keyword">null</span></div><div class="line"><span class="keyword">null</span> - <span class="keyword">null</span></div><div class="line"><span class="keyword">null</span> - <span class="keyword">null</span></div><div class="line"><span class="keyword">null</span> - <span class="keyword">null</span></div><div class="line"><span class="keyword">null</span> - <span class="keyword">null</span></div><div class="line"><span class="keyword">null</span> - <span class="keyword">null</span></div><div class="line"><span class="keyword">null</span> - <span class="keyword">null</span></div><div class="line"><span class="keyword">null</span> - <span class="keyword">null</span></div><div class="line"><span class="keyword">null</span> - <span class="keyword">null</span></div><div class="line"><span class="keyword">null</span> - <span class="keyword">null</span></div><div class="line">eee - fff</div></pre></td></tr></table></figure></p>
<h2 id="6-Set绑定："><a href="#6-Set绑定：" class="headerlink" title="6. Set绑定："></a>6. Set绑定：</h2><p>Set和List类似，也需要绑定在对象上，而不能直接写在<code>Controller</code>方法的参数中。但是，绑定Set数据时，必须先在Set对象中<code>add</code>相应的数量的模型对象。</p>
<ul>
<li><p>Model代码：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> String firstName;</div><div class="line">    <span class="keyword">private</span> String lastName;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getFirstName</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> firstName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFirstName</span><span class="params">(String firstName)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.firstName = firstName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getLastName</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> lastName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLastName</span><span class="params">(String lastName)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.lastName = lastName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserSetForm</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> Set&lt;User&gt; users = <span class="keyword">new</span> HashSet&lt;User&gt;();</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">UserSetForm</span><span class="params">()</span> </span>&#123;</div><div class="line">        users.add(<span class="keyword">new</span> User());</div><div class="line">        users.add(<span class="keyword">new</span> User());</div><div class="line">        users.add(<span class="keyword">new</span> User());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> Set&lt;User&gt; <span class="title">getUsers</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> users;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsers</span><span class="params">(Set&lt;User&gt; users)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.users = users;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Controller代码：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"saysth.do"</span>)</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">(UserSetForm userForm)</span> </span>&#123;</div><div class="line">    <span class="keyword">for</span> (User user : userForm.getUsers()) &#123;</div><div class="line">        System.out.println(user.getFirstName() + <span class="string">" - "</span> + user.getLastName());</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>表单代码：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"saysth.do"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">thead</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>First Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>Last Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">thead</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tfoot</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Save"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tfoot</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tbody</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"users[0].firstName"</span> <span class="attr">value</span>=<span class="string">"aaa"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"users[0].lastName"</span> <span class="attr">value</span>=<span class="string">"bbb"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"users[1].firstName"</span> <span class="attr">value</span>=<span class="string">"ccc"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"users[1].lastName"</span> <span class="attr">value</span>=<span class="string">"ddd"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"users[2].firstName"</span> <span class="attr">value</span>=<span class="string">"eee"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"users[2].lastName"</span> <span class="attr">value</span>=<span class="string">"fff"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>基本和List绑定类似。</p>
<p>需要特别提醒的是，如果最大下标值大于Set的size，则会抛出<code>org.springframework.beans.InvalidPropertyException</code>异常。所以，在使用时有些不便。</p>
<h2 id="7-Map绑定："><a href="#7-Map绑定：" class="headerlink" title="7. Map绑定："></a>7. Map绑定：</h2><p>Map最为灵活，它也需要绑定在对象上，而不能直接写在Controller方法的参数中。</p>
<ul>
<li><p>Model代码：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> String firstName;</div><div class="line">    <span class="keyword">private</span> String lastName;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getFirstName</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> firstName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFirstName</span><span class="params">(String firstName)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.firstName = firstName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getLastName</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> lastName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLastName</span><span class="params">(String lastName)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.lastName = lastName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapForm</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> Map&lt;String, User&gt; users;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> Map&lt;String, User&gt; <span class="title">getUsers</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> users;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsers</span><span class="params">(Map&lt;String, User&gt; users)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.users = users;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>Controller代码：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"saysth.do"</span>)</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">(UserMapForm userForm)</span> </span>&#123;</div><div class="line">    <span class="keyword">for</span> (Map.Entry&lt;String, User&gt; entry : userForm.getUsers().entrySet()) &#123;</div><div class="line">        System.out.println(entry.getKey() + <span class="string">": "</span> + entry.getValue().getFirstName() + <span class="string">" - "</span> +</div><div class="line">        entry.getValue().getLastName());</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>表单代码：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"saysth.do"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">thead</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>First Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>Last Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">thead</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tfoot</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Save"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tfoot</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tbody</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"users['x'].firstName"</span> <span class="attr">value</span>=<span class="string">"aaa"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"users['x'].lastName"</span> <span class="attr">value</span>=<span class="string">"bbb"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"users['y'].firstName"</span> <span class="attr">value</span>=<span class="string">"ccc"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"users['y'].lastName"</span> <span class="attr">value</span>=<span class="string">"ddd"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"users['z'].firstName"</span> <span class="attr">value</span>=<span class="string">"eee"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"users['z'].lastName"</span> <span class="attr">value</span>=<span class="string">"fff"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>打印结果：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">x: aaa - bbb</div><div class="line">y: ccc - ddd</div><div class="line">z: eee - fff</div></pre></td></tr></table></figure>
</li>
</ul>
<p>摘自<a href="http://www.cnblogs.com/HD/p/4107674.html" target="_blank" rel="external">博客园</a></p>
]]></content>
      
        <categories>
            
            <category> Spring MVC </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 技术 </tag>
            
            <tag> Spring MVC </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[泛若不系之舟-书摘]]></title>
      <url>http://chuanqiang.github.io/2016/09/04/%E6%B3%9B%E8%8B%A5%E4%B8%8D%E7%B3%BB%E4%B9%8B%E8%88%9F-%E4%B9%A6%E6%91%98/</url>
      <content type="html"><![CDATA[<ol>
<li>更令我感到困惑的是西方人对于印度的迷恋。为什么在很多中国人看来无比“脏乱差”的印度却是西方人眼中的精神圣殿？印度果真是一个蕴含着无尽智慧的宝库吗？甲壳虫乐队去那里学习冥想，乔布斯和朋友一道浪迹印度寻找顿悟，毛姆《刀锋》中的男主角拉里最终在印度找到了他想要的终极真理……而20世纪60 ～ 70年代，无数嬉皮士更是听从他们内心“来自东方的召唤”，不远万里来到印度，学习印度宗教，寻找内心的灵性和觉悟。可是谁能说清，这究竟是一种高贵的修习，还是用来逃遁现实生活的手段，甚至只是一种肤浅的自恋情绪？<a id="more"></a></li>
<li>印度教那广博的包容性也令我着迷。它从不弃绝任何东西，这种庞大的接纳和包容能力使得伊斯兰教、基督教、锡克教、佛教、耆那教等宗教都能够与之并存，并受到它的影响。从前的我对一些宗教的教义怀有恶感甚至是恐惧心理，可是在印度停留不过短短十天，看到印度教的包容，不禁为自己的无知和狭隘感到惭愧。我终于意识到，在很多时候，宗教的偏执性其实是来自于人而并非它的本身，如果只是怀着学习的心态在宗教中获取思考方式和精神力量，便不会那么容易钻入某些死胡同里。同样，如果“无神论”是建立在无知而自大的基础上，那么根本不是一件值得自豪的事情</li>
<li>印度也使我开始欣赏直觉和经验智慧的力量，它们是对西方所提倡的理性思维的重要补充，因为世界无法仅仅用语言和数字来定义，生活中总蕴含着神秘而不可预知的东西。</li>
<li>满街飘扬着华美的纱丽，鲜艳的色彩和飘逸的布料使得连做苦力的女人看起来都宛若女神。稍一侧身，里面的小短上衣露出腰部的皮肤，坐在路边卖菜的老奶奶也忽然变得性感；</li>
<li>我一边喝着啤酒一边用Kindle看小说，铭基和旁边的德国男生则躺在沙滩椅上用手机上网。我不禁有点儿感慨 ：虚拟的网络世界和层出不穷的电子产品给我们这一代人提供了避难所和迷幻药，而当年的嬉皮们却只能以自己的肉身与真实的世界对抗。虽然对嬉皮文化中的不少东西持保留意见，我仍然向往这些“花之儿女”曾生活过的那个精彩年代——A whole generation with a new explanation.(这一代人对一切都有新的诠释。）无论结局如何，至少他们相信世界是可以被改变的。而他们留下的音乐、诗歌、文字和精神一直在鼓励之后的几代人对抗体制活出自我，在这个意义上，世界也的确在60年代重生了。</li>
<li>虽然我们并没有在船上过夜，只是无所事事地在宽广的河流上航行几个小时也已经非常满足。烟波浩渺，水雾迷离，远处大片的椰子树和香蕉林如梦似幻。有渔夫撑一支长篙乘一叶扁舟打捞河蚌，虽然是极其辛苦的劳作，可是因为有了这缥缈背景的映衬，整个人都好像沾染了仙气。看着他划着小船越驶越远，连我都产生了“小舟从此逝，江海寄余生”的情怀。</li>
<li>印度人的清洁观必须放在种姓制度的背景下来理解，而这个制度强调的便是社会秩序的纯洁性优先于身体的纯洁性。</li>
<li>和印度人相比，中国人总是显得忧心忡忡，戾气太重；尽管印度人喜欢随地吐痰，床单总是洗不干净，可他们又是如此爱美，满街的纱丽和kurta [1]风姿绰约，连乞丐也要戴首饰。对于对美有执着追求的民族，我一向抱持以最深的敬意；我羡慕他们的精神自由，也欣赏他们对于心灵世界的关注，对于各种精神探索的尊重和宽容。由于印度人对自然怀有宗教性的感情（古印度人居住于森林，宗教在森林中产生），他们发自内心地爱护自然，尊重动物，几乎从不疯狂地采矿和砍伐森林，与自然和谐相处。他们的环保行为天然淳朴，往往并非出自深思熟虑，但却起到了与发达国家所倡导的环保行为殊途同归的效果……</li>
<li>去哪里和做什么其实都不重要，能够跳出井底本身已经是摆脱狭隘和偏见的第一步，你从此便会知道外面的世界广袤无边，而世上有那么多人正过着你的想象力无法触及的生活。</li>
<li>后来我无意中看到特蕾莎修女的一句名言 ： “即使你是友善的，人们可能还是会说你自私和动机不良。但是不管怎样，你还是要友善。” 我的脸上顿时一阵热辣辣的。 这就是加尔各答仁爱之家的魅力吧。你不远万里而来，心怀美好愿望，摩拳擦掌地准备帮助别人—— 可是自己却先被治愈了。</li>
<li>可是我们这些人的旅行细节看似不同，其实大体上却千篇一律，而且终有一天会结束旅程回到原来的生活。然而这世上还存在着另一些旅人，他们同样走在路上，却过着你无法轻易复制的另一种人生。</li>
<li>她的语气是轻松淡然的，完全没有炫耀或是自恃清高，令我觉得非常亲切，可是她思维的方式和观察事物的角度又是那么特别。她并没有宗教信仰，然而或许是因为特殊的成长经历和家庭教育，她整个人的世界观和人生观都跟我们这些在笼子里长大的家伙不一样。在她的世界里，完全不存在所谓的“世俗的羁绊”，依照自己的心意去生活是理所当然的事，对物质的需求可以降到最低，帮助受苦的人们却是生命中最大的意义。</li>
<li>面对着这些天使一般的普通人的时候，我常会觉得自己一直都生活在另一个平行世界。在那个世界里，个人的喜怒哀乐被放到无限大，外界的苦难只是报纸上的统计数字。我走过很长的路，却从未走出世俗眼光的束缚；我游历了很多国家，却很少航游我自己的单调。惭愧地说，即便是在受到了极大感动和震撼的现在，我的心中仍然欠缺像施恩慈他们那样的“大爱”，无法将扶危济贫作为此生最大的追求。可是他们身上还有一种东西令我着迷予我鼓励，那就是主动选择自己命运的勇气。在人生这场漫漫长旅中，他们选择了这世上最令人畏惧的道路——通向自己的内心。</li>
<li>明白没有任何一个宗教能够垄断真理或是毫无瑕疵，也不是任何宗教传统都可以不与时俱进而万古长存，然而印度给我上的重要一课便是学会谦卑——尊重每一个现象，不事先占领优越于对方的立场，避免非黑即白的思考。</li>
<li>爱因斯坦的那句话深得我心 ：“我们所能拥有的最美好的体验就是神秘感，真正的艺术与真正的科学都发源于这种基本的情感……”当然，爱因斯坦并没有否认推理的重要性，但他似乎认为科学的运作需要有比纯理性更多的东西。他沉醉于生命的永恒之神秘，也相信每个人都能够体验这种神秘。</li>
<li>宗教大约起源于人类对于死亡和未知事物的恐惧。我常觉得对宗教有兴趣即是对人生的各种问题（比如生老病死）有兴趣。人为什么而活着的问题注定永远要在现实中困扰着我们，然而正如圣严法师所说，这是一个非常永恒，永恒得不会有也不应有统一的最后答案的问题，这是一个其内容具有极端特殊的经验性而无从用语言传达的问题。因此佛陀索性就不纠结于这个问题，而是向我们说明人生的归向以及达到永恒目的的实践方法，从而减少了人们对未知与死亡的恐惧。</li>
<li>其实若是仔细体会“一切诸法都依托众缘和合而生，缘尽则散灭”的说法，这“缘”的观念又何尝不是冷而沉重。只是一想起在摩诃菩提寺获得的感动，一想起这些日子里当地居民和僧侣们给予我们的帮助，我又觉得与菩提迦耶结下的因缘是温暖而有情意的。古代僧人也有结缘的风俗——“京师僧人念佛号者辄以豆记其数，至四月八日佛诞生之辰，煮豆微撒以盐，邀人于路请食之以为结缘。今尚沿其旧也”。佛法奥妙精深，既有“结缘”的主动，又有“随缘”的淡泊，怎奈我修行浅薄，做不到随缘适意，却总是聚散两依依。</li>
<li>鹿野苑日月山法轮寺，四年中我仍对它念念不忘。那座遥远的东方寺庙变成了我的“黄金国”与“香格里拉”，我用想象赋予它比实际更多的宁静和清雅，它承载了一个忙得昏天黑地的上班族最奢侈的梦想。深夜加班的时候，面对着电脑屏幕上的模型和报告，我会叹一口气，走到窗前去看天上的月亮——鹿野苑的那座寺庙里，这轮明月的清辉正投映在哪一个幸运的家伙身上？</li>
<li>在自己的梦想之中，那种幸福感几乎令我无法集中精神阅读，连廊下的风声和树上的蝉鸣似乎都在赞叹着这种幸福，正在流逝着的每一分每一秒都光彩熠熠。</li>
<li>初见面时她的自我介绍只有一句话 ：“我老公是医生。”——非常简单，非常印度。在这片土地上，人不是由自己塑造的。男人们只是他们的名字和头衔，女人们则只是她们男人的影子，可是婶婶看上去又是那么骄傲而快乐。“印度之外的世界要以它们自己的标准来评判，而印度是不能被评判的，印度只能以印度的方式被体验。”奈保尔以讽刺的口吻说出的这句话却再一次令我感同身受。</li>
<li>人们以最简单的形式活着，仅仅是活着，却又不仅仅是活着——为了生存下去，每个人都必须与超自然的力量保持一种密切的关系。我在那些祈祷者的眼神里看到了灵魂，它是足以抵挡肤浅自负和漫不经心的坚固盾牌，或许也正是许多人千里迢迢来到印度寻找的东西。</li>
<li>曼谷更像是个为未来而准备的城市，只有湄南河上的习习凉风才能让人暂时逃离疯狂的现代生活。</li>
<li>可是，如果说充斥着高楼大厦和现代化建筑的曼谷毁灭了自己的过去，那么超自然的力量又使得它重新复活了——这座城市居然拥有那么多的寺庙、神坛和僧侣，如此古典，如此激烈，简直像是要将时针强行扳回到旧日的时光。也正因如此，它们的魅力简直无可抵挡。它们用自身的存在提醒着人们 ：信仰并不只是通往迷信的道路，更是一种对于失落的过去的缅怀和向往。</li>
<li>僧人和信众同时念诵着经文，每隔几秒便发出一声悠长的尾音，掷地作金石之声，又好似虎啸龙吟。我与周遭的人们毫发无伤地坠入一个古旧的世界</li>
<li>和很多farang一样，初到泰国时，我也觉得这是个阳光灿烂充满活力的国度，可是待的时间一长，渐渐体会到它从内里散发出来的那种颓废的美感，正如郁达夫笔下的M港市——“一种使人可以安居下去，于不知不觉的中间消沉下去的美感”。它热情好客，却没有什么贪婪和算计；它拥有高尚的信仰，却理解和满足你最隐秘的欲望；你可以在此地享受到无数种你甚至从未听说过的乐趣，而不至于面临破产的危机；你觉得自己与它越来越亲近，却又永远无法抵达它真正的核心，而这种无知的感觉反而奇妙地给你慰藉——毕竟是传说中神秘而智慧的东方啊……</li>
<li>车身颠簸，引擎轰鸣，移动本身创造出一种仿佛比静止更为完美的平静。</li>
<li>长途巴士在夜色中孤独地前行，此刻它既不属于城市也不属于乡野，而是只属于旅人的第三类空间。车上的每一个人都背井离乡，眼神空洞，脸上那种又寂寥又自在的气质简直和美国画家Edward Hopper（爱德华·霍普）的画中人一模一样。</li>
<li>此时凉夜已深，皎月破云，一片静寂中只有清脆错落的马蹄声。夜色为周遭的景物披上薄纱，也将旅人的眼睫融入幻境。旅途中总有一些这样的时刻令人特别感慨浮生若梦。</li>
<li><p>在我们的生命中有若干个凝固的时间点 卓越超群、瑰伟壮丽 让我们在困顿之时为之一振 并且弥漫于我们全身，让我们不断爬升 当我们身居高位时，激发我们爬得更高 当我们摔倒时，又鼓舞我们重新站起……</p>
</li>
<li><p>在缅甸，人们看似正常地生活着。他们上学，拉三轮车，去集市买菜，在茶馆聊天，看起来和其他地方的人们并没有什么不同。然而除了他们自己，没有人知道他们内心牵挂的事情有多沉重，有时又需要付出怎样的努力才能保持正常。微笑是他们的礼貌，只要轻轻拨开就会发现痛苦和眼泪。</p>
</li>
<li>记忆是另一种性质的生命。人人都爱回忆往事，但恐怕很少有人会愿意重新经历一次他们所津津乐道的疲倦和痛苦。</li>
<li>当我们勤于修行，很快就会领悟到一个根本的事实，那就是我们的感受变动无常。身体的每个部分每时每刻都有感受生起，它们都是身体内部生化反应的呈现，组成身体的亚原子粒子时时刻刻都在生灭之中，我们的心更是瞬息万变，并且在身体的变化上显现出来。 这就是身心的真相——变化、无常。当我们真正领会到这一点，便能自然地培养出平等心，明白执着于任何无常、短暂以及不可控制的东西都终将导致痛苦，因为它们迟早都会消逝。</li>
<li><p>我仍然认为痛苦的经历能使人高尚，但也终于明白，只有学会客观地观察痛苦，这种经历才有助于人格的成长。而如果一个人太过执着于痛苦，那么他只会在痛苦中沉沦，无法激发出心灵深处的力量。痛苦而伟大的灵魂们有一个共同点——他们都是清醒着的。</p>
</li>
<li><p>何意世多艰<br>探访古老的建筑总是让人感到快乐。个人的短暂生命被超越了，矗立眼前的活生生的历史令我们得到归属感，感受到“江山留胜迹，我辈复登临”的延续性。尼采曾经这样形容这种快乐：“……他知道自己的存在并非完全偶然或任意的，而是过去的继承者和成果。因此，一个人的存在是合理的，且确有其存在的意义。” </p>
</li>
</ol>
<p>命运。最让人难过的，就是一切都只能归咎于命运。我和铭基过着比Sara富裕和自由得多的生活，并非因为我们比他更聪明或更努力，而仅仅是因为我们比他运气好，没有出生在柬埔寨的破落乡村。如果将我放在与他一样的境地，我未必就能做得比他更好——他也许终会拥有一辆二手汽车，而我说不定就只能窝在暹粒的某间小旅馆日日打扫客房终此一生。 </p>
<ol>
<li>何处是家乡<br>不修之修本身就是一种修，对于不执着的执着本身就是一种执着。如此说来，与其试图用玄妙的语言来定义无为法，不如说它实质上代表的是一种无相思维的境界吧。 </li>
</ol>
<p>离开大理、丽江、双廊这些“外来移民之城”的时候，心中并无半点涟漪，九年后的我终于可以用平常心来看待曾经憧憬过又质疑过的隐士生活。过去的日子里我满世界奔走，希望找到一种可以效仿的理想的生活模式，最后才发现最好的生活只能是自己亲手建立起来的生活。它凝聚了属于我自己的智慧、生活经验和自由意志，肯定不完美，却也绝对无可替代。 </p>
<p>我们在云南的最后一站是香格里拉，更确切地说是位于德钦附近的梅里雪山。梅里雪山有“世上最美雪山”之誉，主峰卡瓦格博更被尊为藏地八大神山之首。而这座神山也似乎的确有着神秘的威力，从20世纪初至今的历次大规模登山活动无不以失败告终，1991年中日联合登山队甚至在一个绝对不会雪崩的季节突然遭遇大规模雪崩而全体遇难，长眠在了卡瓦格博。1996年后国家明令禁止攀登梅里雪山，雪山之神自此终于可以免于人类的惊扰。 </p>
<ol>
<li>归路许多长<br>尽管拉萨有诸多令人吃惊的变化，我却仍在到达后的几天里渐渐找到了回家的感觉。当我走在八廓街或布达拉宫外围那股宛如旋涡的转经人潮之中，当我看着寺庙里煨桑的青烟丝丝缕缕地升起来，当我邂逅衣衫褴褛磕着长头千里万里而来的朝圣者，当我双膝跪地仰望莲花巨座上正低眉沉思的佛像……总能感到一股神秘的眷恋之情在血液中流动，就像勾起了某种乡愁。我意识到西藏最深刻的本质并没有变化——在这片土地上，信仰仍如呼吸一般重要和自然。只要这样的信仰还存在一天，西藏的魅力就不会有半分损减。 </li>
</ol>
<p>信仰就是我的乡愁，恐怕也是吸引着许多人来到西藏的原因。它并非专指藏传佛教——说到底，我们何尝真的理解龙树中观的思想，又懂得分辨五大支派与藏密诸神？我们不过是敬仰它所代表的历史、智慧与神秘，羡慕有信仰的人能够根据它所提供的价值取向来坚守和约束自我。我不信仰宗教，虽然这并不代表我没有信仰，但有时也的确会感到某种空虚和孤独——由于缺少历史、传统、仪典、同道以及对于“神圣者”的敬畏，这样的信仰终究与真正的宗教信仰不一样，它太容易流于空幻，或是变成自我沉醉，使得我们只关心自己而不是他人的感受。 </p>
<p>在这片雪域高原上，各种庆典和仪式维系着人与神之间的庄严对话，雪顿节则是其中最能释放信仰虔诚的圣典。而此刻我就站在拉萨哲蚌寺后山上某个好不容易挤出来的立足之地，一边努力稳住身体，一边眺望前方朝东的山坡——一个足有半个足球场那么大的钢架支在山坡上，雪顿节最引人瞩目的晒佛仪式即将在那里进行。我兴奋地等待着，犹自喘个不停——凌晨三点就起床登山，可是由于莫名其妙的“管制”，之前在某个山路口被堵了足足两个多小时，人山人海挤得几乎喘不过气来，不少老人和妇女当场昏倒，只得被人群从头顶上“接力”抬出去救治。在好几个瞬间，我也以为自己下一秒就要倒下了…… </p>
<p>许多游客都和我一样站在那里动弹不得。无论是否信仰藏传佛教，沐浴在这佛光之中的人们都会感到深刻的震撼和感动。站在我前面的阿姨轻轻擦拭着眼角，而我的眼睛也已经湿润了。是的，没有禁忌，没有故弄玄虚，没有繁复的仪式，只有宗教之美——仅仅为了这个时刻也值得成为佛教徒。望着那幅铺展在群山之间、美得不可思议的巨大佛像，我想虽然佛陀说万物皆为幻象，可是幻象之中还有美。而当美出现的时候，它太真实了。 </p>
<p>我不像梁子那样对保护野生动物充满热情，不像施恩慈心怀济世救人的大爱，也不是如果能任意选择的话，我愿意成为的那种人。可是至少，我可以努力成为一个真正自由的人。 </p>
<p>在这16个月的漫漫长旅即将结束之际，我比任何时候都更为清醒地感受到这场旅行的“朝圣”性质：我们走遍天下，目的却是为了回家。 </p>
<p>神山冈仁波齐峰同时是藏传佛教、西藏原生宗教苯教、印度教和古耆那教的朝圣中心 </p>
<ol>
<li>后记：满船空载月明归<br>而这也正是我在旅行中获得的珍贵提示 </li>
</ol>
<p>看世界新闻时感受尤其明显，仿佛在那些遥远国度发生的大事小事都与自己有某种关联 </p>
<p>生命影响生命。旅途中往往匆匆一面，许多人的面容和语言都在时间的潮水中退却，可他们身上有种类似精神价值的东西却通过某种难以解释的感性力量抵达我的内心深处，而终有一日会被发现和吸收。就像王小波曾经形容的似水流年——“就如同一个人中了邪躺在河底，眼看着潺潺流水，粼粼波光，落叶，浮木，空玻璃瓶，一样一样从身上流过去”，我们也许会慢慢忘记这些曾经流过的东西，可是身上终究会留着它们的沉渣与痕迹。 </p>
<p>尤其是那些乘坐长途巴士的旅途。漫长、单调、颠簸，连看书都不可能，人们远离了外在环境，深深陷入了某种彻底的孤绝之中。最初的百无聊赖过后，你开始建立起一种缓慢的内在节奏，也渐渐能听到内心幽微的声音。忽然之间，惊心动魄的自由感无来由地骤然闪现，就像手指触摸到裸露的电线。这种自由感有时来源于喷薄而出的自我意识，有时却反因自我的消融而发生，仿佛整个人都进入了传说中的“无我之境”。 </p>
<p>这是最好的时代。这是最坏的时代。我并不认为是现代科技令这个世界越来越迷失，宗萨仁波切就曾一针见血地指出“真正使我们迷失的是我们的无明，贪欲，不安全感，想走捷径”。我想人们也并不一定真的热衷于这样的生活，只是屈服于群体压力，生怕自己落后于同辈和时代，生怕被抛到社会热点之外。久而久之，我们关心成功和娱乐远甚于关心自己的心灵，也越来越无法面对真实的自我—— </p>
<p>这一切绝非自恋或自我沉溺。按照佛教的说法，探索自我，最终是为了消融自我。“消融”这个词听起来有点抽象，其实也不妨理解为减少自私和傲慢，学会理解和怜悯，也从而真正理解我们所生活的世界。从哲学的角度来说亦是如此 </p>
<p>最近看到一篇关于德国电影《索菲·朔尔最后的日子》的影评，作者崔卫平在文中探讨究竟是什么使得铁桶般封闭而冰冷的体制产生一丝缝隙，结论就是人们内心的良知。她说对于纳粹这样一个高度极权的政权来说，除非有战争之类的外力作用，否则很难有力量使得它改变，指望它自我纠错是不可能的。而在没有外力的情况下，除非有一场“内部革命”，即人们开始听从自己内部的声音，开始寻找自己的良知、道德心，同时克服在那种极端情景下造成的恐惧、虚无和冷漠，自己动手解除加在自己身上的符咒，才是解放的第一步。 </p>
<p>最近看到一篇关于德国电影《索菲·朔尔最后的日子》的影评，作者崔卫平在文中探讨究竟是什么使得铁桶般封闭而冰冷的体制产生一丝缝隙，结论就是人们内心的良知。她说对于纳粹这样一个高度极权的政权来说，除非有战争之类的外力作用，否则很难有力量使得它改变，指望它自我纠错是不可能的。而在没有外力的情况下，除非有一场“内部革命”，即人们开始听从自己内部的声音，开始寻找自己的良知、道德心，同时克服在那种极端情景下造成的恐惧、虚无和冷漠，自己动手解除加在自己身上的符咒，才是解放的第一步。 </p>
]]></content>
      
        <categories>
            
            <category> 书摘 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 游记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[小李飞刀：多情剑客无情剑]]></title>
      <url>http://chuanqiang.github.io/2016/09/04/%E5%B0%8F%E6%9D%8E%E9%A3%9E%E5%88%80%EF%BC%9A%E5%A4%9A%E6%83%85%E5%89%91%E5%AE%A2%E6%97%A0%E6%83%85%E5%89%91/</url>
      <content type="html"><![CDATA[<ol>
<li>冷风如刀，以大地为砧板，视众生为鱼肉。万里飞雪，将穹苍作洪炉，熔万物为白银。 雪将住，风未定，一辆马车自北而来，滚动的车轮辗碎了地上的冰雪，却辗不碎天地间的寂寞。<a id="more"></a></li>
<li>酒虽不佳，但那地方面对青山，襟带绿水，春日里的游人很多，他望着那些欢笑着的红男绿女，一杯杯喝着自己的苦酒，准备从此向这十丈软红告别，这印象令他永远也不能忘记。</li>
<li>虬髯大汉叹道：“世人眼中的小人，固然未必全都是小人，世人眼中的君子，又有几个是真君子呢？”</li>
<li>虬髯大汉扶着李寻欢走过小桥，就望见梅树丛中，有三五石屋，红花白屋，风物宛如图画。</li>
<li>雪花轻轻地洒在窗子上，宛如情人的细语。</li>
<li>有时‘时间’仿佛过得很慢，但等它真过去时，你才会发现它快得令你吃惊。</li>
<li>她全身虽然没有一处不令人销魂，但最销魂处还是她的眼睛，没有男人能抗拒她这双眼睛</li>
<li>一灯如豆，灯光下看来，他眼角的皱纹似更深了。</li>
<li>屋顶上有个蜘蛛正开始结网，人岂非也和蜘蛛一样？世上每个人都在结网，然后将自己网在中央。</li>
<li>冷风如刀，积雪的屋脊上突有一群寒鸦惊起，接着，屋脊后就响起了一阵清亮却凄凉的钟声。</li>
<li>后墙外，有条小小的衖堂，起风时这里尘土飞扬，下雨时这里泥泞没足，高墙挡住了日色，衖堂里几乎终年见不到阳光。 但无论多卑贱、多阴暗的地方，都有人在默默地活着。 这也许是因为他们根本没有别处可去，也许是因为他们对人生已厌倦，宁愿躲在这种地方，被世人遗忘。 衖堂里有个鸡毛小店，前面卖些粗粝的饮食，后面有三五间简陋的客房，店主人孙驼子是个残废的侏儒。</li>
<li>夜雾凄迷，木叶凋零，荷塘内落满了枯叶，小路上荒草没径，昔日花红柳绿、梅香菊冷的庭院，如今竟充满了森森鬼气。 小桥的尽头，有三五精舍，正是“冷香小筑”。 在这里住过的有武林中第一位名侠，江湖中第一位美人，昔日此时，梅花已将吐艳，香气醉沁人心。 但现在，墙角结着蛛网，窗台积着灰尘，早已不复再见昔日的风流遗迹，连不老的梅树都已枯萎。 小楼上的灯火仍未熄，远方传来零落的更鼓。 已是四更。 漫漫长夜已将尽，浓雾中忽然出现了一条人影。 这究竟是深夜无寐的人，还是来自地府的幽灵？ 只见他头发蓬乱，衣衫不整，看来是那么落魄、憔悴，但他的神采看来却仍然是那么潇洒，目光也亮得像是秋夜的寒星。 他萧然走过小桥，看到枯萎了的梅树，他不禁发出了深长的叹息。梅花本也是他昔日的良伴，今日却已和人同样憔悴。 然后他的人忽然如燕子般飞起！</li>
<li>风吹过，卷起了漫天红叶。 枫林里的秋色似乎比林外更浓了。 剑气袭人，天地间充满了凄凉肃杀之意。 郭嵩阳反手拔剑，平举当胸，目光始终不离李寻欢的手。 他知道这是只可怕的手。</li>
<li>李寻欢一向认为世上只有两件事最令他头疼。 第一件就是吃饭时忽然发现满桌上的人都是不喝酒的。 第二件就是忽然遇着个多嘴的女人。 这第二件事往往比第一件事更令他头疼十倍。 奇怪的是，他现在非但一点也不觉得头疼，反而觉得很愉快。</li>
<li>一个人若已抹了十四年桌子，无论他以前是什么人，都会变成这样子的，因为当他在抹着桌上油垢的时候，也就是在抹着自己的光彩。 粗糙的桌子被抹光，凌厉的锋芒也被磨平了。</li>
<li>山村。 山脚下，枫林里，高高挑起一面青布酒旗。 酒铺的名字很雅，有七个字：“停车爱醉枫林晚。” 只看这名字，李寻欢就已将醉了。 酒不醇，却很清，很冽，是山泉酿成的。 山泉由后山流到这里，清可见底，李寻欢知道沿着这道泉水走到后山，就可在一片默林深处找到三五间精致的木屋。 阿飞和林仙儿就在那木屋里</li>
<li>秋已残。 木叶凋零。 风不大，但黄叶萧萧而落，难道是被他们的杀气所摧落的？ 天地间的确充满了一种说不出的萧索凄凉之意。 两人的剑虽然还都插在腰带上，两人虽然还都连手指都没有动，但龙啸云父子却已紧张得透不过气来。 突然间，寒光闪动。 十余道寒光带着尖锐的风声，击向阿飞。 龙啸云竟先出了手。</li>
<li>阿飞瞧了瞧自己的手，目中突然露出一种说不出的凄凉萧索之意，缓缓转过身，在旁边的桌上坐下，道：“酒，白干。” 店伙赔着笑，道：“客官要什么菜下酒？” 阿飞道：“酒，黄酒。” 会喝酒的人都知道，一个人若想快醉，最好的法子就是用酒来下酒，用黄酒来下白干。 只不过这种法子虽然人人都知道，却很少有人用，因为一个人心里若没有很深的痛苦，总希望自己醉得愈慢愈好。</li>
<li>他的衣衫已很陈旧残破，已有多日未洗涤。 又有谁能想到在如此衰弱、如此僵偻的躯壳里，竟藏着那么坚强的意志，那么高尚的人格，那么伟大的灵魂！ 《古龙文集（第一辑套装共27册） (古龙)》 您在位置 #10594-10596的标注 2016-09-01 08:12:28</li>
<li>说完了这句话，他就走了出去。 他头也不回地走了出去。 眼泪本是咸的。 但有些泪却只能往肚里流，那就不但咸，而且苦。 血，本也是咸的。 但一个人的心若碎了，自心里滴出的血，就比泪更酸苦。 李寻欢也不知道已咳了多久，衣袖已被染红。</li>
<li>在这一瞬间，林仙儿才知道自己错了。 她本来一直以为自己已完全控制住阿飞，现在才知道这想法错得多么厉害。 阿飞的确是爱她的，爱得很深。 但在一个男人的生命中，却还有很多很多比“爱”更重要的事——比生命都重要的事。</li>
<li>他始终没有流泪。 不流泪的人，只流血</li>
<li>院子里一株孤零零的白杨正在秋风中叹息，叹息着生命的短促，人的愚蠢，竟不知对这短促的生命多加珍惜。</li>
<li>少女道：“这么说来，武学的真谛，岂非和禅宗一样？” 老人道：“普天之下，万事万物，到了巅峰时，道理本就全差不多。”</li>
<li>灯在风中摇晃，酒在杯中摇晃。 浑浊的酒，黯淡的灯光。 他喝酒的地方，只不过是个很小的面摊子。 这一排都是小摊子，到这种地方来的，都是很平凡的小人物，谁都不认得他，他也不认得别人。 他喜欢这种情调，带着些萧索，带着些寂寞，却又带着几分洒脱。 世间的荣辱，生命的悲欢，在这些人心目中，都已算不了什么，只要有一杯在手，就已足够。 在这里，既没有得意的长笑，也没有慷慨的悲歌。</li>
<li>无论多聪明的人，心里若有些畏惧，也会变笨的。</li>
<li>若有人能看到女人心里复杂微妙的变化，一定就会觉得女人的决斗比世上所有男人的决斗都更精彩，更别致。 女人就是女人，永远和男人不同。 谁若想反驳这道理，谁就是呆子。 这道理既明白，又简单。 奇怪的是，世上偏偏有些人想不到。</li>
<li>他觉得你也和他是同样的人，所以才佩服你，欣赏你——一个人最欣赏的人，本就必定是和他自己同样的人，因为每个人都一定很欣赏自己。</li>
<li>亭，是八角亭，就在山脚下的树林外。 林已枯，八角亭栏杆上的红漆也已剥落。 西风肃杀，大地萧索。 李寻欢徘徊在林下，几乎将这里每一寸土地都踏过。 “后天，就是后天。” 夕阳已西，又是一天将过去。 后天，就在这里，就在这夕阳西下的时候，李寻欢和上官金虹之间所有的恩怨都将了结。</li>
<li>两个聪明才智相差很远的人，也许可以结成朋友，却绝不会成为敌人，所以只有上官金虹才有资格做李寻欢的仇敌，别的人简直不配。</li>
<li>你若是多加注意，就会发觉一个女人死的时候，身上最后僵硬的一个地方就是她的舌头。这只因女人舌头上的肌肉永远都比其他任何地方灵敏得多。</li>
<li>只有懦夫和呆子才会永远为“昨天”的事而流泪。 真正有勇气承认自己错误的人，也就会同样有勇气面对现实，绝不会将自己埋葬在眼泪里。</li>
<li>到现在，她才知道阿飞对她是多么重要。 因为她已失去了他。</li>
<li>李寻欢的神情很特别，“喜酒”这两个字，似乎令他有些不知所措，过了很久，他才缓缓道：“我什么酒都请人喝过，就是从未请人喝过喜酒，你可知道为了什么？” 阿飞当然不知道，李寻欢也不想要他回答。 李寻欢自己说了出来，道：“因为喜酒太贵了。” 阿飞怔了怔，道：“太贵？” 李寻欢笑了笑道：“因为一个男人若要请人喝喜酒，那就表示他一辈子都得慢慢地来付这笔账，只可惜我又偏偏不愿令朋友失望。”</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 书摘 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 古龙 </tag>
            
            <tag> 武侠 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Spring MVC 框架]]></title>
      <url>http://chuanqiang.github.io/2016/08/06/Spring%20Mvc%20%E6%A1%86%E6%9E%B6/</url>
      <content type="html"><![CDATA[<h3 id="1-Spring-web-mvc介绍"><a href="#1-Spring-web-mvc介绍" class="headerlink" title="1.Spring web mvc介绍"></a>1.Spring web mvc介绍</h3><p><code>Spring web mvc</code>和<code>Struts2</code>都属于表现层的框架,它是Spring框架的一部分,我们可以从Spring的整体结构中看得出来:</p>
<a id="more"></a>
<p><img src="/image/图片2.png" alt="image"></p>
<h3 id="2-Web-mvc"><a href="#2-Web-mvc" class="headerlink" title="2. Web mvc"></a>2. Web mvc</h3><ol>
<li><p>用户发起<code>request</code>请求至控制器(Controller)<br>控制接收用户请求的数据，委托给模型进行处理。</p>
</li>
<li><p>控制器通过模型(Model)处理数据并得到处理结果<br>模型通常是指业务逻辑。</p>
</li>
<li>控制器将模型数据在视图(View)中展示<br>web中模型无法将数据直接在视图上显示，需要通过控制器完成。如果在C/S应用中模型是可以将数据在视图中展示的。</li>
<li>控制器将视图response响应给用户<br>通过视图展示给用户要的数据或处理结果。</li>
</ol>
<p><img src="/image/图片3.png" alt="image"></p>
<h3 id="3-Spring-web-mvc-架构"><a href="#3-Spring-web-mvc-架构" class="headerlink" title="3.Spring web mvc 架构"></a>3.Spring web mvc 架构</h3><p><strong>架构图</strong></p>
<p><img src="/image/图片4.png" alt="image"></p>
<p><strong>流程</strong></p>
<ol>
<li>用户发送请求至前端控制器<code>DispatcherServlet</code>。</li>
<li><code>DispatcherServlet</code>收到请求调用<code>HandlerMapping</code>处理器映射器。</li>
<li>处理器映射器找到具体的处理器，生成处理器对象及处理器拦截器(如果有则生成)一并返回给<code>DispatcherServlet</code>。</li>
<li><code>DispatcherServle</code>t调用<code>HandlerAdapter</code>处理器适配器</li>
<li>`HandlerAdapter经过适配调用具体的处理器(Controller，也叫后端控制器)。</li>
<li><code>Controller</code>执行完成返回<code>ModelAndView</code></li>
<li><code>HandlerAdapter</code>将<code>controller</code>执行结果<code>ModelAndView</code>返回给<code>DispatcherServlet</code>.</li>
<li><code>DispatcherServlet</code>将<code>ModelAndView</code>传给<code>ViewReslover</code>视图解析器</li>
<li><code>ViewReslover</code>解析后返回具体View</li>
<li><code>DispatcherServlet</code>根据<code>View</code>进行渲染视图（即将模型数据填充至视图中）。</li>
<li><code>DispatcherServlet</code>响应用户</li>
</ol>
<p><strong>组件说明：</strong></p>
<p><strong>++以下组件通常使用框架提供实现：++</strong></p>
<p><strong><code>DispatcherServlet</code></strong>：作为前端控制器，整个流程控制的中心，控制其它组件执行，统一调度，降低组件之间的耦合性，提高每个组件的扩展性。</p>
<p><strong><code>HandlerMapping</code></strong>：通过扩展处理器映射器实现不同的映射方式，例如：配置文件方式，实现接口方式，注解方式等。</p>
<p><strong><code>HandlAdapter</code></strong>：通过扩展处理器适配器，支持更多类型的处理器。</p>
<p><strong><code>ViewResolver</code></strong>：通过扩展视图解析器，支持更多类型的视图解析，例如：jsp、freemarker、pdf、excel等。</p>
<p><strong>++下边两个组件通常情况下需要开发++：</strong></p>
<p><strong><code>Handler</code></strong>：处理器，即后端控制器用controller表示。</p>
<p><strong><code>View</code></strong>：视图，即展示给用户的界面，视图中通常需要标签语言展示模型数据。</p>
<h3 id="4-开发环境准备"><a href="#4-开发环境准备" class="headerlink" title="4.开发环境准备"></a>4.开发环境准备</h3><p>本教程使用Eclipse+tomcat7开发</p>
<p>详细参考“Eclipse开发环境配置-indigo.docx”文档</p>
<h3 id="5-第一个springmvc工程"><a href="#5-第一个springmvc工程" class="headerlink" title="5.第一个springmvc工程"></a>5.第一个springmvc工程</h3><h4 id="第一步-建立一个Web项目"><a href="#第一步-建立一个Web项目" class="headerlink" title="第一步:建立一个Web项目"></a>第一步:建立一个Web项目</h4><p>在eclipse下创建动态web工程springmvc_01。</p>
<h4 id="第二步-导入spring3-1-4的jar包"><a href="#第二步-导入spring3-1-4的jar包" class="headerlink" title="第二步:导入spring3.1.4的jar包"></a>第二步:导入spring3.1.4的jar包</h4><p><img src="/image/图片5.png" alt="image"></p>
<h4 id="第三步：前端控制器配置"><a href="#第三步：前端控制器配置" class="headerlink" title="第三步：前端控制器配置"></a>第三步：前端控制器配置</h4><p>在WEB-INF\web.xml中配置前端控制器，</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></div><div class="line">    </div><div class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc-servlet.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></div><div class="line">    // 表示servlet随服务启动</div><div class="line">    <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></div><div class="line">    // 以.action结尾的请求交给DispatcherServlet处理</div><div class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.action<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong><code>load-on-startup</code></strong>：表示servlet随服务启动；</p>
<p><strong><code>url-pattern</code></strong>：*.action的请交给DispatcherServlet处理。</p>
<p><strong><code>contextConfigLocation</code></strong>：指定springmvc配置的加载位置，如果不指定则默认加载WEB-INF/[DispatcherServlet 的Servlet 名字]-servlet.xml。</p>
<h4 id="第四步：springmvc配置文件"><a href="#第四步：springmvc配置文件" class="headerlink" title="第四步：springmvc配置文件"></a>第四步：springmvc配置文件</h4><p>Springmvc默认加载WEB-INF/[前端控制器的名字]-servlet.xml，也可以在前端控制器定义处指定加载的配置文件，如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc-servlet.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>如上代码，通过<strong><code>contextConfigLocation</code></strong>加载classpath下的<strong><code>springmvc-servlet.xml</code></strong>配置文件，配置文件名称可以不限定[前端控制器的名字]-servlet.xml。</p>
<h4 id="第五步：配置处理器映射器"><a href="#第五步：配置处理器映射器" class="headerlink" title="第五步：配置处理器映射器"></a>第五步：配置处理器映射器</h4><p>在springmvc-servlet.xml文件配置如下：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></div><div class="line"><span class="tag">	<span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></div><div class="line"><span class="tag">	<span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></div><div class="line"><span class="tag">	<span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span> <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></span></div><div class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans </span></span></div><div class="line"><span class="tag"><span class="string">		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd </span></span></div><div class="line"><span class="tag"><span class="string">		http://www.springframework.org/schema/mvc </span></span></div><div class="line"><span class="tag"><span class="string">		http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd </span></span></div><div class="line"><span class="tag"><span class="string">		http://www.springframework.org/schema/context </span></span></div><div class="line"><span class="tag"><span class="string">		http://www.springframework.org/schema/context/spring-context-3.1.xsd </span></span></div><div class="line"><span class="tag"><span class="string">		http://www.springframework.org/schema/aop </span></span></div><div class="line"><span class="tag"><span class="string">		http://www.springframework.org/schema/aop/spring-aop-3.1.xsd </span></span></div><div class="line"><span class="tag"><span class="string">		http://www.springframework.org/schema/tx </span></span></div><div class="line"><span class="tag"><span class="string">		http://www.springframework.org/schema/tx/spring-tx-3.1.xsd "</span>&gt;</span></div><div class="line"></div><div class="line">	<span class="comment">&lt;!-- 处理器映射器 --&gt;</span></div><div class="line">	<span class="comment">&lt;!-- 根据bean的name进行查找Handler 将action的url配置在bean的name中 --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"</span> /&gt;</span></div></pre></td></tr></table></figure>
<p><strong><code>BeanNameUrlHandlerMapping</code></strong>：表示将定义的Bean名字作为请求的url，需要将编写的controller在spring容器中进行配置，且指定bean的name为请求的url，且必须以.action结尾。</p>
<h4 id="第六步：配置处理器适配器"><a href="#第六步：配置处理器适配器" class="headerlink" title="第六步：配置处理器适配器"></a>第六步：配置处理器适配器</h4><p>在springmvc-servlet.xml文件配置如下：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"</span>/&gt;</span></div></pre></td></tr></table></figure>
<p><strong><code>SimpleControllerHandlerAdapter</code></strong>：即简单控制器处理适配器，所有实现了org.springframework.web.servlet.mvc.Controller 接口的Bean作为Springmvc的后端控制器。</p>
<h4 id="第七步：配置视图解析器"><a href="#第七步：配置视图解析器" class="headerlink" title="第七步：配置视图解析器"></a>第七步：配置视图解析器</h4><p>在springmvc-servlet.xml文件配置如下：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- ViewResolver --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"viewClass"</span> <span class="attr">value</span>=<span class="string">"org.springframework.web.servlet.view.JstlView"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/jsp/"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong><code>InternalResourceViewResolver</code></strong>：支持JSP视图解析.</p>
<p><strong><code>viewClass：JstlView</code></strong>表示JSP模板页面需要使用JSTL标签库，所以classpath必须包含jstl的相关jar包；</p>
<p><strong><code>prefix</code></strong> 和<strong><code>suffix</code></strong>：查找视图页面的前缀和后缀，最终视图的址为：前缀+逻辑视图名+后缀，逻辑视图名需要在controller中返回ModelAndView指定，比如逻辑视图名为hello，则最终返回的jsp视图地址“WEB-INF/jsp/hello.jsp”</p>
<h4 id="第八步：后端控制器开发"><a href="#第八步：后端控制器开发" class="headerlink" title="第八步：后端控制器开发"></a>第八步：后端控制器开发</h4><p>后端控制器即<code>controller</code>，也有称为<code>action</code>。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">importjavax.servlet.http.HttpServletRequest;</div><div class="line">importjavax.servlet.http.HttpServletResponse;</div><div class="line">importorg.springframework.web.servlet.ModelAndView;</div><div class="line">importorg.springframework.web.servlet.mvc.Controller;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorldController</span> <span class="keyword">implements</span> <span class="title">Controller</span> </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function">Public ModelAndView <span class="title">handleRequest</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        ModelAndView mv = <span class="keyword">new</span> ModelAndView();</div><div class="line">        <span class="comment">// 添加模型数据</span></div><div class="line">        mv.addObject(<span class="string">"message"</span>, <span class="string">"Hello World!"</span>);</div><div class="line">        <span class="comment">// 设置逻辑视图名,最终视图地址=前缀+逻辑视图名+后缀</span></div><div class="line">        mv.setViewName(<span class="string">"hello"</span>);</div><div class="line">        <span class="keyword">return</span> mv;</div><div class="line">      &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong><code>org.springframework.web.servlet.mvc.Controller</code></strong>：处理器必须实现Controller 接口。</p>
<p><strong><code>ModelAndView</code></strong>：包含了模型数据及逻辑视图名</p>
<h4 id="第九步：后端控制器配置"><a href="#第九步：后端控制器配置" class="headerlink" title="第九步：后端控制器配置"></a>第九步：后端控制器配置</h4><p>在springmvc-servlet.xml文件配置如下：</p>
<!--处理器-->
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;bean name=&quot;/hello.action&quot; class=&quot;springmvc.action.HelloWorldController&quot;/&gt;</div></pre></td></tr></table></figure>
<p><code>name=&quot;/hello.action&quot;</code> ：前边配置的BeanNameUrlHandlerMapping，表示如过请求的URL为“上下文/hello.action”，则将会交给该Bean进行处理。</p>
<h4 id="第十步：视图开发"><a href="#第十步：视图开发" class="headerlink" title="第十步：视图开发"></a>第十步：视图开发</h4><p>创建/WEB-INF/jsp/hello.jsp视图页面：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span></span></div><div class="line"><span class="tag">    <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span>%&gt;</span></div><div class="line"><span class="meta">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>第一个程序<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- 显示一行信息hello world!!!! --&gt;</span></div><div class="line">        $&#123;message&#125;</div><div class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong><code>${message}</code></strong>：表示显示由HelloWorldController处理器传过来的模型数据。</p>
<h4 id="第十一步：部署在tomcat测试"><a href="#第十一步：部署在tomcat测试" class="headerlink" title="第十一步：部署在tomcat测试"></a>第十一步：部署在tomcat测试</h4><p>通过请求：<a href="http://localhost:8080/springmvc_01/hello.action，如果页面输出“Hello" target="_blank" rel="external">http://localhost:8080/springmvc_01/hello.action，如果页面输出“Hello</a> World! ”就表明我们成功了。</p>
<p><strong>总结：</strong></p>
<p>主要进行如下操作：</p>
<ol>
<li>前端控制器DispatcherServlet配置<br>加载springmvc的配置文件</li>
<li>HandlerMapping配置</li>
<li>HandlerAdapter配置</li>
<li>ViewResolver配置<br>前缀和后缀</li>
<li>后端控制器编写</li>
<li>后端控制器配置</li>
<li>视图编写</li>
</ol>
<p>从上边的步骤可以看出，通常情况下我们只需要编写后端控制器和视图。</p>
<h3 id="6-HandlerMapping处理器映射器"><a href="#6-HandlerMapping处理器映射器" class="headerlink" title="6.HandlerMapping处理器映射器"></a>6.HandlerMapping处理器映射器</h3><p><strong>HandlerMapping</strong> 给前端控制器返回一个<strong>HandlerExecutionChain</strong> 对象（包含一个Handler (后端控制器)对象、多个HandlerInterceptor 拦截器）对象。</p>
<h4 id="BeanNameUrlHandlerMapping"><a href="#BeanNameUrlHandlerMapping" class="headerlink" title="BeanNameUrlHandlerMapping"></a>BeanNameUrlHandlerMapping</h4><p><strong>beanName Url映射器</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;!—beanName Url映射器 --&gt;</div><div class="line">&lt;bean class=&quot;org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping&quot;/&gt;</div></pre></td></tr></table></figure>
<p>将后端控制器的bean name作为请求的url。</p>
<h4 id="SimpleUrlHandlerMapping"><a href="#SimpleUrlHandlerMapping" class="headerlink" title="SimpleUrlHandlerMapping"></a>SimpleUrlHandlerMapping</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">!—简单url映射</span> <span class="attr">--</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"mappings"</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">props</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"/hello1.action"</span>&gt;</span>hello_controller<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></div><div class="line">				<span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"/hello2.action"</span>&gt;</span>hello_controller<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></div><div class="line">			<span class="tag">&lt;/<span class="name">props</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div></pre></td></tr></table></figure>
<p>可定义多个url映射至一个后端控制器，<strong>hello_controller为后端控制器bean的id</strong>。</p>
<h3 id="7-HandlerAdapter处理器适配器"><a href="#7-HandlerAdapter处理器适配器" class="headerlink" title="7.HandlerAdapter处理器适配器"></a>7.HandlerAdapter处理器适配器</h3><p>HandlerAdapter会把后端控制器包装为一个适配器，支持多种类型的控制器开发，这里使用了适配器设计模式。</p>
<h4 id="SimpleControllerHandlerAdapter"><a href="#SimpleControllerHandlerAdapter" class="headerlink" title="SimpleControllerHandlerAdapter"></a>SimpleControllerHandlerAdapter</h4><p>简单控制器处理器适配器.</p>
<p>所有实现了<code>org.springframework.web.servlet.mvc.Controller</code>接口的Bean作为Springmvc的后端控制器。</p>
<p>适配器配置如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;bean class=&quot;org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter&quot; /&gt;</div></pre></td></tr></table></figure>
<h4 id="HttpRequestHandlerAdapter"><a href="#HttpRequestHandlerAdapter" class="headerlink" title="HttpRequestHandlerAdapter"></a>HttpRequestHandlerAdapter</h4><p>HTTP请求处理器适配器.</p>
<p>HTTP请求处理器适配器将http请求封装成<code>HttpServletResquest</code>和<code>HttpServletResponse</code>对象，和<code>servlet</code>接口类似。</p>
<p>适配器配置如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;bean class=&quot;org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter&quot;/&gt;</div></pre></td></tr></table></figure>
<p>Controller实现如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorldController2</span> <span class="keyword">implements</span> <span class="title">HttpRequestHandler</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleRequest</span><span class="params">(HttpServletRequest request,HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</div><div class="line">		request.setAttribute(<span class="string">"message"</span>, <span class="string">"HelloWorld!"</span>);</div><div class="line">		request.getRequestDispatcher(<span class="string">"/WEB-INF/jsp/hello.jsp"</span>).forward(request, response);</div><div class="line">            <span class="comment">// 也可以自定义响应内容</span></div><div class="line">        	<span class="comment">//response.setCharacterEncoding("utf-8");</span></div><div class="line">	    	<span class="comment">//response.getWriter().write("HelloWorld!");</span></div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>从上边可以看出此适配器器的controller方法没有返回<code>ModelAndView</code>，可通过<code>response</code>修改定义响应内容。</p>
<h3 id="8-Controller控制器"><a href="#8-Controller控制器" class="headerlink" title="8.Controller控制器"></a>8.Controller控制器</h3><h4 id="AbstractCommandController-命令控制器"><a href="#AbstractCommandController-命令控制器" class="headerlink" title="AbstractCommandController(命令控制器)"></a>AbstractCommandController(命令控制器)</h4><p>该控制器能把请求参数封装到一个命令对象(模型对象)中。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyCommandController</span> <span class="keyword">extends</span> <span class="title">AbstractCommandController</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">	 * 通过构造函数设置命令对象</span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">MyCommandController</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">this</span>.setCommandClass(Student.class);</div><div class="line">		<span class="keyword">this</span>.setCommandName(<span class="string">"student"</span>);<span class="comment">//不是必须设置</span></div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function"><span class="keyword">protected</span> ModelAndView <span class="title">handle</span><span class="params">(HttpServletRequest request,</span></span></div><div class="line"><span class="function"><span class="params">			HttpServletResponse response, Object command, BindException errors)</span></span></div><div class="line"><span class="function">			<span class="keyword">throws</span> Exception </span>&#123;</div><div class="line"></div><div class="line">		Student student = (Student)command;</div><div class="line">		System.out.println(student);</div><div class="line">		Return <span class="keyword">null</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">	 * 字符串转换为日期属性编辑器</span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function">Protected <span class="keyword">void</span> <span class="title">initBinder</span><span class="params">(HttpServletRequest request,</span></span></div><div class="line"><span class="function"><span class="params">			ServletRequestDataBinder binder)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">		binder.registerCustomEditor(Date.class, <span class="keyword">new</span> CustomDateEditor(<span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd"</span>),<span class="keyword">true</span>));</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</div><div class="line">	</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span> </span>&#123;</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String name)</span> </span>&#123;</div><div class="line">		<span class="keyword">this</span>.name = name;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">private</span> String name;<span class="comment">//姓名</span></div><div class="line">	<span class="keyword">private</span> Integer age;<span class="comment">//年龄</span></div><div class="line">	<span class="keyword">private</span> Date birthday;<span class="comment">//生日</span></div><div class="line">	<span class="keyword">private</span> String address;<span class="comment">//地址</span></div><div class="line"></div><div class="line">….get/set方法省略</div></pre></td></tr></table></figure>
<p>Controller配置;</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"command_controller"</span> <span class="attr">name</span>=<span class="string">"/command.action"</span> <span class="attr">class</span>=<span class="string">"springmvc.action.MyCommandController"</span>/&gt;</span></div></pre></td></tr></table></figure>
<p>使用命令控制器完成查询列表及表单提交</p>
<p>代码略</p>
<h3 id="9-问题解决"><a href="#9-问题解决" class="headerlink" title="9.问题解决"></a>9.问题解决</h3><h4 id="日期格式化"><a href="#日期格式化" class="headerlink" title="日期格式化"></a>日期格式化</h4><p><strong>在controller注册属性编辑器</strong>：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment">	 * 注册属性编辑器(字符串转换为日期)</span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="meta">@InitBinder</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initBinder</span><span class="params">(HttpServletRequest request,ServletRequestDataBinder binder)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">		binder.registerCustomEditor(Date.class, <span class="keyword">new</span> CustomDateEditor(<span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd"</span>),<span class="keyword">true</span>));</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<p><strong>Post时中文乱码</strong><br>在<code>web.xml</code>中加入：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></div></pre></td></tr></table></figure>
<p>以上可以解决post请求乱码问题。</p>
<p><strong>对于get请求中文参数出现乱码解决方法有两个</strong>：</p>
<p>修改tomcat配置文件添加编码与工程编码一致，如下：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">URIEncoding</span>=<span class="string">"utf-8"</span> <span class="attr">connectionTimeout</span>=<span class="string">"20000"</span> <span class="attr">port</span>=<span class="string">"8080"</span> <span class="attr">protocol</span>=<span class="string">"HTTP/1.1"</span> <span class="attr">redirectPort</span>=<span class="string">"8443"</span>/&gt;</span></div></pre></td></tr></table></figure>
<p>另外一种方法对参数进行重新编码：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">String userName new String(request.getParamter("userName").getBytes("ISO8859-1"),"utf-8")</div></pre></td></tr></table></figure>
<p>ISO8859-1是tomcat默认编码，需要将tomcat编码后的内容按utf-8编码</p>
<h3 id="10-注解开发"><a href="#10-注解开发" class="headerlink" title="10.注解开发"></a>10.注解开发</h3><h4 id="第一个例子"><a href="#第一个例子" class="headerlink" title="第一个例子"></a>第一个例子</h4><p>创建工程的步骤同第一个springmvc工程，注解开发需要修改<code>handlermapper</code>和<code>handlMapperAdapter</code>，如下：</p>
<p>在<code>springmvc-servlet.xml</code>中配置：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--注解映射器 --&gt;</span>	</div><div class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"</span>/&gt;</span></div><div class="line">	<span class="comment">&lt;!--注解适配器 --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"</span>/&gt;</span></div></pre></td></tr></table></figure>
<p>注解映射器和注解适配器可以使用 <strong><code>&lt;mvc:annotation-driven /&gt;</code></strong> 代替。<br><strong><code>&lt;mvc:annotation-driven /&gt;</code></strong> 默认注册了注解映射器和注解适配器等bean。</p>
<h4 id="HelloWorldController编写："><a href="#HelloWorldController编写：" class="headerlink" title="HelloWorldController编写："></a>HelloWorldController编写：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Controller</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorldController</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="meta">@RequestMapping</span>(value=<span class="string">"/hello"</span>)</div><div class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">(Model model)</span><span class="keyword">throws</span> Exception</span>&#123;</div><div class="line">		model.addAttribute(<span class="string">"message"</span>, <span class="string">"HelloWorld!"</span>);</div><div class="line">		<span class="keyword">return</span><span class="string">"hello"</span>;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>注解描述</strong>：</p>
<p><strong><code>@Controller</code></strong>：用于标识是处理器类</p>
<p><strong><code>@RequestMapping</code></strong>：请求到处理器功能方法的映射规则</p>
<p><strong>Controller配置</strong></p>
<p>在springmvc-servlet.xml中配置定义的controller：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;!-- controller --&gt;</div><div class="line">&lt;bean class=&quot;springmvc.action.HelloWorldController&quot;/&gt;</div></pre></td></tr></table></figure>
<p><strong>组件扫描</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;context:component-scan base-package=&quot;springmvc.action&quot; /&gt;</div></pre></td></tr></table></figure>
<p>扫描 <strong><code>@component</code></strong> 、<strong><code>@controller</code></strong>、<strong><code>@service</code></strong>、<strong><code>@repository</code></strong> 的注解</p>
<p>注意：如果使用组件扫描则<code>controller</code>不需要在<code>springmvc-servlet.xml</code>中配置</p>
<h3 id="11-与struts2不同"><a href="#11-与struts2不同" class="headerlink" title="11.与struts2不同"></a>11.与struts2不同</h3><ol>
<li>springmvc的入口是一个servlet即前端控制器，而struts2入口是一个filter过虑器。</li>
<li>springmvc是基于方法开发，请求参数传递到方法的形参，可以设计为单例或多例(建议单例)，struts2是基于类开发，传递参数是通过类的属性，只能设计为多例。</li>
<li>Struts采用值栈存储请求和响应的数据，通过OGNL存取数据， springmvc通过参数解析器是将request请求内容解析，并给方法形参赋值，将数据和视图封装成ModelAndView对象，最后又将ModelAndView中的模型数据通过reques域传输到页面。Jsp视图解析器默认使用jstl。</li>
</ol>
<p><strong>注意：</strong></p>
<p>不要在action类中定义方法所用到的变量，变量要定义到方法体中。因为方法是在栈内存中，不会导致线程问题。</p>
<h3 id="12-Controller"><a href="#12-Controller" class="headerlink" title="12.@Controller"></a>12.@Controller</h3><p>标识该类为控制器类，<strong><code>@controller</code></strong>、<strong><code>@service</code></strong>、<strong><code>@repository</code></strong> 分别对应了web应用三层架构的组件即控制器、服务接口、数据访问接口。</p>
<h3 id="13-RequestMapping"><a href="#13-RequestMapping" class="headerlink" title="13.@RequestMapping"></a>13.@RequestMapping</h3><p><strong>URL路径映射</strong></p>
<blockquote>
<p><strong>@RequestMapping(value=”/user”)或@RequestMapping(“/user”)</strong></p>
</blockquote>
<h4 id="根路径-子路径"><a href="#根路径-子路径" class="headerlink" title="根路径+子路径"></a>根路径+子路径</h4><p><strong>根路径：</strong></p>
<p><strong><code>@RequestMapping</code></strong> 放在类名上边，如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">@Controller</div><div class="line">@RequestMapping(&quot;/user&quot;)</div></pre></td></tr></table></figure>
<p><strong>子路径：</strong></p>
<p><strong><code>@RequestMapping</code></strong> 放在方法名上边，如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">@RequestMapping(&quot;/useradd&quot;)</div><div class="line">public String useradd(….</div></pre></td></tr></table></figure>
<h4 id="URI-模板模式映射"><a href="#URI-模板模式映射" class="headerlink" title="URI 模板模式映射"></a>URI 模板模式映射</h4><blockquote>
<p><strong>@RequestMapping(value=”/useredit/{userId}”)：{×××}占位符，请求的URL可以是“/useredit/001”或“/useredit/abc”，通过在方法中使用@PathVariable 获取{×××}中的×××变量。</strong></p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/useredit/&#123;userid&#125;"</span>)</div><div class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">useredit</span><span class="params">(@PathVariable String userid,Model model)</span> <span class="keyword">throws</span> Exception</span>&#123;</div><div class="line">		<span class="comment">//方法中使用@PathVariable获取useried的值，使用model传回页面</span></div><div class="line">		model.addAttribute(<span class="string">"userid"</span>, userid);</div><div class="line">		<span class="keyword">return</span><span class="string">"/user/useredit"</span>;</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<p><strong>实现restFul,所有的url都是一个资源的链接，有利于搜索引擎对网址收录。</strong></p>
<h4 id="多个占位符："><a href="#多个占位符：" class="headerlink" title="多个占位符："></a>多个占位符：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/useredit/&#123;groupid&#125;/&#123;userid&#125;"</span>)</div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">useredit</span><span class="params">(@PathVariable String groupid,@PathVariable String userid,Model model)</span> <span class="keyword">throws</span> Exception</span>&#123;</div><div class="line">		<span class="comment">//方法中使用@PathVariable获取useried的值，使用model传回页面</span></div><div class="line">		model.addAttribute(<span class="string">"groupid"</span>, groupid);</div><div class="line">		model.addAttribute(<span class="string">"userid"</span>, userid);</div><div class="line">		<span class="keyword">return</span><span class="string">"/user/useredit"</span>;</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<p><strong>页面</strong>：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"$&#123;pageContext.request.contextPath&#125;/user/editStudent/$&#123;student.id&#125;/$&#123;student.groupId&#125;/$&#123;student.sex&#125;.action"</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="请求方法限定"><a href="#请求方法限定" class="headerlink" title="请求方法限定"></a>请求方法限定</h3><h4 id="限定GET方法"><a href="#限定GET方法" class="headerlink" title="限定GET方法"></a>限定GET方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RequestMapping</span>(method = RequestMethod.GET)</div></pre></td></tr></table></figure>
<p>如果通过Post访问则报错：</p>
<p>HTTP Status 405 - Request method ‘POST’ not supported</p>
<p><strong>例如</strong>：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RequestMapping</span>(value=<span class="string">"/useredit/&#123;userid&#125;"</span>,method=RequestMethod.GET)</div></pre></td></tr></table></figure>
<h4 id="限定POST方法"><a href="#限定POST方法" class="headerlink" title="限定POST方法"></a>限定POST方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RequestMapping</span>(method = RequestMethod.POST)</div></pre></td></tr></table></figure>
<p>如果通过Post访问则报错：</p>
<p>HTTP Status 405 - Request method ‘GET’ not supported</p>
<h4 id="GET和POST都可以"><a href="#GET和POST都可以" class="headerlink" title="GET和POST都可以"></a>GET和POST都可以</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RequestMapping</span>(method=&#123;RequestMethod.GET,RequestMethod.POST&#125;)</div></pre></td></tr></table></figure>
<h3 id="14-请求数据绑定（重点）"><a href="#14-请求数据绑定（重点）" class="headerlink" title="14.请求数据绑定（重点）"></a>14.请求数据绑定（重点）</h3><p>Controller方法通过形参接收页面传递的参数。</p>
<p>如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/userlist"</span>)</div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">userlist</span><span class="params">(</span></span></div><div class="line"><span class="function"><span class="params">HttpServletRequest request,</span></span></div><div class="line"><span class="function"><span class="params">			HttpServletResponse response,</span></span></div><div class="line"><span class="function"><span class="params">			HttpSession session,</span></span></div><div class="line"><span class="function"><span class="params">			Model model</span></span></div><div class="line"><span class="function"><span class="params">)</span></span></div></pre></td></tr></table></figure>
<p>默认支持的参数类型 </p>
<p><strong>HttpServletRequest</strong></p>
<p>通过request对象获取请求信息</p>
<p><strong>HttpServletResponse</strong></p>
<p>通过response处理响应信息</p>
<p><strong>HttpSession</strong></p>
<p>通过session对象得到session中存放的对象</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">session.setAttribute(<span class="string">"userinfo"</span>, student);</div><div class="line">session.invalidate(); <span class="comment">// 使session失效</span></div></pre></td></tr></table></figure>
<p><strong>Model</strong></p>
<p>通过model向页面传递数据，如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">model.addAttribute(<span class="string">"user"</span>, <span class="keyword">new</span> User(<span class="string">"李四"</span>));</div></pre></td></tr></table></figure>
<p>页面通过${user.XXXX}获取user对象的属性值。</p>
<p><strong>命令/表单对象</strong></p>
<p>自动将请求参数绑定到功能处理方法的命令/表单对象上。</p>
<p>Controller方法通过形参接收命令/表单对象。</p>
<h4 id="Java基本数据类型"><a href="#Java基本数据类型" class="headerlink" title="Java基本数据类型"></a>Java基本数据类型</h4><p><strong>布尔型：</strong></p>
<p>页面如下：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>用户状态：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">inputtype="radio"name="userstate"value="true"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">inputtype="radio"name="userstate"value="false"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div></pre></td></tr></table></figure>
<p>整型<br>例子略</p>
<p>单精度/双精度<br>例子略</p>
<p><strong>日期型需要添加属性编辑器:</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@InitBinder</span></div><div class="line">	<span class="function">Public <span class="keyword">void</span> <span class="title">initBinder</span><span class="params">(HttpServletRequest request,ServletRequestDataBinder binder)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">		binder.registerCustomEditor(Date.class, <span class="keyword">new</span> CustomDateEditor(<span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd"</span>),<span class="keyword">true</span>));</div></pre></td></tr></table></figure>
<p>例子略</p>
<p><strong>Pojo对象</strong></p>
<p><strong>页面上以pojo对象中属性名称命名：</strong></p>
<p>将pojo对象中的属性名于传递进来的属性名对应，如果传进来的参数名称和对象中的属性名称一致则将参数值设置在pojo对象中</p>
<p>页面定义如下;</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"age"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"birthday"</span>/&gt;</span></div></pre></td></tr></table></figure>
<p>Contrller方法定义如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">useraddsubmit</span><span class="params">(Model model,User user)</span><span class="keyword">throws</span> Exception</span>&#123;</div><div class="line">	System.out.println(user);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>页面上以pojo对象名点属性名命名：</strong></p>
<p>如果采用类似struts中对象.属性的方式命名，需要将pojo对象作为一个包装对象的属性，action中以该包装对象作为形参。</p>
<p>包装对象定义如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserVo</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> User user;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getUser</span><span class="params">()</span> </span>&#123;</div><div class="line">    	<span class="keyword">return</span> user;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function">Public <span class="keyword">void</span> <span class="title">setUser</span><span class="params">(User user)</span> </span>&#123;</div><div class="line">    	<span class="keyword">this</span>.user = user;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>页面定义：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"user.age"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"user.birthday"</span> /&gt;</span></div></pre></td></tr></table></figure>
<p>Controller方法定义如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">useraddsubmit</span><span class="params">(Model model,UserVo userVo)</span><span class="keyword">throws</span> Exception</span>&#123;</div><div class="line">    System.out.println(userVo.getUser());</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="字符串数组"><a href="#字符串数组" class="headerlink" title="字符串数组"></a>字符串数组</h4><p>使用情景：页面提交批量数据以数组接受</p>
<p>页面定义如下：</p>
<p>页面选中多个checkbox向controller方法传递</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">items</span>=<span class="string">"$&#123;studentList&#125;"</span> <span class="attr">var</span>=<span class="string">"student"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"deleteids"</span> <span class="attr">value</span>=<span class="string">"$&#123;student.id &#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;student.id&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;student.name&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div></pre></td></tr></table></figure>
<p>传递到controller方法中的格式是：001,002,003</p>
<p>Controller方法中可以用String[]接收，定义如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/deleteStudent"</span>)</div><div class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">deleteStudent</span><span class="params">(String[] deleteids)</span><span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">		<span class="keyword">return</span> <span class="string">"editStudentSubmit"</span>;</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<h4 id="List"><a href="#List" class="headerlink" title="List"></a>List</h4><p>List中存放对象，并将定义的List放在包装类中，action使用包装对象接收。</p>
<p>List中对象：</p>
<p>成绩对象</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentScore</span> </span>&#123;</div><div class="line">	<span class="keyword">private</span> String coursename;<span class="comment">//课程名称</span></div><div class="line">	<span class="keyword">private</span> Float score;<span class="comment">//成绩</span></div><div class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getCoursename</span><span class="params">()</span> </span>&#123;</div><div class="line">		returncoursename;</div><div class="line">	&#125;</div><div class="line">	<span class="function">Public <span class="keyword">void</span> <span class="title">setCoursename</span><span class="params">(String coursename)</span> </span>&#123;</div><div class="line">		<span class="keyword">this</span>.coursename = coursename;</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">public</span> Float <span class="title">getScore</span><span class="params">()</span> </span>&#123;</div><div class="line">		returnscore;</div><div class="line">	&#125;</div><div class="line">	<span class="function">Public <span class="keyword">void</span> <span class="title">setScore</span><span class="params">(Float score)</span> </span>&#123;</div><div class="line">		<span class="keyword">this</span>.score = score;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">Public <span class="class"><span class="keyword">class</span> <span class="title">UserVo</span> </span>&#123;</div><div class="line">Private List&lt;StudentScore&gt; scores;<span class="comment">//成绩</span></div><div class="line"></div><div class="line">  <span class="comment">//get/set方法..</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>包装类中定义List对象，并添加get/set方法如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> List&lt;StudentScore&gt; scores;<span class="comment">//成绩</span></div></pre></td></tr></table></figure>
<p>页面：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>课程成绩：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span></div><div class="line">        课程名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span><span class="attr">name</span>=<span class="string">"scores[0].coursename"</span>/&gt;</span>成绩：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span><span class="attr">name</span>=<span class="string">"scores[0].score"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></div><div class="line">        课程名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span><span class="attr">name</span>=<span class="string">"scores[1].coursename"</span>/&gt;</span>成绩：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span><span class="attr">name</span>=<span class="string">"scores[1].score"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></div><div class="line">        课程名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span><span class="attr">name</span>=<span class="string">"scores[2].coursename"</span>/&gt;</span>成绩：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span><span class="attr">name</span>=<span class="string">"scores[2].score"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div></pre></td></tr></table></figure>
<p>Contrller方法定义如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">useraddsubmit</span><span class="params">(Model model,UserVo userVo)</span><span class="keyword">throws</span> Exception</span>&#123;</div><div class="line">System.out.println(userVo.getScores ());</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h4><p>在包装类中定义Map对象，并添加get/set方法，action使用包装对象接收。</p>
<p>包装类中定义Map对象如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Public <span class="class"><span class="keyword">class</span> <span class="title">UserVo</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> Map&lt;String, Object&gt;studentinfo = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</div><div class="line">  <span class="comment">//get/set方法..</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>页面定义如下：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>学生信息：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span></div><div class="line">    姓名：<span class="tag">&lt;<span class="name">inputtype="text"name="studentinfo['name']"</span>/&gt;</span></div><div class="line">    年龄：<span class="tag">&lt;<span class="name">inputtype="text"name="studentinfo['age']"</span>/&gt;</span></div><div class="line">.. .. ..</div><div class="line"></div><div class="line"><span class="comment">&lt;!-- studentinfo是包装对象中的属性名</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">[]里边name是存储map中的key</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">action中将map定义在包装对象中，以包装对象接收数据。--!&gt;</span></div><div class="line"><span class="comment"></span></div><div class="line"><span class="comment">    &lt;/td&gt;</span></div><div class="line"><span class="comment">&lt;/tr&gt;</span></div></pre></td></tr></table></figure>
<p>Contrller方法定义如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">useraddsubmit</span><span class="params">(Model model,UserVo userVo)</span><span class="keyword">throws</span> Exception</span>&#123;</div><div class="line">    System.out.println(userVo.getStudentinfo());</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>注意：包含日期的要进行格式转换（放到action中</strong>）</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 使用注解进行日期格式数据转换</span></div><div class="line">	<span class="meta">@InitBinder</span></div><div class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initBinder</span><span class="params">(HttpServletRequest request, ServletRequestDataBinder binder)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">		<span class="comment">// 指定日期类型及日期数据的格式</span></div><div class="line">		<span class="comment">// 日期类型要和student类的birthday一致</span></div><div class="line">		binder.registerCustomEditor(Date.class, <span class="keyword">new</span> CustomDateEditor(<span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd"</span>), <span class="keyword">true</span>));</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<h4 id="RequestParam绑定单个请求参数"><a href="#RequestParam绑定单个请求参数" class="headerlink" title="@RequestParam绑定单个请求参数"></a>@RequestParam绑定单个请求参数</h4><p><strong><code>value</code></strong>：参数名字，即入参的请求参数名字，如value=“studentid”表示请求的参数区中的名字为studentid的参数的值将传入；</p>
<p><strong><code>required</code></strong>：是否必须，默认是true，表示请求中一定要有相应的参数，否则将报400错误码；<br><strong><code>defaultValue</code></strong>：默认值，表示如果请求中没有同名参数时的默认值</p>
<p>定义如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">userlist</span><span class="params">(@RequestParam(defaultValue=<span class="string">"2"</span>,value=<span class="string">"group"</span>,required=<span class="keyword">true</span>)</span> String groupid) </span>&#123;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>形参名称为<code>groupid</code>，但是这里使用<code>value=&quot;group&quot;</code>限定参数名为<code>group</code>，所以页面传递参数的名必须为<code>group</code>。</p>
<p>这里通过<code>required=true</code>限定groupid参数为必需传递，如果不传递则报400错误，由于使用了<code>defaultvalue=”2”</code>默认值即使不传group参数它的值为”2”，所以页面不传递group也不会报错，如果去掉<code>defaultvalue=”2”</code>且定义<code>required=true</code>则如果页面不传递<code>group</code>则会报错。</p>
<h4 id="PathVariable-绑定URI-模板变量值"><a href="#PathVariable-绑定URI-模板变量值" class="headerlink" title="@PathVariable 绑定URI 模板变量值"></a>@PathVariable 绑定URI 模板变量值</h4><p>@PathVariable用于将请求URL中的模板变量映射到功能处理方法的参数上</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RequestMapping</span>(value=<span class="string">"/useredit/&#123;groupid&#125;/&#123;userid&#125;"</span>,method=&#123;RequestMethod.GET,RequestMethod.POST&#125;)</div><div class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">useredit</span><span class="params">(@PathVariable String groupid,@PathVariable String userid,Model model)</span> <span class="keyword">throws</span> Exception</span>&#123;</div><div class="line">		<span class="comment">//方法中使用@PathVariable获取useried的值，使用model传回页面</span></div><div class="line">		model.addAttribute(<span class="string">"groupid"</span>, groupid);</div><div class="line">		model.addAttribute(<span class="string">"userid"</span>, userid);</div><div class="line">		<span class="keyword">return</span><span class="string">"/user/useredit"</span>;</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<p>如请求的URL 为“控制器URL/useredit/1/admin.action”，则自动将URL中模板变量<code>{groupid}和{userid}</code>绑定到<code>@PathVariable</code>注解的同名参数上，即入参后<code>groupid=“1”</code>、<code>userid=“admin”</code></p>
<h4 id="结果转发"><a href="#结果转发" class="headerlink" title="结果转发"></a>结果转发</h4><p><strong>Redirect</strong><br>Contrller方法返回结果重定向到一个url地址，如果方式：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">return</span> <span class="string">"redirect:/user/userlist.action"</span>;</div></pre></td></tr></table></figure>
<p><code>redirect</code>方式相当于<code>“response.sendRedirect()”</code>，转发后浏览器的地址栏变为转发后的地址，因为转发即执行了一个新的<code>request</code>和<code>response</code>。<br>由于新发起一个<code>request</code>原来的参数在转发时就不能传递到下一个url，如果要传参数可以<code>/user/userlist.action</code>后边加参数，如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/user/userlist.action?groupid=<span class="number">2</span>&amp;…..</div></pre></td></tr></table></figure>
<p><strong>forward</strong></p>
<p>controller方法执行后继续执行另一个controller方法。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">return</span> <span class="string">"forward:/user/userlist.action"</span>;</div></pre></td></tr></table></figure>
<p><strong><code>forward</code></strong> 方式相当于<code>“request.getRequestDispatcher().forward(request,response)”</code>，转发后浏览器地址栏还是原来的地址。转发并没有执行新的request和response，而是和转发前的请求共用一个request和response。所以转发前请求的参数在转发后仍然可以读取到。</p>
<p>如下例子：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/c"</span>)</div><div class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">c</span><span class="params">(String groupid,UserVo userVo)</span><span class="keyword">throws</span> Exception</span>&#123;</div><div class="line">		</div><div class="line">		System.out.println(<span class="string">"...c...."</span>+groupid+<span class="string">"...user..."</span>+userVo.getUser());</div><div class="line">		<span class="keyword">return</span> <span class="string">"forward:/to/d.action"</span>;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="meta">@RequestMapping</span>(<span class="string">"/d"</span>)</div><div class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">d</span><span class="params">(String groupid,UserVo userVo)</span><span class="keyword">throws</span> Exception</span>&#123;</div><div class="line">		</div><div class="line">		System.out.println(<span class="string">"...d...."</span>+groupid+<span class="string">"...user..."</span>+userVo.getUser());</div><div class="line">		<span class="keyword">return</span> <span class="string">"success"</span>;</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<h4 id="RequestBody-ResponseBody实现json数据交互"><a href="#RequestBody-ResponseBody实现json数据交互" class="headerlink" title="@RequestBody @ResponseBody实现json数据交互"></a>@RequestBody @ResponseBody实现json数据交互</h4><p><strong>@RequestBody</strong></p>
<p>作用：</p>
<p><strong><code>@RequestBody</code></strong>注解用于读取http请求的内容(字符串)，通过<code>springmvc</code>提供的<code>HttpMessageConverter</code>接口将读到的内容转换为<code>json</code>、<code>xml</code>等格式的数据并绑定到<code>controller</code>方法的参数上。</p>
<p>本例子应用：</p>
<p><code>@RequestBody</code>注解实现接收<code>http</code>请求的<code>json</code>数据，将<code>jso</code>n数据转换为java对象.</p>
<p><strong>@ResponseBody</strong></p>
<p>作用：</p>
<p>该注解用于将<code>Controller</code>的方法返回的对象，通过<code>HttpMessageConverter</code>接口转换为指定格式的数据如：json,xml等，通过<code>Response</code>响应给客户端</p>
<p>本例子应用：</p>
<p><code>@ResponseBody</code>注解实现将<code>controller</code>方法返回对象转换为<code>json</code>响应给客户端</p>
<p><strong>请求json，响应json实现：</strong></p>
<p>页面上请求的是一个json串，页面上实现时需要拼接一个json串提交到action。</p>
<p>Action将请求的json串转为java对象。SpringMVC利用@ResquesBody注解实现.</p>
<p>Action将java对象转为json，输出到页面。SpringMVC利用@ResponseBody注解实现.</p>
<p><strong>环境准备</strong></p>
<p><code>Springmvc</code>默认用<code>MappingJacksonHttpMessageConverter</code>对<code>json</code>数据进行转换，需要加入<code>jackson</code>的包，如下：</p>
<p><strong>配置：</strong></p>
<p>在注解适配器中加入<strong><code>messageConverters</code></strong></p>
<!--注解适配器 -->
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"messageConverters"</span>&gt;</span></div><div class="line">	    <span class="tag">&lt;<span class="name">list</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line">	    <span class="tag">&lt;/<span class="name">list</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div></pre></td></tr></table></figure>
<p><strong>controller编写</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment">	 * 请求json单个对象，返回json单个对象</span></div><div class="line"><span class="comment">	 * <span class="doctag">@param</span> user</span></div><div class="line"><span class="comment">	 * <span class="doctag">@return</span></span></div><div class="line"><span class="comment">	 * <span class="doctag">@throws</span> Exception</span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="meta">@RequestMapping</span>(<span class="string">"/requestjson"</span>)</div><div class="line">    <span class="comment">//@RequestBody接收json串自动转为user对象，@ResponseBody将user转为json数据响应给客户端</span></div><div class="line">	Public <span class="meta">@ResponseBody</span> <span class="function">User <span class="title">requestjson</span><span class="params">(@RequestBody User user)</span><span class="keyword">throws</span> Exception</span>&#123;</div><div class="line">		System.out.println(user);</div><div class="line">		<span class="keyword">return</span> user;</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
<p><strong>页面js方法编写：</strong></p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">request_json</span>(<span class="params"></span>)</span>&#123;</div><div class="line">		 <span class="comment">//将json对象传成字符串</span></div><div class="line">	<span class="keyword">var</span> user = <span class="built_in">JSON</span>.stringify(&#123;<span class="attr">name</span>: <span class="string">"张三"</span>, <span class="attr">age</span>: <span class="number">3</span>&#125;);</div><div class="line">	alert(user);</div><div class="line">	  $.ajax(</div><div class="line">		&#123;</div><div class="line">			type:<span class="string">'post'</span>,</div><div class="line">			url:<span class="string">'$&#123;pageContext.request.contextPath&#125;/requestjson.action'</span>,</div><div class="line">			contentType:<span class="string">'application/json;charset=utf-8'</span>,<span class="comment">//请求内容为json</span></div><div class="line">			data:user,</div><div class="line">			success: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</div><div class="line">				alert(data.name);</div><div class="line">			&#125;</div><div class="line">		&#125;	</div><div class="line">	)</div><div class="line">  &#125;</div></pre></td></tr></table></figure>
<p>测试结果：</p>
<p><img src="/image/图片7.png" alt="image"></p>
<p>从上图可以看出请求的数据是json格式</p>
<p><img src="/image/图片8.png" alt="image"></p>
<p>从上图可以看出响应的数据也是json格式，json数据的内容是从User对象转换得来。</p>
<p><strong>Form提交，响应json实现</strong>：</p>
<p>采用form提交是最常用的作法，通常有post和get两种方法，响应json数据是为了方便客户端处理，实现如下：</p>
<p><strong>环境准备</strong></p>
<p>同第一个例子</p>
<p><strong>controller编写</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">**<span class="comment">/**</span></div><div class="line"><span class="comment">	 * 客户端提交表单，服务端返回json</span></div><div class="line"><span class="comment">	 * @param user</span></div><div class="line"><span class="comment">	 * @return</span></div><div class="line"><span class="comment">	 * @throws Exception</span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	@RequestMapping(<span class="string">"/formsubmit"</span>)</div><div class="line">	Public @ResponseBody User formsubmit(User user)throws Exception&#123;</div><div class="line">		System.out.println(user);</div><div class="line">		<span class="keyword">return</span> user;</div><div class="line">	&#125;**</div></pre></td></tr></table></figure></p>
<p><strong>页面js方法编写：</strong><br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">formsubmit</span>(<span class="params"></span>)</span>&#123;</div><div class="line">	<span class="keyword">var</span> user = <span class="string">"name=张三&amp;age=3"</span>;</div><div class="line">	alert(user);</div><div class="line">	  $.ajax(</div><div class="line">		&#123;</div><div class="line">			type:<span class="string">'post'</span>,<span class="comment">//这里改为get也可以正常执行</span></div><div class="line">			url:<span class="string">'$&#123;pageContext.request.contextPath&#125;/formsubmit.action'</span>,</div><div class="line">            <span class="comment">//ContentType没指定将默认为：application/x-www-form-urlencoded</span></div><div class="line">			data:user,</div><div class="line">			success:<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</div><div class="line">			alert(data.name);</div><div class="line">		&#125;</div><div class="line">			</div><div class="line">		&#125;	</div><div class="line">	)</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>从上边的js代码看出，已去掉ContentType的定义，ContentType默认为：application/x-www-form-urlencoded格式。</p>
<p><strong>测试结果：</strong></p>
<p><img src="/image/图片9.png" alt="image"></p>
<p>从上图可以看出请求的数据是标准的key/value格式。</p>
<p><img src="/image/图片10.png" alt="image"></p>
<p>从上图可以看出响应的数据也是json格式，json数据的内容是从User对象转换得来。</p>
<p><strong><mvc:annotation-driven>配置：</mvc:annotation-driven></strong></p>
<p>注解映射器和注解适配器可以使用 <strong><code>&lt;mvc:annotation-driven /&gt;</code></strong> 代替。</p>
<p><strong><code>&lt;mvc:annotation-driven /&gt;</code></strong> 默认注册了注解映射器和注解适配器等bean。</p>
<p>如下：</p>
<p>以下配置可用 <strong><code>&lt;mvc:annotation-driven /&gt;</code></strong> 代替：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--注解映射器 --&gt;</span>	</div><div class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"</span>/&gt;</span></div><div class="line">	<span class="comment">&lt;!--注解适配器 --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"messageConverters"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">list</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">list</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="15-拦截器"><a href="#15-拦截器" class="headerlink" title="15.拦截器"></a>15.拦截器</h3><h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><p>Spring Web MVC 的处理器拦截器类似于Servlet 开发中的过滤器Filter，用于对处理器进行预处理和后处理。<br>SpringMVC拦截器是针对mapping配置的拦截器</p>
<h4 id="拦截器定义"><a href="#拦截器定义" class="headerlink" title="拦截器定义"></a>拦截器定义</h4><p>实现<code>HandlerInterceptor</code>接口，如下：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HandlerInterceptor1</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span></span>&#123;</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">	 * controller执行前调用此方法</span></div><div class="line"><span class="comment">	 * 返回true表示继续执行，返回false中止执行</span></div><div class="line"><span class="comment">	 * 这里可以加入登录校验、权限拦截等</span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function">Public <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request,</span></span></div><div class="line"><span class="function"><span class="params">			HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">		Return <span class="keyword">false</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">	 * controller执行后但未返回视图前调用此方法</span></div><div class="line"><span class="comment">	 * 这里可在返回用户前对模型数据进行加工处理，比如这里加入公用信息以便页面显示</span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function">Public <span class="keyword">void</span> <span class="title">postHandle</span><span class="params">(HttpServletRequest request,</span></span></div><div class="line"><span class="function"><span class="params">			HttpServletResponse response, Object handler,</span></span></div><div class="line"><span class="function"><span class="params">			ModelAndView modelAndView)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">	&#125;</div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">	 * controller执行后且视图返回后调用此方法</span></div><div class="line"><span class="comment">	 * 这里可得到执行controller时的异常信息</span></div><div class="line"><span class="comment">	 * 这里可记录操作日志，资源清理等</span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function">Public <span class="keyword">void</span> <span class="title">afterCompletion</span><span class="params">(HttpServletRequest request,</span></span></div><div class="line"><span class="function"><span class="params">			HttpServletResponse response, Object handler, Exception ex)</span></span></div><div class="line"><span class="function">			<span class="keyword">throws</span> Exception </span>&#123;		</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="拦截器配置"><a href="#拦截器配置" class="headerlink" title="拦截器配置"></a>拦截器配置</h4><p><strong>针对某种mapping配置拦截器</strong></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">bean</span></span></div><div class="line"><span class="tag">	<span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"interceptors"</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">list</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"handlerInterceptor1"</span>/&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"handlerInterceptor2"</span>/&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">list</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"handlerInterceptor1"</span> <span class="attr">class</span>=<span class="string">"springmvc.intercapter.HandlerInterceptor1"</span>/&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"handlerInterceptor2"</span> <span class="attr">class</span>=<span class="string">"springmvc.intercapter.HandlerInterceptor2"</span>/&gt;</span></div></pre></td></tr></table></figure>
<p><strong>针对所有mapping配置全局拦截器</strong></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--拦截器 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">mvc:interceptors</span>&gt;</span></div><div class="line">	<span class="comment">&lt;!--多个拦截器,顺序执行 --&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">mvc:interceptor</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">"/**"</span>/&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"cn.itcast.springmvc.filter.HandlerInterceptor1"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">mvc:interceptor</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">mvc:interceptor</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">"/**"</span>/&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"cn.itcast.springmvc.filter.HandlerInterceptor2"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">mvc:interceptor</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">mvc:interceptors</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="正常流程测试"><a href="#正常流程测试" class="headerlink" title="正常流程测试"></a>正常流程测试</h4><p><strong>代码：</strong></p>
<p>定义两个拦截器分别为：<code>HandlerInterceptor1和HandlerInteptor2</code>，每个拦截器的<code>preHandler</code>方法都返回<code>true</code>。</p>
<p><img src="/image/图片11.png" alt="image"></p>
<p>运行流程</p>
<blockquote>
<p>HandlerInterceptor1..preHandle..</p>
<p>HandlerInterceptor2..preHandle..</p>
<p>HandlerInterceptor2..postHandle..</p>
<p>HandlerInterceptor1..postHandle..</p>
<p>HandlerInterceptor2..afterCompletion..</p>
<p>HandlerInterceptor1..afterCompletion..</p>
</blockquote>
<h4 id="中断流程测试"><a href="#中断流程测试" class="headerlink" title="中断流程测试"></a>中断流程测试</h4><p><strong>代码：</strong><br>定义两个拦截器分别为：<code>HandlerInterceptor1</code>和<code>HandlerInteptor2</code>。</p>
<p>运行流程</p>
<p> <code>HandlerInterceptor1</code>的<code>preHandler</code>方法返回<code>false</code>,<code>HandlerInterceptor2</code>返回<code>true</code>，运行流程如下：</p>
<blockquote>
<p>HandlerInterceptor1..preHandle..</p>
</blockquote>
<p>从日志看出第一个拦截器的preHandler方法返回<code>false</code>后第一个拦截器只执行了preHandler方法，其它两个方法没有执行，第二个拦截器的所有方法不执行，且controller也不执行了。</p>
<p><code>HandlerInterceptor1</code>的<code>preHandler</code>方法返回<code>true</code>，<code>HandlerInterceptor2</code>返回<code>false</code>，运行流程如下：</p>
<blockquote>
<p>HandlerInterceptor1..preHandle..</p>
<p>HandlerInterceptor2..preHandle..</p>
<p>HandlerInterceptor1..afterCompletion..</p>
</blockquote>
<p>从日志看出第二个拦截器的<code>preHandler</code>方法返回<code>false</code>后第一个拦截器的<code>ostHandler</code>没有执行，第二个拦截器的<code>postHandler</code>和<code>afterCompletion</code>没有执行，且<code>controller</code>也不执行了。</p>
<p>总结：</p>
<blockquote>
<p><code>preHandle</code>按拦截器定义顺序调用</p>
<p><code>postHandler</code>按拦截器定义逆序调用</p>
<p><code>afterCompletion</code>按拦截器定义逆序调用</p>
<p><code>postHandler</code>在拦截器链内所有拦截器返成功调用<br><code>afterCompletion</code>只有<code>preHandle</code>返回<code>true</code>才调用</p>
</blockquote>
<h4 id="拦截器应用"><a href="#拦截器应用" class="headerlink" title="拦截器应用"></a>拦截器应用</h4><p><strong>用户身份认证</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginInterceptor</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span></span>&#123;</div><div class="line"></div><div class="line">	<span class="meta">@Override</span></div><div class="line">	<span class="function">Public <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request,</span></span></div><div class="line"><span class="function"><span class="params">			HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line"></div><div class="line">		<span class="comment">//如果是登录页面则放行</span></div><div class="line">		<span class="keyword">if</span>(request.getRequestURI().indexOf(<span class="string">"login.action"</span>)&gt;=<span class="number">0</span>)&#123;</div><div class="line">			<span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">		&#125;</div><div class="line">		HttpSession session = request.getSession();</div><div class="line">		<span class="comment">//如果用户已登录也放行</span></div><div class="line">		<span class="keyword">if</span>(session.getAttribute(<span class="string">"user"</span>)!=<span class="keyword">null</span>)&#123;</div><div class="line">			<span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="comment">//用户没有登录挑战到登录页面</span></div><div class="line">		request.getRequestDispatcher(<span class="string">"/WEB-INF/jsp/login.jsp"</span>).forward(request, response);</div><div class="line">		</div><div class="line">		<span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Spring MVC </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 技术 </tag>
            
            <tag> Spring MVC </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[最好金龟换酒]]></title>
      <url>http://chuanqiang.github.io/2016/08/06/%E6%9C%80%E5%A5%BD%E9%87%91%E9%BE%9F%E6%8D%A2%E9%85%92/</url>
      <content type="html"><![CDATA[<p>当人生逐渐沦为依靠惯性运转的机器时，他们选择了再给自己一次机会重新爱上生活。</p>
<hr>
<a id="more"></a>
<p><img src="/image/jinguihuanjiu.png" alt=""></p>
<p>生活有时候像一座牢笼，把我们困在一个狭小的范围内，从家到公司的距离经常是我们每天出行距离的端点。生活满是纷纷扰扰的琐碎，我们已经很少抬头眺望一下远方的景色了。</p>
<p>一直有一个旅行的梦想，想看看外面的世界。以前总抱怨没钱，现在抱怨的是没时间，其实说到底，是自己没有说走就走的决心和勇气。</p>
<p>《最好金龟换酒》是傅真和丈夫铭基辞掉工作用一年时间进行旅行，从英国飞往墨西哥，由北至南游历了拉丁美洲数十个国家所写的游记。作者惊觉迷失在世俗标准与别人世界里，于是开始了某种旅途之中的找寻，希望可以从大山大水之间，从拉丁美洲的文化智慧里，找到重新面对生活的勇气和信念。正如作者所说：</p>
<blockquote>
<p>对物质的信仰超过了诗歌，做梦是不切实际的表现；活着的纯粹的快乐早已消失不见，取而代之的是组装宜家家具的快乐，拥有名牌包的快乐，在五星级酒店的泳池边喝鸡尾酒的快乐……不，我可不想让一个公司或一群人的价值观变成我的价值观，我也无法为大房子、职业生涯和退休金而兴奋。我真正想要的，是一串火花，一次远行，一场思考。</p>
</blockquote>
<p>出发前她对生活有诸多不满，回来后心中更多的是谦卑和感恩。她终于真正从心底里意识到自己是何等幸运——曾经拥有那份并不喜欢的工作是种幸运，抛下它周游列国也是一种幸运，能够得到父母的理解是一种幸运，漫长旅途上有爱人相伴更是幸运。旅行教会了他们感恩和珍惜。</p>
<p>南美洲各个国家的制度、文化、经济、风俗都和我们认识的那个世界大相径庭，也和我们从互联网和书本上看到了南美洲相去甚远。在这里，作者看到了鬼斧神工的自然美景，也看到了文明的野蛮和人民的穷苦；看到了“朱门酒肉臭”的无奈，也看到了生命的纯真美好。</p>
<blockquote>
<p>活在这个奇迹年代，愿人人都能拥有不为他人所愚弄的智慧，愿我们不因周遭的扭曲而失去理智和善意，更愿我们身在阴沟仍能看到天上的星星。</p>
</blockquote>
<p>游记的价值不单只是讲述沿途风景多么迷人，而是认识和思考经历的世界，获得自身对生活和生命的感悟。从这一点上来说，《最好金龟换酒》是一个值得一看的游记。</p>
<p>有点讽刺的是，这本游记是我用kindle在上下班拥挤嘈杂的地铁上看完的。我们向往另一个世界，所以只能在一尺见方的屏幕上偷偷窥探。</p>
<p>有梦总能实现。就像世界就在那里，总要去走走的。</p>
<blockquote>
<p>生活不止眼前的苟且<br>还有诗和远方的田野<br>我赤手空拳来到人世间<br>为找到那片海不顾一切</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 书评 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 游记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[七月末的周末]]></title>
      <url>http://chuanqiang.github.io/2016/07/31/%E4%B8%83%E6%9C%88%E6%9C%AB%E7%9A%84%E5%91%A8%E6%9C%AB/</url>
      <content type="html"><![CDATA[<p>周末了，好开心。</p>
<p>一周七天，最美妙的貌似就是周五的晚上，最痛苦的莫过于周天晚上。最幸福和最难过的时候并不是已拥有和已失去，而是即将拥有和即将失去的时刻。就像令你兴奋的不是享用你买的东西，而是当快递小哥敲门的那一霎那。</p>
<p>周五回来的地铁上都少了些熙熙攘攘，多了些欢声笑语，每个人都暂时抛弃了工作的压力，计划着周末如何消遣两天的自由时光。</p>
<a id="more"></a>
<p>看电影、看书、睡懒觉、溜达。不出意外，这应该是我周末的安排。但生活的可爱之处就是常常带来意外。有两个大学同学来北京发展，这两天刚安顿下来。打电话让我去一块小聚的时候，我脸上满是惊讶的表情，上次聊天的时候还在济南，动作真快。</p>
<p>每个人脸上依旧是大学时候的稚嫩，胖的还是那么胖，黑的还是那么黑。出去买了肉菜啤酒，几个大老爷们硬是整出了一桌子菜，并且味道还不错。看吧，生活所迫，于是也能下得厨房。</p>
<p>相聚不易，废话少说，干！</p>
<blockquote>
<p>让我们干了这杯酒<br>好男儿胸怀象大海<br>经历了人生百态世间的冷暖<br>这笑容温暖纯真</p>
</blockquote>
<p>异地他乡，同窗更显珍贵，聊起来自然倍加亲切，谈天谈地，谈人生理想。平时在公司，同事们谈的都是房子和孩子。。。聊到北京，同学说没想象的那么繁华，没有上海那种大都市的国际范。北京人多、路堵、房价高。人们为什么还一股脑的都涌向北京呢。有人说是机会多，成长快。有人说是长见识，增加历练。但我觉得北京应该还有自己不一样的地方，就像冯唐在《万物生长》里说的：</p>
<blockquote>
<p>一把茶壶，茶叶在茶壶里泡过一段时间，即使茶水被喝光了，即使茶叶被倒出来了，茶气还是在的。北京是个大茶壶。太多性情中人象茶叶似的在北京泡过，即使性情被耗没了，即使人可能也死掉了，但是人气还在，仿佛茶气。</p>
</blockquote>
<p>另外，北京还有一点不一样的地方，包容和自由。就比如你坐地铁，你会看到形形色色的人，奇装异服的、头发染得五颜六色的。。。可是，人们也就是多看一眼，不会像小地方或者乡下人像看珍稀动物似的那样。在北京，任何特立独行都已经司空见惯，不会招致人们异样的眼光。</p>
<p>总之，每个人来北京，都是怀着对未来美好的期许的，你可能扎根北京，也可能只是匆匆过客。北京在不同的人心中是不同的风景，但这一刻，我们在这里存在着。</p>
<blockquote>
<p>曾梦想仗剑走天涯<br>看一看世界的繁华<br>年少的心总有些轻狂<br>如今你四海为家</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 独白 </tag>
            
            <tag> 心情 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[最好金龟换酒-书摘]]></title>
      <url>http://chuanqiang.github.io/2016/07/29/%E6%9C%80%E5%A5%BD%E9%87%91%E8%B4%B5%E6%8D%A2%E9%85%92-%E4%B9%A6%E6%91%98/</url>
      <content type="html"><![CDATA[<ol>
<li>一年又一年，时间就这样从键盘间溜走。回首时觉得时光飞逝，可是落实到每一天又好似度日如年——每天都望眼欲穿地盼望着周末，盼望着假期，而这一姿态本身又让我觉得心酸而惶惑，仿佛是在盼望着时间的飞速流逝，盼望着自己的生命早日终结。</li>
</ol>
<a id="more"></a>
<ol>
<li><p>在绝大部分的博客文字中，我像是有洁癖似的强迫自己保持积极阳光，或是所谓的“正能量”，只要一生出负面情绪就用包括黑色幽默在内的各种手段将它淡化。</p>
</li>
<li><p>一个人其实总是与围绕着他的事物相伴相生。随着时光的流逝与空间的转换，我们把这些事物连同一部分的自己都遗忘在世界的某个角落。然而有那么一天，当我们偶然又看见了这些东西，现实的巨大力量如一道闪电般照亮了前尘往事，曾经的我们也随之复活——是的，大昭寺的屋顶宛如一部时光机，我便是在那里清清楚楚地看到了当年的那个自己</p>
</li>
<li><p>我的周围是一个已经失去了目的和意义的社会，再远的未来也远不过下一年度的资产负债表。它是一个非自然的社会，在这里长大的孩子永远不会爬树，也无法识别天上的星星；对物质的信仰超过了诗歌，做梦是不切实际的表现；活着的纯粹的快乐早已消失不见，取而代之的是组装宜家家具的快乐，拥有名牌包的快乐，在五星级酒店的泳池边喝鸡尾酒的快乐……不，我可不想让一个公司或一群人的价值观变成我的价值观，我也无法为大房子、职业生涯和退休金而兴奋。我真正想要的，是一串火花，一次远行，一场思考。</p>
</li>
<li><p>我们辞掉工作，退掉房子，决绝地斩断过去的生活。 今后的日子充满未知，四海为家，前程未定， 正像是被抛入一个时间的荒原中， 回不到过去，也看不见未来。 可我又是如此享受这种感觉， 为着它所带来的珍贵的自由和可能性。</p>
</li>
<li><p>大家都笑了起来。果真如此。身处这样一个疯狂、戏剧化、高速运转的世界，以至于我们更热衷于谈论热点新闻，而不是自己的生活；我们更爱好成功和传奇，没有兴趣去了解普通人的愿望和心意；我们忙着追逐最新的资讯，根本没有时间去找回被剥夺的记忆。</p>
</li>
<li><p>有时我真希望我们还有冯玉祥将军那样爱树如命的人物——“老冯驻徐州，大树绿油油。谁砍我的树，我砍谁的头！</p>
</li>
<li><p>有时我们选择改变，并非经过深思熟虑，而更像是听见了天地间冥冥中的呼唤，呼唤你前往另一个地方，过上另一种生活。你也许会发现，山那边的世界并没有吃人的野兽，反而开满了在你的家乡随处可见的凤凰花；那里的人们以玉米为主食，可是每一道菜肴都少不了你最熟悉的青柠檬；你在那里遇见了一个人，他的肤色面貌与你完全不同，可是你们却有着惊人的默契和相通的灵魂……你并不一定会从此拥有更美好的人生，可你仍然感谢天地和人世所带来的这些变化和发生</p>
</li>
<li><p>这让我想起哲学家罗素的观点。他说很遗憾人们非常容易拥有两种紧密相连的情绪——恐惧和厌恶。我们很容易厌恶我们所恐惧的事物，也常常恐惧我们所厌恶的事物。在原始人群中，人们通常会既恐惧又厌恶任何他不熟悉的事物。而“在对待其他外族的问题上，这种原始的机制仍然控制着现代人的本能反应。那些完全没外出旅行过的人会视所有外族为野蛮人。但是那些去外面旅行过的，或是学习过国际政治的人，会发现要使自己的民族强盛，在某种程度上，必须与其他民族联合。</p>
</li>
<li><p>和Carlos聊天的时候，我觉得世界是平的。可是我也知道，就在这个诊所的百米之外，世界已然出现了断层。那些有趣的对话，那些别致的爱好，那些丰富的感情，全都一一坠落到深邃的谷底。在这个世界的另一个平面上，只有贫穷的街道，绝望的日落和破败郊区的月亮。如果此刻有一只鸟在空中俯瞰下面的人类，它是否也能看清命运的构造？我的确相信人可以改变自己的命运，可是既然能做到的只有极少数的人，你不得不承认这也还是需要某种运气。我想所谓命运，对于大多数的人来说，大概就是杯子是什么形状，水就是什么形状。这种说法太悲观太不励志，可这才是事实。 记得在《看不见的城市》中，卡尔维诺借马可之口说：别的地方是一块反面的镜子，旅行者能够看到他自己拥有的是何等的少，而他所未曾拥有和永远不会拥有的是何等的多。我想这里所说的“少”和“多”并非专指物质，更确切地说是指哲学意义上的人生的可能性。在山里的两周我看到他们生活的一个瞬间，或者是一生，而这一生或是一瞬间本来完全可能是属于我的。如果不是命运的操纵，那个背着柴火在雨中行走的女人很可能就是我自己。这是我不曾拥有也大概永远不会拥有的人生，可是我情愿不要这样的可能性。 作家史铁生曾经写过一篇很有意思的文章《好运设计》，大意是说要是今生遗憾太多，在背运的当儿，不妨随心所欲地设计一下自己的来世。生在穷乡僻壤，有孤陋寡闻之虞，不好；生在贵府名门，又有骄狂愚妄之险，也不好。最好是既知晓人类文明的丰富璀璨，又懂得生命路途的坎坷艰难；既了解达官显贵奢华而危惧的生活，又体会平民百姓清贫而深情的岁月；既能在关键时刻得良师指点如有神助，又时时事事都要靠自己努力奋斗绝非平步青云；既饱尝过人情友爱的美好，又深知了世态炎凉的正常，故而能如罗曼罗兰所说“看清了这个世界，而后爱它”……这样的位置好么？当然好！ 可是这么好的位置在哪儿呢？ 在下辈子。在来世。</p>
</li>
<li><p>一般所见的东方美女往往知道自己的美，行为举止不免带了矜持的骄傲或是刻意的媚态，她们的眼睛里也因此多了些复杂的内容。可是玛雅美女大多美而不自知，无论美得像一团烈火还是一潭清水，她们的眼睛都清澈无比，不含任何诱惑和做作。我可以光看她们的脸就看上一天</p>
</li>
<li><p>他挥挥手离开了。我这才意识到他的一只手臂呈现极其怪异的形状，像是被打断了骨头重新拼接起来，可是又接错了方向，无法回复原状。我更意识到，不论是从前还是现在，我所看到的世界都只是极小极小的一部分，真正的世界更宽广，更隐秘，更幽深。我得时时提醒自己不要把这一点忘了，我得学会用这方面得到的知识证明那方面的疑问，我得避免将残缺不全认作真实，我得找到一个超越了愤怒和悲哀的完整世界。</p>
</li>
<li><p>尼加拉瓜的这个海边小镇改变了我。我开始不急着赶路， 而是学会了享受旅途中缓慢的节奏所带来的全新视野。 我开始明白不是只有古迹、教堂、博物馆和原住民才能算作「人文」， 在沙滩上挖牡蛎的小孩子和躺在屋外吊床里的 老大爷也同样是美妙的风景。</p>
</li>
<li><p>不下雨的晚上我们在海边散步。棕榈叶沙沙作响，天上是弯钩月，海上有大浪，就像世界在心脉悸跳。我感到秘密的喜悦，像是分享了千年以前诗人的心绪，在有着同样月色的夜里——“何夜无月，何处无竹柏，但少闲人如吾两人耳。</p>
</li>
<li><p>这个地方改变了我，或者说是治愈了我。我开始不急着赶路，不再像有强迫症似地参观这个参观那个，而是学会了享受旅途中缓慢的节奏所带来的全新视野。我开始明白不是只有古迹、教堂、博物馆和原住民才能算作“人文”，在沙滩上挖牡蛎的小孩子和躺在屋外吊床里的老大爷也同样是美妙的风景。</p>
</li>
<li><p>有时我明白为什么人们常把大海比作故乡，又或者在大海面前放下心防湿了眼眶。作家史铁生曾经写道：“人的故乡，并不止于一块特定的土地，而是一种辽阔无比的心情，不受空间和时间的限制；这心情一经唤起，就是你已经回到了故乡。”我之所以对这个小镇和这片海恋恋不舍，大概也就是因为这种“辽阔无比的心情”吧。</p>
</li>
<li><p>委内瑞拉虽然拥有广大的贫困人口，可是现在人人享有免费医疗和免费教育；委内瑞拉虽然仍处于革命的阵痛和嘈杂，但国内仍有激烈的“传媒大战”，新闻和言论都享有充分的自由……可是我们呢？一时间我心里生出巨大的悲凉，不知道哪一个才是“更糟糕的国家”。 活在这个奇迹年代，愿人人都能拥有不为他人所愚弄的智慧，愿我们不因周遭的扭曲而失去理智和善意，更愿我们身在阴沟仍能看到天上的星星。</p>
</li>
<li><p>和很多人一样，我对古巴的感情始于海明威。这位曾经发出“人不是为了失败而生”的美国硬汉一生中超过三分之一的时间是在古巴哈瓦那度过的。他曾经这样描述古巴：“我热爱这个国家，感觉像在家里一样。一个使人感觉像家一样的地方，除了出生的故乡，就是命运归宿的地方。”海明威在这个对他来说“像家一样的地方”写出了两本伟大的著作：《老人与海》和《丧钟为谁而鸣》，令所有人都记住了那个古巴老渔夫桑提亚哥，也记住了美国战后一代的迷茫。</p>
</li>
<li><p>可是古巴政府大力推广旅游业以及这随之而来的“一国两币”制度，却似乎并没有给普通民众带来什么好处。政府仍然维持粮食分配的制度，每人每月可以分配到基本的粮食，比如大米、豆子、面包、糖、油之类，可是分量实在太少，绝对不足以应付一个月，比如大米和食用油，大概不到一周就见底了。粮食不够便需要在市场上购买，然而使用本地比索的市场所供应的物资少得可怜，使用CUC的市场倒是物资充足，普通民众唯有兑换CUC来购买进口货品。可是一般人的工资只有十几个CUC，又怎能负担得起这样的高消费？若是有海外亲友的外汇接济，生活尚可维持，可若仅靠工资度日，便会捉襟见肘了。</p>
</li>
<li><p>然而出乎我意料的是，尽管古巴民众渴望改善物质生活，也会因缺乏民主自由而发发牢骚（虽然依旧不敢非议卡斯特罗），而且近几十年来接近五分之一的古巴人口逃亡美国是个不争的事实，然而我们此行所接触到的古巴人似乎都不愿意放弃和否定社会主义。</p>
</li>
<li><p>萨莎并不是一个特例，正相反，她完全可以代表我和铭基在旅途上遇见的某一类人群。这类人往往拥有自己特殊的才智或好奇心，生活狂放不羁，对平凡的事物不屑一顾，却愿意用生命来交换那些真正吸引他们的东西。他们的人生好像一直在用力地燃烧，我猜他们渴望爆炸——像行星相互撞击那样爆炸。</p>
</li>
<li><p>我就是那个躲在岩洞里的人。 可是这世上也总有一些人会选择在悬崖的边缘摸索， 他们选择直面恐惧，有可能会跌落悬崖粉身碎骨，但是也有可能， 他们会获得我们永远也无法拥有的某种体验或智慧。</p>
</li>
<li><p>在崇山峻岭间徒步令人真正感觉到自己是天空和大地的臣民。你能敏锐地察觉到天地间的每一点变化——天色的明暗，云朵的移动，空气的湿度，泥土的气息，风的方向，植物的清香——全都令人感怀至深。只有在这样的时刻，世界才会放慢速度在心弦上跑过，奏出丰富的乐声。</p>
</li>
<li><p>也正因如此，马丘比丘城中的一切至今仍保留着当初的模样，城里神殿、祭坛、城墙、街道、水道、墓室、居室、作坊……甚至监狱牢房都一应俱全。四海之大，天地之宽，竟有这样一处场所，固执而沉默地留住历史的秘密。天灾人祸，世局无常，此处却稳如磐石固如根柢，世世代代归于自己。</p>
</li>
<li><p>马丘比丘”只是一个概念而已。正如费尔南多佩索阿在《惶然录》中所说，真正的景观是我们自己创造的。我想象它们，就是在创造它们。如果我创造它们，它们就存在。它们在我们眼里实际的样子，恰恰就是它们被造就的样子。</p>
</li>
<li><p>走出去才能更了解。</p>
</li>
<li><p>这一切令我迷惑和伤感。在被韩剧、韩国汽车、韩国电器和电子产品“俘虏”的同时，拉美人对中国的全部印象止于中餐馆和成龙的功夫片。“Made in China”的中国产品自然遍及全世界，拉丁美洲也不例外，可是每次和当地人聊起这个，他们的笑容都有点尴尬，欲言又止：“便宜！……虽然，虽然质量差一点。</p>
</li>
<li><p>亚马逊平原简直就是一个巨大的水上动物园， 而且没有铁笼和围栏，天然食物链也从未被破坏， 动物们弱肉强食却自由自在。 坐在船上的我们其实也正被岸上的动物所“观赏”， 只是人类精彩之处并非皮相， 动物们恐怕会看得无聊。</p>
</li>
<li><p>旅行指南《孤独星球》从很早开始就一直大力提倡“responsible travel”，即“负责任的旅行”。概括地说来主要有三点：一是保护环境，并为当地的生物多样性带来积极贡献；二是多与当地人交流，尊重当地的文化和习俗；三是尽量选择能够使当地居民直接受益的消费方式</p>
</li>
<li><p>竭泽而渔，岂不得鱼，而明年无鱼；焚薮而田，岂不获得，而明年无兽。古人都明白的道理，我们又岂会不了解？不过是被私欲蒙蔽了眼睛，习惯了唯我独尊和为所欲为，在自然面前既没有谦卑的眼，也没有节制的心。不知我们后代的后代，是否还能看见西塞山前白鹭飞，桃花流水鳜鱼肥？</p>
</li>
<li><p>我知道世界总有缺陷，否则女娲也不必炼石补青天。可是有些人身上的伤口又比其他人更深更痛，连抚摸过那伤口的人都感染了同一种病毒。从此以后，我的心上也多了一道伤口，我不得不带着它继续行走在这美丽却残忍的人世间。</p>
</li>
<li><p>我从来没有见过以如此高密度出现的震撼风景， 好像重磅炸弹般一颗接一颗扔在人的心里。 虽然天地有大美而不言，万物有成理而不说， 然而天地间的风景的确可以感化一个人的心灵。</p>
</li>
<li><p>各种旅行杂志总是用蛊惑人心的文字煽动我们上路：都市人压力巨大，蝼蚁竞血，拼命咬紧牙关往上爬。不如走出城市，与大自然打成一片，即可其乐融融。清风明月镜湖阳光，均可免费享用，何用太过辛苦？可是真正上路以后才发现，这世上已经没有什么可供免费享用的东西了，连风景和气候都变成了奢侈品。就像玻利维亚那荒芜天地间的极致美景，看似上天送给人间的礼物，可是如果不乖乖奉上银两，根本无法抵达。你真的想舍去浮世，明月清风，山桂作伴吗？还是先过了山脚下的收费大叔那一关吧。</p>
</li>
<li><p>我在百内徒步的感受并无言语可以形容。面对着这么一个完全不欢迎我的存在的地方，也许有种畏惧，再加上感激——对它迄今为止还没把我干掉的感激。还有尊敬，像是一种爱，虽然这两个词被人们用得太多，早已失去了它们原有的力量。</p>
</li>
<li><p>是的，真实本身就是美。卑微的，受挫的，疯狂的，无情的，百内将它们统统拥抱着，从不扬弃任何东西。夕阳下，云雾里，冰川上，大雪中，它向我们坦坦荡荡地展示着自己的美——整体即是美，美从来都不是被包围在窄圈里的漂亮而脆弱的东西。</p>
</li>
<li><p>我小的时候读了一点点中国历史，看到源源不绝的天灾人祸、内外战乱，便觉得中国人简直是世界上最苦难的民族。长大以后才发现，日光之下并无新事，世界上的每个民族都有自己痛苦的记忆。尤其是来到拉丁美洲之后，耳闻目睹的苦难是如此之多，正在受苦的人们就活生生地站你面前，你无法“理智”地用冰冷的数据去判断哪个国家的苦难更为深重，因为于每一个个体而言，每一桩悲剧都意味着整个宇宙的崩塌。</p>
</li>
<li><p>于我而言，达到内心平静的窍门其实是一种生活态度：不仅要满意于你所拥有的东西，还要满意于那些你并不拥有的东西。我是从拉丁美洲的人们身上领悟到这一点的。一路上我亲眼目睹了那么多的贫穷和不公，可人们仍以最大的乐观和热情投入生活，从容地在那里尽其性命之理。很多人也常常接触外国游客，知道外面的世界有多精彩，知道对方手机的价格是自己一年的收入，可他们并不因此生出戾气，照样心平气和，照样鼓盆而歌。我觉得这或许并非源于“富贵于我如浮云”的冲淡胸襟，而正是他们长期生活在自然中的结果</p>
</li>
<li><p>如果这个世界不公平，或让人无法理解，那么壮阔的景致会提醒我们，世间本来就是如此，没什么好大惊小怪的……从壮阔的山河中去了悟自身的局限是十分有效的，否则我们就有可能在日常生活的流变中感到焦虑和愤怒。不只是自然违抗我们，就连生活本身也是不堪忍受的重压。然而，自然界中广阔的空间却最充满善意和敬意地提示了我们所有超越我们的事物。如果我们用更长的时间与它们相伴，它们会帮助我们心服口服地接受那些无法理解而又令人苦恼的事物，并接受我们最终将化为尘土这一事实</p>
</li>
<li><p>出发前我对生活有诸多不满， 然而现在的我心中更多的是谦卑和感恩。 达到内心平静的窍门其实是一种生活态度： 不仅要满意于你所拥有的东西， 还要满意于那些你并不拥有的东西。</p>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 书摘 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 游记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[十二兽首：艺术价值很一般的国之瑰宝]]></title>
      <url>http://chuanqiang.github.io/2016/07/25/%E5%8D%81%E4%BA%8C%E5%85%BD%E9%A6%96%EF%BC%9A%E8%89%BA%E6%9C%AF%E4%BB%B7%E5%80%BC%E5%BE%88%E4%B8%80%E8%88%AC%E7%9A%84%E5%9B%BD%E4%B9%8B%E7%91%B0%E5%AE%9D/</url>
      <content type="html"><![CDATA[<p>无意中发现一个很毁我三观的事情：原来圆明园兽首的艺术价值很一般。</p>
<p><img src="/image/962bd40735fae6cd0cecf2180fb30f2442a70f6a.jpg" alt=""></p>
<p>圆明园十二生肖兽首铜像原为圆明园海晏堂外的喷泉的一部分，是清乾隆年间的红铜铸像。1860年英法联军侵略中国，火烧圆明园，兽首铜像开始流失海外。前几年，流失文物被拍卖，触动了国人怒火，以高价买回。</p>
<p>圆明园十二兽首的确可以说是一流的文物，但它是一流的艺术品吗？他的艺术价值称得上的国之瑰宝吗？<br><a id="more"></a><br>中国国家陈履生评价说：“圆明园12生肖水龙头只是见证圆明园被八国联军掠夺、焚毁的历史见证，一上拍卖会就被称为‘国宝’，欠妥。特别是把外国人做的水龙头称为‘国宝’，更是欠妥。对它们要有正确的认识，尤其是对它们的艺术性更应该有一个基于中国美术史的正确的认知。”</p>
<p>他认为，对于流失文物应该客观地认识其历史和艺术价值，而不是过于政治化的解读文物追讨问题，“对于文物的追讨，重要的是要回归理性，回归国际法则。“</p>
<p>由此观之，兽首的艺术价值并没有那么高，也没有那么值钱。首先，从文化承载来说它并不是中国文化的结晶，而是借鉴了西方的写实主义方法，说白了，无非就是一个喷泉的喷头。其次，如果从西方雕塑的角度来看，它确实算不上一流的雕塑。</p>
<p>要知道一件文物的价值应该是源于于文物所承载的文化价值而言的，而圆明园的兽首从古董鉴定的角度来看它的历史很短，而且在艺术性方面也不具备过高的价值。那既然这样，为何兽首能拍卖出天价，难道兽首真的只是利用了我们的民族情绪赚钱吗？</p>
<p>当然不是，虽然兽首的艺术价值不高，但是它是位于中西交汇的清朝，而且是位于当时最顶尖的园林当中。一个文物的价值并不只是艺术价值的概念，更代表着历史的衡量和见证。首先，它体现出了中西结合的建筑理念，折射出来的当时社会的建筑观点和当时社会对待西方文化的看法。其次，它是中国屈辱史的一个见证，有着附加的历史文物价值和民族情感在里面。有了这些衍生意义，虽然兽首的艺术价值不高，但仍是中华之瑰宝。</p>
<p><img src="/image/clipboard.png?r=70" alt=""></p>
<p>在这些文物追讨的过程中，经历了很大的挫折。国人面对海外流失文物，痛心疾首，群情悲愤，民族情绪的一路高涨。这也间接导致兽首价格的一路飙升，哄抬了中国文物的市场价格，一定程度上影响了政府对流失文物的追讨。正如成国家文物局副局长宋新潮所说：“炒作的结果，是让那些利用中国老百姓爱国热情的商人投机获利”。</p>
<p>那么如何才能追回这些国家文物呢？（总结于 陈履生答新京报记者问）</p>
<p><strong>不能靠购买追讨被掠夺的文物</strong>因为它属于《关于被盗或者非法出口文物的公约》中所规定的部分，政府出面干预是正当的。而对于一般的不属于“被盗或者非法出口”的文物，不予理睬也是合乎情理的；当然，基于文物的等级和其重要性，政府的有关部门从国际市场上购买，也是有必要的。</p>
<p>现在首先应该做好研究工作，除了了解海外流失文物收藏地外，更要弄清其来龙去脉，建立一个国家流失海外文物目录。这是一项艰苦而细致的工作，但是进行有效追讨的学术基础，也是提供法律依据，即掠夺的罪证。只有基于此，才能开展追讨工作。</p>
<p>对于被列强掠夺的文物，如果是将来被列入上述国家目录中的文物，我认为不能用购买的方式，因为购买赃物同样是一种犯罪的行为。</p>
<p><strong>国家自信、系统组织是追讨关键</strong></p>
<p>掌握国外的法律，依据法律进行追讨。可借鉴的成功经验有，秘鲁政府按照美国法律文物被博物馆占有100年后就归其所有，要求耶鲁大学归还1912年，美国从秘鲁拿走进行为期18个月的科学研究而长期滞留美国的文物。</p>
<p>我国近年来在追讨流失文物方面也有成功的案例。2000年3月21日，佳士得于纽约举行的拍卖会中，将拍卖河北曲阳王处直墓被盗的浮雕武士石像，国家文物局即刻照会美国使馆，要求阻止该项拍卖，并根据国际公约将其返还中国。3月28日，美国海关查扣了这件中国文物。最后经美国司法部门根据联合国公约做出裁决，于2001年5月26日，将浮雕武士像无偿归还中国政府（现藏国家博物馆）。</p>
<p>显然，国际公约在追讨流失文物中会有一定的作用，尤其是发生在近年来的盗掘走私文物方面。但是对于历史遗留问题，特别是被列强掠夺的中国文物，这些国际公约可能一时还不能发挥作用，至少目前还不能看到效力。有些国家就拒绝签署《关于被盗或者非法出口文物的公约》，我们有什么办法？因此，追讨既需要智慧，又需要时间。</p>
<p>应该建立一个国家流失海外文物目录。这是进行有效追讨的学术基础，也是提供法律依据，即掠夺的罪证。只有基于此，才能开展追讨工作。</p>
<p>国之瑰宝，岂可流落他处。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 圆明园兽首 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[我是个算命先生（易之）]]></title>
      <url>http://chuanqiang.github.io/2016/07/24/%E6%88%91%E6%98%AF%E4%B8%AA%E7%AE%97%E5%91%BD%E5%85%88%E7%94%9F%EF%BC%88%E6%98%93%E4%B9%8B%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>君子敬鬼神而远之，小人畏鬼神而招之，非有所惧，即有所求，阿宝扎之，顺天承命。</p>
<a id="more"></a>
<hr>
<p><strong>【内容】</strong></p>
<p>算命这个行当，萌芽于先秦，发展于隋唐，泛滥于明清；汉代张良、三国诸葛亮、明代刘伯温，不同时期的代表人物，都在手相、面相、八字、八卦中辨认着人类的命运 。</p>
<p>祖爷，生于1902年，卒年不详，民国时期名震大江南北的算命群体“江相派”掌门人。《沪报》将他与袁树珊、韦千里、徐乐吾并称为“民国四大算命宗师”，所谓“南袁北韦东乐吾，三仙归来问祖爷”。</p>
<p>祖爷15岁开始为人算命，每算必中，令人咋舌；而后叱咤江湖30多年，留下无数不可思议的神算传奇与悬念；乃至于中原大战之前，山西军阀阎锡山也三顾茅庐，终于求得祖爷一卦。</p>
<p>祖爷总说，看的是面相，算的是八字，捕捉的是问卦人脸上不断闪烁的欲望：贪婪、虚荣、妒忌、恐惧、傲慢——人的命运，确实写在脸上。</p>
<p>祖爷一生几乎从未失手，唯一没有算到的，却是他自己的命运；面对凄凉晚景，他认为是自己泄露了太多天机……</p>
<p>翻开本书，一个82岁的算命老先生所讲述的算命背后的古老智慧与江湖猫腻。</p>
<p><strong>【书摘】</strong><br>贪者必贫，君子以为大戒，佛门亦为五戒之首，故做“阿宝”，咎不在“相”，而在“一”。<br>这句话出自江湖秘本《阿宝篇》，意思是说人性是贪婪的，贪婪是大戒，所以贪婪的人必贫，所以做“阿宝”，去骗那些贪婪的人，是没有错的。</p>
<p>淹死的，都是会水的。没本领的人，从来不敢起贼心，只有学会的人，才敢铤而走险，本领是福，也是祸。所以，学了这些东西，做事时更应该小心！</p>
<p>《华严经》上说：“往昔所造诸恶业，皆由无始贪嗔痴。”人性的弱点：贪、嗔、痴。仔细观察，几乎所有的灾祸都源自这三个弱点。 贪，是贪婪。贪财，贪色，贪名声，贪地位，为了达到贪的目的丧心病狂，什么事都敢做。贪官，强盗，窃贼，赌棍，色鬼，奸商，文贼，包括阿宝，都一样，这些人最后的结局往往都很惨。<br>嗔，是生气愤怒的意思，嗔戒一犯，怒火中烧，根本把控不了自己，那些因为一时气恼而杀人的死刑犯，没一个不后悔的。嗔的另一层含义是嫉妒，嫉妒之心一生，多好的朋友都会互相下绊子。 痴，是痴情。陷入情网的人，犹如被灌了迷魂汤，失魂落魄，整个人被感情掏空了最后有的郁郁而死，有的由爱生恨，或杀死对方，或双双殉情。</p>
<p>祖爷呵呵一笑，说：“大头，如果你是我，你是希望堂口的兄弟团结一心呢，还是希望他们互有隔阂？” 我说：“当然团结一心了！大家一条心，才好办事！” 祖爷摇摇头，无奈地笑了笑，说：“是啊，一条心好办事，也容易坏事。” 当时，我对祖爷这句话很不解，直到后来四个坝头联手“爬香”时，我才恍然大悟，幸亏是四个坝头造反，要是七个坝头同心，一起造反，祖爷就完了。那一刻恍然记起小时候看过的小人书《千家斗》，里面有一句话：“自古臣子不斗，皇帝焉能坐稳？”祖爷高明啊！</p>
<p>早吃姜，保健康；晚吃姜，如砒霜！”</p>
<p>从来鸳鸯多悲散，自古多情伤离别。</p>
<p>阴阴阳阳阴阳不定风月事，善善恶恶善恶有报江湖人。</p>
<p>五行配合，形神兼备。五行贵在融通，单表一处无所谓吉凶，五官结合起来看才是正理。眼睛属火，耳朵嘴巴属水，颧骨属金，鼻子属土，头颅眉毛属木，任何一个器官过大或过小，都会造成五行之气的失衡。</p>
<p>今生有缘，来世再聚，这也许是有情之人不能在一起的最好解脱。</p>
<p>这个世界总是这样，有些人，虽天各一方，却总能一见如故；有些人，虽近在咫尺，却终日擦肩而过。</p>
<p>纱帐暖，红烛摇，一夜云雨百恨消.</p>
<p>阳世之间积善伫德皆有你，阴曹地府古往今来放过谁。</p>
<p>文辞托江山，笔下有刀锋。</p>
<p>行骗心理学的至高境界</p>
<blockquote>
<p>六字真言为：审、敲、打、千、隆、卖。所谓：<br>先审后敲，急打慢千<br>隆卖齐施，敲打并用<br>十千九响，十隆九成<br>先千后往，无往不利<br>有千无隆，帝寿之才 </p>
</blockquote>
<p>六字真言出自江湖秘本《英耀篇》。</p>
<p>入门观来意，出言莫踌躇。<br>天来问追欲追贵，追来问天为天忧。<br>八问七，喜者欲凭七贵，怨者实为七愁。<br>七问八，非八有事，必然子息艰难。<br>士子问前途，生孙为近古。<br>叠叠问此事，定然此事缺；频频问原因，其中定有因。<br>僧道从清高，不忘利欲。<br>庙廊达士，志在山林。<br>一哥要狠刀，二哥要抛刀，三枣要跳蚤。</p>
<p>为人莫作亏心事，举头三尺有神明；善恶到头终有报，只争来早与来迟。</p>
]]></content>
      
        <categories>
            
            <category> 书摘 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 算命 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[食在北京（一）]]></title>
      <url>http://chuanqiang.github.io/2016/07/23/%E9%A3%9F%E5%9C%A8%E5%8C%97%E4%BA%AC%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      <content type="html"><![CDATA[<h1 id="上苍保佑吃饱了饭的人"><a href="#上苍保佑吃饱了饭的人" class="headerlink" title="上苍保佑吃饱了饭的人"></a>上苍保佑吃饱了饭的人</h1><p>民以食为天，我们每天都与食物打交道，感受它们拂过我们的味蕾，穿过食道，在胃中的碾磨，小肠中的吸收，然后支撑着我们的激情和梦想。食物是人们生存下去的基础，无论在哪。就像在北京的自己。所以，我觉得应该记录下与食物交流的过程，像是一个仪式，仅此心血来潮的表达一下对那几两芸豆的尊重。当然，还有对生活。</p>
<a id="more"></a>
<h2 id="【用料】"><a href="#【用料】" class="headerlink" title="【用料】"></a>【用料】</h2><p><strong>猪头肉   少许</strong></p>
<p><strong>大 葱     少许</strong></p>
<p><strong>姜         少许切丝</strong></p>
<p><strong>老抽      20ml</strong></p>
<p><strong>热水      适量</strong></p>
<p><strong>白糖      一小勺</strong></p>
<p><strong>芸豆      适量</strong></p>
<p><strong>油         适量</strong></p>
<p><strong>豆瓣酱   适量</strong></p>
<p>#### </p>
<p><img src="/image/ba0f3254d08.jpeg" alt=""></p>
<p>葱·姜·辣椒·肉</p>
<p>芸  豆</p>
<p><img src="/image/134d8e601ff.jpeg" alt=""></p>
<p><strong>芸豆有提高人体的免疫能力，增强抗病能力，激活淋巴T细胞，促进脱氧核糖核酸的合成等功能，对肿瘤细胞的发展有抑制作用</strong></p>
<p><img src="/image/0fb81c24aae.jpeg" alt=""></p>
<p>食 材</p>
<p><img src="/image/5a3c7d13eea.jpeg" alt=""><br>食 材</p>
<h4 id="【步骤】"><a href="#【步骤】" class="headerlink" title="【步骤】"></a>【步骤】</h4><p>芸豆摘洗干净，掰小段。</p>
<p>猪头肉切片</p>
<p>葱、姜、辣椒切丝</p>
<p>热锅凉油，油热放辣椒、姜炒出香味，</p>
<p>放肉片和葱煸炒</p>
<p>放芸豆煸炒。</p>
<p>放酱油煸炒。</p>
<p>加适量水，用来炖芸豆。</p>
<p>出锅前4、5分钟把豆皮放到芸豆里，放盐。</p>
<p>出锅</p>
<p><img src="/image/0beeb56c26d.jpeg" alt=""></p>
<p>出 锅</p>
<p><img src="/image/657010c6e28.jpeg" alt=""></p>
<p><strong>完 成</strong></p>
<p><strong>饱饭后的感觉真好，上苍保佑吃饱了饭的人民。</strong></p>
]]></content>
      
        <categories>
            
            <category> 民以食为天 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 美食 </tag>
            
            <tag> 红烧芸豆 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[爱国，我们从不缺乏；我们该思考的应是如何理智爱国]]></title>
      <url>http://chuanqiang.github.io/2016/07/20/%E7%88%B1%E5%9B%BD%EF%BC%8C%E6%88%91%E4%BB%AC%E4%BB%8E%E4%B8%8D%E7%BC%BA%E4%B9%8F%EF%BC%9B%E6%88%91%E4%BB%AC%E8%AF%A5%E6%80%9D%E8%80%83%E7%9A%84%E5%BA%94%E6%98%AF%E5%A6%82%E4%BD%95%E7%90%86%E6%99%BA%E7%88%B1%E5%9B%BD/</url>
      <content type="html"><![CDATA[<p><img src="/image/guoqi.jpeg" alt=""></p>
<p>最近南海仲裁案闹得沸沸扬扬，随后接连出现了“肯德基门前示威”、“抵制iPhone7”这样的新闻。其实面对这些现象，许多人持非常理智的态度：这种行为是错误荒谬的，实在不是表达爱国情感的正确方式。对此，各大有良知的媒体也纷纷发出评论，批判了这种非理智的爱国行为。人民日报同样发文指出，“<strong>从某种意义上讲，爱国不仅是一种情感，还是一种能力。这种能力，首先是一种运用理性的能力 </strong>”。但是，还有许多人被这种所谓的“爱国”激情感染，纷纷在朋友圈转发这些抵制苹果手机、肯德基滚出中国的言论，究其原因，我觉的除了一些无良媒体不负责任的渲染传播，更重要的是<strong>没有自己理智和深入的思考，缺乏基本的独立分析</strong>。<br><a id="more"></a><br>首先说抵制iPhone7。叫嚣着要抵制 iPhone 的那些声音，一直以来用的最多的论据就是「 卖肾得来的钱，竟然是给美帝造子弹去了 」。看到这里，最痛苦的其实不是苹果公司，而是一些国内的苹果手机供应链的相关企业，更痛苦的应该是无辜的大陆富士康工厂中的产品线工人。因为现有的<strong>一个基本事实是，iPhone 的生产、销售及后期维护是一项全球性的工作，苹果及其庞大的生态圈合作伙伴都能从中受益。生态圈中当然也包括国内企业</strong>。苹果最广为人知的合作对象，就是中国大陆富士康工厂中的上十万 iPhone 产品线工人，而现在他们正在为几千万台的 iPhone 7 订单默默工作着。iPhone 新品所带来的庞大组装工作量在一定程度上解决了当地的就业问题，而一些原料和零部件的采购则让国内的上游供应链企业从中分得一杯羹。所以只要稍微一想，你就能知道这种言论背后的荒谬和无知是多么可笑。如果真要彻底抵制美国货的话，那你就别用手机、电脑了，因为无论是windows、ios、安卓，还有cpu处理器这些都是统统的美国货啊。</p>
<p>抵制苹果手机另一个言论是：「 苹果击沉中国词条 」。</p>
<p><img src="/image/115755adtwtbdmi1iyidff.jpg" alt=""></p>
<p>这种言论的出现绝对是无知的表现了。这涉及到<strong>输入法的技术原理</strong>。这种T9输入法的原理就是会根据词频自动匹配输入最多的词汇进入联想区，也就是智能预测和推荐。在互联网普及和云端大数据计算的支持下，系统会分析所有使用者的匹配率进行计算和匹配。另外，你可能会有疑问，那数据库怎么会有这种推荐呢？在2016年3月，“阿根廷击沉中国渔船”事件出现之后，这一热点事件的出现，短时间内大量使用者在输入“击沉”之后输入了“中国”，从而使得智能系统把这个完全不合逻辑的组合推向了联想区。当这几天输入法“击沉事件”被发酵之后，“击沉中国”更是成为了一个大热之词，自然是系统智能推荐的第一匹配组合了。其实语文如果好点的话，也会发现“击沉中国”这个词条本来就不合逻辑嘛，大陆怎么能用击沉呢，用也是用“灭亡”、“毁灭”嘛。无知导致的盲目。</p>
<p>另外一种“「 爱国行为」”：</p>
<p><img src="/image/140632zl52frlw2l1p0k08.jpg" alt=""></p>
<p>站在道德的制高点，很容易具有煽动性和盲目性。先不说抵制肯德基这种行为对国家会产生什么意义，只说一点：<strong>我只看到肯德基、德克士会收留那些夜里下火车又不花钱无处去的人还有流浪者过夜。而没有看到本土餐饮企业这么做。</strong></p>
<p>面对所谓南海仲裁，我国政府充分显示了一个大国应有的作风和风度，郑重表态，据理力争，通过各种方式渠道说明情况、表明立场，摆事实、讲道理，坚持通过谈判协商解决有关领土和海洋划界问题。作为一个泱泱大国的爱国公民，应该也体现一个大国公民应该有的理智和气度，把爱国的理念化为行动，脚踏实地为国家发展添砖加瓦，这才是务实有效的爱国。爱国并不是聚集起来喊喊口号，也不是朋友圈转发一些慷慨激昂的言辞，这样的爱国还不如去小区捡捡垃圾、关心一下贫困山区儿童来的有意义。</p>
<p><strong>理智爱国，避免把爱国的激情才演变成盲目的冲动和偏激的行动。</strong></p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 爱国 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[给有道云笔记官网的意见]]></title>
      <url>http://chuanqiang.github.io/2016/07/07/%E7%BB%99%E6%9C%89%E9%81%93%E4%BA%91%E7%AC%94%E8%AE%B0%E5%AE%98%E7%BD%91%E7%9A%84%E6%84%8F%E8%A7%81/</url>
      <content type="html"><![CDATA[<p>作为有道云笔记的一个重度用户，并且作为软件开发从业者，对有道云笔记的功能和交互十分欣赏和喜爱。自己的日记、随笔、知识总结等等内容都放在了有道云笔记中。但爱之深，责之切，相比较其他编辑工具产品。有道云笔记有自己的优势，但仍有许多地方希望有道云笔记的开发人员能实现和改善。</p>
<p>自己使用有道云笔记，主要从三个方面，也相应的在这三个方面提出自己的意见（单就windows客户端）：<br><a id="more"></a><br>一、收集和输入<br>增加其他app、软件、网站的内容分享至有道云笔记的入口。不只是在笔记中保存一个链接，而是内容甚至是更好排版的保存。入口这点没有印象笔记多。<br>能够像eclipse一样在顶栏同时开多个文档，并且可以ctrl+Tab/ctrl+数字键切换。<br>整个界面应更加简约，才能突出内容，不应喧宾夺主。比如上部的整个一个蓝色title，功能按钮不多，反而太过浪费空间。<br>图标简略和变小，使之更简洁优雅。（可以借鉴一下MarkEditor和简书的风格）<br>导入支持其他格式的导入，比如：word、txt、markdown等常见格式。</p>
<p>二、整理编辑和修改<br>增加主题颜色（比如夜间模式、护眼模式）和自定义配置背景色。<br>全局设置的默认字体区分英文和中文。<br>编辑的功能强化，虽不至于像word，但该有的功能还是要完善，毕竟笔记是首先作为一个文字编辑工具来使用的。markdown的快捷栏在非markdown下也有，比如几号标题、引用文字等等。<br>增加全屏模式，沉浸式书写体验。<br>在普通视图时，编辑区输入内容时最好能控制一下宽度，让 width=80%。<br>增加格式复制 ctrl+shift+c<br>markdow 功能的加强：（建议借鉴MarkEditor）<br>增加其他背景色，黑色长时间会伤害眼睛。<br>markdown编辑区的字体和字号都不能调节。<br>markdown编辑区不能收起来。也就是markdown文件增加浏览视图。<br>支持导入markdown文件。<br>自动生成大纲。当行文很长时方便阅读。</p>
<p>三、输出和分享<br>支持其他格式的导出，比如：txt、word、导出成长图片，便于分享。<br>支持整个工程的导出。并且不只是导出成有道云笔记文件，应包含其他格式。<br>分享支持以长图片形式分享，支持分享到QQ空间。</p>
<p>兼听则明，希望有道云笔记从用户体验出发，成为一款极致优雅的作品。也希望有道云笔记越来越好。</p>
<p>2016/07/08 </p>
]]></content>
      
        <categories>
            
            <category> 杂文 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[疯狂动物城]]></title>
      <url>http://chuanqiang.github.io/2016/07/03/%E7%96%AF%E7%8B%82%E5%8A%A8%E7%89%A9%E5%9F%8E/</url>
      <content type="html"><![CDATA[<p>熬夜看完了这部动画电影，甚至把最后的片尾曲都听完了。</p>
<a id="more"></a>
<p><img src="/image/dongwucheng01.png" alt=""></p>
<p>本来看到这个名字就没有什么观影兴趣，但看到豆瓣评分高到9.5分，差点惊掉了下巴。这是什么概念，在豆瓣「2015年度榜单」里，像《疯狂的麦克斯4：狂暴之路》、《卡罗尔》、《火星救援》这些上榜的佳片，都是8字头的。于是果断看看看。</p>
<h2 id="故事情节"><a href="#故事情节" class="headerlink" title="故事情节"></a>故事情节</h2><p>故事情节还算可以，重要的是剧本扎实，情节严丝合缝。影片讲述了在一个所有动物和平共处的动物城里，兔子朱迪从小就梦想着成为一名惩恶扬善、匡扶正义的警官，起初被别的动物看不起甚至嘲讽，因为他们认为兔子实在不适合当警察，而是种胡萝卜。但最后，朱迪凭借着自己的努力终于成为了第一个兔子警察，并顺利进入疯狂动物城警察局。动物城发生了多起动物失踪案件，在警员们都致力于调查真相的时候，朱迪却被牛局长安排成无足轻重的交通协警。结果误打误撞认识了狐狸尼克，并且误打误撞发现了水獭先生的失踪线索，开始了动物失踪案的调查，却只有两天的时间找出凶手。最终两人连手，揭漏了一个隐藏在动物城中的惊天大秘密。<br><img src="/image/dongwucheng02.png" alt=""></p>
<h3 id="栩栩如生和独特的人物塑造首先成了这部电影成功的基础。"><a href="#栩栩如生和独特的人物塑造首先成了这部电影成功的基础。" class="headerlink" title="栩栩如生和独特的人物塑造首先成了这部电影成功的基础。"></a>栩栩如生和独特的人物塑造首先成了这部电影成功的基础。</h3><p>电影耗时三年制作，创作团队为了更加了解各种动物的特点和习性，花了18个月走访动物学家，并前往非洲的肯尼亚，进行了14天的动物观察。以至动物城中每个可爱的动物都是那样的栩栩如生。他们走路的姿态、生活习惯、甚至是身材比例，都是有原型比照的。而更加难得的是，这部电影成功地塑造了每一个人物，剧情张弛有度，笑点层出不穷。<br><img src="/image/dongwucheng03.png" alt=""></p>
<h3 id="故事情节的跌宕完整和深刻的立意"><a href="#故事情节的跌宕完整和深刻的立意" class="headerlink" title="故事情节的跌宕完整和深刻的立意"></a>故事情节的跌宕完整和深刻的立意</h3><p>最后的结尾说实话是出乎我意料的，没想到最温顺甜美的绵羊副市长竟然才是凶残的真凶。当然细细思考，导致她变成这样也是有原因的，这个慢慢分析。电影不只是捧腹的笑点，更有着现实的映射。在剧中最让人难以忘记的是交通局那些行动迟缓的树懒办事人员，看到这一幕，不仅有笑，还有苦笑，不自主的想起了拖沓的行政流程和国内公务员的办事效率。推动情节发展的是失踪案的案情，但最终的原因是社会中的种族冲突。动物城中处处有种族偏见：兔子不适合做警察，狐狸都是骗子，食草动物软弱，食肉动物残暴。。。而这些冲突和矛盾导致兔子朱迪小时候被欺负；狐狸尼克在街头靠行骗为生；导致羊副市长心里发生扭曲，制造出动物失踪的惊天大案；导致食肉动物遭到排挤，动物城差点分裂。这正映射着美国上下的种族偏见，现在世界上的种族主义者仍旧很多，固有的枷锁和面具仍存在于世界的许多地方。《疯狂动物城》是一个现实的寓言，折射了社会存在的种族歧视的问题。但影片也批判了这种观念，并对未来这种观念消亡抱有信心。因为随着剧情的发展，动物的真实性格总是背离对应的传统脸谱。本应胆小的兔子却勇敢热血，本应狡猾的狐狸却善良真诚。体形渺小的动物成了黑帮老大，体形硕大的动物却是小马仔。这些与固有印象的不符正是导演在试图打破有色眼镜的认知。<br><img src="/image/dongwucheng04.png?r=77" alt=""></p>
<p>剧中有个情节，我觉得很有意思。朱迪为了查案，和狐狸来到了一个另类的地方——这里的动物不穿衣服，并且过着舒适而原始的生活。</p>
<blockquote>
<p>为什么他们都不穿衣服呢？朱迪问。<br>动物本来就不穿衣服啊。动物回答。</p>
</blockquote>
<p>看到这里，不禁想起了之前看的有些报道，说一些上层精英，远离了城市，在一块世外山水之地，进行着自己田园般的生活。先不说这种选择的权利，这种回归与文明的进化是否是背道而驰？我认为不是，古代的女子出门必须裹得严严实实，被人看了脚都被认为是掉了贞洁，现在比基尼美女也满屏幕都是了。文明也不只是需要一块遮羞布，穿上衣服，吃得山珍海味，发达的工业，并不代表变得文明，文明是思想和意识的体现。现在的发展已经使地球满目疮伤，对于人类来说的“变得更加文明”，在其他物种眼中只不过是自私自利的野蛮与暴力罢了。</p>
<p>总之电影不错，伴我度过了一个愉快的夜晚。看外面月色朦胧，映着这如水的夜。</p>
]]></content>
      
        <categories>
            
            <category> 电影 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 电影 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[疯狂的麦克斯4]]></title>
      <url>http://chuanqiang.github.io/2016/07/02/%E7%96%AF%E7%8B%82%E7%9A%84%E9%BA%A6%E5%85%8B%E6%96%AF4/</url>
      <content type="html"><![CDATA[<p>开篇的第一幕，已经让我沦陷。</p>
<a id="more"></a>
<p><img src="/image/maigesi01.jpeg" alt=""><br>对这部电影最直观的感受是：真TM爽！</p>
<p>整部电影几乎全是高潮，处处充斥着“大冲击、大爆炸、大碰撞”，无不体现着“狂暴”。看完之后，热血沸腾的余韵久久不能消散，在接受了这部末世科幻狂欢曲狂热而又令人不安的画面之后，语言的描绘不再重要了，仅仅剩下了最纯粹的感官。<br><img src="/image/maigesi02.jpeg" alt=""><br>未来世界，水资源短缺引发了连绵的战争。人们相互厮杀，争夺有限的资源，地球变成了血腥十足的杀戮死战场。面容恐怖的不死乔在戈壁山谷建立了难以撼动的强大武装王国，他手下的战郎驾驶装备尖端武器的战车四下抢掠，杀伐无度，甚至将自己的孩子打造成战争机器。在最近一次行动中，不死乔的得力战将弗瑞奥萨，带着生育者们叛逃，这令不死乔恼羞成怒，发誓要追回生育者。经历了激烈的追逐战和摧毁力极强的沙尘暴，弗瑞奥萨和作为血主的麦克斯被迫上路，而身后不仅有不死乔的追兵，还有汽油镇、子弹农场的重兵追逐。主角麦克斯是在这个重新回到弱肉强食时代的世界中少数的自由人，因为未能在这片野蛮的土地上保护至亲之人而备受精神折磨，还被名为War Boys的帮派捕获，作为“血袋”而成为一名为War Boy们供血的奴隶。帮派的副手弗瑞奥萨叛变，试图带领帮派首领不死老乔的妻子们回到自己出生的绿洲，在逃亡与追击过程中麦克斯逃脱并与其结成联盟，麦克斯的供血受者纳克斯也受到感化倒戈。当一行人历尽艰辛抵达芙莉欧莎家园之时才发现家园已经消逝，而麦克斯则最终说服大家绝地反击，最终完成阻击，解救百姓。（豆瓣）<br><img src="/image/maigesi03.jpeg" alt=""><br>不死老乔</p>
<p>电影充满了令人疯狂的想象力，末日场景展现的十分的立体感充满了末日情结。尖刺的大型车辆、废土、蒸汽朋克、重金属、金黄的沙漠、钢管、骷髅、疯狂的追击与逃命。。。这些暴戾的元素，一定会让你血脉喷张，成全了一个男性荷尔蒙旺盛的影迷的所有感官需求。科幻+西部+动作，是这部电影充满着独特的魅力和张力。<br><img src="/image/maigesi04.jpeg" alt=""><br>血主</p>
<p>影片真正出色的当然不是故事，精简到几乎让人察觉不到存在感的文戏实在是够痛快，飙车戏动作戏贯穿全片，虽然最后会有点疲惫感，但不妨碍肾上腺素仍然不断飙升。《疯狂的麦克斯：狂暴之路》关键词就是“疯”，整部电影的制作都是围绕这个词，无论是剪辑调度、角色设计、飙车动作设计、演员表演、特效甚至美术配乐等等，都透着一股邪典味十足的疯劲，让影片完成度极高 。（网易娱乐）</p>
<p>除了场景和动作，影片中各个角色也都刻画得十分鲜明，通过这部电影里各色角色们的背景、技能、性格，观众们也体验了他们的心理世界和情绪变化。光影之间伴随着互相间敌友、亲疏关系的进展，主角不断做出至关重要的决定，搏斗过程本身的优势转换，奇谋百出，勇气迸发。这一切，弹指之间，力度知足，灵魂出没。黄沙漫天飞舞，尘土四处飘扬，水比石油稀缺，人比草还低贱。一切的安排仿佛银幕里最好的命运，所有的暴戾美学顷刻而来，没有缘由，让人依旧不能自已，只有接受。</p>
<p><img src="/image/maigesi05.jpeg" alt=""><br>沙漠</p>
<p>除了燃，电影还说了一件事：背井离乡七千天，无一日不惦念。不论眼下多苦，相信只要回头就有希望，因为那里是丰饶的绿洲。但这终究只是个幻觉。离开家乡越久，幻觉越严重。你以为逃离能解决一切，但真正的胜者不是寻找绿洲的人，而是改变荒芜之地的人。</p>
]]></content>
      
        <categories>
            
            <category> 电影 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 电影 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[六月的尾巴]]></title>
      <url>http://chuanqiang.github.io/2016/06/22/%E5%85%AD%E6%9C%88%E7%9A%84%E5%B0%BE%E5%B7%B4/</url>
      <content type="html"><![CDATA[<p>太阳扭着屁股黏过来，夏斟的太满。人们已被擒，像知了一样无力的呼喊。</p>
<p>北京的夏天，和济南的一样热烈。</p>
<p>吃过晚饭，换身衣服，去小区旁边的公路上跑跑步，控制住日渐增长的体重。看看夜色中的北京，有那么一瞬间恍惚以为自己还在济南。<br><a id="more"></a><br>工作也已经快三个月了，逐渐适应了朝九晚五的生活，每天在固定的时刻，出现在固定的地方，公路上，地铁站，胡同中，还经常看到一些熟悉却并不认识的身影。每天擦肩而过，在各自的世界里奔忙。周一到周末，七天一个轮回，像是一个摆脱不了的魔咒。渐渐体会到了学生时代读到的何其芳的一句话：从此开始成人的寂寞，更喜欢梦中道路的迷离。迷离中是对前方未知却美好的向往。想象和憧憬的，大都是美好的，而当现实的铁锤落下，听到的往往都是梦破碎的声音。</p>
<p>公司的节奏不很快，开始的适应没有想象的那么艰难。但是业务十分复杂，成了当下开发过程中面临的痛点。尤其是旧系统，各种框架不统一，各种代码犬牙交错，从08年到16年的代码都有，各种技术纷繁杂乱，增加了读源码以及开发的难度。不过这也是对自己的历练，提高自己阅读他人代码的能力。话说一个好的程序员都是从读别人代码开始的。现在接手的需求，都是对旧系统的缝缝补补，很难体会到那种畅快淋漓开发的感觉。但这么庞大的系统，也足够长自己学习和消化的了。</p>
<p>公司的同事都很好，都是那种纯朴、实在的人。和这样的人打交道，平和随心。办公环境没得说，毕竟央企，骄奢淫逸的一塌糊涂，出入公司竟然有人专职给你开门、按电梯，让我一开始感到很不适应。虽然已经步入职场，却总不习惯穿那么成熟的衣服，依旧读大学时候的打扮，在一群西装革履的人面前，有时候显得孩子气了。没有发现进入社会之后有那么的不一样，也没发现社会能把人雕刻的如何如何，可能初来乍到，经历甚少。但依旧相信曾经的信仰，相信生如夏花。</p>
<p>最近买了专业书，准备好好充充电。遥望前方，路途遥远，尚需跋涉。备好食粮，方能行远。地铁上下班，多亏有了小k（kindle paperwrite）的陪伴，拥挤的地铁沉浸在个人世界里的那种感受倒也怡然自得。就是有时看的入迷做过了站。。。做饭成了小菜一碟的事，也能弄的四菜一汤，且不算难吃。有时朋友来聚，还能小露一手。平时在家基本自己做饭，丰衣足食，省钱又美味，多好。周末成了一个无比向往的词汇，代表着可以睡懒觉，可以看电影，可以宅家里一天，可以想做自己喜欢的事，可以等太阳下山骑自行车到处转。</p>
<p>总之，目前生活就这样过着，不急不躁，不温不火。我本是一个喜欢安逸的人，喜欢舒缓的节奏。结尾还是放年初对自己说的话，是以勉励自己：</p>
<p>人生际遇，世事无常。一来，行走浮世不沾身；二来，尽人事以搏天命；三来，心怀感恩享生活。</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 独白 </tag>
            
            <tag> 心情 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[又是一个周末]]></title>
      <url>http://chuanqiang.github.io/2016/05/08/%E5%8F%88%E6%98%AF%E4%B8%80%E4%B8%AA%E5%91%A8%E6%9C%AB/</url>
      <content type="html"><![CDATA[<p>又是一个周末。<br>感觉时间真是如白驹过隙，转眼在北京度过了一个春天。不过由于初到北京的一些繁忙的事情，始终没有好好领略一下这个城市。了解一个城市，最好的方法当然是走进这个城市的街头巷角，看这个城市生活着的人。</p>
<p><img src="/image/1.jpg?r=84" alt="南锣鼓巷"><br>[南锣鼓巷]<br><a id="more"></a> </p>
<p><img src="/image/2.jpeg?r=80" alt="荷花市坊"><br>[荷花市坊]<br>周末自己去了后海和南锣鼓巷。后海说是海，其实是一个人工湖，是旧时皇家的一泓清池。沿岸处处是酒吧歌台，商肆饭店。我去的时候是下午，天朗气清，惠风和畅。后海两岸，垂柳拂岸，两边飞檐斗拱的古代建筑充满了京味和历史的陈旧感。透过现代抹修的痕迹，依然能看见老北京四合院建筑群的缩影，依然能咀嚼那已经远去的皇家遗韵。只不过店里的灯火通明，现代装修增添了太多的不和谐。</p>
<p><img src="/image/3.jpeg?r=79" alt="后海的酒吧"><br>[后海的酒吧]</p>
<p><img src="/image/4.jpeg?r=82" alt=""><br>[后海的酒吧]</p>
<p><img src="/image/5.jpeg?r=81" alt=""><br>[后海的酒吧]</p>
<p><img src="/image/6.jpeg?r=84" alt=""><br>[街头漫步]</p>
<p>后海最多的就是酒吧，不大的店，几张桌子，几张沙发，几把椅子，还有昏暗的灯光，有点暧昧的调调，完全符合了小酒吧的情怀。每个酒吧都有各自的驻唱歌手，当天色渐暗，音乐声缓缓响起，你能感受到一种别样的气氛和状态。</p>
<p><img src="/image/7.jpeg?r=89" alt=""><br>[后海]</p>
<p><img src="/image/8.jpeg?r=88" alt=""><br>[小石碑胡同]<br><img src="/image/9.jpeg?r=89" alt=""><br>[后海]</p>
<p><img src="/image/10.jpeg?r=90" alt=""><br>[后海]<br>从后海穿过雨儿胡同和帽儿胡同就到达了南锣鼓巷。这是北京最古老的街区之一，至今已有740多年的历史。古声古色的街巷体现着老北京独特的风情。<br>这里有众多保存完整的四合院街以四合院，门前酒旗飘扬，高挂着的小红灯笼，遵实于四合院的氛围和格调。与后海不同，这里的酒吧大多比较安静，和谐、自然、身居闹市却远离闹市的喧嚣，更贴近于生活。门外是古老中国胡同的往日尘烟，门里是熟悉的蓝山咖啡和杜松子酒。<br>似有似无间，你仿佛在古今交错的时间里徜徉，在中西合壁的空间里感受传统与时尚的激情碰撞。就是这般矛盾，却又难以置信地和谐。让人不禁感叹，原来北京可以如此悠然。</p>
<p><img src="/image/11.jpeg?r=86" alt=""><br>[南锣鼓巷]</p>
<p><img src="/image/12.jpeg?r=85" alt=""><br>[南锣鼓巷]</p>
<p><img src="/image/13.jpeg?r=86" alt=""><br>[南锣鼓巷]</p>
<p><img src="/image/14.jpeg?r=86" alt=""><br>[老手艺—吹糖人]<br><img src="/image/15.jpeg?r=86" alt=""></p>
<p><img src="/image/16.jpeg?r=86" alt=""><br>[店铺]</p>
<p><img src="/image/17.jpeg?r=86" alt=""><br>[街道]<br><img src="/image/19.jpeg?r=86" alt=""><br>[街头卖唱的歌手]</p>
<p>因为是自己一个人去的，再加上时间渐晚。所以在步履匆匆间遗失了许多美好的景色，也没有好好驻足体会。待下次，约得三五好友，寻一良辰佳日，定要好好欣赏这老北京胡同中的风景。</p>
]]></content>
      
        <categories>
            
            <category> 游记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 北京 </tag>
            
            <tag> 游记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[京城梦呓]]></title>
      <url>http://chuanqiang.github.io/2016/04/23/%E4%BA%AC%E5%9F%8E%E6%A2%A6%E5%91%93/</url>
      <content type="html"><![CDATA[<p>转眼只身入京已将近两个月。从学校踏入社会，从故乡来到异地，没有他人说的那么那么苦，当然也没有那么一帆风顺。一列独行的火车，一路向北，如今在帝都停靠。从开始的找工作、面试、租房、到适应新环境，虽然中间也有磕磕绊绊，但总归是比较如意的。其实，一个人在外，最难的不是你找工作有多累，面试压力有多大，而是异地他乡的孤独感。嘈杂拥挤的地铁站，满是熙熙攘攘的人群，但没有人听你诉苦，也没有人给你安慰。你必须掌控自己的生活：准备好的伙食，一个个一个的备忘录，定好的闹钟，安排好的行程。。。自己在踽踽独行中变得独立和坚强。</p>
<blockquote>
<p>一个人的成长，不是体现在年岁和面容，而是心境。</p>
</blockquote>
<a id="more"></a> 
<p>每天七点的闹钟准时响起，单车一路飞驰骑到地铁站，一路上春意盎然的景色只可惜一群行色匆匆的路人。好在自己年轻力胜挤地铁还比较有优势。车厢中的我们“亲密无间”但也只心系五点几寸的屏幕，钟情于耳机中的声音了。看着一卡通上少了四个大洋，走出地铁B口，穿过老北京的胡同，看一眼胡同里沧桑的老槐。去公司食堂吃了早饭，打卡上班，开始一天的工作。</p>
<p>生活的流水账，流水的生活。现在要做的是“随水而流”进而“推波助澜”，最后“翻云覆雨”。要适应和改变的还有很多，相信自己有足够的耐心和野心，从不拒绝成长。</p>
<p>关于来北京，之前的日记中自己这么写道：</p>
<blockquote>
<p>时常畅想工作后的自己，开始会很苦，自己租一间小房子，在偌大的北京，踽踽独行。但随着对社会的适应，一切都会好起来，后每个月领一份不多不少的薪水，白天热火朝天的工作，晚上看自己喜欢的书，听喜欢的音乐，在大排档里大口吃串喝酒。会有几个朋友，不多，却交心，周末没事相约到处转。会开始照顾父母，听到父母收到我送的礼物后皱纹下的笑声。是不是也会开始有啤酒肚微微隆起，会不会发福变胖，头发可能会剪短，不会再碰到女孩子羞红了脸。可能不会再喜欢那些矫情的文字，不再折服于那些烧脑的电影，不再因为一点小事而神经质的傻笑，喜怒哀乐成为心情的晴雨表。那时的自己是不是会更加成熟，什么事情都能从容一笑，当你问起我过得怎样，不论多么斑驳，都点头说好。</p>
</blockquote>
<p>现在工作了，才发现生活多的都是琐碎和纷纷扰扰，远没有想象中的美好和诗意。不过努力让自己生活得更丰富和优雅一些。</p>
<p>面对成长，有些事情需要改变，而有些事情需要坚守。蔡崇达在《皮囊》中写：我不相信成熟能让我们接受任何东西，成熟只是让我们更自欺欺人。有时候，改变不难，难的是保持本真。</p>
<p>面对成长，有些事情需要改变，而有些事情需要坚守。蔡崇达在《皮囊》中写：</p>
<blockquote>
<p>我不相信成熟能让我们接受任何东西，成熟只是让我们更自欺欺人。有时候，改变不难，难的是保持本真。</p>
</blockquote>
<p>京城一梦，希望尽是自己想象的样子。</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 成长 </tag>
            
            <tag> 北京 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[三打白骨精：并不是那么一个简单的故事]]></title>
      <url>http://chuanqiang.github.io/2016/02/13/%E4%B8%89%E6%89%93%E7%99%BD%E9%AA%A8%E7%B2%BE%EF%BC%9A%E5%B9%B6%E4%B8%8D%E6%98%AF%E9%82%A3%E4%B9%88%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E6%95%85%E4%BA%8B/</url>
      <content type="html"><![CDATA[<p>一千个人眼中有一千个哈姆雷特，一千个人眼中也有一千个西游记。今年是猴年，“猴戏”必然也会备受关注。《西游记之三打白骨精》应运而生，也博足了眼球。</p>
<a id="more"></a> 
<p><img src="/image/baigujing.jpg" alt=""></p>
<p>越是经典的东西，越是经久不衰，但翻拍也越容易经人诟病，因为先入为主的优质使人“曾经沧海难为水”，也就让后来者难以望其项背了。然而，经典的东西可以重新解读，重新演绎，或许你就可以树立另一种“经典”的标杆。周星驰的《大话西游》犹如是，今何在的《悟空传》犹如是。</p>
<p>《三打白骨精》是整部《西游记》中一个尤为精彩的章节，话说“重要的妖精打三遍”，白骨精幻化成人，间隙师徒情谊，骗得唐僧肉眼凡胎，赶走悟空，这本是一个妇孺皆知的情节，但在《西游记之三打白骨精》中却并不是那么一个简单的故事。</p>
<p>西游记取经度人，取得是什么经，度的又是什么人。</p>
<p>白骨精为妖，却恶不过云海国国王一个凡人的卑鄙和道貌岸然。白骨精“前世”为人，年幼被村民当成妖孽举行“天葬”，被弃白虎岭，遭秃鹫食身，凝结怨气成为白骨，恨透人间，遂想食唐僧肉以永世为妖。白骨精虽罪恶累累，却不是不可度化。</p>
<p><img src="/image/baigujing01.jpg" alt=""></p>
<p>儿时观此章节往往为之愤愤不平，小和尚肉眼凡胎，不识妖孽，赶走悟空。作恶妖怪，打死为何不可。菩萨拦住悟空回花果山的去路：“悟空，不要用你心中的对与错去衡量别人的错与对，你看到的是真相，而你师父看到的，却是心相。”唐僧说：西去之路上绝不跨过一叶苍生，否则就算取得真经，过的了佛祖，也过不了自己。</p>
<p>唐僧虽肉眼凡胎，但看到的确是众生平等，无论花草鸟兽、凡人妖魔，皆无差别，皆有可度。悟空火眼金睛，看透妖魔变化、大千色相，却看不透众生之心，难识心相。</p>
<p>普度众生，首先是众生平等，众生皆可度化。倘若西去取经之路上，遇到妖魔鬼怪尽是一棒子打死，遇到作恶多端之人尽是赶尽杀绝，那这一路上有何修行可言。</p>
<p>最后佛祖要收了白骨精，唐僧以自己一世轮回换白骨精转世，当白骨精自绝于唐僧体内时，唐僧让悟空一棒子打死自己，做到了自己所言的“西行路上绝不跨过一叶苍生”。</p>
<p>此时，这个天地灵猴、心比天高的齐天大圣孙悟空才会由对万般柔弱的唐僧由“小和尚”的称谓转为发自肺腑的一声“师父”。此时的悟空，保唐僧取经也不再是为了解除头上的紧箍。所以唐僧的“我不下地狱，谁下地狱”，不但度化了白骨精，还度化了孙悟空。悟空放下了心中的执念，开始西行。</p>
<p>漫漫西行路，希望“西游迷”可以看到更多不一样的精彩。</p>
]]></content>
      
        <categories>
            
            <category> 电影 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 电影 </tag>
            
            <tag> 西游记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[为什么历史上汉族总打不过少数民族]]></title>
      <url>http://chuanqiang.github.io/2016/01/25/%E4%B8%BA%E4%BB%80%E4%B9%88%E5%8E%86%E5%8F%B2%E4%B8%8A%E6%B1%89%E6%97%8F%E6%80%BB%E6%89%93%E4%B8%8D%E8%BF%87%E5%B0%91%E6%95%B0%E6%B0%91%E6%97%8F/</url>
      <content type="html"><![CDATA[<p>最近读史，发现一个问题，在漫长的中国历史上，汉族总是打不过经济、文化都过后于我们的少数民族。这是为什么呢？亦欲以究其原因，寻书问道，现归结如下。</p>
<a id="more"></a>
<p>历史上各民族相处并不和谐，互相攻战，烽火连天，尸横遍野，可以说是积怨很深。历史上留下了很多关于这一史实的诗歌，戏曲，传说，古迹。享誉中外的万里长城，就是为了抵御北方少数民族的入侵而修建的。汉朝的昭君出塞，唐朝把文成公主，金城公主下嫁吐蕃，都是为缓解紧张的民族关系。少数民族尤其是北方的少数民族对中国的历史进程产生了巨大的影响。有的少数民族竟然统治了华夏族的发源地——中原达几十年甚至上百年，如北魏，契丹，金。有的甚至统一了全中国，如元，清。尤其是清朝，统治中国达二百多年，还创造了康乾盛世，是中国历史不可或缺的重要组成部分。</p>
<p>纵观历史，大汉民族在与少数民族的战争中多以失败告终，虽然我们有时也打败过少数民族，如汉武帝就曾发动了几次对匈奴的战争，使匈奴元气大伤，后几十年不敢窥视中原。唐太宗也曾打败北方的突厥，使他们臣服，称唐太宗为天可汗。但总的来说，汉族在战场上以失败居多。比如元朝和清朝，汉人的军队可以说是不堪一击。尤其是清朝，他们在打败了农民军后，几乎未遇抵抗就统一了全中国。记住，人家是少数啊，清朝入主中原时全部人口是七十万人，而我们在宋朝时人口就达一亿，当时人口离两亿不会远的。蒙古建立元朝人口也不会太多，也就几十万，你就看看今天蒙古共和国的人口你就知道当时能有多少人了，蒙古到现在才不到三百万人。我们以绝对的多数却打不过绝对的少数。而且我们中国当时是世界上唯一的超级大国，军事实力和经济实力都雄居第一，实在让人百思不解。</p>
<p><strong>一、奉行重文轻武的政策，导致“兵无常将，将不知兵”的局面，大大削弱了军队的战斗力。</strong><br>浩如烟海的思想文化典籍，使读书人沉迷其中，皓首穷经，只重清谈和道德说教。科举制度一方面吸引了汉民族的一部分精英分子，使他们的身心倍受摧残；另一方面，考试的内容脱离现实生活，无法培养实际能力。所以，往往在少数民族发动对我们的战争的时候，我们的朝廷往往是手足无措，一片唏嘘。我们的战斗力被中国古代的这些文化典籍严重的削弱了。隋唐以后推行科举选仕制度，更把这种状况推向极致。科举制度不仅吸引了一大批社会精英，而且使整个汉民族形成了重文轻武的心理赵匡胤靠担任军职夺取了皇帝的宝座，当上皇帝后，他怕别人也靠军队夺取帝位。所以他亲手导演了杯酒释兵权的喜剧，让石守信等将领自动交出兵权。随后又从制度上对禁军加以整顿，降低禁军统帅的地位，疏离禁军将领与士兵的关系，削弱地方军事力量。禁军数量多力量强，待遇最好，地方军待遇差，从不训练。乡军，蕃军不是正规军，更不如地方军。这显然削弱了军队的战斗力，使两宋在与北方少数民族的战争中一直处于劣势，直至被灭亡。</p>
<p><strong>二、从饮食结构讲， 汉民族以素食为主，辅之以肉食，导致身材瘦弱，矮小。而北方的少数民族以肉食为主，身材高大威猛有力。身材的高矮当然影响部队的战斗力。</strong><br>比如，两个人打架，一个一米五几，一个一米八几，你想结果会怎样。那高个的肯定占上峰。当然这是一般情况而言。但大多数情况下那高个的会赢。像南方的少数民族如云南，四川的少数民族平均身高比汉族还要矮，所以他们在历史上从来就没有侵略过中原政权。我认为，体格的强弱绝对会影响部队的战斗力。汉民族的平均体格不如北方的少数民族，所以在战场上自然打不过北方的少数民族。</p>
<p><strong>三、少数民族全民皆兵。</strong><br>它的生产和战斗是一回事，三岁开弓，五岁上马。匈奴人口最多的时候150万，兵力最少的时候，“控弦之士三十万”五个人里一个兵。汉朝人口最多的时候6000万，军队最多的时候60万，一百个人里一个兵。中原王朝老百姓是手拿锄头的，要把种地的训练成拿刀枪的，需要时间和训练成本。少数民族本来就是拿弓箭的，所以他们全民皆兵，你打不过他。</p>
<p><strong>四、匈奴这些北方民族打仗不需要后勤。</strong><br>每个战士三匹马，一匹战马，一匹走马，一匹驮马。平时行军的时候骑走马，驮马是驼送物资的，战马只有冲锋陷阵的时候才能骑。这些马大都是母马，渴了可以直接接奶喝，饿了天上飞过去什么，地上跑过去什么，一箭放倒就能吃，不太需要后勤。人家一出兵二十万，是二十万骑兵，咱们一出兵二十万，需要五万押送粮草的，粮草一断就没法打了。另外骑兵的机动性强，蒙古铁骑在俄罗斯平原上一天80公里，跟二战装甲部队的速度一样快，声东击西，机动性极强。就算你修长城，长城万里长，但也需要万里布兵，人家几十万军队集中一点，冲个口子就进来了。</p>
<p><strong>五、气候。</strong><br>对于北方的少数民族政权，从北往南打，越打越暖和，那怕什么，爽，光着膀子打；咱从南往北打。越打越冷，冻得弓都拉不开，枪都握不住了。</p>
<p><strong>另外</strong><br>中原王朝对不能耕种的土地不感兴趣，占他的地也没用。但游牧民族和中原打仗就准有收获，银子、绸子、瓶子，总能捣鼓点回家。中原王朝和他们打仗只花钱，没有任何收获。从机动上也没必要打，一追，人家跑西伯利亚去了。</p>
<p>但是，纵观历史，凡是进入长城以南的少数民族，即便是以统治者的身份来的，最后在文化上通通融合于了中原文明之中，包括五胡、金，元朝的蒙古族，乃至满族的清廷统治者。所以在中国历史上又一个特别得意的说法：胡虏无百年之运。少数民族政权入主中原，靠的是快马弯刀，靠这个征服土地行，但是征服不了人心。蒙古人当年占地球陆地表面积的四分之一，今天还找得着吗？89年就回去啃羊腿了。野蛮战胜不了文明，暴力没有什么用处。拿破仑帝国十年，希特勒帝国十二年，所以武力解决不了问题，解决问题得靠文化的认同。所以游牧民族进入中原，都进行了汉化和融合。由此等等，才促成如今包容并进，源远流长的中华民族文化。</p>
]]></content>
      
        <categories>
            
            <category> 历史 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 历史 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[最后的寒假]]></title>
      <url>http://chuanqiang.github.io/2016/01/20/%E6%9C%80%E5%90%8E%E7%9A%84%E5%AF%92%E5%81%87/</url>
      <content type="html"><![CDATA[<p>这个冬天格外的冷。</p>
<a id="more"></a>
<p>待到宿舍关门的最后一天，拖着三个大行李箱，阔别了生活了三年半的美丽的校园。回头望了望学校的红瓦青石，心里默念了一声再见。</p>
<p>北京成了当下魂牵梦绕的一个地方，像是有种魔力，吸引着我。至于为什么，恐怕自己也说不清道不明。是因为北京机会多工资高吗，是因为北京成长快发展好吗，恐怕都是原因，也都不是原因。也可能是，不想自己早早的把自己今后的人生定住，写死，醉生梦死在济南这个小地方。我还很年轻，内心还不安定，“世界很大，我想去看看”的心思还远远胜过对安逸舒适生活的向往。选择北京意味着未知的漂泊和艰辛，但人生正因为未知才充满惊喜。下一秒的路口，说不定就会看到有意思的事。</p>
<p>选择同样伴随着放弃。在决定去北京的那一刻，也注定了济南的许多机会的放弃。象征性的面了济南的几家公司，福利待遇也还都不错，但最后也都咬咬牙放弃了，既然做出了选择，就不能轻易辜负。I need to follow my heart.  准备过了年就挥师北京，当然也不能打无准备之仗，已经做好计划，在寒假一方面再深入学习一下框架做几个项目练练手，另一方面刷题复习积极准备面试。虽然对于学生生涯来说，学校的学习考试已经结束，但对于将入职场的我来说，战争才刚刚开始。第一战很是关键，所以要充分准备，争取首战告捷。</p>
<p>仔细考量过自己的职业特点，觉得不可能一直按部就班的干下去。最终的目标还是创业，互联网的大潮虽然那时候已经褪去了浮躁和膨胀，但它的余温和能量依旧还在。三十岁之前还是好好学习技术和理念，在软件行当里好好成长，沉淀自己技术和能力的同时也锤炼自己的性情和思维。希望自己一直带着创业的心态来对待今后的职场生涯，为自己以后的创业打基础。</p>
<p>梦想永远都是大而美的，但它也刻画了未来的模子。</p>
<p>学生生涯最后的寒假，最不像寒假的寒假。值得好好珍惜，珍惜当下的时间和投入的精力，珍惜和亲人相聚的日子。这些会是以后自己在北京的寒冬里踽踽独行时支撑我昂首前行的温暖。</p>
<p>完</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 心情 </tag>
            
            <tag> 成长 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[东君礼赞]]></title>
      <url>http://chuanqiang.github.io/2015/12/19/%E4%B8%9C%E5%90%9B%E7%A4%BC%E8%B5%9E/</url>
      <content type="html"><![CDATA[<p>从屈原的九歌到汉武帝的祭祀<br>从上古的膜拜到老祖庙的瞻仰<br>从冬与黑夜里走出的光明<br>从夏和白昼中火浴的灵魂</p>
<a id="more"></a>
<p>炎炎的东方  一只涅槃的凤凰<br>从火中走出带着希望<br>一步一个火种 蹈着烈焰<br>烧死黑夜  一挥手一万五千里白昼</p>
<p>一羽太阳在颤动的永恒里上升<br>犯次妃 冲紫微 横渡澹澹的天河<br>灿烂的巡礼  轮回的光荣<br>万物现形  天地苍苍<br>给大地以颜色   举长矢逐天狼</p>
<p>熊熊的火光  朝圣的长旗<br>映见五岳向上   粼粼的大江东去<br>红日初升，其道大光<br>纵有千古，横有八荒<br>照见我泱泱华夏  矞矞皇皇</p>
<p>看到东君的神灵不灭<br>民族的意志向前<br>以高昂的姿势向前<br>那是<br>太阳的方向<br>遥远的东方</p>
]]></content>
      
        <categories>
            
            <category> 为你写诗 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 写诗 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[冬夜暖语]]></title>
      <url>http://chuanqiang.github.io/2015/11/29/%E5%86%AC%E5%A4%9C%E6%9A%96%E8%AF%AD/</url>
      <content type="html"><![CDATA[<p>冬天来了，漫天的飞雪像是在急急忙忙的掩盖一个关于大地的秘密，那还未褪净的秋意挣扎不过四季的轮回，很仓促的坠入了又一个寒冬。还未适应这乍起的寒意，身体嗅到了感冒的味道，防患于未然，希望赏雪的心境不要因此煞风景。</p>
<a id="more"></a>
<p>每天还是忙忙碌碌，不同的是这几天不再是路上电车的飞驰，改成了对24路公交车的守候。公交车也因此成了我们的班车，一路上的嘻嘻闹闹，一路上漫眼大学城的雪景，恍惚间仿佛回到了青春正浓时的光景。青春尾巴中的醉生梦死，远离学生时代的回光返照，不管怎样，经历过就好。</p>
<p>这段时间，每天形影相吊的是电脑屏幕， 萦绕耳畔的是键盘的敲击声。当夜色渐浓，窗外是映雪的月色。一盏台灯，一尺见方的屏幕，指尖在黑白分明的键盘上光影闪烁，神经末梢感触着键程的起伏和段落感，同样也感触着内心的思考和表达。抽象的思考通过手指的舞蹈伴随键盘敲击的清脆，在四四方方的屏幕上刻画出了具体的影像。有时，障碍重重，debug了n多次，头绪好像都见了周公，键盘的声音都充满了代码块战死沙场的悲怆。有时一路的风生水起，披荆斩棘，手下行云流水，一路的悦耳叮咚。做编程真实一条不归路啊，因为需要学习的东西很多，未知的东西也很多。技术在不断更迭，思维也在不断转变，所以需要持之以恒的不断学习进步。如何才能不被时代拉下，你必须跑起来。总是憧憬生活得美好，总是抱怨当下的无奈，总是人云亦云中麻木着，总是思维落下行动一个长征的距离。</p>
<p>唉，跑起来吧，生命经久不息，躁起来吧，人生折腾不止。</p>
<p>拙笔小作，告以畏寒不起的自己：</p>
<blockquote>
<p>几夜未眠，乍到冬时节。<br>一树叶零风更野，无奈萧萧叶。<br>夜寒惊薄被子，欹枕入冬眠。<br>畏以萍风叶卷，徒言空凄切。<br>平地风紧，落尽飘零，<br>梅花千树竞风霜，昂向纷纷雪。<br>莫言冬日寒，怀梦心自暖，<br>斗破苍穹踏遍天，何惧在人间。</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 心情 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[冬夜寒语]]></title>
      <url>http://chuanqiang.github.io/2015/11/22/%E5%86%AC%E5%A4%9C%E5%AF%92%E8%AF%AD/</url>
      <content type="html"><![CDATA[<p>戴上耳麦，把音乐声音调大，打开云笔记，键盘敲奏不出旋律，BACK SPACE键不住的按。支支吾吾的思绪像极了如今混沌的心境。</p>
<a id="more"></a>
<p>好久没有写东西了，渐渐心中有了愧疚感，像是疏远和背叛了一个久违的老朋友。可是当你开始正八经儿坐下来准备写点什么的时候，却发现，大脑就像久违的好友多年之后再次闪动的QQ头像下客套寒暄的苍白无力。</p>
<p>冬雨淅淅沥沥，空气冷冷清清，宿舍中的暖气依旧挡不住玻璃门外的的萧瑟。搓搓手注视着外面准备零落成泥的枯叶，想象不出它们曾几何时，原是怎样的生机盎然。时光苍老了岁月，也模糊了记忆。时间成了生活的一种珍贵资源，稀缺且不可替代，一切的风花水月都会在时间的见证下显现出真实的样子，无法窥测未来，所以惶恐在当下，所以跌跌撞撞的奔忙前行。</p>
<p>成长有时候很残忍，会剥掉另一个自己，像是节肢动物的生长前的褪壳，把过去的自己一点一点的剥离出，只为了成长，为了一个夏天的蝉鸣。有时在想，成长究竟为了什么，我们苦苦追求的又是什么。成家立业，结婚生子难道真的是人生在世的宿命嘛。好像越成长，就越不自由，桎梏就越多，最后可能会变成了你鄙视的那种人。儿时的随心所欲，天马行空，源于未来的不确定，所以那时充满憧憬并且总是美好的。现在站在二十一二岁的路口，却有了一丝惶恐。不像路口之前的康庄大道，行走时可载歌载舞，大摇大摆；路口前方是羊肠小路，踏进去，你就只能小心翼翼，按部就班的走。不然掉下两边的悬崖峭壁，也可能粉身碎骨。人生的规划有时候很可怕，像是从现在到死亡给你订好了线路，规划着如何风风光光的走进坟墓。</p>
<p>自己有时候想问题总是那么悲观，尤其是在阴雨连绵的寒冬。听说快要下雪了，很想看一看雪后的校园，因为会掩盖住阳台外那些枯黄的落叶，会封藏起那些不好的心情，会昭示着瑞雪兆丰年的祥瑞。</p>
<p>夜色深深，暖气更显苍脆，去洗洗睡，进被窝里来寻找一丝自我慰藉的暖意吧。</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 心情 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[黑客与画家]]></title>
      <url>http://chuanqiang.github.io/2015/10/15/%E9%BB%91%E5%AE%A2%E4%B8%8E%E7%94%BB%E5%AE%B6/</url>
      <content type="html"><![CDATA[<h2 id="一、黑客（hacker）三个特点-价值观"><a href="#一、黑客（hacker）三个特点-价值观" class="headerlink" title="一、黑客（hacker）三个特点/价值观"></a>一、黑客（hacker）三个特点/价值观</h2><a id="more"></a>
<ol>
<li>好玩</li>
<li>高智商</li>
<li>探索精神</li>
</ol>
<h2 id="二、黑客理论："><a href="#二、黑客理论：" class="headerlink" title="二、黑客理论："></a>二、黑客理论：</h2><ol>
<li>使用计算机以及所有有助于了解这个世界本质的事物都不应受到任何限制。任何事情都应该亲手尝试。    </li>
<li>信息应该全部免费</li>
<li>不信任权威，提倡去中心化。</li>
<li>判断一名黑客的水平应该看他的能力，而不是看他的学历、年龄或地位等其他标准。</li>
<li>你可以利用计算机创造美和艺术。</li>
<li>计算机使生活更美好。</li>
</ol>
<h2 id="三、"><a href="#三、" class="headerlink" title="三、"></a>三、</h2><ol>
<li>黑客通过看优秀的程序学会编程，不是看他们的执行结果，而是看他们的源代码。</li>
<li>优秀的软件也要求对美的狂热追求。</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 书摘 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 计算机 </tag>
            
            <tag> 黑客 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[我的价值观]]></title>
      <url>http://chuanqiang.github.io/2015/10/09/%E6%88%91%E7%9A%84%E4%BB%B7%E5%80%BC%E8%A7%82/</url>
      <content type="html"><![CDATA[<blockquote>
<p>王尔德说：一个愤世嫉俗的人，知道所有东西的价格，但却不知道它们的价值。</p>
</blockquote>
<a id="more"></a>
<p>价格的高低是一种普遍的认知，但价值对于不同的人来说，却有着不同一般的意义。金钱能衡量价值吗？这是一个老旧的没有丝毫新意的话题，但我还想给自己一个明确无疑的答案：不能。</p>
<p>你去超市买东西，少一分钱都不会有人把东西卖给你；你开着名车，别人会投去羡慕的目光；你腰缠万贯，酒店的迎宾侍者都可能对你点头哈腰。生活很现实，像是残酷的竞技场，一切靠金钱说话，票子的厚度往往决定你姿态的高度。在这种拜金的气氛中，每个人似乎都站在洪流中，等待着来自对财富欲望的冲击。但这样的生活也很苍白，没有暖意，每个人看人的眼光里都蒙上了一层金色，那是金钱的颜色。你的颜色浓，那么那种金色就比较暖；你的颜色淡，那对不起，你接收的目光只能是横眉冷对的冷色调了。</p>
<p>有时候，站在路边，看着喧嚣尘世，看着行色匆匆的路人，看到周围的人都在谈论有关钱的一切。我就在想，以前的大学生不都应该是对着历史铿锵评议，因为一本书或者电影挥斥方遒，面对时事政治侃侃而谈的吗？怎么现在都在聊什么LOL，聊路上那个妹子漂亮。。。《圣经》和法律不都说人人不都是生而平等的吗？为什么穷人要比富人给人感觉低人一等，而不是平等的对话，平等的目光。每个人有每个人的故事，每个人有每个人的价值，应该尊重每个人 ，而不管你是贫穷或者富有。路边的乞丐，我递给你一元钱，你都会说声谢谢；西装革履，油头粉面，你乱扔垃圾，也让人觉得这家伙人模而狗样。土豪的暴发户，虽一掷千金，但也仅仅是个思想上贫瘠浅薄的人，多做些焚琴煮鹤的事。清贫的学究，白屋寒门，映月读书，不汲汲于富贵，但心系天下，有自己的一方热血和思想的丰富。</p>
<p>面对一部 iphone6s，我不想和你聊它的价钱和成本，我只想和你聊聊它的工业设计和性能UI，面对一双不菲的鞋子亦或一个名牌产品，我不想和你说它有多贵，穿出去有多拉风，我只想和你说说它的设计美感以及这个品牌的文化理念。一个许久不见的熟识，不想问你如今工资几何，房产几许，只想问你有没有故事，问你对生活还有没有热情和信仰，问你过得好不好、开心不开心。</p>
<p>我需要钱，也肯定离不开它。但它仅仅是工作事业的副产品罢了，而不是人生追求的终极意义。穷其一生，我只想沉浸在有幸福感的东西上。</p>
<p>我不想垂垂老矣的时候对别人说，我很有钱；而是想说，我很幸福。</p>
<p>说的很装逼，有时也不能免俗，但就是想表达我的一种想法，一种格调，或者严肃点说是，价值观。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 价值观 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[面试初体验]]></title>
      <url>http://chuanqiang.github.io/2015/10/07/%E9%9D%A2%E8%AF%95%E5%88%9D%E4%BD%93%E9%AA%8C/</url>
      <content type="html"><![CDATA[<p>急匆匆地买了一套西装，别扭又新奇。平生第一次穿的这么板正。这次真的是西装革履，有领带，有皮鞋，看到镜子里的自己，觉得有些驾驭不了西装透漏出的成熟，总掩饰不住脸上不相符的稚嫩表情。好在穿上之后也是笔挺干练的，还真有成熟的成人模样。这样穿，当然不是去相亲，是去面试工作，看吧，人生宝贵的第一次竟然就献给了那个邋里邋遢的中年面试官。。。</p>
<a id="more"></a>
<p>本来没有打算这么早去面试工作，想等相关的培训课程学完之后再开始面试找工作。毕竟企业看中的还是能力，当自己胸有笔墨的时候，也就能有跟企业讲薪资待遇的底气了。孙膑庞涓的故事告诫我，深山的映月读书可能就会决定你出山时的高度。但是，碰到软通动力来学校做宣讲，觉得尝试一下也不错，去不去再说，至少能感受一下正规公司的面试流程以及通过面试来明确公司的用人需求。于是乎，前一天做了他们公司的笔试题，一百分的题目，因为都是一些特别基础的java试题，最后得了八十。提交试卷后，出来结果，笔试成绩竟然是前五。。。闹哪样！。晚上匆匆茫茫的制作了份简历，第二天早上就提枪上马杀向软通动力在济南的分公司了。面试的人不少，有不同类型的岗位。我面试的是java初级开发工程师，地点是北京。在信息登记表上，发现应聘中最差的就是我们学校和齐鲁工业大学了。我也是初生牛犊不怕虎，抱着体验的心态来了。给我面试的是一个技术经理，一看就是被代码熏陶过的——三十多岁，戴一黑边眼镜，平头，衣服邋里邋遢的。一上来就直奔主题，问了我许多java专业方面的知识，什么接口和继承比较、单例类的几种实现形式，描述一个坦克大战游戏的具体实现。。。由于压根没有什么提前的准备，答得都很一般，知道的就说，不知道的就扯，实在说不出的就委婉的说还没有学到。比较幸运的是其中在简历上有写GOF23种设计模式，但也只能说出其中的不到一半，面试官就只挑了单例模式让我说。也碰巧才研究过，就大说特说了单例类实现的饿汉式、懒汉式、枚举式、静态内部类。还把反射和序列化对单例模式的打破以及如何防止打破给一股脑说了出来，为自己增分不少。最后面试官问我，对互联网、对java开发的看法。这就是我的强项了，把之前看过的什么《大数据时代》、《黑客与画家》、《从0到1》书上的那些搬了过来，大说特说。把自己对开发、编程的无比狂热的兴趣，什么用代码中的逻辑美、用算法书写一个世界那些情怀和矫情的话都侃了不少。面试官用手推了推眼镜，调侃说：到了一定境界了。。我很谦虚的模样“就是喜欢而已”。然后他就告诉我，面试通过了。</p>
<p>然后，然后我就走了。。。</p>
<p>整个面试下来，还是有许多值得总结的地方。</p>
<ul>
<li>技术才是王道。在那些大牛面前，几个问题就能让你原型顿显，所以要把基础打牢。</li>
<li>简历一定要真实，不能有水分，否则是给自己难堪。</li>
<li>在自我介绍时就把自己整个所掌握的架构和知识都阐述清楚，这样既让面试官知道你所会所学，也说明你的思维逻辑和表达阐述能力。</li>
<li>在回答具体问题时，要具体，充实，最好通过代码例子来说明，以此表明你学习的扎实。</li>
<li>在简历中凸显出自己做过的项目和实践经历。把具体的项目实现过程提前有逻辑的总结出来。</li>
<li>能表明自己对这份工作的热爱。谈情怀和感情是很空洞矫情，但不能否认很有感染力。</li>
</ul>
<p>技术岗位的面试，说白了，就是看你能不能干活，所以，技术和知识才是核心驱动了。但是现在自己还只是<code>Heollo World</code> 的小白，什么时候才能成为真正的大牛，仰之弥高，钻之弥坚啊。</p>
<p>学习，编程，面试，北京。将会是贯穿我接下来几个月生活得关键字。始终相信，生命如掌纹般弯弯曲曲，但始终掌握在自己手中。接下来要做的，就是握紧它！</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 成长 </tag>
            
            <tag> 面试 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[港囧]]></title>
      <url>http://chuanqiang.github.io/2015/10/02/%E6%B8%AF%E5%9B%A7/</url>
      <content type="html"><![CDATA[<p>港囧的上映，震惊了华语电影界，以超高的票房、不错的口碑获得了空前的成功。细细看下来，里面有着对徐峥式幽默的延续，也有他作为一个导演对喜剧电影背后内容深度追求。</p>
<a id="more"></a>
<p><img src="/image/gangjiong.jpg" alt=""></p>
<p>电影的开篇便是满满的对香港电影和音乐的致敬，以一个“致青春”式的开场白，展现了关于青春的美好与执念，还有对爱情的思考。与《泰囧》相比，这部电影喜剧幽默的展现没有那么畅快淋漓，不像《泰囧》一样笑点那么多，那么重。徐峥试图在喜剧的背后表达点其他的东西，很多经典元素的融入呈现了满满的情怀，张国荣的歌声，星爷的经典台词都能唤起一代人的感怀。整部电影以青春期的一个吻作为线索，展现了对青春的怀念和对爱情的思考。从这一角度来说，《港囧》是《泰囧》在类型和内容上的升级。但是，喜剧、爱情、动作等过多元素的杂糅也展现出徐峥作为导演来说对情节编排和电影把握上的吃力。虽然每种元素都有，但给人的感觉却不尽兴，留给它们发展的空间很局促。这就造成了这些元素之间的断层，节奏的把控出现了偏差。尤其是在影片结尾高潮戏的过度上，竟然以一个正恶较量的情节来辅助高潮部分的过度。使人感觉有些刻意和生硬。虽然影片中那些经典元素的融入会是一张不错的情怀牌，但走马观花的引入和堆砌，反而破坏了喜剧氛围的整体感。在这一点上，《阿甘正传》无疑有着精妙绝伦的表现，让那个年代美国经典元素的编排，成为整部影片的伏笔和情节的推动，丝毫没有生硬和不适。</p>
<p>当整部影片看完，感觉总体还可以，该有的都有，也没有太明显的槽点，但就是好像少点什么东西，没有那么尽兴。这或许就是导演和优秀的导演之间的区别，导演很多，电影很多，但是伟大的作品很少，伟大的导演更少。并不是随随便便就能跨个界就导出那么优秀的作品。优秀的导演都是先要经历从生活之中到生活之上的过程，才能演绎出源于生活且高于生活的电影。</p>
<p>徐峥作为一个戏剧大师，在往导演这个角色的华丽转身中，虽然有些许不足，有需要磨合何改进的地方，但重要的是让我们看到了他有对喜剧这个题材的突破，自己对生活得表达和想要追求的东西。这，或许才是《港囧》这部电影成功的一个更合适的理由吧。</p>
]]></content>
      
        <categories>
            
            <category> 电影 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 电影 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[秋语]]></title>
      <url>http://chuanqiang.github.io/2015/10/01/%E7%A7%8B%E8%AF%AD/</url>
      <content type="html"><![CDATA[<blockquote>
<p>空山新雨后，天气晚来秋</p>
</blockquote>
<a id="more"></a>
<p>济南难得的好天气，都一股脑的挤在秋季中了。这么好的时令，我却窝在宿舍与电脑长相思守，啪啪啪的打代码。不是辜负韶光，而是由自己的考量的。一来，借此恶补java，工作在即，由不得迟缓。二来避开人潮人海，再美的风景修饰上喧嚣吵闹时，都会把它的美丽大大打折扣。</p>
<p>自从中秋回家，发现自己成长的同时，父母额头上的鱼尾纹也愈发的明显和增多。岁月在他们身上留下的痕迹比在我们身上的雕琢更加迅猛。看着他们头上清晰可见的白发，想到从小守护照顾我的家人也将慢慢老去，心中不免涌起一阵心酸。保护孝敬父母的想法让我在心里默默地起誓。父母和孩子之间，最幸运的事情莫过于我已长大，你还未老。但残酷的是我们成长的速度远远比不过岁月在他们身上的改变。所以，当我们心系父母的时候，我们的努力就不光为了自己的功成名就，还是为了自己在不久的将来，可以有能力为父母撑起一片天，像他们照顾我们一样照顾他们。他们可能不奢求我们多么出人头地，腰缠万贯，而是更多的希望我们安康幸福。但为了可以带他们领略不一样的风景，可以带他们去吃他们从未吃过的美味，为了可以弥补一个女人爱美的天性，弥补一个男人的傲娇时，为了当他们不幸染病，可以负的起高昂的医药费而让他们得到最优质的治疗时，为了让父母为你的成绩自豪时，你的成就就拥有了非凡的意义。这意义中，有一个儿子对父母情的感恩和报答。有时候想想，虽然生命是自己的，但人还是不能活的太自我，我们身上承载了太多人的期盼。我们不忍辜负，所以我们只能选择积极的成长。</p>
<p>成长的路永远是艰辛的，就像种子破土而出时的困苦。但又有什么呢？罗素说，</p>
<blockquote>
<p>参差多态是幸福的本源。</p>
</blockquote>
<p>不能整日浑浑噩噩，总得给生活点压力把。有压力才有破压后的幸福感，有张有弛才会有生活。java的学习最近陷入了泥潭沼泽，在里面搅来搅去，总不明朗。理不清头绪，搞不明逻辑。但又有什么不好呢，至少说明我还有需要为之所忙的事情，还有成长的空间。相信，在时间的见证下，总会把它搞定的，并且是服服帖帖。</p>
<p>美的风景总是在峰回路转的丛林深处，当我走的足够远时，总有醉美的景色在等我。</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 心情 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[踅踅念]]></title>
      <url>http://chuanqiang.github.io/2015/09/19/%E8%B8%85%E8%B8%85%E5%BF%B5/</url>
      <content type="html"><![CDATA[<p>每天三点一线，平平淡淡的生活倒也怡然自得。就像火山爆发前的平静，也是在积聚岩浆喷薄时的力量。现在是在冲刺，尽管没有考试。但在不久的以后，需要走进社会这个纷杂的大考场。所以，现在很重要，也很值得珍惜。</p>
<a id="more"></a>
<p>课程还好，就是感觉有些慢，真的会拖慢我的速度，没办法，在这个时候，不能不更多的为自己着想。设法找到一个方法可以最大效率的吸收知识。对于知识、成长，我真的特别饥渴。</p>
<p>读书的时间很少了，输出也不多。每次想写点东西，敲出来的都是匮乏无力的东西，看着它们无精打采的样子，也罢，还不如不写了。</p>
<p>沟通真的很重要。把自己的想法行云流水般的表达出来很不容易。崔永元、蔡康永、高晓松，很佩服他们。或睿智深刻，或通古晓今，最重要的，都有很好的口才，那是基于深厚的知识沉淀之后的侃侃而谈。不喜欢金星，一个性别主义者，也没有什么积淀，只看到了她的伶牙俐齿。</p>
<p>没有讨厌或者冷血，只是现在不是我的春天。我的世界还在下雪，看不清道路，摸不准方向。雪未定，家何在。所以，对的时间里才会出现对的人。否则，匆匆过客而已。是我的雪下错了季节，还是你的季节里开错了花？静候轮回吧，有情人，终成眷属。</p>
<p>花不恋人花自落，时不留情时将过。</p>
<p>夜已深，人未睡。</p>
<p>完</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 心情 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[无聊之后]]></title>
      <url>http://chuanqiang.github.io/2015/09/01/%E6%97%A0%E8%81%8A%E4%B9%8B%E5%90%8E/</url>
      <content type="html"><![CDATA[<p>像是被抛进了深海，没有阳光，没有鱼群，没有植物，只有压抑和和沉闷。不知道为什么会用这个既不恰当又很烂的比喻，但既然打上了，也就懒得改了。看吧，我有时就是这么懒。懒得和人说话，懒得理你，我不是傲慢，而往往是因为我很累或者情绪不太好。我不会说不开心、甚至悲伤这样矫情的字眼，因为我想做一个积极乐观的人，尽管现在的状态既不积极也不乐观。还有一个更重要的理由：我也找不出理由，找不出情绪失落的理由。总之，不想写代码，不想看书，不想说话，连美剧都看不进去了。在床上躺了一会，听了会歌，发现没有一首符合现在的心情，尽管我也不知道那是什么心情。</p>
<a id="more"></a>
<p>无聊。灵光乍现出现的词汇。</p>
<p>新生开学挤满了校园，一个个傻头楞脑，满脸新奇又表现出一副不屑。他们的出现除了意味着食堂更加拥挤，我们老了一级，就找不出什么对我有意义的事情了，哪怕是娇滴滴小学妹，一样的无聊。对，就是无聊。</p>
<p>企业一个自以为牛逼哄哄的产品经理给我们慷慨激昂的做演讲。就算你真的技术无敌、讲课一小时10k又怎样，丝毫影响不了我对你赤裸裸的不屑。我承认前面关于技术的内容还让我学到了点东西，但后面的长篇大论除了证明你媚俗的拜金主义和爱国为制高点的自大、种族偏见以及对历史的无知愚昧，还在赤裸裸的说明你怪不得是一个搞技术的。我承认这是一个刻薄又狭隘的评价，但我就是觉得你很无聊，尤其是以一种成功者的姿态居高临下的俯视并给我们滔滔不绝的灌输你的世界观。真的，幼稚又无聊。</p>
<p>在床上猛然想起了楼层的保洁阿姨。她个子不高，面色苍白，应该没有四十岁吧，在我们这些大男生中间更显得瘦小。每天兢兢业业，不单要负责我们这一层的卫生垃圾，还有那个经常停水恶臭的厕所。她毕竟是一个女人啊，哪有女人不爱干净的，但生活中总有太多的无奈和心酸，由不得她选择。有一次，看到她的儿子跟着她来做工，孩子不大，上小学的模样，他紧紧抓着他妈妈的衣角，对周围摇摇晃晃路过的大个子男生一脸的慌张和不安。不知道他这个年纪会不会对妈妈的职业有什么触动和想法，希望他是一个懂事的孩子，体谅妈妈的辛苦。</p>
<p>过着体面生活，接受高等教育的人们，却一面满口仁义道德，爱国情操，一面把垃圾随手丢在宿舍门口，然后每天在他们呼呼大睡的早上，那个瘦削的女人默默地扫走他们所丢弃的。不仅仅是垃圾。</p>
<p>相比那些无聊又气愤的事情，我更爱说说现在的天气。一直喜欢秋天天空的的明净，干净的让人怜惜。阳光好的一塌糊涂，然后每天在阳台上晒被子。。。长清这个地方曾经是那么的让我嫌弃，嫌弃他的狭小和闭塞，但现在我很庆幸自己在这里生活。绿树蓝天，粗壮的樟树和法国桐，昭显着这个小地方的岁月历史。大学城的青春活力，老城的沧桑韵味，秀气十足的小山，红瓦白墙的别墅群，熙熙攘攘的五峰路，空荡荡的K101公交车，路旁下棋拉弦的老人，黄昏一家三口散步的影子。。。虽然没有华丽的建筑，没有大城市的喧嚣，但有植根于此的回忆，有幸福快乐的年华岁月。</p>
<p>思绪荡来荡去，写着写着就没那么沉闷了。真是神奇的一件事情，文字能改善心情。想点美好的事情吧，这个世界值得我爱的有很多。</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 心情 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[一木成林，一人成军]]></title>
      <url>http://chuanqiang.github.io/2015/08/30/%E4%B8%80%E6%9C%A8%E6%88%90%E6%9E%97%EF%BC%8C%E4%B8%80%E4%BA%BA%E6%88%90%E5%86%9B/</url>
      <content type="html"><![CDATA[<p>一个人最好的状态是什么样子的。应该就像一棵独长的树，一只脱群的鸟，但树是巍峨挺拔的树，鸟事搏击天空的鸟。</p>
<a id="more"></a>
<p>夫立于天地之间，踽踽独行于喧嚣尘世，横眉冷对人情世故、悲欢离合。面对形影孤单的落寞，面对自己的喜怒哀乐，面对星星点点的时光，我们有无尽的选择：可以选择怯弱和迎合，脱离自己，拥抱世俗喧闹；可以选择坚守和超脱，耐得落寞，守住本真。不同的选择会决定你是一支军队中的小卒还是拥有一支军队的将军。人云亦云，跟着别人踏步前进的是失去自己的小卒；坚守自己，捍卫自我的是自己一个人的将军。将军就算没有小兵也是将军，小兵不管人再多却永远都只是小兵。做自己的将军，把自己活成一支军队，是遗世独立的孤傲不羁，也是心智坚强，不甘堕落的勤勉自励。</p>
<p>把自己当成一支军队来过，那就要有作为军队的一些要素和特质。</p>
<h4 id="纪律"><a href="#纪律" class="headerlink" title="纪律"></a>纪律</h4><p>军队的纪律是为了维护整个军队的秩序而设置的制度，一个人作为一个军队，那么你的每个器官，性格的每个特质，构成你生命的每个时间点，都是一个要素，一个士兵，而你需要像军队一样用军纪来管理他们，让他们和你的思想步调一致，能最快速的调动起来去完成你的使命。你要制定纪律并且严格的监督你的这些士兵，让他们严格的执行纪律。放在生活中就是行动有序，有计划有目标并且完整的实现。</p>
<h4 id="后勤保障"><a href="#后勤保障" class="headerlink" title="后勤保障"></a>后勤保障</h4><p>后勤是一个军队支撑的根本。兵马未动，粮草先行。对于一个人的军队，日常生活中合理的饮食和强健的体魄构成了你自己这个大军的后勤保障。所以，为了军队的所向披靡，战无不胜，应该把身体当作一个重要的要素。</p>
<h4 id="战斗力"><a href="#战斗力" class="headerlink" title="战斗力"></a>战斗力</h4><p> 对于一个军队来说，战斗力是它的本质。军队的意义就是因为战斗力的存在，战斗力是衡量一个军队能力的本质要求。把自己活成一支军队，也是要凸显自己的战斗力或者说是价值。所以我们需要不断学习、成长，增长自己的能力，才能在剑拔弩张、群雄割据、残酷的人类争夺战中立于不败之地。</p>
<h4 id="士气"><a href="#士气" class="headerlink" title="士气"></a>士气</h4><blockquote>
<p>人材衰靡方当虑，士气峥嵘未可非 。</p>
</blockquote>
<p>士气是一个军队的灵魂，能够激发潜能，使之积极主动且有勇气。士气在一个人的军队里，就是一个人的心态所在。年岁有加，并非垂老；心态丢弃，方堕暮年。我们应该像高尔基的《海燕》，像海明威的《老人与海》，像泰戈尔的《生如夏花》。当我们士气大振，困难也就不再那么可怕了。</p>
<p>将军需要清醒，需要自律，需要在纷繁杂乱的态势中坚守自己的城堡，所以将军注定孤独。将军不单是一个军中职位，更是“一身转战三千里，一剑曾当百万师”的气魄。</p>
<p>而一人成军中，我们就是将军。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 成长 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[关于锤子的思考]]></title>
      <url>http://chuanqiang.github.io/2015/08/27/%E5%85%B3%E4%BA%8E%E9%94%A4%E5%AD%90%E7%9A%84%E6%80%9D%E8%80%83/</url>
      <content type="html"><![CDATA[<p>没有哪一家科技公司的产品发布会能像老罗那样充满人文情怀和幽默气息，两个多小时的发布会没有枯燥和死气沉沉，反而带来一种享受以及精神愉悦，这要归功于老罗的口才和个人魅力了。从“我一个人来到科技和人文的十字路口,只看到老乔的墓碑孤零零地立在那儿”开始，老罗挣扎着在科技领域注入自己的理想主义和人文理念，把商业模型和精神层面的东西合二为一，打造具有工匠精神，体现人文情怀的科技产品以及应用软件。 </p>
<a id="more"></a>
<p>抛开锤子科技公司的产品本身，老罗进军科技圈，确实给这个行当固有的传统带来了不一样的味道。这里有让我进行深入思考和改变心智的地方。</p>
<p><strong>美就是生产力</strong></p>
<p>美是人类的普遍追求，也是一个事物的价值体现。爱美之心，人皆有之，美作为一个事物的固有也是重要属性，不仅仅在一些外观主导产品上得到追求和实现（比如服饰、艺术装饰品等），在其他领域和产品上，对美的追求也应该作为一个商品的核心驱动力。一件产品，当我们拿到手中的时候，往往第一印象在于它的“颜值”，稍后才是用户体验和产品性能，而一个美的属性带来的精神愉悦的享受会给这件产品有很大比重的增色。比如，一部手机、一盏工作灯、一个遥控器、一台电视，性能固然是王道，但好看不好看却是在性能相近的战场中进行角逐的重要砝码。以前，产品性能被人们重视，手机动不动拼内核，拼跑分；后来，用户体验开始得到企业的重视，优化操作系统，改善软件逻辑和增强人机交互。但现在，老罗在发布会上掷地有声的提出了“美，就是生产力”。把美在一件工业产品中的属性放到了一个重要的位置，不单单是产品之外可有可无、锦上添花的修饰而已，而是产品价值组成的一部分。深层次来说，是对人们追求美这种行为的一种肯定，因为美成为了一种商品属性，并且愿意有人来为之买单，也促使美成为一件产品很重要的生产力。</p>
<p><strong>理想主义与现实变现</strong></p>
<p>锤子科技公司有一个重要的转变就是把理想主义和人文情怀从高高在上、不食人间烟火的飘渺抽象，放到实实在在的商品中，从而摘掉了之前人文理念的清高，将情怀落地扎根，不仅让自己卸掉了枷锁，也让锤子科技驶入了正常的轨道。大大方方、毫不避讳的谈自己公司的理念、情怀、工匠精神，并且通过产品来诠释，使之具体。无论是可定制的坚果手机的后盖还是公益基金以及在软件上近乎极致完美的追求，都促使情怀变现，也诠释了“天生骄傲”的主题。</p>
<p>老罗是一个理想主义者，但理想主义、情怀并不排斥物质，和商品化、经济也并不矛盾。所以罗永浩通过以手机为载体输出自己的价值观，并且使之成为锤子科技公司最大的资产，这也是理想主义和商品经济的一个很好结合的实例。 优秀的品牌都不是简单地贩卖东西的：苹果贩卖的是改变世界的创新精神和“非同凡想”，星巴克贩卖的是调性和“第三空间”，莱卡贩卖的是逼格和传奇。没文化或缺少品牌能力的企业才会硬邦邦地论斤卖东西。锤子科技作为一个能输出价值观的企业，营销上贩卖情怀和理想主义也是再自然不过的。</p>
<p>尼采说：理想主义者是不可救药的：如果他被扔出了他的天堂，他会再制造出一个理想的地狱。所以无论外界对锤子公司评价如何，坚果手机结果如何，都不会对老罗产生撼动，只因为他是一个理想主义者。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 锤子 </tag>
            
            <tag> 科技 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[虫字旁]]></title>
      <url>http://chuanqiang.github.io/2015/08/23/%E8%99%AB%E5%AD%97%E6%97%81/</url>
      <content type="html"><![CDATA[<p>虫子，时时刻刻伴随在我们周围，却被忽视了好久好久，有多久呢？恐怕是从我们“长大”开始算起吧。</p>
<a id="more"></a>   
<p><img src="/image/chongzi01.png?r=54" alt=""></p>
<p>看过的关于虫子的书籍很少，想起来的只有小时候看的《昆虫记》了，貌似我们不需要去看这样的书，因为儿时的童年就伴随着各种各样的花鸟虫鱼，”余忆童稚时，能张目对日，明察秋毫，见藐小之物必细察其纹理，故时有物外之趣“，我们自然了解；而长大后更没有兴趣和理由去关注一个虫子的世界，当然除了自然学者。这本《虫字旁》扩张了我的视线，把视角从狭隘封闭的自己拉向了另一个奇妙无穷的世界。</p>
<p>一个成人，用孩童般的天真和热情，用淳朴自然地笔杆，描绘了一个虫子的世界。在这个世界里，一片水洼就是蚂蚁的汪洋大海，一片叶子就是一顶遮阳避雨的大伞，一块鹅卵石就是一座广阔的岛屿。世界对于它们很大，它们对于我们很小，它们小的足够被我们忽略，遗忘，但它们也跟我们一样，有惊心动魄的生活，有跌宕起伏的命运。</p>
<p>小蚂蚁被一根落下的枯枝砸断了腰肢，大蚂蚁赶了过来，用触角碰碰，安慰它不要慌张。用力挪开树枝，轻轻叼起小蚁，踉跄着向蚁巢行进。。。。。。</p>
<p><img src="/image/chongzi02.png?r=53" alt=""></p>
<p>广翅蜡蝉用”开花“这样巧妙的方式隐蔽自己，它们从没见过自己的母亲，独自经历风雨，自主觅食，在受到各种天敌的侵害时只能靠自己去应对。 广翅蜡蝉的幼虫不是靠飞跃或装死来逃生，也不是用丑陋怪异的模样来恐吓天敌，而是选择这样一种优雅逼真的拟态服装来安全度过自己的童年。。。。。。</p>
<p><img src="/image/chognzi03.png?r=58" alt=""></p>
<p>烟管蜗牛想在夏日的午后睡上一个美美的午觉，却未能如愿。。。。。。</p>
<p>跷蝽，绅士一般。它那细长的腿优雅地抬起放下，慢悠悠地来回踱着步，好像是这里的主人，在招呼远道而来的客人。 绿色的茎干上没有布网的蜘蛛，也没有挥舞大刀的螳螂，这么惬意的早晨，只有一帮心平气和的虫子，不争，不抢。 这里，就是它们幸福的当下。。。。。。</p>
<hr>
<p>在虫子的世界里，它们从容执着，它们生生不息。有一块路边石板缝隙里横尸遍野的战场厮杀，有胖胖的甲虫安逸的午后闲适，有千足虫面对强敌无可奈何的胯下之辱，有两只西瓜虫紧紧相拥的感人爱情，有蚂蚁误入蛛网后对命运的无奈和惶恐。。。他们就像是一面镜子，观察它们的同时，也让我们照见了自己的生活。</p>
<p>作者玩味着这一派野趣中的哲理和禅意，抬头四顾，不禁思考：“当我趴在地上看虫的时候，在我的头顶上，是否还有另一个更高级的生命，就像我看虫一样，在悲悯地看着我。“</p>
<blockquote>
<p>一花一世界，一木一浮生，一草一天堂，一叶一如来，一砂一极乐，一方一净土，一笑一尘缘，一念一清静。</p>
</blockquote>
<p>保持纯真，敬畏生命，珍惜人生。</p>
]]></content>
      
        <categories>
            
            <category> 书评 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 虫子 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[西方将主宰多久]]></title>
      <url>http://chuanqiang.github.io/2015/08/22/%E8%A5%BF%E6%96%B9%E5%B0%86%E4%B8%BB%E5%AE%B0%E5%A4%9A%E4%B9%85/</url>
      <content type="html"><![CDATA[<p>定量研究的社会学家，总是坚定的认为，只要工具或者模型得力，世界是可以被度量，进而解释的。他们会用复杂庞大的统计数据告诉你因果联系、正负相关、回归系数、维度、信度与效度……在他们严密的论证之下，问题在逻辑上至少是没有问题了。最有可能的攻击来自于另一个定量研究者的质疑，比如数据的真实性、计算的失误等。但总体来说，这还是定量研究界的圈内事，你很难从外部攻破，由此，它在一定意义上就成功了。 </p>
<hr>
<a id="more"></a>
<p>《文明的度量》无疑就是这样一本书。 </p>
<p>作者莫里斯是一位享誉西方世界的历史学家，历史学和古典文学的教授。嗯，更厉害的是精通统计。懂历史、考古、文学、统计，这样一位综合型的研究学者，视角、野心和实力都不容小觑。 </p>
<p>在他的前一本著作《西方将主宰多久》中，莫里斯强调“地理位置”这一要素，提出用地理解释历史，是纬度而非态度造成了东西方格局的变迁、西方的称霸世界。 </p>
<p>这样的解释路径并不新鲜，类似的如水、资源等等因素决定了国家势力的崛起与衰弱，在全球范围内都大有其市场，难分伯仲，谁也无法说服谁，更别说取得压倒性的胜利。 </p>
<p>所以，这一回莫里斯决定来个狠一点的，立志让所有的争论都在他手中结束。采用的方式，就是将《西方将主宰多久》的支撑材料集合成书，把底牌亮出来，将所有人的视线聚焦在材料的讨论上，转移了一部分对于结论的异议。 </p>
<p>另一方面的用意更加堂皇：为比较史学的量化做出贡献。历来，科学界偏向于承认使用数学理论得出的结论，定性分析是大势所趋。莫里斯将自己放在了大势的一边，无疑为胜算加了一码。 </p>
<hr>
<p>如果我们把本书视作为一本逻辑清晰、轮廓分明的准·论文体的学术成果书籍（事实上它就是），那么考量它合格与否时，有一个比较不成文但有用的标准，即外行人是否看得懂。 </p>
<p>不难看出，莫里斯对于写作这件事本书并没有太大的野心，在写作过程中没有炫技，只是按照一般论文的体例，将材料和观点都用在了恰到好处的地方，堪为博士论文的范本。 </p>
<p>在第一章中，莫里斯开宗明义的亮出自己的观点：唯有他建立的“社会发展指数”这个分析工具才能解释“为什么西方主宰世界”这一问题。他定义“社会发展”是对社会达成目标的能力的衡量，是一个中性词，尽量不涉及人文方面——质性研究、无法量化——的因素。这是做研究之前必须要明确的：你首先不能攻击我的研究前提（一般为名词定义），研究者在自己框的绝对领域内才能畅所欲言，前后团圆。 </p>
<p>随后，莫里斯还严谨的做了不同学者对于“如何理解社会发展”的文献综述，并且先扬后抑，不留情面的、旗帜鲜明的一一指出前人的“致命缺陷”。在学术研究中，除了“取其精华、去其糟粕”的金科玉律之外，更须知他人的不足之处即是我辈的可行之处。此谓论文中研究对象和问题的提出，并阐述可行性。<br>　　 在第二章中，莫里斯重点介绍了“社会发展指数”的确切含义。他从9个核心假设——是的“假设”，就算是定量研究也是从假设开始的——说明“社会发展指数”得以成立的前提，并最终决定采用定量分析的方法，从四个维度衡量社会发展和文明程度，即人均资源能量获取、社会组织、战争能力和信息技术。 </p>
<p>更绝的是，莫里斯把其他研究者可能会提出的指摘都设想周全，并周到的进行了自问自答，这一招不可谓不高明，诸君有余力可学习一二。如此面面俱到，莫里斯总算可以放心的开始材料的罗列和分论观点的提出。 </p>
<hr>
<p><strong>能量获取</strong>。说白了就是决定上层建筑的经济基础：食物、燃料、原材料，哪一样都能引起掠夺和战争。在这一分论点上，莫里斯从证据出发，得出总体上“交替上升”的结论：从一个长期的时间（将近16000年）来看，东西方在能量获取这一维度于不同阶段表现都不同。 </p>
<p><strong>社会组织</strong>。以城市规模为显性标识。莫里斯认为定居点的密度与其社会组织的复杂程度有着极其密切的关系，其实是“人口多——社会组织复杂——社会发展程度高”这样的逻辑。 </p>
<p><strong>战争能力</strong>。冷兵器时代差距来源于人口数量，工业革命之后则是对可调动的破坏力——主要是各种武器——的差距。如果说，莫里斯在前两个维度还有所保留的话，那么此维度开篇就以鸦片战争为例，说明西方主宰世界的局面自此变得清晰，他的态度就明朗了。顺便，借此重申了工业革命对于改变国家命运的巨大功绩：它不仅凸显了工业革命前后同一国家的巨大飞跃，也强调了工业革命前后不同国家的巨大鸿沟——主要是东弱西强的局势。 </p>
<p><strong>信息技术</strong>。能够明显感受到这是莫里斯研究的短板。定量研究的基础是数据库的完备，当证据缺乏的时候，研究就无法顺利的进行。关于信息技术的证据是零散琐碎的（主要是时间太近，还没有学者来得及在此方面得出莫里斯需要的小结），因此这一维度势必受到最大的质疑和争议。比如为了迎合定量分析的要求和便于证据的掌握，口头系统的信息技术不得分；进而，在缺乏东方信息技术证据的情况下，拿识字率做文章，得出中国识字率低于同时期的罗马的结论；另外，中国的信息技术虽然具有连续性，但总量一直浮动——特别是上升的趋势——不大，对于社会发展指数意义可以忽略不计。在一篇论文的四大分论点之一中，出现如此弱气的三段论，莫里斯自己可能也觉得说不过去，因此最后挽回了一下：“信息技术是社会发展指数4个特性中最难衡量的……似乎不大能对总体的社会发展分数造成明显的差异。” </p>
<p>说这话的莫里斯多少有点气虚吧。但照之前论证的逻辑——纵向的时间为序：农业社会讲能量获取，城市发展讲社会组织，工业革命讲武器）——信息技术是决计绕不过去的，莫里斯也只好留了短板在这里。 </p>
<p>最后，莫里斯大气的没有给出结论——实际上给出了，《西方将主宰多久》整本书都是结论——决定任人评说：在我提出的分析工具和证据的基础上，大家想想可以得出什么结论呢？ </p>
<p>毕竟，“大家对我的结论争执不休”和“大家用我提供的工具进行研究”，后者高端得多。莫里斯也毫不掩饰自己在学术上的野心：“社会发展指数当然无法解决这些问题中的任何一个，但它可能是确定其中一些问题的宝贵工具。……假如这样的事情当真发生了，我想他们问的既包括生物进化，也包括社会进化。” </p>
<p>此外，可以讨论的观点还包括莫里斯根据研究进行的对于未来发展的预测：马尔萨斯关于人口的理论对于发展的限制，人类发展终会盛极必衰，遇到无法突破的——除非发生新一轮的社会崩溃，像农业社会进入工业社会——“硬天花板”。现在普世提出的可持续发展也只是延缓了这一趋势而已。这样的预测多么令人警醒又无可奈何。 </p>
<p>最后，提醒大家一定要把封皮反过来看一下，那是极易忽略的全书精华所在，可以一目了然获取莫里斯的论文大纲及核心。</p>
]]></content>
      
        <categories>
            
            <category> 书摘 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 历史 </tag>
            
            <tag> 文化 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[无人为孤岛]]></title>
      <url>http://chuanqiang.github.io/2015/08/21/%E6%97%A0%E4%BA%BA%E4%B8%BA%E5%AD%A4%E5%B2%9B/</url>
      <content type="html"><![CDATA[<p>《岛上书店》——这样的名字确实吸引不起我的兴趣，但作为一本豆瓣和亚马逊评分很高的全球畅销书，我想我还是值得一试的。就这样，用了三个午后的时间，把它读完了，应该说是很舒服的读完了，因为书中没有情节的巨大跌宕，也没有刻意的煽情和治愈，用很温柔平静的笔调叙述了一个关于书、关于爱的故事。</p>
<a id="more"></a>
<p><img src="/image/daoshangshudian.png?r=56" alt=""></p>
<p>A.J是一座小岛上一家书店的老板，也是唯一的一家书店。他命运坎坷，妻子去世，书店不景气，珍藏书籍被盗，这一系列的打击让他的内省沦为了一座荒岛。但玛雅的出现使AJ的生活又焕发生机，让他开始渴望和外界产生联系，走出荒岛。每个人的生命中，都有最艰难的那一年，将人生变得美好而辽阔。应该感谢那些在你处于困境的岁月中所出现的人，他们使你免于在生活的打击下沦为荒岛。可怕的不是意志的消沉，而是心的闭塞，因为意志消沉的时候还能通过交流，通过别人的鼓舞重新获得勇气，但心闭塞起来的时候，就彻底看不见阳光了。</p>
<p>一个喜欢读书的人是不会孤独的，一书一世界，总能在一个封面下找到心灵的陪伴。就像作者说的：“我们读书而后知道自己并不孤单。我们读书，因为我们孤单；我们读书，然后就不孤单，我们并不孤单。”在青春期的时候，自己很内向也很自闭，总感觉这个世界和自己格格不入，那个时候总独来独往，幸好通过书籍陪伴我度过了那些百无聊赖的时光。书中说：关于政治、上帝和爱，人们都讲些无聊的谎话。想要了解一个人，你只需问一个问题：”你最喜欢哪本书？”书是一个世界，同样也映射着真实的自己。   </p>
<p>人与人之间的真挚感情是通过什么维系的？不是血缘和亲情，不是敬佩和仰慕，不是金钱和利益，而是付出和接受。我们通过爱来相互关联，在彼此身上付出我们的生命，也接受彼此的付出，我们的存在在对方的生命里有了映射，我们不再是彼此的路人甲，我们的喜怒哀乐不光是自己的情绪，也影响着对方。朋友、知己、恋人，亲人——这种美妙的联系让我们感受到存在的美好，当许多岛与岛相连作用，就会形成富饶肥沃的平原大陆。</p>
<p>无人为孤岛。</p>
]]></content>
      
        <categories>
            
            <category> 书评 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[节奏]]></title>
      <url>http://chuanqiang.github.io/2015/08/20/%E8%8A%82%E5%A5%8F/</url>
      <content type="html"><![CDATA[<p>节奏是一种与韵律结伴而行的有规律的变化。就像音乐的音律节奏，舞蹈的舞步节奏，生活得方方面面也有它独特的节奏。当你找到其中的拍节和韵律时，生活便如同一支潇洒的舞曲，在时间的叮咚中摇曳出自己的精彩。        </p>
<a id="more"></a>
<p><strong>打字的节奏</strong>。指尖在黑白分明的键盘上光影闪烁，神经末梢感触着键程的起伏和段落感，同样也感触着内心的思考和表达。抽象的思考通过手指的舞蹈伴随键盘敲击的清脆，在四四方方的屏幕上刻画出了具体的影像，或睿智的代码符号，或意味深长的方块字，或跨越千山万水的打字交流。当这一切拥有了自己独特的节奏时，便有了一种动静结合的美感。程序代码的敲击，在节奏中出现逻辑和周密；方块字的敲击，在节奏中出现思考和深刻。</p>
<p>十分喜欢机械键盘的手感和清脆，尤其是青轴，但无奈价钱动辄成百上千，仰之弥高啊。分享一个软件<a href="http://www.yingdev.com/projects/Tickeys" target="_blank" rel="external">http://www.yingdev.com/projects/Tickeys</a>，能模拟机械键盘、打字机以及其他一些声音，再配上一个好用的键盘，打字起来也是倍爽的。</p>
<p><strong> 学习的节奏</strong>。对于一门课程的学习是一个系统的过程，从初识了解，到深入分析学习，到最后能力获得和形成自己的理解，整个过程是线性的，是一步一步有系统的认知过程。在已知的基础上理解未知的知识，然后把未知变为已知，再理解未知，就像盖房子砌砖一样，是有层次和联系的。而学习的节奏是通过学习时间的规划、学习内容的渐进，思考方式的倾向甚至学习地点、使用文具的安排等等这些因素促成的。当一个学习节奏形成，会出现一个惯性，刺激你的学习欲望，梳理你的学习情绪，不会让你感觉煎熬和低落，让整个学习过程变得自然而然，水到渠成。</p>
<p><strong>生活的节奏</strong>。生活的节奏在于和谐和规律，是生活习惯和生活方式的表达。几时起几时眠，工作多长时间，放松多久，什么时候运动，什么时候交友，都最好形成自己的规律。有的人节奏快，忙忙碌碌，满满当当，像《忐忑》或者《双截棍》；有的人节奏慢，安逸舒适，像轻音乐和沙发音乐。但是有的人黑白颠倒，时序无常，就像那些跑调的歌，节奏烂的一塌糊涂，也对身体产生不好的影响。当生活的节奏养成，会变得规律，身体到了那个时候就会产生出适应那个时候的机制，帮助你更好的适应。</p>
<p>其他方面也会涉及到节奏，比如跑步的节奏，说话的节奏。。。节奏带来惯性，帮助你向前；节奏产生和谐，带来自然而然的舒适；节奏不是千篇一律，而是有章可循，是适应和找到自己。</p>
<p>节奏的前提是养成。靠的是日复一日的行动和坚持。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 成长 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Part of Me]]></title>
      <url>http://chuanqiang.github.io/2015/08/18/Part%20of%20Me/</url>
      <content type="html"><![CDATA[<p>每个人都是多面的，无论你相不相信。就像一张白纸都有正反两个面，作为一个复杂的生物，每个人也都有不同的自己。</p>
<a id="more"></a>
<p><img src="/image/part.png" alt=""></p>
<p>自己看自己在lofter上写的东西，会怀疑博客里面表现出的那个人是不是自己，lofter就像是一面炫耀自己的墙，贴满了文艺、上进的一面，而把自己的不堪藏在了墙的背面。输出的过程中，总想描绘一个积极美好的结果，就像在描绘希望中的自己。描绘的笔墨多了，仿佛墙上的那个人就是自己，或者是自己的全部。向阳面里的自己开的肆无忌惮，花枝招展，向人们频频炫耀，而背阴面中的自己连自己写的文字都捂着口鼻，不愿提及。想丢掉它，想忽视它，想改变它。但首先得接受和正视它——那个背阴面的自己。</p>
<p>我在文字上是个自私的人，总围绕自己的主观臆想，沉醉在个人感受的微醺中醉眼看世界，把自己的夸夸其谈当成公理来言之凿凿的陈述。语言的巨人总是行动的矮子，话语权的优先级落了思考和行动一个长征的距离。</p>
<p>向左还是向右，这是一个问题，但方向的决定不一定至关重要，关键还是得看能不能走下去。犹豫源于挑剔和害怕承担结果，想的多有时候除了徒添烦恼外一无是处，理智和感觉，哪个重要？当理智解决不了问题时，就跟着感觉走吧，毕竟那是心的方向。</p>
<p>目光的威力有时比激光来的大，会让我惧怕，会脸红心跳，会血压陡升，就像施魔法一样，让你不战而屈己之兵。活在别人的目光里，从而害怕尝试、害怕因为自己的行为招致目光的聚集，会慢慢变得中庸，从而平庸。这往往是自己的虚荣心作祟，像是爬满了虱子的一件华丽的袍子；还因为自己内心的脆弱，没有内心的强大做后盾，连别人的目光都承受不起了。还有，可能别人压根都没你想的那么关注你，不要放大自己，所以有些事自己认准了就去做吧，管别人怎么想呢，碰到别人的不解和怀疑甚至取笑，你就自己心中默念：丫的，懂个屁！乔布斯已向我们证明：</p>
<blockquote>
<p>Think Differents.</p>
</blockquote>
<p>喜欢安静但讨厌孤独。最理想的状态是做一只蜗牛吧，心情大好的时候晒着太阳和别的蜗牛指点江山、口若悬河，或者开开玩笑，将讲荤段子，回忆童年糗事，畅想今后生活，当一只嘚吧嘚吧嘚的二货蜗牛。暮色降临的时候，就各回各家，找个无风安静的石块后面，缩进壳里，无人打扰，看书写字、听歌游戏、发呆睡觉。做一只安静的美蜗子。还有一点，买房钱都省了，顺着风景一路走，路之所至皆为家。当看到一个人吐沫星子横飞，聒噪的像是午后的知了，他也可能背后是个不苟言笑、惜字如金的人；遇到一个人木讷无趣、半天挤不出一个屁，也只是没遇到有说话欲望的人。卓别林给我们带来欢笑的同时，却深受抑郁症的困扰，每个人都有不同的一面，也正是不同才造就了丰富和精彩。所以我们认识一个人的时候，才会随时间慢慢发现他的不同。每个人都像一本永远也读不完的书，总会在峰回路转处有别样的惊喜。</p>
<p>扯了这么多，都是些然并卵，龚自珍言“纵使文章惊海内，纸上苍生而已”，何况自己扯犊子的闲篇碎语。重要的是以后慢慢了解自己，接受自己，改变自己，相信自己。    </p>
<p>因为，“我”只是我的一部分，我的全部才是我。    </p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 独白 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[把时间当作朋友]]></title>
      <url>http://chuanqiang.github.io/2015/08/16/%E6%8A%8A%E6%97%B6%E9%97%B4%E5%BD%93%E4%BD%9C%E6%9C%8B%E5%8F%8B/</url>
      <content type="html"><![CDATA[<p>把时间当作朋友。这是一本书的名字，也是以后自己心智上的一个转变。我把它当作个人管理道路上的一个路标和推动器。</p>
<a id="more"></a>
<p><img src="/image/xinzhi.png?r=56" alt=""></p>
<p>在书中，作者说：</p>
<blockquote>
<p>我有个朋友叫做时间。她跟我真可算作两小无猜，默默陪了20多年我才开始真正认识她。她原本没有面孔，却因为我总是用文字为她拍照，而因此可以时常伴我左右。她原本无情，我却可以把她当作朋友，因为她曾经让我明白，后来也总是经常证明，无论做什么事情，只要我付出耐心，她就会陪我甚至帮我等到结果，并从来都将之如实交付与我，从未令我失望。正是因为有了时间作为朋友，我才可能仅仅运用心智就有机会获得解放。</p>
</blockquote>
<p>读完这本书，发现收获最大的不光是处理和时间之间的关系，更重要的是，明白了心智的重要性。没有什么要比发现、培养、呵护、调整自己的心智更重要的事情了。一旦我们的心智出现了问题，我们就会因为错误的理解而做出错误的判断，因此浪费的时间往往不仅无法估量，更可怕的是，这种错误和浪费甚至可能根本无从知晓。</p>
<hr>
<p><strong>书中的new get（）</strong></p>
<h2 id="计划和时间"><a href="#计划和时间" class="headerlink" title="计划和时间"></a>计划和时间</h2><ul>
<li>计划只有在行动之后才能明确其可行性，并进行完善。</li>
<li>做长期计划显然是正确的并且是必需的，但是，不是每个人都有能力制作长期计划的。这是一种能力，也几乎是最重要的能力之一，然而，这需要挣扎，需要努力，需要从一点一滴开始。不要一上来就开始制定过分长期的计划。哪怕制定一个一星期的计划，都不是很容易的事</li>
<li>需要管理的不是时间，而是自己。转变自己对待时间的观念，珍惜时间的口号是空洞乏力的，要做切实可行的计划，计划尽量具体和明确，具有可执行性。（MyPlan）<h2 id="兴趣"><a href="#兴趣" class="headerlink" title="兴趣"></a>兴趣</h2></li>
<li>往往并不是有兴趣才能做好，而是做好了才有兴趣。 </li>
<li>一定要问清楚自己这个问题：我不喜欢做这件事情有没有可能仅仅是因为这件事儿我并没有做好？要是因为自己没有做好而不喜欢，就要分辨另外一件事儿了：做好这件事情究竟对自己有没有意义？如果有，那就要努力做，直到做好为止。<br>遗忘</li>
<li>我们的大脑有一个关于痛苦的遗忘机制，把痛苦的经历更快地遗忘。正是因为我们的大脑有这样的功能，上了岁数的人往往会产生怀旧情绪，往往会慨叹“世风日下”，可这明显不是事实。因为，过去几千年，每一代老年人都觉得世风日下，可是如果他们的感觉是真实的，那我们现在应该活在地狱中才对。狄更斯说得好：这是一个最坏的时代，这是一个最好的时代。</li>
<li>如果说记忆本身是葡萄，那么回忆的过程就是发酵。每个人都有努力使自己的历史变得更加清白、更加美好的倾向，所以，往往会不自觉地给自己的记忆进行各种形式的修补、甚至进一步精加工，然后才会觉得心满意足。 <h2 id="优秀与卓越"><a href="#优秀与卓越" class="headerlink" title="优秀与卓越"></a>优秀与卓越</h2></li>
<li>克林顿的夫人希拉里就观察到这样一个现象，“所谓优秀的领导，能够把人们带到他们想去的地方；而所谓卓越的领导，能够把人们带到他们应该去的但是没想到过要去的地方。”</li>
<li>如果一个人是正确的，他的世界就会是正确的。</li>
<li>弱者相信运气，强者只究因果<h2 id="人脉"><a href="#人脉" class="headerlink" title="人脉"></a>人脉</h2></li>
<li>往往只有优秀的人才拥有有效的人脉。“公平交换“是维系人脉的根源，优秀的人随时随地都可能要回避“不公平交换”的企图，他们才更加注重自身的质量，知道不给他人制造麻烦，独善其身是美德。</li>
<li>生命中许多事是无法把握的，但可以把握自己，专心打造自己，把自己打造成一个优秀的人，一个有用的人，一个独立的人，比什么都重要。打造自己，就等于打造人脉（公平交换的机制）</li>
<li>学会独善其身，以不给他人制造麻烦为美德，用你的独立赢得尊重。</li>
<li>一个人的幸福程度，往往取决于他多大程度上可以脱离对外部世界的依附。 <h2 id="耐心"><a href="#耐心" class="headerlink" title="耐心"></a>耐心</h2></li>
<li>懒惰，是缺乏耐心而不愿投入时间精力去做任何事情。</li>
<li>短视，是缺乏耐心而不能运用心智去展望未来。</li>
<li>草率，是缺乏耐心而不愿投入时间精力去认真地调查研究。</li>
<li>肤浅，是缺乏耐心而不能运用心智深入思考。</li>
<li>夜郎自大，是因为缺乏耐心而拒绝观察外面的世界。</li>
<li>所有的成见与偏见，都是因为缺乏耐心而不愿投入更多的时间和精力去认真分辨每个个体的特征，而宁愿用粗暴简单的分类方法替代思考。</li>
</ul>
<blockquote>
<p>青春不是年华，而是心境；青春不是桃面，丹唇，柔膝，而是深沉的意志，恢宏的想象，炽热的感情；青春是生命的源泉在不息的涌流。</p>
</blockquote>
<p>最后偶然想起这句话，是以为尾，以自励。</p>
]]></content>
      
        <categories>
            
            <category> 书摘 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 成长 </tag>
            
            <tag> 心智 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第七天（余华）]]></title>
      <url>http://chuanqiang.github.io/2015/08/11/%E7%AC%AC%E4%B8%83%E5%A4%A9%EF%BC%88%E4%BD%99%E5%8D%8E%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>这本书在书架上陈列很久了，是朋友送的。拥有的东西总不知珍惜，害它在那吃了那么多的灰。书几乎是一口气读完的，除了读纸质书的畅快淋漓之外，感触更多的是深深的压抑，并不是为那个死者的世界，而是荒诞冷酷的现实世界。</p>
<a id="more"></a>
<blockquote>
<p>艺术家用谎言来道出真相，而政客用谎言来掩盖真相。</p>
</blockquote>
<p>余华虚构了一个荒诞而又真实的故事，让一个刚刚死去的人进入到另外一个世界，让现实世界像倒影一样出现，在一个死者的角度来描绘现实。我们不知道人死去会怎样，也不知道地狱和天堂的是什么样子，但在死者自述的七天里，却看到作为一群死无葬身之地的死者聚集的世界是至善的、温暖的；车水马龙的现实世界反而是荒诞的、冷酷的。这种对现实社会巨大的讽刺和批判是这本书熠熠生辉的地方，因为，它让这本书距离现实如此之近。花前月下、心灵鸡汤、矫情世俗的书大行其道，晨钟暮鼓的声音越来越少。这本书像是在用放大镜看这个社会的疮口，那么丑陋，那么触目惊心。</p>
<p>现实世界里，作者找不到安慰，反而把最抒情、最温暖的地方放在了一个死者的世界，那是一群买不起墓地因而死无葬身之地的人所构成的世界，这个世界不是乌托邦，不是世外桃源，但是十分美好。树叶的声音，悦耳动听，月光下的向日葵，盛开的灿烂美丽 。这片土地上的人什么都没有， 甚至肉体都随着时间逐渐腐烂褪去，只剩下坚硬的骨头，头骨处的眼窝空洞洞的，但每个人都能感受到彼此的笑容。这里是温暖的，这里的人不需要墓地，心安处即是天堂。     </p>
<p>但是，这么美好的地方，难道真的需要死去后才能到达吗，越是温暖美好，越是无奈与残酷。 作为一个有温度的作家，面对当下社会的荒诞，作者如鲠在喉，不吐不快，从而写下了中国的疼痛，用一个作家的方式来向社会呼唤良知，追寻公正。</p>
<blockquote>
<p>在这个物质过剩的年代，却有人因物质短缺而死去，这种智力上的荒谬愚蠢和道德上令人厌恶让人感到震惊和耻辱。</p>
</blockquote>
<p>“朱门酒肉臭，路有冻死骨”还在上演，经济和科学在进步，道德却在沦丧，我们很难评说出这个时代的进步与否。可能一百多年前狄更斯在《双城记》中早已为今天这个时代做了大胆的评定：</p>
<blockquote>
<p>这是最好的时代，这是最坏的时代；这是智慧的时代，这是愚蠢的时代；这是信仰的时期，这是怀疑的时期；这是光明的季节，这是黑暗的季节；这是希望之春，这是失望之冬；人们面前有着各样事物，人们面前一无所有；人们正在直登天堂，人们正在直下地狱。</p>
</blockquote>
<p>或许我们的生活感触不到这个世界真实的样子，我们生活的安逸舒适，那些个死刑冤案、食品安全、强行拆迁、贪污腐败、暴力执法等等一系列事件都貌似离我们很远，你可能会问，这个世界真有那么不堪嘛，不是小题大做吧。面对不公和伤害的可能不是社会中的大多数人，但你要明白，当我们对社会中的这些真实存在的冷和惨，欺和骗无动于衷、事不关己高高挂起的时候，你怎么能保证下一个遭遇的人不会是你呢？</p>
<p>我们希望有一个美好的地方，那里每个人都平等而又友爱，不会有社会的不公和伤害。但却不应该是书中那个名字——死无葬身之地。</p>
<p>而是叫今天，叫当下。</p>
]]></content>
      
        <categories>
            
            <category> 书评 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[人类简史：从动物到上帝]]></title>
      <url>http://chuanqiang.github.io/2015/08/09/%E4%BA%BA%E7%B1%BB%E7%AE%80%E5%8F%B2%EF%BC%9A%E4%BB%8E%E5%8A%A8%E7%89%A9%E5%88%B0%E4%B8%8A%E5%B8%9D/</url>
      <content type="html"><![CDATA[<blockquote>
<p>十万年前，地球上至少有六种不同的人<br>但今日，世界舞台为什么只剩下了我们自己？<br>从只能啃食虎狼吃剩的残骨的猿人，到跃居食物链顶端的智人，<br>从雪维洞穴壁上的原始人手印，到阿姆斯壮踩上月球的脚印，<br>从认知革命、农业革命，到科学革命、生物科技革命，<br>我们如何登上世界舞台成为万物之灵的？<br>从公元前1776年的《汉摩拉比法典》，到1776年的美国独立宣言，<br>从帝国主义、资本主义，到自由主义、消费主义，<br>从兽欲，到物欲，从兽性、人性，到神性，<br>我们了解自己吗？我们过得更快乐吗？<br>我们究竟希望自己得到什么、变成什么？</p>
</blockquote>
<a id="more"></a>
<p><img src="/image/renleijianshi.png?r=56" alt=""></p>
<p>《人类简史》——从动物到上帝，为我们一一阐述了这些问题。作者以极其广阔的思路和相当毒辣的笔触，从人类心智发展的角度分析了人类文明的变迁。作者带着对”人类中心主义“的痛恨和对人类命运的深深忧虑来行进了对历史的思考和解读。        </p>
<p>书中把人类历史大致分为四个阶段：</p>
<ul>
<li>万年前的大脑认知革命（有能力谈八卦，想象不存在的事物，让陌生人开始合作、建立组织）</li>
<li>1.2万年前的农业革命（让我们渴求更多、生产更多，分工分职愈趋细腻）、</li>
<li>500年前的科学革命（带来快速进步，让我们拥有上帝的力量，也带来毁灭）</li>
<li>全球大一统、人类大融合的关键因素——金钱、帝国、宗教</li>
</ul>
<p>作者对历史的解读有许多地方颠覆了我们的固有认知。</p>
<p>语言是作为人类我们所拥有的最独特的功能。人类语言真正最独特的功能，并不在于能够传达关于人或狮子的信息，而是能够传达关于一些根本不存在的事物的信息。通过语言，人们可以进行虚构，开启了认知革命。无论是现代国家、中世纪的教堂、古老的城市，或者古老的部落，任何大规模人类合作的根基，都在于某种只存在于集体想象中的虚构故事。例如教会的根基就在于宗教故事。像是两个天主教信徒，就算从未谋面，还是能够一起参加十字军东征或是一起筹措资金盖起医院，原因就在于他们同样相信神化身为肉体、让自己被钉在十字架上救赎我们的罪。所谓的国家，也是立基于国家故事。两名互不认识的塞尔维亚人，只要都相信塞尔维亚国家主体、国土、国旗确实存在，就可能冒着生命危险拯救彼此。至于司法制度，也是立基于法律故事。从没见过对方的两位律师，还是能同心协力为另一位完全陌生的人辩护，只因为他们都相信法律、正义、人权确实存在。</p>
<p>多年来，人类已经编织出了一个极其复杂的故事网络。在这个网络中，虚构的故事不仅存在，而且力量强大。这种通过故事创造的现实并不是谎话。所谓想象的现实，指的是某件事情人人都相信，并且只要这项共同的信念仍然存在，力量就足以影响世界。通过文字创造出想象的现实，就能让大批互不相识的人有效合作，而且效果还不只如此。正由于大规模的人类合作是以虚构的故事作为基础，只要改变所讲的故事，就能改变人类合作的方式。只要在对的情境之下，这些故事就能迅速改变。因此，自从认知革命之后，智人就能依据不断变化的需求迅速调整行为。这等于开启了一条采用“文化演化”的快速道路，而不再停留在“基因演化”这条总是堵车的道路上。走上这条快速道路之后，智人合作的能力一日千里，很快就远远甩掉了其他所有人类和动物物种。</p>
<p>在认知革命之后，人类开启了农业革命。作者称之为”史上最大的一桩骗局“。一是定居的农业劳作方式使人类渐渐脱离动物运动的采集生活，引发了大量疾病。二则以谷物为主的饮食不符合人类杂食猿类本质的身体需求。三是对主食的依赖不如广泛采集食物有保障，一遇自然灾害便造成大量死亡。四是农业生产对土地的占有大大增加了人类的暴力行为。因此，与其说人类驯化了植物，不如说植物驯化了人类，使人类彻底放弃了更丰富多变，更健康安全的采集生活，而进入到农业奢侈生活的陷阱之中。我们从农业革命能学到的最重要一课，很可能就是物种演化上的成功并不代表个体的幸福。研究像小麦和玉米这些植物的时候，或许纯粹的演化观点还有些道理。但对于像是牛、羊、智人这些有着复杂情感的动物来说，就必须想想演化上的成功会对个体的生活有什么影响。每当人类整体的能力大幅增加、看来似乎大获成功，个人的苦痛也总是随之增长。</p>
<p>虽然作者质疑农业革命之后现代生活的病态，但并不是对历史进程的否定。之后历史的产物：国家、金钱、宗教、科学、战争、人文主义。。。作者都进行了深刻的解读。作者认为，虽然我们无法解释历史做出的选择，但有一点可以确定：历史的选择绝不是为了人类的利益。随着历史演进，毫无证据显示人类的福祉必然提升。没有任何证据，证明对人类有益的文化就会成功扩张，而对人类无情的文化就会消失。</p>
<p>在随后的科学革命中，作者一针见血的指出，科学研究一定得和某些宗教或意识形态联手，才有蓬勃发展的可能。意识形态能够让研究所耗的成本合理化。而代价就是意识形态能够影响科学的进程表，并且决定如何使用研究成果。在科技推动下，诞生了资本主义、市场经济还有消费主义。对于未来我们充满乐观和信任。我们能使用的能源其实无穷无尽。讲得更精确，唯一的限制只在于我们的无知。但是，人类的不负责任，贪得无厌，又极具破坏力，结果给地球生态带来了一场灾难。</p>
<p>最终，回归到了对于人性的探讨上，作者试图用历史的观念和论证方法来探寻快乐的根源，从而质疑在科技发展如此快速的今天，我们对世界的颠覆、对人类自己的颠覆。到了最后，人类失去的，可能是自己这个物种。人类现在应该关注的不是能做什么，而是想要什么。</p>
]]></content>
      
        <categories>
            
            <category> 书摘 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 历史 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[一步步向前]]></title>
      <url>http://chuanqiang.github.io/2015/08/09/%E4%B8%80%E6%AD%A5%E6%AD%A5%E5%90%91%E5%89%8D/</url>
      <content type="html"><![CDATA[<p>我应该算是一个随遇而安的人，不想被束缚和承受压力，闲看庭前花开花落，漫随天际云卷云舒，觉得最好的职业就是图书管理阿姨和宿舍看门老大爷。但最近发现，自己偏离了以前的观念，开始变得追逐功成名立，开始对成功有了渴望并且还给予了世俗的定义。可能是站在这个尴尬的年纪，自己才越发的想证明自己，向别人，向自己。        </p>
<a id="more"></a>
<p>开始尝试经营自己，发现生活不能只是信马由缰，随心所欲，因为人有惰性，它会不知不觉让你变得平庸和容易满足，也会降低你对快乐更高品质的追求。快乐也分三六九等吗？我认为是的，因为快乐所带来的满足感持续的时间是不同的，并且快乐对于以后所产生的意义也是不同的。毕竟，猪也是会笑的。       </p>
<p>生活的惰性和懒散要求我们需要学会管理自己，自己的时间、自己的生活。开始接触一些GTD的书籍，写自己的计划清单，把时间定量定性，早上想想每天干什么，要完成什么，开始会各种烦躁，小念头蹦出来左右自己，但总归在尝试，在慢慢变好。开始有计划和有目的的安排自己的时间和精力，把生活通过一个个清单逐渐联通到未来想象的自己。其实，管理是一种实践，其本质不在于“知”，而在于行。其验证不在于逻辑，而在于成就。管理同样也体现了一种态度，那就是，我想追求更好的自己。</p>
<p>现在目标很清晰，前方的路很明确，希望自己也更加务实。一步步走向未来里。</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 成长 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[漫长当夏]]></title>
      <url>http://chuanqiang.github.io/2015/08/02/%E6%BC%AB%E9%95%BF%E5%BD%93%E5%A4%8F/</url>
      <content type="html"><![CDATA[<blockquote>
<p>“哥们儿，放假回家了吗？”<br> “没，要考研，在学校复习呢。。”<br> “喂，放暑假了，有空出来聚聚啊。”<br> “不行啊，最近公司加班，抽不出空啊。。”</p>
</blockquote>
<a id="more"></a>
<p>叶子在阳光的烘烤下打着卷儿，知了无力的呼喊。放下手机，心中怅然若失，仿佛自己被生活遗漏在角落里，看着别人的一往无前，衬托出自己的止步与落后。今年的夏天依旧炙热，但却是万物生长的节气，同学朋友们结婚生子的尽享人伦之乐，实习工作的忙碌的热火朝天，复习考研的每天浴血奋战。这个盛夏好像孕育着一些什么，给予了人们的希望和寄托，期盼着来年的春暖花开。我倒成了局外人，安逸的像是午后稍过，没有一点风声。</p>
<p>时光真的能安逸一颗澎湃的内心，生活也能褪去一个人的激情。当你没有压力，没有督促，没有紧迫感的时候，时间就会拉长、变软，让你舒适、让你安逸，忘掉你的目标，埋没你的心智，像是人到暮年。经常安慰自己，我有在看书啊，但是书中的世界并不是你的生活：看历史，前尘隔海，古屋不再；看小说，梦呓千年，一醒即碎。书的作用是学会面对和处理现实，并不是你的温柔乡。要走进去，更要走出来。要想以后不被生活束缚，能够驰骋生活，必须要有一技之长来征服生活，先过活然后生活。</p>
<p>很羡慕那种盯着屏幕上的蝌蚪符号，指尖在键盘上光影闪烁敲代码的样子，最好是代码千千行，调试一遍过的酥爽。时常想象自己抱着笔记本在职场混生时牛逼哄哄的场景，钟情于这种搞技术的行当，不用穷于交际，不用阿谀奉承，靠技术吃饭，不用和你扯那么多，笔记本一打开，啪啪啪打给你看，我能做，并且到哪都行。平时敲敲代码，烦时打打文字，不亦乐乎啊。自己心里很明白，在工业4.0，在21世纪，互联网将是这个世界的宠儿，所以对自己选的专业很有信心；也明白一旦踏上IT这个行业，也意味着无休止的脑力劳动和加班熬夜的体力劳动。用以前写作文常用的一句话：“只有流血的手指才能弹出世间的绝唱，只有经历地狱的磨难才能创造出天堂的力量。”哈，鼓动人心的说辞必须矫情和华丽。。。。。。</p>
<p>目标是有的，只是缺少一往无前的动力和坚持。训斥自己，丢掉烦躁和轻浮吧，丢掉浪荡和不安吧，丢掉惶恐和张望吧，丢掉对别人的羡慕和暂时的蝇头小利吧。只需要一心一意，慢慢积累，守得花开见月明。磨刀不误砍柴工，成功不在于起步的早和晚，而是路上的快与慢。</p>
<p>漫长当夏，漫长当下。相信现在的蹒跚学步，定是以后的策马扬鞭！</p>
<blockquote>
<p>“喂，你在学校学习吗？我也回。”</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 成长 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[《皮囊》 蔡崇达]]></title>
      <url>http://chuanqiang.github.io/2015/07/27/%E3%80%8A%E7%9A%AE%E5%9B%8A%E3%80%8B%20%E8%94%A1%E5%B4%87%E8%BE%BE/</url>
      <content type="html"><![CDATA[<p>人生或许就是一具皮囊打包携带着一颗心的羁旅。</p>
<a id="more"></a>
<p><img src="/image/pinang.png?r=49" alt=""></p>
<p>皮囊是与生俱来的，无论是温暖的、安逸的、疼痛的、脆弱的，还是可耻的皮囊，都包裹着一个灵魂。我们的心可能会厌恶皮囊，可能会责怪他为什么要束缚自己：想去更大的城市？想过更优质的生活？想活的潇潇洒洒？但是一颗活着的心是无法来拒绝皮囊的。皮囊标识出生命的限度，生活的限度，生命和生活之所以值得过，也许就是因为他有限度，他等待着、召唤着人的挣扎、愤怒、斗争、意志、欲望和梦想。所以，我们的心，又如此的贪恋着这具皮囊，我们恐惧疾病，我们落叶归根，我们的心随着皮囊老去。书中残疾的父亲，坚韧的母亲，被世俗璀璨的张美丽，两个阿小的命运安排。。。命运的苦难与挣扎，背后都是一颗心的躁动和不羁。我们都是带着皮囊在世间忙碌的灵魂，这副皮囊的用处就是来经历各种风吹雨打和尘世沧桑。所以我们的灵魂才有地方可以安放。</p>
<p>以前我绝对是一个唯物主义者，不相信鬼怪神明，对一切神灵崇拜都当成封建主义思想并嗤之以鼻。但看到书中母亲对神灵的信奉，当他在面对各种苦难的时候，还能用瘦削的肩膀撑住整个家庭，我一下子释然了。神灵的存在与否并不重要，重要的是心中的信仰，她是你身陷囹圄时的精神力量。支撑一个人从生到死、走过茫茫尘世的力量有两个：一个是子女，他们是我们以后的寄托，我们不在了，他们还流动着我们的血液，让我们的死不那么空虚，至少还留有生命在这尘世。另一个则是信仰，让我们知道还有前世来生，这辈子的果怀着上辈子的因，这辈子的因结着下辈子的果，所以促使我们正视苦难，一心向善。</p>
<p>看别的生命，看别人的故事，常常也会发现自己。 在生活中、行动中遭遇的人，认识他们，照亮他们，由此你就知道自己是谁。这就是人的世界，所以人必须在人的世界里求取意义。就像作者所阐述的：人各有异，这是一种幸运，一个个风格迥异的人，构成了他们所能体会到的丰富的世界。但人的本质上又那么一致，这也是一种幸运：如果有心，便能通过这共通的部分，最终看见彼此，映照出彼此，温暖彼此。</p>
<p>现在自己的皮囊还很青涩，没有雨打风吹，但这不影响我们内心的丰盈。我不相信成熟能让我们接受任何东西，成熟只是让我们更自欺欺人。</p>
]]></content>
      
        <categories>
            
            <category> 书评 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 成长 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[断舍离]]></title>
      <url>http://chuanqiang.github.io/2015/07/23/%E6%96%AD%E8%88%8D%E7%A6%BB/</url>
      <content type="html"><![CDATA[<p>断舍离是日本女性山下英子通过瑜伽参透了放下心中执念的修行哲学“断行，舍行，离行”后提出的一种生活哲学。它意在提倡对日常生活家居环境的收拾整理，改变意识，脱离物欲和执念，过上自由舒适的生活。其实不光是在家居环境，断舍离的思维方式作为一种生活哲学，可以渗透到人生的许多层次里。</p>
<a id="more"></a>
<blockquote>
<p>断，断绝执念，放下欲望对生命所带来的束缚。</p>
<p>舍，顺从自己的内心，割舍既有。</p>
<p>离，断与舍最终的状态，出离心，驱离要求更多的幸福欲求，回归生活本真。</p>
</blockquote>
<p>断舍离是一种禅意，有点像佛家的修行，以对生活的整理、舍弃和思考为基础，达到心灵的简约和净化，脱离对生活的执念。</p>
<p>说的有些虚无缥缈，到底怎样把断舍离运用到实实在在的生活中呢？在阅读的过程中我也在积极的思考这个问题，并结合自己的实际和喜好，最终也窥探到了属于自己的断舍离。共勉。</p>
<h2 id="一-生活环境的断舍离"><a href="#一-生活环境的断舍离" class="headerlink" title="一. 生活环境的断舍离"></a>一. 生活环境的断舍离</h2><p>作为一个在校大学生，生活环境的整理和收纳并没有像是在家庭中那么繁琐，因为大部分时间住校，宿舍基础设施的配给和生活用品都很有限。基本上满足需的状态即可。</p>
<ol>
<li><p>生活必需品（被褥 洗浴用品 鞋衣帽）：够用，耐用，好用，适量，不堆叠，有即是需。</p>
</li>
<li><p>生活附属品（电器 书籍 等）：对一件物品最大的诋毁是买来吃灰。物尽其用才有价值，物处其位才有美感。书桌面不是堆放的场所，而是使用的场所。一切从简，简约才能有效率和体现每件东西不可或缺的价值。此时，当下，不光活在当下，还要用在当下。例如，电脑，手机，kindle 即可以满足学习、娱乐、通讯、阅读等重要内容，这样每件东西就发挥了它最大的价值。一只好的钢笔抵过纷杂的圆珠笔、中性笔；一个好的耳麦带来高品质的音质享受；一个好用美观的工作灯渲染了一尺见方的氛围。当有需求再去购物网站shop，而不是逛购物网站寻求need。物品的购买在预算范围内尽量买适合和喜欢的，不能图便宜而买不喜欢或者不需要的，否则，对自己和对物品都是不负责任。</p>
</li>
<li><p>装饰和消费品：代表一定的生活品味和个人风格。物质是为精神服务的，精神不可以成为物质的奴隶。在便利舒适的基础上展现美感。推崇极简的风格，简洁意味着专注。留白的美感。</p>
</li>
</ol>
<h2 id="二-APP的断舍离"><a href="#二-APP的断舍离" class="headerlink" title="二. APP的断舍离"></a>二. APP的断舍离</h2><p>作为一个90后，信息的纷繁远远比生活来的复杂。各种网络资讯，各种社交软件，各种自媒体，我们的手机和电脑桌面成了最应该断舍离的地方。拿手机为例，你的手机上是不是装了太多极少使用的APP，往往感觉“食之无味，弃之可惜”。其实，他们占用了手机内存，使手机卡和慢，偷走了流量和电量使手机弱和虚，更影响了效率和心情。像那些有强迫症的人，看到消息不点难受。。。总之，手机和电脑的断舍离对生活和工作也有很大的意义。</p>
<p>本着断舍离的态度，我的手机APP如下：</p>
<ol>
<li><p><strong>通讯社交的需求：</strong>电话簿及拨号。短信。QQ（交流，传文件，闲时进空间看朋友状态）。微信（公众号及一些抛弃了QQ的朋友的交流）。</p>
</li>
<li><p><strong>影音的需求：</strong>网易云音乐（好音乐，不将就。和电脑同步）。视频（手机自带，需求少）。相机。两个优秀的修图软件：Snapseed、VSCO Cam。</p>
</li>
<li><p><strong>学习及读写的需求：</strong>阅读（自带，可订阅，把一些喜欢的自媒体和杂志放到这里）。有道词典。有道云笔记（码字的主战场，和电脑同步）。Pocket（手机网页内容收集器，排版优秀）。wps：（必需，和电脑同步）。芝士（筛选优秀书籍，然后用kindle下载）。数字尾巴（数码）。</p>
</li>
<li><p><strong>生活和购物的需求：</strong>便签（超好用，文字音频图片，随手记）。百度云。高德地图（出门必备）。支付宝。莫比健身。ＡＢＢＹＹ　Ｔｅｘｔ（扫描文字到手机）。春雨医生。美团。录音机。时钟（赖床必备）。计算器。指南针（掉向时）。自带画板。自带邮件（整合１６３和ＱＱ邮箱）。</p>
</li>
<li><p><strong>分享和输出的需求：</strong>微博。贴吧极速版。Ｌｏｆｔｅｒ。</p>
</li>
</ol>
<p>断：精简信息输入源头，减少不必要的ＡＰＰ。舍：减少使用社交网络、即时通讯，ＡＰＰ使用频率低时果断卸载。少看微博、朋友圈。离：把手机当做辅助生活的工具，而不是耗费时间经历的场所。回归手机的本质。        </p>
<h2 id="三．生活态度的断舍离"><a href="#三．生活态度的断舍离" class="headerlink" title="三．生活态度的断舍离"></a>三．生活态度的断舍离</h2><p>想要幸福的生活，我们需要先放下对生活的执念。烦恼的根源是我们生活在自己在思想所编织的牢笼之中，自己是念头的囚犯。断舍离要我们做的是进一步剪断囚禁我们的枷锁，突破固有思维的桎梏，感受到自由解脱的滋味。断，停止负面的思考模式，积极乐观的面对问题；舍，顺从自己的心，割舍既有；离，回归生活本质，不被欲望所束缚。</p>
<ol>
<li><p><strong>有勇气去割舍眼前既有的幸福，进而投资出更多的幸福</strong>。例如放弃游戏，电视剧，睡懒觉的幸福，改为读书，锻炼，学习，成长的长远幸福。</p>
</li>
<li><p><strong>.控制幸福欲求</strong>。欲望是动力，但当欲望膨胀到一定限度会成为前进的枷锁。例如，想衣食无忧，还想纸醉金迷，想美女佳人，还想名利双收，想身体安康，还想穷奢极侈。。。生活因一个个无休止的欲望而忙忙碌碌，身心疲惫，最终却忘记了我们最开始的欲望不就是健康快乐吗。欲望太多，反而与最开始的诉求背道而驰。</p>
</li>
<li><p><strong>丢掉</strong>。丢掉说随便的坏习惯。不是要节约，而是要选择。丢掉多重任务的思考方式。正如点茶一样，要专注于眼前的事物。丢掉拖延的想法。消沉和恐惧是理所当然的事情。丢掉平衡感，不要期望成为一个全能的人。丢掉别人的意见，一个人走出森林。丢掉人人平等的精神。认真考虑谁才是应该重视的人。丢掉”对不起“的挡箭牌。不要反射性的自我保护。丢掉别人的的眼光。主动敞开心扉。丢掉毅力这个概念。不仅要到达巅峰，也试着享受攀登的乐趣。</p>
</li>
</ol>
<p>这一部分是一种态度的断舍离，是断舍离的这个概念的深层意义体现，可能需要一生的践行才能体会和做到。比如欲望：欲望很难突破，也最好不要用压抑的方式去对待。欲望是需要被穿越的，而穿越的方法有时候就是去追逐、满足它。到了一定时候，我们精疲力竭，坐回到自己的位子上，才发现，原来我想要的一切，都已经在我出发的地方等着我了。有许多还不明晰，希望自己以后能从生活的体验中去体会断舍离的禅意吧。</p>
<p>经过断舍离，放下期盼之后，我们的终极意义是什么呢？可能是断舍离的提出者所说的那样：我开始享受生活的简单和单纯，和大自然相处，和人相处。有时候，我会不知不觉地开始傻乐，就是没有任何缘由地，感到当下无事的那种自在和幸福。</p>
]]></content>
      
        <categories>
            
            <category> 书评 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 断舍离 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[后知后觉]]></title>
      <url>http://chuanqiang.github.io/2015/07/16/%E5%90%8E%E7%9F%A5%E5%90%8E%E8%A7%89/</url>
      <content type="html"><![CDATA[<p>我是一个怀旧的人，总沉湎过去，喜欢事物在岁月的雕琢下的厚重感，那种古朴的质感。一首老歌，一段记忆，一张发黄的明信片，一部黑白的默片电影。面对世界匆忙和奔涌，我总是后知后觉。我喜欢当匆忙路上的散步者。         </p>
<a id="more"></a>
<p>这个世界的存在远比我们想象的漫长，它存在于过去，运转在现在，屹立与将来，生生不息。有时想，我们活着在某一方面来说不就是享受这个世界所赋予我们的一切吗——食物、居所、自然、书籍、音乐、电影、艺术，一切美好和让我们精神享受的东西。眼前的世界充满着纷纷扰扰和汹涌澎湃的信息量，我无法从中抉择良莠，但我相信历史的选择，相信时间会拂去眼前的氤氲，还原事物应有的样子。</p>
<p>历史经过了这么长时间，浪里淘沙后剩下的东西太多，经典的东西太多。可自己名著读得不多，世界名曲听得寥寥，那么多优秀的影片也看了一点。最近在想，既然有这么多美好的东西经过岁月的沉淀留给了我们，我为何不知珍惜，还去追逐当下潮流的东西呢？可能我们今天奉为优秀的作品，只是迎合了当下的口味，可能我们现在认为正确无比的东西，在数年之后也只是一个谬论。一个人会头脑一热做出冲动的评价，一个社会和世界也一样。我就是觉得《Hey Jude》比《so what》好听，李宗盛也能秒杀一切小鲜肉，海明威的《老人与海》、钱钟书的《围城》远远不是郭敬明、韩寒能比的。就是觉得《辛德勒的名单》比当下任何一部电影都伟大得多。所以我总是比周围的人慢半拍，不看跑男，不关心爸爸去哪了，不听新歌，文学类不看新书，也从不追剧。因为精神食粮没有新旧，只有好坏。</p>
<p>时间并不只是过去的逝去，还代表了美好事物的遗留。所以我想在时光里做一个后知后觉的散步者。</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 独白 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[v字仇杀队]]></title>
      <url>http://chuanqiang.github.io/2015/07/15/v%E5%AD%97%E4%BB%87%E6%9D%80%E9%98%9F/</url>
      <content type="html"><![CDATA[<p>人们不应该害怕他们的政府，而他们的政府应该害怕他们的人民。整部电影讽刺了思想自由人民这些纠结在一起的矛盾体，V字面具是象征，是思想，是自由。</p>
<a id="more"></a>
<hr>
<p><img src="/image/v.jpg" alt=""></p>
<blockquote>
<p>We are told to remember the idea and not the man .Because a man can fail, He can be caught, he can be killed and forgotten .I have witnessed firsthand the power of ideas.I’ve seen people kill in the name of them…and die defending them .But you cannot kiss an idea…cannot touch it or hold it .Ideas do not bleed. They do not feel pain.They do not love.</p>
</blockquote>
<p>我们被教导记住思想，而不是人，因为人可能失败，他可能会被捕，他会被杀死，被遗忘，但400年后，思想仍可改变世界，我亲眼目睹了，思想的威力，我见过人们以它为名杀戮，或是为了它献出生命，但你不能亲吻思想，也不能触摸它，或拥抱它，思想不会流血，不会感到痛苦，它们没有爱！</p>
<blockquote>
<p>That with devotion’s visage and pious action we do sugar o’er the devil himself.</p>
</blockquote>
<p>人们往往用至诚的外表和虔敬的行动，掩饰一颗魔鬼般的心！</p>
<blockquote>
<p>Who is but the form following the function of what…… and what I am is a man in a mask. I’m merely remarking upon the paradox of asking a masked man who he is.</p>
</blockquote>
<p>身份只是本质的一种形式，而我的本质是一个带面具的人，我对你的观察力没有疑问，我不过是指出一个矛盾的地方，问一个带面具的人是谁有意义么？</p>
<blockquote>
<p>on this most auspicious of nights……permit me then,  in lieu of the more  commonplace sobriquet …to suggest the characterof this dramatis persona.<br>In view, a humble vaudevillian veteran…cast vicariously as both victim and villain<br>by the vicissitudes of fate.<br>　　　　This visage, no mere veneer of vanity…<br>　　　　…is a vestige of the vox populi,<br>　　　　now vacant, vanished.<br>　　　　However, this valorous visitation<br>　　　　of a bygone vexation stands vivified…<br>　　　　…and has vowed to vanquish these venal<br>　　　　and virulent vermin vanguarding vice…<br>　　　　…and vouchsafing the violently vicious<br>　　　　and voracious violation of volition.<br>　　　　The only verdict is vengeance,<br>　　　　a vendetta…<br>　　　　…held as a votive not in vain,<br>　　　　for the value and veracity of such…<br>　　　　…shall one day vindicate the vigilant<br>　　　　and the virtuous.<br>　　　　Verily, this vichyssoise of verbiage<br>　　　　veers most verbose.<br>　　　　So let me simply add that it’s<br>　　　　my very good honor to meet you……and you may call me V.</p>
</blockquote>
<p>那么在这吉祥的夜晚，请允许我用不那么平庸的方式来引出人物表中的这位角色，在您眼帘中的是一位低贱的杂耍老手，他在命运的沉浮中随逐流，扮演着受害者与加害者的双重角色，这面孔，不徒是虚化的外表，它还是业已不再的人民呼声的残响，不过不惮于重提昔日烦恼的他依然活力盎然，决心铲除那些腐化堕落的毒虫，它们是作恶的先锋，他们代表了对自由意志，肆无忌惮的恶意破坏，力量来自团结，团结来自信仰，对他们裁决只有复仇，这象征希望的血海深仇，不会是徒然的，因为他们的价值和正确性，终有一天会证明，那些高尚者和警惕者是正确的，毫无疑问，我这啰嗦和拉拉杂杂，最终会变得冗长无比，所以请允许我简单补充一下，认识你是我的荣幸，您可以叫我V。</p>
<blockquote>
<p>While the truncheon may be used in lieu of conversation…words will always retain their power.Words offer the means to meaning…</p>
</blockquote>
<p>尽管沉默代替了谈话，言语却总能保持它的力量，言语提供了表达见解的方式，而且它可以告诉那些愿意倾听的人们真相！</p>
<blockquote>
<p>But again,truth be told,if you’re looking for the guilty..you need only look into a mirror.</p>
</blockquote>
<p>你们如果要找罪人的话，照照镜子就行了！</p>
<blockquote>
<p>People should not be afraid of their governments.Governments should be afraid of their people.</p>
</blockquote>
<p>人民不应该害怕他的政府，政府应该害怕它的人民！</p>
<blockquote>
<p>The building is a symbol,as is the act of destroying it.Symbols are given power by people. Alone,a symbol is meaningless, but with enough people, blowing up a building can change the world.</p>
</blockquote>
<p>建筑是个象征，摧毁它的行为也是，人民给予了象征以力量，象征本身是无意义的，但人够多的话，炸掉一栋建筑能改变世界！</p>
<blockquote>
<p>By the power of truth, I, while living, have conquered the universe.</p>
</blockquote>
<p>借由真理的力量，我在有生之年得以征服万物！</p>
<blockquote>
<p>You wear a mask for so long,you forget who you were beneath it.</p>
</blockquote>
<p>你戴面具的时间太长，都不记得面具下的自己是什么样子了！</p>
<blockquote>
<p>There is no coincidence,Only the illusion of coincidence.</p>
</blockquote>
<p>世界上没有巧合，只有巧合的假象！</p>
<blockquote>
<p>He used to say artists used lies to tell the truth,while politicians used them to cover the truth up.</p>
</blockquote>
<p>艺术家用谎言来道出真相，而政客用谎言来掩盖事实。</p>
<blockquote>
<p>It is not my sword,Mondego,but your past that disarmed you.</p>
</blockquote>
<p>是你的过去，让你失去了抵抗的能力，而不是我的剑！</p>
<blockquote>
<p>Our integrity sells for so little, but it is all we really have.　It is the very last inch of us. But within that inch……we are free.</p>
</blockquote>
<p>我们的尊严是那么地小 ,但那是我们仅有的 ,那是我们最后一寸领地但在那一寸领地里，我们是自由的.</p>
<blockquote>
<p>There is a face beneath this mask…but it’s not me .I’m no more that face than I am the muscles beneath it ..or the bones beneath them.</p>
</blockquote>
<p>这张面具下有一张脸，但那不是我，那张脸并不能使我不同于那张脸下的肌肉，和那张脸下的骨骼！</p>
<p>《V字仇杀队》经典台词 <wbr>（V <wbr>for <wbr>Vendetta）</p>
<blockquote>
<p>Beneath this mask there is more than flesh,Beneath this mask there ia an idea,And ideas are bulletproof!</p>
</blockquote>
<p>这张面具下面不止是肉体，这张面具之下是一种思想，而思想是不怕子弹的！</p>
<blockquote>
<p>He was Edmond Dantes.And his was my fahther..and my mother,my brother,my friend ,He as you…and me,He was all of us!</p>
</blockquote>
<p>他是基督山伯爵，他还是我的父亲，母亲，我的哥哥，我的朋友，他就是你，和我，他是我们每一个人！</p>
<blockquote>
<p>His hope was to remaind the world that fairness,justice and freedom….are more than words ,they are perspectives!</p>
</blockquote>
<p>他希望以此提醒世界，公平、正义和自由，不只是口头说说，它们是对未来的展望！</p>
<blockquote>
<p>one thing is true of all government ，the most reliable records are tax records！</p>
</blockquote>
<p>有一件事对所有政府都适用，最可靠的记录就是税收记录.</p>
<blockquote>
<p>Every time I’ve seen this world change，it’s always been for the worse!</p>
</blockquote>
<p>可是我每次看到世界改变，它总是变的更糟。</p>
<blockquote>
<p>This country needs more than a building ringht now.It needs hope!</p>
</blockquote>
<p>这个国家现在需要的不只是一栋建筑，它需要希望！</p>
<blockquote>
<p>Oppeneimer was able to change more than the course of a war.He changge the entire course of human history!</p>
</blockquote>
<p>奥本海默（原子弹之父）改变的不只是战争的走向，他改变了整个人类历史走向。</p>
<blockquote>
<p>上帝就在雨中！</p>
<p>艺术家用谎言来道出真相，是的，我制造了一个谎言，但正是因为你相信了，你才找到了自己真实的一面！</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 电影 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 自由 </tag>
            
            <tag> 电影 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[评“国产电影保护月”]]></title>
      <url>http://chuanqiang.github.io/2015/07/15/%E8%AF%84%E2%80%9C%E5%9B%BD%E4%BA%A7%E7%94%B5%E5%BD%B1%E4%BF%9D%E6%8A%A4%E6%9C%88%E2%80%9D/</url>
      <content type="html"><![CDATA[<p>最近是所谓的国产电影保护月，整个七月仅有《小羊肖恩》《罪恶赎金》两部外国片上映，《蚁人》《碟中谍5》《头脑特工队》《小黄人》等万众期待的外国影片不见踪影，国产片《小时代4》《栀子花开》《捉妖记》《煎饼侠》等各种摸不着头脑的片子云集。也去影院看了几部国产电影，可看完除了失望还是失望。不禁思考：“国产电影保护月”的意义在哪？又真正保护了谁？       </p>
<a id="more"></a>
<p>查询百度百科，得到的解释是：“国产电影保护月”是利用行政权力来为本土的电影企业谋取优势的行为，它在一段时间内屏蔽进口大片的引进和上映，为国产片树起了一顶保护伞。可是奇怪的是，国家广播电影电视总局却表示，这是一则假消息，没有任何单位和个人证实“国产电影保护月”。这真是一个非常有中国特色的东西，明明就存在，每年都会来那么一次，有时候还加班来那么两三次，但它就是得不到承认，广电总局没有任何一个部门会承认他们下达了这样的通知，发行放映协会也表示他们从来没有接到类似的通知，就是最心不甘情不愿的电影院，也没有一家影院敢站出来说，它被“国产电影保护月”了。按照普通的理解的话，“国产电影保护月”是天降甘霖，这算是有关部门做的不多的好事之一。但为什么没有人敢来认领这件好事呢？</p>
<p>原来“国产片保护月”这件事本身就是一种利用行政的权力来为为本土的电影企业谋取优势的行为，它在一段时间内屏蔽了进口大片，为国产片树起了一顶保护伞,但是它违反了WTO，是一种不公平竞争。怪不得没有相关单位来证实这件事，可是即使没有通知到院线和影院，只要中影在这段时期内不排进口大片，就完成了“保护月”的作用。在电影淡季不会限制外国电影的引进，到了七月份电影旺季的时候来一次“保护”，对国产电影的票房很有帮助。</p>
<p>对于国产电影的发展，保护只是措施，并不是最终意义。国产电影的发展需要的是自身的成长和提高，外在的保护是一种扶持，并不是温床与壁垒，电影创作工作者需要勤勉和努力，整个电影行业需要严肃的艺术追求和艺术眼光的审美。</p>
<p>另外，国产电影究竟保护了谁呢？表面上国产影片得到了票房收益增加带来的好处，可实际上也给了国产烂片机会捞钱。一窝蜂的青春片被观众称为“打胎片”，一系列由综艺节目如“跑男”而来的电影被称做“跑烂片”，国产电影排得越多、观众看得越多，越失望。质量不高的国产片扎堆，大批国产烂片集中在暑期，反而引起观众对国产片反感，把影迷从影院里赶跑。应该成为保护对象的优质影片如《钢的琴》《雪山》《十二公民》等，并没有得到扶持，这些片子往往在大影院里排不上期。（摘自百度）     </p>
<p>从这个角度来看，国产电影保护月没有保护那些优质的电影创作，仅仅保护了那些宣传好，有大牌明星、有噱头，能够博眼球的电影。国产电影保护月保护的仅仅是票房，而没有保护优质创作，没有保护电影成长的积极面。电影的成功与否取决于票房，而票房的高低取决于宣传、噱头，这样就形成了一种恶性循环。把金钱当成电影的终极目标，忽视了艺术在电影中的存在价值。一些优质的小片在保护月中反而被挤出了保护圈。</p>
<p>从保护月实施过程中，对华语电影本身的提携和帮带作用并不大。大片愈强、小片愈弱的态势，依旧无法得到根治。        相比较于国产电影的保护，提高自身竞争力才是王道。在网上看到一些觉得比较好的改革措施，整理如下：</p>
<h2 id="一：提早公布外片档期"><a href="#一：提早公布外片档期" class="headerlink" title="一：提早公布外片档期"></a>一：提早公布外片档期</h2><p>《飞越老人院》的票房惨淡，导演张杨表示，这和电影的档期有很大的关系，《飞越老人院》5月8日上映，一头撞上了5月5日上映的《复仇者联盟》。张杨说，其实不是纯心想撞，《飞越老人院》的档期在一两个月之前就得定好，宣传海报上也都印好上映档期了，而《复仇者联盟》是在上映前不久才公布档期。有越来越多的电影人呼吁中影提早公布分账大片的档期，给国产片一个躲避的机会。在《2012中国电影产业研究报告》发布会上，盛世华锐老总高军呼吁，应该建立一个有效的档期运作协调机制。他说，在贺岁档，或者有中影大片如《建党伟业》上映的时候，这种档期协调机制会产生作用，给国产片赢利的空间。</p>
<p>“保护月”对国产片的帮助是不够的，“建立档期协调机制”，或者，往简单里说，中影提早公布外片档期，这是我们可以做到的第一步。</p>
<h2 id="二-停止收取电影基金"><a href="#二-停止收取电影基金" class="headerlink" title="二.停止收取电影基金"></a>二.停止收取电影基金</h2><p>当你掏80块钱看一场电影，其中有4块钱就被作为“电影专项资金”收走了。不要小看这4块钱，2011年，中国全年票房为131亿元，“电影专项资金”按5%的比例收取，就能收入6.5亿元。管理这6.5亿元的国家电影事业发展专项资金管理委员会办公室从来没有公开过这6.5亿元到底花在了什么地方。华谊老总王中磊说，据他了解，该基金主要用途在于改善农村基层的电影放映，资助奖励主旋律、农村题材、儿童题材、少数民族题材电影的拍摄，以及对华表奖的优秀影片给予补助。 去年8月，在全国政协召开的关于深化文化体制改革的专题协商会上，冯小刚就建议，减免电影专项资金，为企业减压，转由政府支付补贴这项公益事业。去年年底，《金陵十三钗》要将票房分成从43%提高到45%，仅仅是两个百分点，就惹来了八大院线的封杀。试想，如果将总票房的5%全部返还给制片方，退一步说，即便是将这5%分给制片方、院线和影院，对国产电影该是一个多大的鼓励啊。</p>
<h2 id="三：废除审查制度"><a href="#三：废除审查制度" class="headerlink" title="三：废除审查制度"></a>三：废除审查制度</h2><p>事实上，建立档期协调机制，停止收取电影基金，都只是权宜之计，国产电影要发展，就非取消审查制度不可。</p>
<p>电影审查制度的基石是，电影是重要的意识形态宣传工具。中国目前的做法有点让人啼笑皆非，如果真的坚持电影是意识形态的宣传工具的话，那么我们根本就不应该引进美国片，因为那样我们会受美国的意识形态宣传工具的侵蚀；而如果我们已经不再坚持电影是意识形态的宣传工具，并开放到可以引进美国片的话，那么我们也应该根据同样的道理废除对国产电影的审查。</p>
<p>希望有一天，国产电影不需要保护也能也能在浩如烟海的电影市场中占有一席之地，那时没有了美国好莱坞大片的标签，取而代之的是中国大片！</p>
]]></content>
      
        <categories>
            
            <category> 一支自由主义的笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 电影 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[输入与输出]]></title>
      <url>http://chuanqiang.github.io/2015/07/09/%E8%BE%93%E5%85%A5%E4%B8%8E%E8%BE%93%E5%87%BA/</url>
      <content type="html"><![CDATA[<p>能量是守恒的，信息也是。有输入才会有输出。我们靠眼睛来阅读和观察，靠耳朵来聆听，靠嘴巴来交流。我们通过沟通、观察、阅读、旅行、学习来了解和认识周围的事物，然后经过大脑的整理和思考形成自己的认知和理解，然后通过交流、写作、行为输出出来。信息这样往复循环，促生行为和生产力。        </p>
<a id="more"></a>
<p>我们来定位和评价一个人，是看他的输出有多少，质量有多高。比如他输出的品质和气质，他所输出的财富值，输出的身体健康状况，输出解决问题的能力、人际交往和沟通能力，输出的诗词歌赋，输出的绘画科研，等等。这些输出成为我们存在的价值和理由。因为我们输出了，就对这个世界产生了或多或少的影响。</p>
<p>而输入的多少，则在根本上影响了你的输出的量和质。我们每时每刻都在输入，但输入的效率不同，即在一定的时间内所输入的信息的价值量不同。一个成功的人，他的信息输入效率一定是非常高的。如何提高信息的输入效率呢？</p>
<ol>
<li><p>学习。学习一直都是获取高价值信息的最佳途径。</p>
</li>
<li><p>读书。在互联网时代，信息的载体有很多，但是书籍是相比较而言信息价值量高的载体。</p>
</li>
<li><p>交流。交流是一个输入和输出双向的过程，在交流中会刺激大脑皮层的兴奋，让信息的存储和摄入变得高效率。但要选择交流的内容和对象。</p>
</li>
<li><p>运动。运动输入的是物质和各项身体机能的历练，输出的则是一个运行和维护整个信息处理系统的根基——健康的体魄。</p>
</li>
</ol>
<p>一个输入渊博的人一定是内心世界十分丰富的人，对世界有一整套自己的处理系统，体现在价值观、对外界的反馈，气质，心态，操守、品性等方方面面。</p>
<p>输入吧，为了更好地输出。</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 成长 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[光斑夏]]></title>
      <url>http://chuanqiang.github.io/2015/07/07/%E5%85%89%E6%96%91%E5%A4%8F/</url>
      <content type="html"><![CDATA[<p>夏天的树荫和凉风<br>冰镇西瓜和雪糕<br>女生的碎花裙<br>球场的汗水<br><a id="more"></a><br>无聊的考试 十八般武艺<br>搬宿舍的断舍离<br>熬过一个留不住的夏天<br>等待一个没有暑假的暑假</p>
<p>美剧和披头士<br>培训和计算机<br>成熟和跨不去的幼稚</p>
<p>连不成思绪<br>也讲不出故事<br>这是夏天<br>也是四季</p>
]]></content>
      
        <categories>
            
            <category> 为你写诗 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 写诗 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[想]]></title>
      <url>http://chuanqiang.github.io/2015/06/26/%E6%83%B3/</url>
      <content type="html"><![CDATA[<p>想知道宇宙的始末<br>想明白时间曲率的含义<br>想窥探星际运转的规律<br>想揭开上帝的神秘</p>
<a id="more"></a>
<p>想理解世界的构成<br>想知道华尔街的秘密<br>想明白人类社会如何维系<br>想一眼看透对方的悲喜</p>
<p>想漫步漫漫人类史<br>了解这个世界的过去<br>想看科技的滚滚车轮<br>把世界推向哪里</p>
<p>想拥有迷人的腹肌<br>米开朗基罗刻刀下的比例<br>想做出的每一种物理运动<br>都能划出完美的轨迹</p>
<p>想用抽象的符号描绘整个世界的美丽<br>然后让机器把美丽传送到每个人心里<br>想和乔纳森学习理解设计<br>想给乔布斯敬个礼</p>
<p>想千金散尽还复来<br>只需弹指间<br>想身上落魄无一物<br>仍悠然见南山</p>
<p>想看最精彩的电影<br>听最动听的歌<br>想读最好看的小说<br>听最惊悚的事</p>
<p>想喝最醇的酒<br>见最美的人<br>看最亮的眼睛<br>听最悦耳的笑</p>
<p>想去最美的地方<br>吃最辣的菜<br>看最亮的星空<br>做最刺激的事</p>
<p>想摒弃哀愁与忧郁<br>在阴天里想象彩虹的美丽<br>想跳出麦田怪圈<br>获得生活的真谛</p>
<p>想成为英雄<br>想拥抱成功<br>想把世界踏在脚下<br>想俯瞰整个大地</p>
<p>想<br>只是一团思绪<br>想<br>也可能联通到未来里</p>
]]></content>
      
        <categories>
            
            <category> 为你写诗 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 写诗 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[从0到1]]></title>
      <url>http://chuanqiang.github.io/2015/06/24/%E4%BB%8E0%E5%88%B01/</url>
      <content type="html"><![CDATA[<blockquote>
<p>最反主流的行动不是抵制潮流，而是在潮流中不丢弃自己的独立思考**</p>
</blockquote>
<a id="more"></a>
<p><img src="/image/zeroToOne.jpg?r=62" alt=""></p>
<p>没有人能精准地预测未来，我们只知道两件事：一是世界必然会变得不同；二是现在再好的描述也不能让我们看到清晰的未来。</p>
<p>创业者把成就归功于商业模式和机会窗口，归功于创业者本人拥有的资源和能力，但还有一个最重要的因素，就是对未来有宏观的判断，从未来着手当下，最终走向成功。</p>
<p>《从0到1》不是一本成功学的书，也不是创业指导手册，而是一本关于创造和走向未来的书，一本思维运动的书。没有人能手把手教你创新，教你创造出不一样的东西，实现从0到1的突破。因为“最反主流的行动不是抵制潮流，而是在潮流中不丢弃自己的独立思考”这样的句子本身就是一种冲击。从0到1无处不在，不只是商业，也在你我每一天的生活里。</p>
<hr>
<h2 id="一、什么是从0到1？"><a href="#一、什么是从0到1？" class="headerlink" title="一、什么是从0到1？"></a>一、什么是从0到1？</h2><h3 id="1-世界进步的方式"><a href="#1-世界进步的方式" class="headerlink" title="1. 世界进步的方式"></a>1. 世界进步的方式</h3><p>从历史潮流来看，未来肯定是在不断进步的。进步有两种观点：</p>
<p>一、水平进步，也称为广泛进步，意思是照搬已取得成就的经验，即直接从1跨越到n，水平进步很容易想象，因为我们知道了它是什么样；</p>
<p>二、垂直进步，也称深入进步，意思是要探索新的道路，即从0到1的进步，垂直进步较难想象，人们需要尝试从未做过的事。</p>
<h3 id="2-两种方式的代表"><a href="#2-两种方式的代表" class="headerlink" title="2. 两种方式的代表"></a>2. 两种方式的代表</h3><p>从宏观层次来看，可用一个词代替水平进步，即全球化，把某地有用之物推广到世界各地，中国是全球化的典型范例。垂直进步也可以用一个词来概括，即科技，科技不仅限于计算机技术，任何新方法，任何可以使事物更易完成的方法都是科技。全球化和科技是不同的进步方式，它们可能同时存在，也可能存在其中之一。</p>
<h3 id="拆解"><a href="#拆解" class="headerlink" title="拆解"></a>拆解</h3><p>从0到1即依靠科技创新，是一个从无到有的过程。中国在过去30多年的发展中迅速壮大，靠的就是不断对标学习先进，拿来主义，因此也出现了“山寨”、“Copy to China”等标志性词汇。未来的世界肯定会更加趋同，由于知识产权的保护，科技创新越来越难以复制，中国赶超式发展必然遭遇瓶颈。如果不能从“1到n”实现“从0到1”的转变，未来发展将走向迟缓甚至衰退。企业也一样，靠复制将使企业难以立足。</p>
<h2 id="二、竞争还是垄断？"><a href="#二、竞争还是垄断？" class="headerlink" title="二、竞争还是垄断？"></a>二、竞争还是垄断？</h2><p>托尔斯泰在《安娜•卡列尼娜》中以下面文字作为开头：“幸福的家庭总是相似的，不幸的家庭各有各的不幸。”而在商业中，情形恰恰相反。企业成功的原因各有不同：每个垄断企业靠解决独一无二的问题获得垄断地位，而企业失败的原因却相同：它们都无法逃脱竞争。</p>
<h3 id="竞争VS垄断"><a href="#竞争VS垄断" class="headerlink" title="竞争VS垄断"></a>竞争VS垄断</h3><p>竞争不只是一种经济概念，而是一种观念。人们往往忽视了真正重要的事情，只把精力放在竞争对手上。</p>
<p>在静态世界里，垄断者只是收租人，购买者没有选择，这种人为造成的稀缺并不会带来新的价值；而现实世界是一个动态的世界，富有创意的垄断者创造出了崭新的事物，给消费者更多选择，这种创造成为了美好世界的推动力。</p>
<h3 id="拆解-1"><a href="#拆解-1" class="headerlink" title="拆解"></a>拆解</h3><p>企图在竞争的世界里分一杯羹，最终结果是利润被削减，竞争更加激烈，最终靠价格战，撑不下去的公司就只有出局。错位竞争同样需要付出巨大代价，微软和Google分别在系统软件和搜索领域各树一帜，都各处于行业垄断地位。</p>
<p>随着事业发展壮大，它们开始把注意力放在彼此身上，结果微软的Windows系统遇上Google的Chrome OS，必应遇上Google搜索，Explorer浏览器与Chrome浏览器针锋相对，Office办公软件和Docs办公软件争得不可开交，微软的Surface平板电脑和Google的Nexus平板较劲。竞争的结果是苹果公司崛起，压倒了它们的优势。</p>
<p>要想将企业从每日的生存竞赛中解脱出来，唯一的方法是：做到独一无二，获取垄断利润，如苹果公司。</p>
<h2 id="三、怎样做到垄断？未来还是现在？"><a href="#三、怎样做到垄断？未来还是现在？" class="headerlink" title="三、怎样做到垄断？未来还是现在？"></a>三、怎样做到垄断？未来还是现在？</h2><h3 id="1-未来和现金流"><a href="#1-未来和现金流" class="headerlink" title="1. 未来和现金流"></a>1. 未来和现金流</h3><p>避免竞争会帮助你打造垄断企业，但是只有经受住未来考验的企业才是成功的企业，即一个企业成功与否要看它在未来生成现金流的能力。比较一下纽约时报和Twitter，Twitter在未来10年中可以获得垄断利润，而报纸的垄断时代会结束。简单地说，一个企业今天的价值是它以后创造利润的总和。</p>
<h3 id="2-垄断企业的特征"><a href="#2-垄断企业的特征" class="headerlink" title="2. 垄断企业的特征"></a>2. 垄断企业的特征</h3><p>专利技术：专利技术是一家公司最实质性的优势，它使得产品很难或不能被别的公司复制。如Google的搜索算法，具有绝对优势。</p>
<p>网络效应：网络效应使一项产品随着越来越多的人使用变得更加有用，如微信。但是这种效应不是一开始着手大规模的，而是必须从非常小的市场做起，迅速以病毒式的速度蔓延。</p>
<p>规模经济：软件开发享有非常大的规模经济效应，成本主要在研发，产品可无限复制。一个好的初创企业在刚开始设计时就应该考虑之后大规模的发展潜能。</p>
<p>品牌优势：一家公司最显而易见的垄断就是对自己的品牌垄断，因此打造一个强势品牌是形成垄断的有力方式。今天最强势的科技品牌：苹果。</p>
<h3 id="3-建立垄断企业的方法"><a href="#3-建立垄断企业的方法" class="headerlink" title="3. 建立垄断企业的方法"></a>3. 建立垄断企业的方法</h3><p>占领小市场：一个初创企业的完美目标是特定的一小群人，而且几乎没有其他竞争者。开始很小，但必须在自己的市场内占主导地位。理由很简单：在一个小市场占主导地位比在大市场里要容易得多。Facebook发家就是利用此法。</p>
<p>扩大规模：一旦成功创造或是主导了一个利基市场，就要逐步扩展到相近市场，有核心事业逐步往外扩展。如亚马逊一开始主要精力在图书市场，形成垄断地位之后逐步扩展到相近的光盘、影像和软件，最后成为世界级的综合商店。京东也如此。</p>
<p>不要搞破坏：“3Q大战”就是典型的例子，360四处搞破坏，最终结果是股价大跌，失去核心竞争力。</p>
<h3 id="拆解-2"><a href="#拆解-2" class="headerlink" title="拆解"></a>拆解</h3><p>这一章基本就是本书所要阐述的核心。一家成功的企业在于对自己有明确的定位，腾讯转型后依然围绕社交，并在该领域获得绝对的垄断地位；阿里巴巴做金融始终是一家电商公司，百度涉足视频、地图，但始终是一家搜索公司。不难发现这几家中国垄断公司，虽然看上去商业生态很庞大，但最原始的动力依然来自核心业务，保证了原始业务的持续发展，并带动相近领域业务的发展，获取垄断价值。</p>
<h2 id="四、未来属于哪种人？"><a href="#四、未来属于哪种人？" class="headerlink" title="四、未来属于哪种人？"></a>四、未来属于哪种人？</h2><h3 id="1-对未来不明确的悲观主义者"><a href="#1-对未来不明确的悲观主义者" class="headerlink" title="1.对未来不明确的悲观主义者"></a>1.对未来不明确的悲观主义者</h3><p>一个对未来不明确的悲观主义者看到的未来是阴郁的，但他束手无策。如现在的欧洲。</p>
<h3 id="2-对未来明确的悲观主义者"><a href="#2-对未来明确的悲观主义者" class="headerlink" title="2.对未来明确的悲观主义者"></a>2.对未来明确的悲观主义者</h3><p>一个对未来明确的悲观主义者相信未来是可知的，但却是暗淡的，所以他必须提前做好准备。中国人普遍是对未来明确的悲观主义者，所以中国人喜欢存钱，储备充足，严阵以待。</p>
<h3 id="3-对未来明确的乐观主义者"><a href="#3-对未来明确的乐观主义者" class="headerlink" title="3.对未来明确的乐观主义者"></a>3.对未来明确的乐观主义者</h3><p>在对未来明确的乐观主义者眼中，如果计划缜密，工作努力，未来会比现在更好。美国人是典型的例子，美国梦即如此。</p>
<h3 id="4-对未来不明确的乐观主义者"><a href="#4-对未来不明确的乐观主义者" class="headerlink" title="4.对未来不明确的乐观主义者"></a>4.对未来不明确的乐观主义者</h3><p>一个对未来不明确的乐观主义者只知道未来会越来越好，却不知道究竟有多好，因此不去制定具体计划，属于迷茫的乐观主义者。当今世界充斥这这种对未来不明确却乐观者，如不明确的金融，不明确的政治，不明确的哲学，不明确的人生。</p>
<h3 id="拆解-3"><a href="#拆解-3" class="headerlink" title="拆解"></a>拆解</h3><p>如果未来清晰可见，那么请现在就着手了解未来，用未来引领现在。成功者可能会谦虚地说自己的成功多半靠运气，但是如果对未来没有计划，即便机会到来，也未必抓得住，就是我们常说的机会总是给有准备的人。企业也如此，对未来“风口”有一个预判，并制定缜密的长期规划，步步为营。靠机遇的人，一般都只是盲目的乐观主义者，要知道，成功绝非偶然。</p>
<h2 id="五、向钱看：正态分布还是幂次法则？"><a href="#五、向钱看：正态分布还是幂次法则？" class="headerlink" title="五、向钱看：正态分布还是幂次法则？"></a>五、向钱看：正态分布还是幂次法则？</h2><p>幂次法则即遵循指数方程式的增长，是最不平均的分配。我们生活里多被20-80法则蒙骗，不管是正态分布还是20-80法则，原理都是同一回事。在实际的投资中并不遵循正态分布，而是幂次法则。</p>
<h3 id="拆解-4"><a href="#拆解-4" class="headerlink" title="拆解"></a>拆解</h3><p>不要把鸡蛋放在一个篮子里，不孤注一掷，是我们的常识。我们每个都是生活的投资者。如果把未来看成投资的话，我们之所以平凡，碌碌无为，是因为我们对未来的不确定性充满恐惧，学钢琴、学画画、学书法等等，觉得总有一样可以应付未来，每一个都想学，每一个都没学好，我们从来没考虑什么才是我们最擅长的，并发挥到极致。我理解的幂次法则就是把一件事做到最好，成就人生之巅，企业亦是如此。</p>
<h2 id="六、你能发现这个世界的“秘密”吗？"><a href="#六、你能发现这个世界的“秘密”吗？" class="headerlink" title="六、你能发现这个世界的“秘密”吗？"></a>六、你能发现这个世界的“秘密”吗？</h2><p>如果我们今天对自然的了解已经达到未来才能达到的程度，如果所有的真理都已被领悟，那就再无秘密可言。这显然不可能，因此，总有还未被发现的秘密，这个秘密就是成为垄断的关键。</p>
<h3 id="1-为什么人们不探索秘密"><a href="#1-为什么人们不探索秘密" class="headerlink" title="1. 为什么人们不探索秘密"></a>1. 为什么人们不探索秘密</h3><p>商业的核心竞争力即秘密，成功的企业建立在开放却未知的秘密之上，但大部分人表现得像是这个世界上已没有秘密可发现。</p>
<p>一是渐进主义：从小就被教育做事正确的方法，按照进度发展，到哪一步做哪一步的事，结果就像批量加工的产品，没有任何新意。</p>
<p>二是风险规避：人们害怕秘密是因为害怕犯错，如果你的目标是一生不犯错，那就不应该去探索秘密。</p>
<p>三是自满：社会精英享有最大的自由，也最有能力去探索新想法，但他们似乎最不相信秘密。如我们在高中的时候就被灌输，考上好的大学，未来就高枕无忧了。</p>
<p>四是“扁平化”：随着全球化的推进，人们认为世界是一个同质的、激烈竞争的市场，世界是“平”的，任何有雄心壮志的人，在探索秘密之前都会先问自己，如果可能发现新事物，难道全球人才中那些更聪明、更有创造力的人还没有发现吗？这种怀疑阻止了对秘密的探索。</p>
<h3 id="2-如何发现秘密"><a href="#2-如何发现秘密" class="headerlink" title="2. 如何发现秘密"></a>2. 如何发现秘密</h3><p>这个世界还有许多秘密等待我们去探索，不探索是发现不了秘密的，商业尤如此。探索秘密的最佳处所就是无人关注的地方。“最反主流的行动不是抵制潮流，而是在潮流中不丢弃自己的独立思考。</p>
<h3 id="拆解-5"><a href="#拆解-5" class="headerlink" title="拆解"></a>拆解</h3><p>所有成功的企业都是基于鲜为人知的秘密创立。渐进、风险、自满和“扁平化”成了我们生活的常态，这些常态扼杀了我们的好奇心，也扼杀了我们对未知秘密的探索之心。在主流的潮流里不丢弃自己独立的思考，发掘“与众不同”的秘密是成功的先决条件。</p>
<h2 id="七、如何打好初创企业的基础？"><a href="#七、如何打好初创企业的基础？" class="headerlink" title="七、如何打好初创企业的基础？"></a>七、如何打好初创企业的基础？</h2><ul>
<li><p>第1点 “蒂尔定律”：基础没有打好的初创企业是无法挽救的。《蝴蝶效应》这部电影里，每一次初始条件的不同都使得结果大相径庭。</p>
</li>
<li><p>第2点 在一开始创业的时候，首先要做到的至关重要，即选择合伙人，技术能力和才华互补固然重要，但创始人之间的了解程度和他们合作的默契程度同样重要，创始人共同创业前应有身后的交情。</p>
</li>
<li><p>第3点 现金奖励不是王道，股票报酬才能让员工全力以赴。</p>
</li>
<li><p>第4点 所有权、经营权和控制权</p>
<ul>
<li>所有权：谁在法律上拥有公司的资产？</li>
<li>经营权：谁实际在管理着公司的日常事务？</li>
<li>控制权：谁在形式上管理公司事务？</li>
</ul>
</li>
</ul>
<h2 id="八、如何打造优秀的创业团队？"><a href="#八、如何打造优秀的创业团队？" class="headerlink" title="八、如何打造优秀的创业团队？"></a>八、如何打造优秀的创业团队？</h2><p>初创公司是肩负同一使命的共同体，企业文化好坏取决于内涵。</p>
<h3 id="“PayPal黑帮”的建立"><a href="#“PayPal黑帮”的建立" class="headerlink" title="“PayPal黑帮”的建立"></a>“PayPal黑帮”的建立</h3><p>并非通过筛选建立然后雇用最优秀的人才来建立“PayPal黑帮”，最好的工作环境不是开放的工作空间，舒适的环境，而是团队的氛围；</p>
<p>提供不可替代的工作机会，而不是打福利待遇之战；</p>
<p>每个员工都与众不同，但必须是志趣相投的一群人积极投身于公司使命；</p>
<p>每个员工只专注于一件事，每个员工分工明确并因担负独特的工作而与众不同。</p>
<h3 id="拆解-6"><a href="#拆解-6" class="headerlink" title="拆解"></a>拆解</h3><p>团队才是企业的核心，致力于改善员工办公环境不如致力于改善人与人之间的氛围，好的团队造就企业，让企业永葆活力和创造，坏的团队不断蚕食资源，最终使企业大厦倾塌。由此我想到身处的运营商行业，员工早已不是由衷的共事，为企业使命奋斗，而是从底层到中高层，怨声载道。一波一波的离职潮表明向心力不再，员工看不到任何希望。</p>
<h2 id="九、销售到底重不重要？"><a href="#九、销售到底重不重要？" class="headerlink" title="九、销售到底重不重要？"></a>九、销售到底重不重要？</h2><p>技术精英习惯直白的方式，即只要创造的产品足够优良，就会有人使用，这在现实世界里其实是异想天开的，即使产品没有差异，高超的销售和推销自身也可以形成垄断，反之则不行。即使产品使使用过的人一见倾心，也必须要有完善的推广计划作为后盾。</p>
<ol>
<li>复杂营销</li>
</ol>
<p>如果你平均销售额在7位数及以上，应该采用复制营销的手段。一般这种大额销售每个细节都要主义到，所以采用的销售人员由公司重量级人物担任。</p>
<ol>
<li>人员销售</li>
</ol>
<p>平均交易额在1万到10万美元时，CEO不必亲力亲为。这类销售主要技巧在于建立流程，让团队能向广大客户推销产品。</p>
<ol>
<li>销售盲区</li>
</ol>
<p>1000美元左右的中小企业产品，因为销售额不高，难以花钱聘请专业销售人员跟每个客户详谈进行销售，容易产生盲区。</p>
<ol>
<li>市场营销和广告</li>
</ol>
<p>对有广泛吸引力却缺少病毒式推广方法的递交产品极为有效。脑白金是个极为典型的例子。</p>
<ol>
<li>病毒式营销</li>
</ol>
<p>如果产品核心功能可以鼓励用户邀请其他朋友成为用户，那么这个产品就能病毒式营销。微信是个很好的例子，实际运营商的产品也可以使用这种方式，只不过他们更愿意花大量的广告营销成本，喜欢打价格战。</p>
<h3 id="拆解-7"><a href="#拆解-7" class="headerlink" title="拆解"></a>拆解</h3><p>小米在中国是个成功的案例，其销售策略就是采用了销售幂次法则，有针对性地营销。苹果的每次新产品发布都经过精心策划，在全球都成为重大新闻，不仅节省广告费而且影响效应不可同日而语。由此可见，销售策略必须有计划，有针对性地进行，销售策略不是越多越好，大而全反而得不偿失。</p>
<p>如果连最高瞻远瞩的创业者都无法规划未来二三十年的事情，对遥远的未来还有什么可说的呢？我们无法预知具体细节，但是可以勾勒出大致的轮廓。我们当下的任务是找到创新的独特方式，使得未来不仅仅与众不同，而且更加美好，即从0到1。最最重要的就是独立思考。</p>
<p>如果你不能把对手打败，那就和对手联合。 </p>
<p>当年，彼得搞paypal的时候，马斯克（恩，特斯拉之父）也在同时搞一个类似的公司x.com.两家企业在1999年激烈火拼，全面战争。但结果并不让人满意：虽然员工已经拼尽老命加班，但最后彼得发现这根本就是错误的，因为他醒悟了，做一个企业的目的就根本不是要打败你的对手，如果你专注于打败你的对手，那么你哪有时间想更好的主意去发展呢？</p>
<p>明白了这个问题之后，他们两家公司就迅速合并了。 </p>
<p>如今，滴滴和快的的情况无论多么不同，也和刚才的例子有相似之处。他们两家陷入了纯粹的竞争，任何资金的投入都以打败对方为目的，但结果是他们都宣称自己占据了50%以上的市场。双方仍无法分出胜负。 </p>
<p>另外的一个他们看到的更严重的问题是，当大把的票子扔给消费者和出租车司机的时候，整个原有的出租车行业仍然是铁板一块。以管制为特征的出租车行业并未迅速瓦解。不光是那些利益受损的出租公司，那些受益的出租车司机也未必会因为得利而选择站在新的技术这一边。 </p>
<p>既然无法攻破堡垒，那么最好的办法就是绕过他，让他自生自灭。专车的出现让大家看到了机会，而拼着，租车这样的市场更是显然有更广阔的可能性。如此，在这个时候，还有比放弃补贴那些不和他们站在一边的出租车司机和乘客的人更好的办法吗？合并在此，成为了最好的选择。 </p>
<p>彼得·蒂尔说，创业的根本是以清醒的头脑去创造垄断的企业。当合并出现，这样的一种未来显然更具可能性。对于滴滴和快滴而言，两家的合并几乎相当于完全垄断了一个市场，这对他们是好事。但是，显然从整个的出租车行业而言，他们只不过是刚刚迈过了一道坎。在未来的转车市场，租车市场以及拼车市场，他们不是没有竞争者，而是还有一堆的竞争者在等着——易到用车，神州租车，一嗨租车，AA租车等等等等。 </p>
<p>所以竞争仍旧激烈。那么，到时候再出现血战怎么办？我觉得彼得说的就是很好：打得过就打，打不过合并，合并不了就跑。 </p>
<hr>
<p>这个小文其实也说完了，但又禁不住想起来互联网门户。当几个大门户都在互相盯住，搞博客，搞内容建设，找来一堆媒体人来做的时候，他们最终的结果是都在衰落了。新一代的以技术为驱动的新的资讯获取方式出现了。这样的例子太多——当几个微博一拥而上的时候，最后胜利的是微信。</p>
]]></content>
      
        <categories>
            
            <category> 书摘 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 互联网 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[玛丽与马克思]]></title>
      <url>http://chuanqiang.github.io/2015/06/23/%E7%8E%9B%E4%B8%BD%E4%B8%8E%E9%A9%AC%E5%85%8B%E6%80%9D/</url>
      <content type="html"><![CDATA[<p>应该是第一次看这种粘土动画。看惯了大荧幕上飞檐走壁的动画电影，《玛丽与马克思》给了我强烈的视觉反差。片中所有的人物都是用泥土捏制而成，真没想到电影还可以这样拍摄。</p>
<a id="more"></a>
<p><img src="/image/maliyumakesi.jpeg" alt=""></p>
<p>看完之后才发现，选择用粘土动画这样的方式去展现影片主题和内容是恰如其分的，也只有那种温暖、可爱又具有英伦幽默感的粘土效果才能表现出故事中黑色而怪诞的幽默感。没有炫目的视觉特效，没有英雄主义的渲染，但当你平心静气的观看完整部影片之后，定会由衷的感叹：“拍的真好。”</p>
<p>故事简单的不可思议。玛丽是一个居住在墨尔本的孤独的小姑娘；马克思是一个居住在乱糟糟的纽约市区，肥胖、患自闭症的44岁犹太人。一个偶然的机会，他们有了联系，开始了长达二十年的通信。影片是通过对信件的展开来推动电影情节的发展，同时剖析了友谊、自我、死亡、性、精神疾病等众多因素。虽然都是沉重的话题，但却是以温和温暖的影调娓娓道来，让我看到了人与人之间最本真的交流。</p>
<p>如今，爱情题材的影视作品大行其道，友情似乎淡出了人们的视线，更多的是酒肉朋友，利益关系。伯牙琴弦的故事似乎离我们应经很遥远了。<strong>其实，友情有时候比爱情来的坚强，因为友情的本质是寻找另一个自己，因为只有自己才不会骗自己。</strong>我总觉得一个人在世，需要两种人相伴，一个是能够在性格上互补的人，她能弥补你生活中的缺失，像是《圣经》中的那根从你身体里取出的肋骨；另一个人是和你性情相近的人，让你产生精神的共鸣，让你不再感到孤独。人作为群居动物，孤单乃天敌之一。但孤单只是身体所处的环境状态，孤独却是一种心灵状态。身在闹市，却也深感孤独；地处偏安，仍内心充实。关键看内心够不够强大。而友谊能给人带来这种情感的寄托和共鸣，让你深感：在茫茫寰宇，吾非遗世而独立，仍有知音听弦。</p>
<blockquote>
<p>在永恒的孤独之中，凡人皆有所寄托。</p>
</blockquote>
<p>现代人都有极强的自我保护意识，治安越来越好，但人与人之间的安全感越来越少。人们往往带着面具混生，不肯轻易交出真心，像有一堵墙阻在那里。我们相互拥抱，却也拉不近两颗心的距离。</p>
<p>马克思最后对玛丽说：</p>
<blockquote>
<p>我原谅你是因为你不完美，你不完美，我也是。所有人都不是完美的，即便是那些在我公寓外乱丢垃圾的人。小的时候我想变成除了自己以外的任何一个人，Bernard Hazelhof医生说，如果我在一个孤岛上，那么我就要适应一个人生活，只有椰子和我。他说我必须要接受我自己，我的缺点和其他一切。 我们无法选择自己的缺点，它们也是我们的一部分，我们必须适应它们。然而我们能选择我们的朋友，我很高兴选择了你。</p>
</blockquote>
<p>想起了小王子中狐狸的话：对我来说，你和成千上万个小孩一样，我不需要你，你也不需要我。对你来说，我又跟成千上万个狐狸毫无差别，但是，只要你和我“建立联系”，我们就谁也离不开谁了。</p>
<blockquote>
<p>狐狸还说：人们再也没有时间去认识别的事物了，他们总是到商人那里去买现成的东西。但是，由于世界上还没有出售朋友的商店，所以人也就没有朋友。</p>
</blockquote>
<p>另外，关于电影。觉得好的影视作品不光是靠匠心独运，靠人气明星、非凡特技铸就的，更是拍摄过程中的坚持和努力。《玛丽与马克思》整部动画片是由大约132480张独立的画面制作而成，影片的设置过程中一共使用了212个黏土人，这些黏土人由黏土、复合材料、木棍和金属制作而成。每一个黏土人身上的各个关节都是可以活动的。为了能让主角面部活动起来，并且能做出各种表情以表达自己的情绪。他们需要一张能动的嘴和能动的眉毛——在每一定格中，工作人员都会给人物换一张不同的嘴。全片一共用了1026张不同的嘴，每一张嘴都是一张由橡皮泥包裹着钢丝的模型。为了让马克斯说话时动起来，剧组为他制作了30张嘴。（来自百度百科）。这是多么浩大的工程。</p>
<p>好的电影如一块美玉，需要精雕细琢，用心刻画。《狼图腾》阿诺筹备七年，养狼三年，才得以拍出生命的自由和美好。《泰坦尼克号》拍摄五年，造价十几亿，才诠释出爱情凌驾于死亡之上的魅力。《阿凡达》14年酝酿，耗资27.2亿，四年拍摄，卡梅隆不惜刻苦钻研拍摄技术，方得成功。这才是大手笔，大制作，是电影史上的熠熠生辉的杰作。反观那些靠宣传造势，靠明星博眼球的烂俗剧，虽然换取了票房，但也诋毁了观众的审美。中国太缺少那种能耐住烦躁，割得浮华，一心一意创造伟大影视作品的导演以及投资方了。像中国第一编剧芦苇，在叫嚣着剧本荒的中国影坛，他却面临着有价无市的窘境。可悲可叹。</p>
<p>电影是门艺术，而在当下，艺术被商业、金钱所侵蚀，缺少艺术创作的氛围，也没有为艺术买单的市场。</p>
<p><strong>        　　</strong></p>
]]></content>
      
        <categories>
            
            <category> 电影 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 艺术 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[评孙中山]]></title>
      <url>http://chuanqiang.github.io/2015/06/18/%E8%AF%84%E5%AD%99%E4%B8%AD%E5%B1%B1/</url>
      <content type="html"><![CDATA[<p>在剑桥中国史上，对孙中山的开篇介绍是这样的：我们的分析必须从孙逸仙开始，孙逸仙是一个爱国者，他爱国的热枕和真诚，允许他成为一个没有任何政治理念的，骇人听闻的投机者，只要他认为情况必要，他设么都说得出，什么都做得出。 </p>
<a id="more"></a>
<p>这个评价非常的客观，孙中山所有的政治主张，都是根据他认为的需要在变的。当他需要煽动种族仇恨的时候，他可以信誓旦旦的说，中国必须是单一的种族国家才能走向民主富强。当他认为自己可以做大总统的时候。他制定了各地由督军管理的制度和和中央总统制度。当他发现民间舆论和军事力量对比，都不允许他做大总统的时候，他又匆忙更改制度，建立内阁负责制度，匆忙之中，不仅是使得新的制度充满矛盾和职责模糊，并且导致了各地军阀割据的局面。</p>
<p>当他以袁世凯向外国出卖中国利益为口号发动革命失败之后，他向日本、德国和美国的民间投资者做出骇人听闻的许诺，只要对方支持他夺取政权。</p>
<p>当他看到大家反感苏联的时候，他说，苏联的那一套不适用于中国。当吴佩孚和孙传芳拒绝苏联之后，孙中山得到了苏联的扶植，此时他说，民生主义就是马克思主义。</p>
<p>现代中国的国家分裂，民主对立，军阀分局，枪杆子出政权，都是直接起源于孙中山不同时期的不同主张和作为。</p>
]]></content>
      
        <categories>
            
            <category> 历史 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 历史 </tag>
            
            <tag> 孙中山 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[潇潇洒洒]]></title>
      <url>http://chuanqiang.github.io/2015/06/16/%E6%BD%87%E6%BD%87%E6%B4%92%E6%B4%92/</url>
      <content type="html"><![CDATA[<blockquote>
<p>一声酒色剑，迷离浪子情，世上有情人。</p>
</blockquote>
<p>古龙像他塑造的江湖，潇潇洒洒，那是一个人的武侠，孤孤寂寂。</p>
<a id="more"></a>
<p>他用探险家的好奇，散文家的笔调和哲学家的玄思去构思小说，并在一个奇幻莫测的故事中表达自己对生活的态度。生活就是撕开自己的肉，再看着时间让一切结成血痂。</p>
<p>性嗜酒，人生得意须尽欢，莫使金樽空对月。最好的酒，是能够让人喝醉的酒。酒入豪肠，七分酿成月光，三分啸成剑气。巨笔一挥，便是人在江湖，如血残阳。        </p>
<p>好吸烟，抬头望断南飞雁，手指见夹着灵感，烟圈一吐，云飞雾绕，便是李寻欢的飞刀，萧十一郎的眼眸，小鱼儿的笑。        爱女人，每个女人像是不同味道的酒，不同牌子的烟，是妩媚的风四娘：吃最辣的菜，喝最烈的酒，骑最快的马，杀最狠的人。是蛇蝎心肠的林仙儿：前半世的繁华，后半世的凄凉。长于春梦几多时，散似秋云无觅处。是楚楚动人的白飞飞：一枝红艳露凝香，云雨巫山枉断肠。       </p>
<p> 一流的作家，二流的情人，三流的丈夫。古龙这一生，书香酒香女人香，一辈子就是一个浪子。</p>
<p>古龙的一生，就像他的武侠，让人只能看着，惊羡着，却不能触碰。因为太过潇洒与理想主义，因为古龙只能有一个。</p>
<p>喜欢牛仔在决斗时的潇洒与严肃，喜欢浪子行走在天涯尽头时拖着长长的背影，喜欢让自己的血液滴在中原一点红的剑尖上，喜欢用一支笔来塑造一把剑能够刺穿的世界。</p>
<blockquote>
<p>店小二问：客官喝点什么？<br> 酒<br> 客官来点什么下酒菜？<br> 酒<br> 。。。。。。</p>
</blockquote>
<p>的确，用酒当酒的下酒菜，岂不最好。</p>
]]></content>
      
        <categories>
            
            <category> 书评 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 古龙 </tag>
            
            <tag> 武侠 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[读史之盲目爱国]]></title>
      <url>http://chuanqiang.github.io/2015/06/13/%E8%AF%BB%E5%8F%B2%E4%B9%8B%E7%9B%B2%E7%9B%AE%E7%88%B1%E5%9B%BD/</url>
      <content type="html"><![CDATA[<p><strong>爱国</strong> 是一个很神圣的词语，是一个人有道德的体现，它能作为一种精神力量增进一个民族的凝聚力和创造力。但是当爱国被盲目所主导的时候，便会造成社会的悲剧。</p>
<a id="more"></a>
<p>义和团运动是中学课本里必学的内容，被美化成一场正义的农民阶级的反帝爱国运动，阻止了各帝国主义列强瓜分中国的野心，促进了广大人民群众的觉醒。但我们所熟知的历史又有多少还原了历史的真相。</p>
<p>义和团真正地评价应该叫做“拳匪”，是一场爱国暴动。期间大肆屠杀洋教士、信奉基督教的中国公民，甚至妇女和儿童。当北京城陷入赤色恐怖中时，不仅普通市民、商户被劫掠烧杀，妇女被强奸，甚至权贵官宦人家都不能幸免。此时在南方，张之洞、刘坤一、李鸿章为首的封疆大吏，串联起来，决定无视慈禧太后的宣战。他们坚持认为义和团是匪徒，并且拒绝向外国开战。东南各省开始和外国交涉，承诺保障华南、华中和华东地区外国人的生命财产，而西方国家承诺不派兵进入长江流域和东南沿海各地。这即是历史上的东南自保。</p>
<p>义和团的爱国暴乱，是清国的悲剧，也是大清国的耻辱。清国悍然违背本国法律，违背国际条约，导致清国的北方陷入无政府状态，沦为义和团赤色恐怖暴政统治地区。在这种情况下，为保卫本国公民的生命财产不受暴民的侵害，便成了八国联军侵华的正当理由——把北京和天津的市民从义和团暴民的奸淫烧杀中解救出来。</p>
<p>反对义和团，反对对列国宣战而被处死的庚子五忠，是忠君爱国的，他们认为义和团的法术根本就是迷信，利用义和团会引火烧身。向列国宣战更是丧失理智。        </p>
<p>朝廷上误国的往往是那些盲目的忠君爱国者，从最早提出“民心可用”的林则徐，到清法战争之前的张之洞，到庚子拳乱中的刚毅，一脉相承。</p>
<p>想起了前不久在钓鱼岛事件处于白热化时，那些盲目爱国的公民打砸日系车、日本工厂，殴打日本工人的事情，不与那些拳匪如出一辙嘛。历史是一面镜子，在照见过去的同时也能启发现在。</p>
<p>道德的出发点再高，也不能凌驾于法律之上。当爱国盲目到触犯法律之时，我们首先维护的应该是法律的正义。冲破法律界限的爱国行为造成的只能是社会的混乱。有时候卖国贼不可怕，爱国贼才可怕、，卖国贼纵然再坏，也只有寥寥数人，况且人们对之口诛笔伐。而爱国贼站在了道德的制高点上，很容易盲目且丧失自己，容易造成煽动性。当爱国被盲目放大失去理性的时候，人民往往看不到法律和道德的底线。比如法西斯时期的德国，军帝国主义的日本。历史不堪回首，不忍再提。</p>
<p>呼吁社会回归理性，无论多么强调自由、民主、个人价值，都要在理性和法律的框架之内。否则，带来的只有社会的混乱和道德的丧失。</p>
<p>历史，从来不只是过去，而是发生着的现在，并映射着将来。</p>
]]></content>
      
        <categories>
            
            <category> 历史 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 历史 </tag>
            
            <tag> 爱国 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[唉，这个雨夜]]></title>
      <url>http://chuanqiang.github.io/2015/06/07/%E5%94%89%EF%BC%8C%E8%BF%99%E4%B8%AA%E9%9B%A8%E5%A4%9C/</url>
      <content type="html"><![CDATA[<p>丫的，就燥热吧！老天这下终于憋不住射了，本来挺开心的，可转念一想，咔！没带伞，咋回。对面一小姑娘长得慈眉善目的，一边收拾东西，一边和我说，外面下雨了，一会更大，早点撤吧。心里默莫名一暖，刚想开口说借伞一用啊，她人影一闪就溜了。你逗我呢。。。无奈，掐指一算，雨量来的迅猛，肯定后劲不足，坐等雨停吧。     </p>
<a id="more"></a>
<p>雨终于停了，一个人晃晃悠悠往回走，肚子一阵咕噜，想起还没有吃晚饭。爬到一餐三楼，灯火通明、人声鼎沸。走到一窗口，挑三样菜，八块的套餐。还没打算买，听见里面有人喊：“你长清一中毕业的吧！”心想，感情在一中食堂干过的啊，还认识我，肯定分量足啊，然后颠儿颠儿跑过去。还没等我开口说话，那人把口罩往下一拉，说“以前七班的吧，班主任张广利”。靠来，这怎么回事儿，看着还挺年轻。“你怎么知道？你是。。。？”，“我以前你们隔壁班的，这是我爸妈的，我没事过来帮忙。”原来如此，那就买吧，都校友。刚想说买什么，她开口了：“今天土豆丝、豆角、西红柿不错，来点儿”。看着剩下的辣子鸡、把子肉、糖醋里脊、鱼豆腐，再抬头看看窗口玻璃上贴着，“八元，限三样，任选”。看着她手起刀落早已经把饭菜盛好。心里霎时像外面的雨一样，冰凉冰凉的。</p>
<p>出来食堂，心里大喊倒霉，“霉”字尚未脱口，噗通，一脚踏进水坑了。。。</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 心情 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[学姐说与我想]]></title>
      <url>http://chuanqiang.github.io/2015/06/07/%E5%AD%A6%E5%A7%90%E8%AF%B4%E4%B8%8E%E6%88%91%E6%83%B3/</url>
      <content type="html"><![CDATA[<p>那时我们有梦，关于文学，关于爱情，关于穿越世界的旅行。如今我们深夜饮酒，杯子碰到一起，都是梦破碎的声音。</p>
<hr>
<a id="more"></a>
<p>学姐风尘仆仆的从远方赶来，参加毕业答辩。先来一打青啤，我们煮酒论人生。</p>
<p>关于社会。学姐说，社会会让人变得世俗，一切的阳春白雪、不蔓不枝，都会被社会这个大染缸染的面目全非。在你没有能力改变它的时候，你只能被它改变。在拜金主义旗帜大举的时候，个性与清高都会变得脆弱不堪，慷慨激昂的陈词不及几张钞票甩在你脸上，冲击来的大。物竞天择，生存法则远远凌驾于道德之上。带着面具混生，不同的场合把表情调成不同的调调。</p>
<p>我想。我没有能力做到改变这世界，我能做的只是不被这个世界改变。外表的假象可以千变万化，但一定要守住内心的颜色，把持住个人的底线。当你把自己都丢掉了，还配拥有什么呢。社会很复杂，但你可以很简单。因为，你简单，世界对你就简单。</p>
<p>关于工作。学姐说，一个人在外面混，三分靠实力，七分靠运气。要学会表现自己，推销自己，有能力不去表现就相当于没能力。在同一个能力值的维度下，你的可替代品有许多，老板干嘛不选择一个顺手的用呢。所以，要学会交际，懂点厚黑学。当石头变得圆滑时，才能立住脚，不被奔涌而下的洪流冲走。</p>
<p>我想，运气的成分很重要，但运气是不可把握的，能紧紧把握的，只有自己的能力。一个人的可替代品有很多，但每个人都是不可替代的。尽管这看上去是一个悖论。但在不同的角度看待，就会得到不同的答案。当李开复推开比尔盖茨办公室门向他提交辞职申请时的第一句话是：“I need to follow my heart”。追随自己的心很难，但却是获得幸福的最佳捷径。有多少人穷极一生去攀爬人生的梯子，可到头来才发现，梯子搭在了错误的墙上。偏离了内心的诉求，得到与得不到又有何区别。想起电影《三大傻宝大闹宝莱坞》的主题：我们追求的不是成功，而应该是卓越，因为当你追求卓越时，成功会跟着你跑。</p>
<p>关于爱情。学姐说，要么两个人有感情的积累，要么有物质的积累，否则很难收获爱情。爱情没有海枯石烂、至死不渝那么伟大，爱情只是生活的一部分，并不是全部。爱情的持久度需要用家庭来维系，而家庭的维系需要物质、精力、付出与奉献。所以，以后两个人生活，需要一个人的牺牲来换取，重心只能有一个，一方必须选择妥协。为什么会有这么多人去赞美那些乌托邦式的纯粹爱情，就是因为生活中太少了。</p>
<p>我无言以对。只是突然想到了《茶花女》，想起泰戈尔的诗：</p>
<blockquote>
<p>我听见爱情，我相信爱情<br>爱情是一潭挣扎的蓝藻<br> 如同一阵凄微的风<br>穿过我失血的静脉<br>驻守岁月的信念</p>
</blockquote>
<p>学姐说我理想化，说我想法天真幼稚。</p>
<p>酒喝得很多，我眼睛里却没有丝毫醉意。我笑着碰杯，想问问，到底什么是幼稚。</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 成长 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[夏日物语]]></title>
      <url>http://chuanqiang.github.io/2015/06/07/%E5%A4%8F%E6%97%A5%E7%89%A9%E8%AF%AD/</url>
      <content type="html"><![CDATA[<p>太阳扭着屁股黏过来<br>夏斟的太满<br>我们都已被擒<br>像知了一样无力的呼喊</p>
<a id="more"></a>
<p>衣服上的汗渍<br>晒蔫儿的叶子<br>扑面而来的热风<br>无力摇着头的风扇</p>
<p>气温挑战体温的极限<br>汗毛孔妥协流着汗<br>太阳的殷勤<br>我们的哀叹<br>就像<br>热情的单恋</p>
<p>树荫下的凉风<br>温柔了谁的梦<br>少女的碎花裙<br>装点了哪家的风景</p>
<p>追逐的轻罗小扇<br>拂出外婆的思念<br>萤火虫的小官灯<br>一闪一闪<br>映出童年的鬓面</p>
<p>夏日里<br>苍白的试卷<br>沙沙吟唱的笔尖<br>解放前的最后一战</p>
<p>蹩脚的告别<br>毕业了的青春<br>不会再见的再见</p>
<p>这个夏天<br>会不会留恋<br>会不会怀念<br>热情的单相思<br>终会成为<br>无法回头的爱恋</p>
]]></content>
      
        <categories>
            
            <category> 为你写诗 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 写诗 </tag>
            
            <tag> 夏天 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[读史小感动]]></title>
      <url>http://chuanqiang.github.io/2015/06/03/%E8%AF%BB%E5%8F%B2%E5%B0%8F%E6%84%9F%E5%8A%A8/</url>
      <content type="html"><![CDATA[<p>历史虽不是抒情的小说，但也常常出现感人肺腑的情节。历史的可贵之处在于真实或者接近真实。了解过去也就意味着窥探未来。</p>
<a id="more"></a>       
<p>看到美国的独立战争时，为华盛顿作为政治家的胸怀和人格所感动。      </p>
<p>作为美国独立战争大陆军总司令，在在赶走了殖民者之后，功成名就的他却选择了交还权利，下野隐退。华盛顿的最后讲话十分简约，一如他平时的朴实谦逊。他说：“现在，我已经完成了赋予我的使命，我将退出这个伟大的舞台，并且向庄严的国会告别。在它的命令之下，我奋战已久。我谨在此交出委任并辞去我所有的公职。”议长则答道：“你在这块新的土地上扞卫了自由的理念，为受伤害和被压迫的人们树立了典范。你将带着同胞们的祝福退出这个伟大的舞台。但是，你的道德力量并没有随着你的军职一齐消失，它将激励子孙后代。” 整个仪式十分简短，前后只有几分钟，但正是这个几分钟的仪式却使在场的每一个人都感动不已。当华盛顿将军，这个为了赢得战争不仅变卖了家产，而且因操劳过度生出满头白发、眼睛也几乎看不见了的总司令发表讲话时，每个人的眼里都蓄满泪水。</p>
<p>这是人类历史上第一次不依靠外在压力，仅仅依靠内心的道德力量就自觉放弃了在为公众服务过程中聚集起来的权力。在它以前，人类历史上曾经出现过形形色色的逊位、下野、惧怕各种祸乱而“功成身退”的范例，在它以后，人类历史上还将出现无数以杀戮、屠城为代价而权倾四海的英雄豪杰，但有了这几分钟，那些大大小小争权夺利、不惜弑父杀子的英雄故事黯淡了……</p>
<p>当这样一个高度筑起的时候，再遍历历史长河的英雄角逐、政治斗争的时候，便有一览众山小的感觉了。</p>
]]></content>
      
        <categories>
            
            <category> 历史 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 历史 </tag>
            
            <tag> 华盛顿 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[不自由毋宁死]]></title>
      <url>http://chuanqiang.github.io/2015/05/27/%E4%B8%8D%E8%87%AA%E7%94%B1%E6%AF%8B%E5%AE%81%E6%AD%BB/</url>
      <content type="html"><![CDATA[<p>电影越来越商业化，但商业片并不一定不能伟大。好莱坞有许多电影达到了商业元素与艺术价值高度合一的境界。《飞越疯人院》便是其中之一。影片讲的是一个疯人院里发生的为自由而战的故事。</p>
<a id="more"></a>
<p><img src="/image/feiyuefengrenyuan.jpg" alt=""></p>
<blockquote>
<p>生命诚可贵，爱情价更高，若为自由故，两者皆可抛。</p>
</blockquote>
<p>自由是最基本的人权，但却常常成为制度统治的牺牲品。美国，一个标榜美国式自由精神的国度，就像《肖申刻的救赎》一样，自由是美国人一直追求的一种反抗压抑的个人主义。但是并不是直接说明美国社会是强权压抑的。它是一种理想主义，美国式的，也是带有一定普世精神的，影片通过一群疯子和精神病院护士长以及一整套制度的对抗，控诉强权社会压抑下的人性呐喊与悲歌。</p>
<blockquote>
<p>没有人适应不了的生活，尤其是当他看到周围人都这样生存时。</p>
</blockquote>
<p>就像精神病院的那些病人一样，他们可能有不满，但根本意识不到什么是自由，怎样追求自由，甚至没有意识到自己生活的不自由。但是当他们窥见到自由的时候，他们就有了为自由而战的理由和勇气。这就是对更好意识生活形态的追求于当下现实的意义。古代没有自由民主的概念，或者说很模糊，他们觉得在纲常礼教的束缚下也没有什么不好，但当西方的自由民主之风吹过中华大地的时候，当如沐春风，便成了燎原之势，不可收拾了。在中国近代史上，多少人为了自由民主的政治抱负而献出了生命。</p>
<p>再者，自由并不是天上掉下来的，是要通过争取、斗争换来的。疯人院里的麦克默菲，成了为自由而战的牺牲者，但唤醒了一直以沉默示人的酋长。在影片的结尾，酋长砸碎窗户向远处奔去。。。梁宏达曾经说，中国人名对于民主有两种病：民主幼稚症和民主妄想症。民主幼稚症指的是，以为不争不抢，民主就会到来。民主一定是经过激烈甚至流血的斗争。中国就是大闹大解决，小闹小解决，不闹不解决。而民主妄想症是期盼民主的时候还妄想保护自己的一些额外权利。民主到来时会把自己的好多权利拿掉的。《飞越疯人院》的出现成为了60年代美国人生活的抽象体，那时有不少人看了电影就想到自己，大多数人都是怀着“看看生活到底是怎样的”的心理走进电影院的。观众集中地从疯子的身上窥视到自己，给生活在那个社会中的人们注入一种信仰：自由、自我，而影片所表达的也正是当时社会一部分人所渴望推崇的。</p>
<p>再说电影拍摄本身，当然这部分不慎了解，也是借鉴别人之后再来掉书袋的。影片的拍摄本身也具有一种叛逆的气质，整部影片的色彩基本上只有白、黑构成，影片场景也反复强调疯人院里禁锢的方形门窗，重重设置规整的铁丝网……单调取代了以往电影中的绚丽，而压抑和死寂的气氛充斥着整部影片。那些处在茫然中的美国人正如影片里生活在铁丝网下的病人们一样在经历了社会的动荡之后渴望个性解放、自由放大。此外，影片中的人物也具有明显的符号化。护士长严肃冷静，在与病人的交流会上多以正面向上仰视的主观镜头出现，明显带有一种威严性。但麦克默菲却是一个典型的反叛者，越是在气氛压抑，管制森严的环境里越显出他叛逆的天性，影片的实质也赞扬了这种天性。当麦克默菲偷着带领病人们去钓鱼时，当麦克默菲在圣诞夜里和病人们狂欢时，影片节奏都会变得明快起来。</p>
<p>总之，《飞越疯人院》给人的不仅是一种精神上的解脱，更是一种对于生活的追求与希望，就像结尾处向广袤森林奔跑的酋长一样，同时也带着观众的心飞向自由的远方。</p>
]]></content>
      
        <categories>
            
            <category> 电影 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 自由 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[风口上的猪——一本书看懂互联网金融]]></title>
      <url>http://chuanqiang.github.io/2015/05/26/%E9%A3%8E%E5%8F%A3%E4%B8%8A%E7%9A%84%E7%8C%AA%E2%80%94%E2%80%94%E4%B8%80%E6%9C%AC%E4%B9%A6%E7%9C%8B%E6%87%82%E4%BA%92%E8%81%94%E7%BD%91%E9%87%91%E8%9E%8D/</url>
      <content type="html"><![CDATA[<ol>
<li><p><img src="/image/jinrong01.jpg" alt=""></p>
</li>
</ol>
<a id="more"></a>
<ol>
<li><p>用户的三大基本金融需求：投资、融资、支付。</p>
<p>  ● 投资：资金充裕的人想让钱生钱（存款、保险也是投资的一种）。 </p>
<p>  ● 融资：缺乏资金的人需要钱，融资则要付出成本（如借贷的利息和手续费），其实是用钱买钱。</p>
<p>  ● 支付：金钱的流动。</p>
</li>
<li><p>如图是最基本的投融资流程。资金盈余者将钱给予资金短缺者，资金短缺者之后返还本金及投资回报或亏损（图中箭头仅表示投资资金流动方向）。</p>
</li>
</ol>
<p><img src="/image/jinrong02.jpg?r=65" alt=""></p>
<ol>
<li>一张图说明互联网金融概况</li>
</ol>
<p><img src="/image/jinrong03.jpg?r=66" alt=""></p>
<ol>
<li>关于传统金融行业    在余额宝火爆之前，大多人尚没有理财的概念——闲钱大多放在银行吃着不到0.5%的活期利息。究其根本，一是产品选择少、门槛高，二是缺乏        投资知识。 于是大家都畏葸不前，从而造就了高企不下的储蓄率。存活期的收益是完全赶不上通货膨胀3%的节奏的。 </li>
</ol>
<p>过往银行都被拖延症所困扰——反正坐拥息差收入也可以高枕无忧躺着收钱。但近期利率市场化议题又被屡屡抛出，2013年余额宝的横空出世更是刺激着每家银行的神经。银行是该进一步转型了</p>
<ol>
<li>银行的价值创造链条上，有四个比较重要的构成：研发、运营、营销、服务。在这四个领域，互联网技术给金融机构带来了各种颠覆。    </li>
</ol>
<p><img src="/image/jinrong04.jpg?r=71" alt=""></p>
<p>我们不难发现：过往的互联网技术，更多的是聚焦在运营效率的提升与营销方面。在运营效率方面，银行前后台电子化与联网让运营更有效率，接入央行征信系统让风险管理更省时省力；在市场营销方面，铺天盖地的精准营销覆盖各大门户及搜索引擎，展示广告网络也屡屡出现银行的标语，短信、微信、微博上也有银行隔三岔五给你推送的一些广告，网上银行分销理财产品、基金和保险也让银行获益不少。 但近几年，金融机构开始真正深入地去考虑，在研发和服务这两个领域，银行能在互联网技术上有什么更进一步的突破。</p>
<p>其实在现有的监管框架，产品研发仍是大有可为的——银行可通过数据发掘客户需求，低成本地推出客制化（customization）的产品。</p>
<p>银行开始由以产品为中心向以客户为中心转变。</p>
<p>在Direct Bank进入一个新市场的时候，一般会主打一两个拳头产品。之后的几年再慢慢丰富他们的产品线。这个和创业公司的MVP（minimum viable product）概念很类似，意即“最简可行产品”——用最快、最简明的方式建立一个可用的产品原型，这个原型要表达出你产品最终想要的效果，然后通过产品迭代来完善细节。</p>
<ol>
<li>我国的利率市场化改革进程仍在有条不紊地进行中。2013年7月，贷款的利率终于自由化，但最最关键的存款利率上限（过往是央行基准利率的 1.1 倍，2014年11月被调整为1.2倍）仍没有放开。目前中小行大多都以存款利率上限来吸储，大行则利率低一点。在利率未市场化的前提下，直销银行在存款价格上也无法进一步下降，并不能充分发挥高息揽储策略。</li>
</ol>
<p>要放开存款利率上限，需要有存款保险制度作为铺垫。所谓存款保险制度，也就是银行如果倒闭了，储户并不是损失了所有钱，政府或银行业协会会赔你一部分（以香港为例，目前存款保障限额在 50 万港币）。监管机构屡屡放风，存款保险制度呼之欲出。 以国际上的直销银行的做法来看，一般不会采取全面降价的策略：主打的拳头产品会用比较高的利率来吸引储户，甚至会有开户送现金的促销活动；但其他产品则保持标准价格，以维持盈利性。</p>
<ol>
<li><p>中国的互联网行业有个721定律，即：一个超级公司会占据市场的70%的份额，老二会占据20%，剩余的10%由其他小公司分吃（当然具体的市场份额还是要看具体领域）。目前电子商务龙头已被阿里巴巴、合并后的京东和腾讯ECC占据，银行虽可以通过向已有客户进行交叉销售，但用户的购买习惯一时半会儿无法养成，短期内流量很难做起来。而且并非电商出身的银行涉足不熟悉的领域，很难发挥自身长处。除非收购已经发展得比较好的电商平台，从零做起确实难成气候</p>
</li>
<li><p>银行与电商企业合作，可以结合双方的优势，发挥协同效应。开放、合作的思想也是互联网思维里很重要的一点。</p>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 书评 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 互联网 </tag>
            
            <tag> 金融 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[写在跑步两周]]></title>
      <url>http://chuanqiang.github.io/2015/05/24/%E5%86%99%E5%9C%A8%E8%B7%91%E6%AD%A5%E4%B8%A4%E5%91%A8/</url>
      <content type="html"><![CDATA[<p>不知怎么的，开始想跑步，单纯出现这个念头，然后在脑袋中渐渐放大，最终付诸了行动。有些事情，就是不知所起，一往而深的，就像恋爱，当然这是矫情的说辞。</p>
<a id="more"></a>
<p>选择在晚上，九点多钟，原因有两个：一是白天热；二是晚上跑步人多，而我还没有特立独行的勇气。换好衣服，往往呼一二同伴，一个人总显得比较落寞。这几天，操场星星多，人也多，当然情侣也多。当然，单身狗狗更多。</p>
<p>跑步是一件很简单的事，前脚迈，后脚蹬，调整好呼吸，向着一个方向，撒丫子跑就行。跑步又不是一件简单的事，跑步枯燥，不像玩游戏一样刺激澎湃；跑步累，是自己和自己较劲，跑的满头大汗、气喘吁吁，你的肺在抗议，你的小腿肚子在罢工，而你像周扒皮，剥削者，咬牙切齿的往前跑；跑步难坚持，风大了，心情差了，没状态了，晚上累了，都是你跑步路上的一只只拦路虎，你在想，哎，算了吧，少跑一次也无所谓，那恭喜你，你被跑步打败了。</p>
<p>跑步地点在操场，只有一圈一圈的跑道和天上的星星月亮，那为什么不换个地儿，风景如画的，原因很简单——黑！其实操场灯也不亮，依稀可以看见跑跑道以及跑道上摇曳的身姿，这也算路上的一大情趣吧。跑步不喜欢带耳机听音乐，就纯粹的享受跑步，享受路上的惬意，享受大汗淋漓，享受一点一点两腿酸麻的过程。</p>
<p>跑步途中吹吹风，想想事，看看月亮，回去洗个热水澡，倍儿舒服。</p>
<p>跑步无他，贵在坚持。</p>
<p>是以自勉。 </p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 跑步 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[出名与娱乐圈]]></title>
      <url>http://chuanqiang.github.io/2015/05/23/%E5%87%BA%E5%90%8D%E4%B8%8E%E5%A8%B1%E4%B9%90%E5%9C%88/</url>
      <content type="html"><![CDATA[<p><code>**出名要趁早**</code>最早出自张爱玲，此后，就成为追求功成名就之人信奉的一个法则。似乎出名就应该越早越好，否则，就会像张爱玲说的，“来得晚的话，快乐不那么痛快”。</p>
<a id="more"></a>
<p>所以，有那么多年纪轻轻，咸才少能的人对娱乐圈趋之若鹜，不管用什么方法，只要早出名就行，哪怕是远洋的臭名也无妨，所以滋生出了亦如凤姐、郭美美，还有那些通过各种手段博出镜，求上位的人。这些人为什么不惜臭名照着、不惜放弃人格也要出名呢？因为他们知道：在当今浮躁的环境下，丑名、恶名和骂名很容易转化为“美名”，进而转化为影响力和钱。这背后体现的是严重的拜金主义。当金钱至上的时候，人们往往看不到道德和人格。人只要一出名，就会产生广告效应，会吸引商家上门合作，然后赚的盆满钵盈。更深层次分析，这种利益链结构之所以能成功，体现了整个社会拜金主义和畸形的价值观。当整个社会都喜欢喜欢看三俗剧，喜欢大尺度，喜欢看绯闻、闹剧的时候，以盈利为上的商家肯定会迎合这种口味和市场，造成整个文艺界的低俗化。你倒想阳春白雪，关键观众都是下里巴人，没人看啊，那投资方自然不会投资。造成文艺工作者的创作热情锐减。当人民都看选秀和跑男的时候，谁会耐下心来看《死亡诗社》，当《爱情买卖》流行于大街小巷的时候，谁会听贝多芬巴赫。</p>
<p>当艺人开始着急出名，着急吸金的时候，便带来烦躁，开始耐不下心来潜心创作，但优秀的文学艺术作品是来不得半点着急马虎的。你着急出名，必然也会很快陨落，因为在没有雄厚的艺术积淀，没有潜心创作的过程，你根本经不住时代的洗礼。其实，你如果把人生当成一次马拉松长跑的话，在前一千米是否跑在第一名真是一件那么重要的事情吗?你看李健，詹姆斯卡梅隆，齐白石，李安，往往都是厚积薄发，所以他们的艺术之路能够长久，艺术作品能够流芳绵长。   </p>
<p>每一件与众不同的绝世好东西，其实都是以无比寂寞的勤奋为前提的，要么是血，要么是汗，要么是大把大把的曼妙青春好时光。</p>
]]></content>
      
        <categories>
            
            <category> 一支自由主义的笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 评议 </tag>
            
            <tag> 娱乐圈 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[人格分裂——你肿么了]]></title>
      <url>http://chuanqiang.github.io/2015/05/23/%E4%BA%BA%E6%A0%BC%E5%88%86%E8%A3%82%E2%80%94%E2%80%94%E4%BD%A0%E8%82%BF%E4%B9%88%E4%BA%86/</url>
      <content type="html"><![CDATA[<p>张传强，你肿么了！我最近对你很失望啊。你真是糟糕透顶。算了，你改名吧，省着连累我丢人。<br><a id="more"></a><br>张传强你为什么浮躁呢？心像轻飘飘的柳絮，像棉花，像尘埃，像一切没有重量的东西。我都怀疑你的心是不是还在你的肚子里，不是飘飘然飞走了吧。我问你，单词为什么记不住，它都快记住你了，你还记不住它。效率为什么这么低，你这样让蜗牛情何以堪！你为什么老走神，自己的脑子都管不住，你以后还想管谁！旁边有点动静，心思就飞走了。丫的！又不是美女，你瞎愁啥！</p>
<p>张传强你为什么老是纠结呢？纠结于选择，纠结于对错，纠结于成败，不行你蒙一个行不行，又不是什么大不了的事，跟着感觉走行不行。你简单，世界对你就简单。大丈夫磨磨唧唧，知不知道什么叫雷厉风行，什么叫做果敢刚毅。这点破事你都花时间寻思纠结，那要是以后事关生男生女，你不得纠结到七老八十！点儿出息！</p>
<p>张传强你为什么老师半途而废呢？计划是给我看的吗！计划的牛逼哄哄，永远虎头蛇尾。语言的巨人，行动的矮子！丢不丢人，懂不懂言必信，行必果。你是一男的，现在这个样，以后怎么混社会！闭门思过去吧您！</p>
<blockquote>
<p>知道错了吗？<br> “。。。。。。”<br> 你怎么不说话？<br>“我在想，改个什么名字好呢。。？”<br>！@#￥%%…………<br>打死你！</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 独白 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[讲电动力学的女人]]></title>
      <url>http://chuanqiang.github.io/2015/05/20/%E8%AE%B2%E7%94%B5%E5%8A%A8%E5%8A%9B%E5%AD%A6%E7%9A%84%E5%A5%B3%E4%BA%BA/</url>
      <content type="html"><![CDATA[<p>当符号爬满黑板<br>当问号涌上心头<br>当电与磁的故事响起<br>当故事以抽象的方式演绎<br><a id="more"></a><br>简单的字母 丰富的含义<br>数字的史诗<br>物理的韵律<br>而这些<br>我不是归人<br>仅匆匆过客而已</p>
<p>当女人充满智慧<br>当理性压倒感性<br>当她的手不再秀气<br>执笔当剑<br>在幽暗的黑板上<br>铿锵评议</p>
<p>当她的嘴巴没有呢喃软玉<br>黑色的麦克风<br>口吐物理的梵语<br>当她站在巨人的肩膀上<br>向我们讲述另一个世界的磅礴大气</p>
<p>我<br>目眩 心驰<br>却是遥不可及的距离<br>遗忘的太久 也就无从拾起<br>丢弃的太多 因而无法找回</p>
<p>眼前的美丽<br>是我无法理解的深刻<br>那是逻辑 是周密<br>是大繁至简的道理</p>
<p>而现在，<br>由面前的女人讲起<br>没有温文尔雅<br>没有亭亭玉立<br>而是充满理性的魅力<br>就像黑板上的符号那样神秘</p>
]]></content>
      
        <categories>
            
            <category> 为你写诗 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 写诗 </tag>
            
            <tag> 女人 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[慵懒格调]]></title>
      <url>http://chuanqiang.github.io/2015/05/17/%E6%85%B5%E6%87%92%E6%A0%BC%E8%B0%83/</url>
      <content type="html"><![CDATA[<p>最近回家回的频繁，让那些乡隔万里的同学羡慕嫉妒恨。其实大多时候家里都是没人的，每次回去的理由都是：我想静静。不要问我静静是谁！学校真的聒噪得很，而我天生喜欢安静。经常由于睡眠质量不好了或者心里烦躁，就想回家，贪慕那份宁静。        </p>
<a id="more"></a>
<p>每次先去镇上的超市买足周末两天的伙食，一个人拉着超市的购物车在超市的蔬果区逛，常常引来导购员异样的目光，买的不多，有肉有菜有零食饮料，买之前早就安排好了每餐的食谱。回到家，一贯是先照例打扫一遍，浇浇花，然后光着脚躺沙发上抻着。</p>
<p>挺享受一个人打理生活的感觉，无拘无束，几时醒，几时眠，全凭自己做主。一杯白水，一盏台灯，一本书，一个下午。时光就这么走着，不急不缓；生活就这么过着，不咸不淡。夜晚，星星在空中眨眼，伴着虫鸣，觉睡得格外香。不用定闹钟，没有人喊起床，被太阳叫醒，伸个懒腰，放首歌洗漱，看着早间新闻吃早餐。周天下午，坐车回学校，看车窗外的风景，和邻座侃几句，经常被误认为高中生，不知是哭还是笑。</p>
<p>世界越来越喧嚣，不只是鼎沸的人声、轰鸣的发动机、热火朝天的建筑工地，更是繁杂的广告、聒噪的网络、浅显的交际，肤浅的影视剧。我们像轻飘飘的柳絮，在喧闹的声波场中飘来飘去，无法再生活的大地上留下丝毫痕迹。在进入大数据时代，信息爆炸使得信息流越来越多，它们充斥着我们的眼球，纷扰了我们的生活。但是，信息价值的浓度却在降低，我们在这种黏黏的信息糖水中醉生梦死，我们已经上瘾——你能做到远离任何网络多久！我们似乎都很忙，却忙不出什么所以然，每天早上睁开眼回想昨天的经历，常常大脑是一片空白。回忆童趣儿时、时光中学的时候，我们常常能侃侃而谈，说出一堆难忘的经历，但回忆刚刚经历的大学几年，又能说出多少值得记忆的东西。</p>
<p>世界的节奏太快了，让人有点跟不上。 龙应台在《有些事，只能一个人做》中写到：</p>
<blockquote>
<p>奔忙，使作家无法写作，使音乐家无法谱曲，使画家无法作画，使学者无法著述；奔忙，使思想家变成名嘴，使名嘴变成娱乐家，使娱乐家变成聒噪小丑。闲暇、逗留，确实是创造力的有机土壤，不可或缺。</p>
</blockquote>
<p>让世界跑去吧，而我喜欢散散步。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 独白 </tag>
            
            <tag> 心情 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[《白夜行》——最绝望的念想，最悲恸的守望]]></title>
      <url>http://chuanqiang.github.io/2015/05/12/%E3%80%8A%E7%99%BD%E5%A4%9C%E8%A1%8C%E3%80%8B%E2%80%94%E2%80%94%E6%9C%80%E7%BB%9D%E6%9C%9B%E7%9A%84%E5%BF%B5%E6%83%B3%EF%BC%8C%E6%9C%80%E6%82%B2%E6%81%B8%E7%9A%84%E5%AE%88%E6%9C%9B/</url>
      <content type="html"><![CDATA[<p>这是继《解忧杂货店》之后看的东野圭吾的第二本小说，一如既往的出色。冷静的推理，缜密的逻辑，在栩栩生动的刻画与描写中向你徐徐道来。昨天晚上看到百分之九十，躺下后各种线索在脑海交织，各种头绪似乎相互关联，又无法看清真相。我知道，看不完最后的百分之一的结尾，你是无法挥散眼前的迷雾的。我知道作者在最后的最后会给你一个恍然大悟，让你感觉总在意料之外却又都在情理之中。的确，作者做到了，并且让我五体投地。</p>
<a id="more"></a>
<blockquote>
<p>我得天空里没有太阳，总是黑夜，但并不暗，因为有东西替代了太阳。虽然没有太阳那么明亮。但对我来说已经足够。凭借这份光，我便能把黑夜当成白天。我从来就没有太阳，所以不怕失去</p>
</blockquote>
<p><img src="/image/baiyexing.jpg" alt=""></p>
<p>将无望却坚守的凄凉爱情和执着而缜密的冷静推理完美结合，被众多“东饭”称为东野圭吾作品中的无冕之王。小说的结尾是个悲剧，因为源于一个悲剧的开始。“只希望能手牵手在太阳下散步”成了书中的绝望念想。男女主角从悲惨的童年开始，一步步陷入万劫不复的深渊。随着案情的逐渐明晰，我体会到的不是拨云见日的畅快淋漓，而是一种压抑与悲哀，这都源于一种深深的无奈。表面上纯洁美丽的雪穗是罪恶的，她黑暗的童年阴影无法去除，所以生命中没有太阳。桐原亮司表面上是神秘而且阴暗的，但他承受了父亲罪行的后果，为雪穗不惜一切，他代替了太阳，成为雪穗的亮光，她便可以在白夜中行走。罪恶的力量愈强，赎罪与爱的力量就愈大。直到小说的最后，侦探才现身揭发一切，让清白留在人间。</p>
<p>世间没有无缘无故的爱，更没有无缘无故的恨，就像佛法中的因果。每件事情出现的背后都能找到一堆事情做推手，就像书中每一个人物的死亡都会有一个简单的因由，雪穗的恶在于童年被恋童癖者的玷污，桐原亮司的恶在于对雪穗的拯救和爱。万事万物都是相互交织的，在这里种下的一粒种子，总会在某个地方开出花来。世界是连续的，不会有断点，总会有一套属于上帝的方程式，你输入一个参数x，必然会在最后输出一个结果y。比如审视你现在正在做的事情，一定会找到一个原因或者准确说是与之相互关联的事情。</p>
<blockquote>
<p>我工作时经常想，残忍的凶杀案发生后，我们不仅要将凶手抓获，还有必要彻查案件发生的原因，否则同样的事情可能还会发生。真相中有很多值得我们学习的东西。</p>
</blockquote>
<p>东野圭吾道出了悬疑小说的精髓。悬疑小说最重要的不是动机和手法有多么光怪陆离和出人意料，而是可以从某一切点切入，观察到人性的另一面，不管它是美好的一面，还是丑陋的一面，重要的是剥的足够深，深入骨髓，往往最后更能得出简单而深刻的道理。大繁至简，大音希声，越是朴素，越是深刻。世界是简单的堆砌，不是复杂物的构成，物质不就是由最简单的夸克构成的嘛。牛顿和爱因斯坦，这两位分属于17世纪和20世纪的伟大科学家异口同声说，唯有答案简单，才可能近乎正确。</p>
<p>东野圭吾的《白夜行》，让我不仅惊叹于作者缜密的逻辑和叙事技巧以及这个悲恸的故事，更让我认识到了万事万物之间的关联性，就像运动是世界本质一样，联系也是。</p>
]]></content>
      
        <categories>
            
            <category> 书评 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 爱情 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[光影锦时]]></title>
      <url>http://chuanqiang.github.io/2015/05/10/%E5%85%89%E5%BD%B1%E9%94%A6%E6%97%B6/</url>
      <content type="html"><![CDATA[<p>车窗外景色飞逝，内心却是另一番斑驳。雨后太阳初晴，微风夹杂着泥土的清香透过车窗吹过发丝。发动机的轰鸣和人语的嘈杂，狭窄的空间里，适合做两件事情，打盹儿和走神儿。我选择了发发呆，思绪不受控制的缥缈到很远的地方，世界的尽头，记忆的原点，总之很舒服。</p>
<a id="more"></a>
<p>目光透过车窗镜子游离，外面的景色没有形成什么轮廓，只是大片大片的绿色，浓妆艳抹，分外妖娆。忽然瞳孔收紧，看到车窗镜子上映着一个女高中生握着钢笔在带有方格的本子上写着什么，应该是在写老师布置的作文吧，时而下笔飞快，时而咬着笔杆歪着头思索。笔尖和着光和影，在白纸上低声吟唱，字迹娟秀。<br><img src="/image/P50510-144648-001-001.jpg?r=51" alt=""></p>
<p>我无心偷窥什么，只是一时出神，任思绪延展。猜测可能是周末贪玩忘记了写，要赶在晚自习前把它写好，作文的内容是什么呢，肯定是高中老生常谈的，格式固定，主题明确。我高中时对这种”八股取士”很是憎恶，和同学说，这只是带着枷锁在舞蹈罢了，自己尝常常为追求标新立异而写一些“非主流”的东西，带着高中青春期的叛逆，带着厌恶世俗的傲气。现在看来也大多是一些为赋新词强说愁的无病呻吟罢了，深受郭敬明和韩寒毒害不浅啊，以至于班主任大利把我叫到办公室语重心长的给我开导，要我想事情不要那么悲观，世界还是很灿烂的嘛。那时的高中语文老师是一个挺臭美的女老师，不过对我特别好，经常夸赞，还让在全班诵读。以至于那时候内心极度膨胀，幻想着以后拿文字混生时牛逼掰掰的光辉前景。但是的确也培养起对文字的热爱，庆幸在那个兵荒马乱的高中时代，我还可以躲在书里醉生梦死。儿时的虚荣心，谁又能完全否定它会对你以后产生好的方面的影响呢。到了高三分班，分到了高手如云的学霸班，是学霸，也是学虫，奔着高考的大门前仆后继。语文老师换成了校语文组组长，对如何应对高考语文了如指掌，可以把我们训练的做古诗词阅读理解不看诗词，直接做题目都能得到百分之八十。现在想想，这也是醉了。当然，我的作文也开始经常地不及格。</p>
<p>可能写的差不多了，她收起了本子，开始带上耳机听歌。身上穿着宽松的校服，白蓝相间，能看出是一中的校服，应该是我的小学妹，留着齐眉的短发，高中生特有的朝气和干净。一中还存在着查发型的传统？真是害人不浅啊。想起我那时因为这个不知道在学校理发店花了多少冤枉钱，那时候和几个死党猜测肯定是理发店老板娘和教务处主任有一腿，所以每次理发店不景气的时候，学校就开始大范围的整查发型，男生必须平头，女生发不过耳。我因此也成了“坏孩子”，开始和教导处的老师各种斗智斗勇。在运动会的时候，学生起义终于爆发了，我们用那个时候流行的一项“开飞机”的运动，追着逮住教务处老师，往操场树上死命开。在此致敬于那几棵为学生起义运动做出突出贡献的小树。敬礼！</p>
<p>想着想着，车已到站，时光总是过得那么快，我们在回忆过去的时候，回忆的时间也成为了过去。看，时间总是这么残酷。</p>
<p>下车时，冲她扫了一眼，不知道她的那篇作文会得多少分。。。。。。</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 独白 </tag>
            
            <tag> 心情 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[《大数据时代》——生活、工作与思维的大变革]]></title>
      <url>http://chuanqiang.github.io/2015/05/06/%E3%80%8A%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%97%B6%E4%BB%A3%E3%80%8B%E2%80%94%E2%80%94%E7%94%9F%E6%B4%BB%E3%80%81%E5%B7%A5%E4%BD%9C%E4%B8%8E%E6%80%9D%E7%BB%B4%E7%9A%84%E5%A4%A7%E5%8F%98%E9%9D%A9/</url>
      <content type="html"><![CDATA[<p>世界的本质是什么？道说：是人间；佛说：是六道之一；上帝说，是天堂和地域之间的战场；哲学说：是无穷的辩证迷雾；物理说：是基本粒子堆砌起来的聚合体；人文说；是时间的积累。现在，又有了新的答案：是数据。站在不同的角度看待，往往会有不同的解答，因为世界是一个庞大的复杂体，横看成岭侧成峰。维克多·迈尔-舍恩伯格教授的《大数据时代》，就向我们证明了世界的又一种形态——数据。</p>
<a id="more"></a>
<p>我们生活在一个充满数据的时代，而计算机和网络的发展让数据的存储、传输以及处理得到了巨大的飞跃。面对海量的数据，你能看到什么？数字？信息？还是一片混沌？在此之前，我只知道互联网会深刻的改变和影响我们的生活，而不知道互联网的价值是通过数据的交互来体现。现在。在海量的数据中，是源源不断的价值，是对未来神秘精确的预言，是世界的一种形式。</p>
<p>我们已经进入大数据时代，以前所未有的方式，通过对海量数据进行分析获得具有巨大价值的产品和服务，或深刻的洞见。大数据告诫我们“是什么”而不是“为什么”，在大数据时代，我们不必知道现象背后的原因，我们只要让数据自己发声。作者指出了大数据时代处理数据理念上的三大转变：1.要全体不要抽样  2.要效率不要绝对精确  3.要相关不要因果。抽样不是一种必要的方法，而是受限于技术的妥协，但随着网络和计算机的发展，“样本=全体”已经成为可能，这样庞大的数据样本更加丰富也更能还原事物的本质。另外，以前对于数据处理执迷于精确性，是信息缺乏时代和模拟时代的产物。只有5%的数据是结构化且能适用于传统数据库的。如果不接受混乱，剩下95%的非结构化数据都无法被利用，只有接受不精确性，我们才能打开一扇从未涉足的世界的窗户。然而错误并不是大数据固有的特性，而是一个需要我们去处理的现实问题，并且可能长期存在。对于大数据看中相关关系而不是因果关系，作者给了详细的说明。相比较于因果关系，相关关系分析更加准确、更快，而且不受偏见的影响，因为信息量的变化会导致信息形态的变化——量变引发了质变。比如通过监听微博，可以预测一部电影的成败；销售商利用信息可以设计店面的最佳布局并判断营销活动的有效性；通过大数据，语言可以得到翻译，汽车可以在预测的基础上自行驾驶，亚马逊可以推荐你喜欢的书或者网易音乐推荐你喜欢的歌，这些推荐都往往能打动我们。我们只知道是什么就行，不需要明了为什么。作者认为，如果凡事都有因果的话，那我们就没有决定任何事物的自由了。如果说我们做的每一个决定或者每一个想法都是其他事情的结果，而这个结果又是其他原因导致的，以此循环往复，那么就不存在认得自由意志这一说了。</p>
<p>大数据是一场思维革命，更是一场商业革命。如今，数据已经成为一种商业资本，一项重要的经济投入，可以创造新的经济利益。事实上，一旦思维转变过来，数据就能巧妙地用来激发新产品和新兴服务。大数据不但是我们获得认知，创造新的价值的源泉，大数据还是改变市场、组织机构，以及政府与公民关系的方法。</p>
<p>数据的价值体现在哪？它能通过一定的数学算法，为人们揭示真相，获得方法解决的途径以及预测未来。数据的真实价值就像漂浮在海洋上的冰山，第一眼只能看到冰山一角，而绝大部分则隐藏在表面之下。现如今，数据成为衡量一个公司实力的重要条件，拥有数据以及有对数据处理的能力和运用数据价值的思维是许多公司立于不败之地的法宝。想象如果谷歌、微软、亚马逊、百度等等网络巨头公司如果没有了所拥有的巨大的数据，那这些公司不知还能不能生存。根据所提供价值的不同来源，分别出现了三种大数据公司。这三种来源是指：1.数据本身 2.技能  3.思维。往往巨头公司都占有两种或者三种来源。</p>
<p>然而，大数据时代的来临，也将面临着许多的问题，就像一开始互联网到来时出现问题一样。作者冷静描绘了大数据帝国前夜的脆弱和不安，包括产业生态环境、数据安全隐私、信息公正公开等问题。大数据需要人们重新讨论决策、命运和正义的性质，我们的世界观正受到相关性优势的挑战。为此，作者提出了许多可行的措施，比如责任从民众转移到数据使用者。三大原则：公开原则，必须进行预测分析的算法系统。公正原则，具备有第三方专家公正的可靠有效的算法系统。可反驳原则，明确提出个人可以对其预测进行反驳的具体方式。最重要的是，确保个人动因能防范“数据独裁”的危害。</p>
<p>《大数据时代》向我们表明，拥有知识曾意味着掌握过去，现在更意味着预测未来。</p>
]]></content>
      
        <categories>
            
            <category> 书评 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 大数据 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[《悟空传》粗记]]></title>
      <url>http://chuanqiang.github.io/2015/05/05/%E3%80%8A%E6%82%9F%E7%A9%BA%E4%BC%A0%E3%80%8B%E7%B2%97%E8%AE%B0/</url>
      <content type="html"><![CDATA[<blockquote>
<p>我要这天，再遮不住我眼，<br>要这地，再埋不了我心，<br>要这众生，都明白我意，<br>要那诸佛，都烟消云散! </p>
</blockquote>
<a id="more"></a>
<p><img src="/image/悟空传.jpg" alt=""></p>
<p>《西游记》的故事早已经家喻户晓，他已经成为中国文化宝库中重要的一部分，构成了中国的神仙体系。似乎师徒四个西游的故事就是那样，也只能是那样了。菩萨神仙永远都正义善良的，妖精永远都是邪恶丑陋的，猪八戒是好吃懒做的，沙僧是质朴憨傻的，悟空是机灵好斗的。西游记的经典性为这个故事套上了一副模板，像是一部真实发生的历史，厚重而又真实。</p>
<p>然而《悟空传》却颠覆了他们在我们心中根深蒂固的形象，每一个人物都被赋予了丰富与复杂的价值内涵，超越了《西游记》中形象的单向性和特定化。每一个形象自身都矛盾重重、行动不居、让人琢磨不透。他们都超越了我们原有的形象阐释框架和解释规范，不断冲击和修改我们已有的期待视野。</p>
<p>悟空在西行路上迷失了自我，在强大的命运面前，一切只是一场骗局一场玩笑。顶天立地的美猴王其实只是那个充满惊恐对未来充满希望却找不到过去的小猴子。决心与命运抗争到底天鹏最终却只能以八戒的面孔面对这个世界，他不肯面对深爱的阿月。本是金蝉子的唐僧发现了佛教对世人的欺骗以及教法的界限，他想要突破，不惜自毁千年功力，最终成为了唐僧。他度不了众生，也不愿意自度，只能痛苦的挣扎。。。   </p>
<p>《悟空传》中的悟空，在某种意义上，就是一个隐喻。它表征着对这种神圣不证自明的中心、等级制度合法性的质疑，表征着对权威的对抗和消解中心的努力。爱情在书中也成为一条主线，更能契合人性，使故事更加饱满。小白龙对唐僧的爱情，紫霞与悟空的爱情，猪八戒与阿月的爱情行等等都写得刻骨铭心。爱情成为唯一神圣的东西，它取代了去西天取经的神圣地位。        </p>
<p>说实话，这本书没有完全看明白，故事的时间充满了延展、加速、逆转，而且叙述空间也可以任意转换、拼贴、重复。这种将叙述事件和逻辑顺序打乱，让故事在过去与现在，尘世和仙界之间自由穿超的后现代主义叙事模式，就像电影中的蒙太奇，将镜头不停地切换，表现出了后现代主义的典型特征。</p>
<hr>
<p>整本书的语言成了这本书成功的一大语言，许多极富哲理和美感。如下：</p>
<ol>
<li>当五百年的光阴只是一个骗局,虚无时间中的人物又为什么而苦,为什么而喜呢? </li>
<li>也许每个人出生的时候都以为这田地都是为他一个人而存在的,当他发现自己错的时候,他便开始长大. </li>
<li>不要死，也不要孤独的活。 </li>
<li>我终于明白,我手中的金箍棒,上不能通天,下不能探海,没有齐天大圣,只有一只小猴子. </li>
<li>生我何用？不能欢笑.灭我何用？不减狂骄. </li>
<li>我终不能改变那个开始,何不忘了那个结局呢? </li>
<li>我要这天，再遮不住我眼，要这地，再埋不了我心，要这众生，都明白我意，要那诸佛，都烟消云散! </li>
<li>我像一个优伶，时哭时笑着，久而久之，也不知这悲喜是自己的，还是一种表演，很多人在看着我，他们在叫好，但我很孤独，我生活在自己的幻想中，我幻想着我在一个简单而又复杂的世界，那里只有神与妖，没有人，没有人间的一切琐碎，却有一切你所想象不到的东西。但真正生活在那里，我又孤独，因为我是一个人。 </li>
<li>是不是选择任何一个方向，都会游向同一个宿命呢？ </li>
<li>神不会去救任何人，能救你的只有你自己如果你死了，改变不了任何事情 但只要你活着，就可以改变一切 </li>
<li>佛在心中，你说它做甚？不如放屁！ </li>
<li>因为我想活着，我不能掩藏我心中的本欲，正如我心中爱你美丽，又怎能嘴上装四大皆空。 </li>
<li>原来像这样神仙没法管的东西都有个名字,叫做–妖. </li>
<li>问世间情为何物,佛日:废物!!! </li>
<li>那天上，有一轮那么蓝的月亮。满天的银河，把光辉静静照在一只哭泣的猪身上。 </li>
<li>我走得再远也走不出那片天么？ </li>
<li>能记得你的人已经不在了,我也已经不在了,没有人再爱着你也没有人再恨着你,一切不过是虚无,我也只是虚无,在宇宙间飘忽,没有倒影,光线穿透我而去,没有人看见我. </li>
<li>我有一个梦，我想我飞起时，那天也让开路，我入海时，水也分成两边，众神诸仙，见我也称兄弟，无忧无虑，天下再无可拘我之物，再无可管我之人，再无我到不了之处，再无我做不成之事，再无我战不胜之物。 </li>
<li>我不知道为什么要因为失去而忧伤，为什么为了时光短暂而忧虑。我要去找到那力量，让所有的生命都超越界限，让所有的花同时在大地上开放。让想飞的就能自由飞翔，让所有人和他们喜欢的永远地在一起。 </li>
<li>如果上天知我心诚，就让石头也发芽吧。 </li>
<li>死就是什么也看不见,什么也听不见,什么也感觉不到,什么也不会想,就像你未出生时一样. </li>
<li>等到那一刹那,黑暗的天空突然被一道巨大的闪电划开. 孙悟空一跃而起,将金箍棒直指向苍穹.”来吧”!那一刻被电光照亮的他的身姿,千万年后仍凝固在传说之中。 </li>
<li>你以为你有很多路可以选择，但是在你四周有很多看不见的墙，其实你只有一条路可以走. </li>
<li>神不贪，为何容不得一点对其不敬?神不恶，为何要将地上千万生灵命运，握于手中？ </li>
<li>大海在月夜中闪着万点银光，在海边高高的山崖上，站着一只石猴，他呆呆望着大海。世界是这个样子的么？极目之处，无边无界，我却不能再进一步? </li>
<li>我虽然是只猪，但我，不，任，你，们，宰! </li>
<li>若天压我，劈开那天，若地拘我，踏碎那地，我等生来自由身，谁敢高高在上. </li>
<li>负尽千重罪，炼就不死心. </li>
<li>人生没有什么会永远不失去的，可是有的人不相信，所以他们会不停的寻找，找一辈子. </li>
<li>你错了。我不是忘记一切，我是一无所有. </li>
<li>待至英雄们在铁铸的摇篮中成长,勇敢的心像从前一样,去造访万能的神柢,而在这之前,我却常感到,与其孤身跋涉,不如安然沉睡. </li>
<li>对我来说，任何一个地方都是家。可有的人却把家放在世界某一个地方，所以他们才会找不到，才会死在路上。 </li>
<li>也许曾有过那样一个我，那样的生活过。他的身影印在这个时代里。我看见他的传说。 </li>
<li>纷纷落叶飘向大地，白雪下种子沉睡，一朵花开了又迅速枯萎，在流转的光的阴影中，星图不断变幻，海水中矗起高山，草木几百代的荣枯，总有一片片的迎风挺立，酷似它们的祖先。 </li>
<li>一切都会消逝，能留下的只有记忆。而记忆是实在还是虚幻？它摸不着看不到，但它却又是那样沉重的铭刻在心。 </li>
<li>你要记住你是一个猴子,因此你不用学做神仙,你的本性比所有神明都高贵. </li>
<li>天地何用？不能席被，风月何用？不能饮食。纤尘何用？万物其中，变化何用？道法自成。面壁何用？不见滔滔，棒喝何用？一头大包。生我何用？不能欢笑，灭我何用，不减狂骄。从何而来？同生世上，齐乐而歌，行遍大道。万里千里，总找不到，不如与我，相逢一笑。芒鞋斗笠千年走，万古长空一朝游，踏歌而行者，物我两忘间。嗨！嗨！嗨！自在逍遥…… </li>
<li>“俺老妈把俺生下来时，也没告诉俺猪一生意义是什么？俺正在苦想，一看其它兄弟都先抢着把奶头占光了，才知道什么叫真他妈蠢！” </li>
</ol>
]]></content>
      
        <categories>
            
            <category> 书评 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 书评 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[《冰与火之歌》之 提利昂·兰尼斯特]]></title>
      <url>http://chuanqiang.github.io/2015/04/29/%E3%80%8A%E5%86%B0%E4%B8%8E%E7%81%AB%E4%B9%8B%E6%AD%8C%E3%80%8B%E4%B9%8B%20%E6%8F%90%E5%88%A9%E6%98%82%C2%B7%E5%85%B0%E5%B0%BC%E6%96%AF%E7%89%B9/</url>
      <content type="html"><![CDATA[<p>提利昂·兰尼斯特是《冰与火之歌》中一个生于兰尼斯特家族的侏儒。在那个古老封建的中世纪，在那个崇尚荣誉的贵族家庭，这样一副丑陋的面孔无疑会遭到家族和世人的唾弃，也为以后他的坎坷人生埋下了伏笔。</p>
<a id="more"></a>
<p><img src="/image/bingyuhuo.jpg?r=79" alt=""></p>
<p>由于他天生畸形，出生时还导致母亲难产死亡，所以父亲泰温对他似乎缺少与詹姆同等的关爱与尊重。他跟哥哥詹姆的关系很好，但是跟姐姐瑟曦的关系非常糟糕。虽然出身高贵并且富有权势，畸形的身材仍然给他带来了许多问题和困扰。提利昂对敌人凶残，但是对和自己有着类似境遇而遭受歧视的人时常怀有同情之心。他说话尖酸刻薄，一针见血，不留情面，往往因此而得罪别人，有时也会为自己招来祸患。但他喜爱读书，善于思考，富有谋略。他以自己的铮铮铁骨证明了在那个矮小的身体里蕴藏着一个伟大的人格。</p>
<p>琼恩·雪诺有一次问他，你为什么总是抱着一本书读个没完？提里昂·兰尼斯特回答说：</p>
<blockquote>
<p>我是一个侏儒，如果我出生在一个普通平民家庭，早就被无情地丢弃了，但是我出生在了兰尼斯提家族，这就给了我无限的可能。我的腿太短，头却太大，总算这脑袋对我还算合适，凭着它我很清楚自己能干什么不能干什么，它就是我的武器。老哥有他的宝剑，劳勃国王有他的战锤，我则有我的脑袋瓜……所以我拼命读书，保持思路清晰锐利，就好像宝剑需要磨刀石一样。</p>
</blockquote>
<p>的确，对于一个侏儒来说，除了用知识武装自己，还能怎么样呢。身处贵族，他没有骄奢淫逸，沉迷荣华富贵，相反他目光锐利，居安思危，知道自己的前途风雨飘摇，宫廷权力争斗，充满尔虞我诈；身为侏儒，也没有自暴自弃，而是拼命读书，让智力武装躯体。        </p>
<blockquote>
<p>装死只是活命的一种方法，穿上好盔甲才更保险。他说。</p>
</blockquote>
<p>面对蜂拥而至的敌人，他运用自己的谋略施行火攻大败史坦尼斯，拯救了王国。然而后来，一直对他厌烦，以他为家族耻辱的父亲和家人、他的亲密情人和大臣们合谋要将他置于死地，被逼入绝境的他没有采纳一直对他关爱的哥哥的建议保持沉默然后乞求活命，而是愤然反击欲以自己的力量来保护自己，面对那些忘记昔日他曾出生入死保卫家园，今日却来看他被押上审判台接受终极审判热闹的国民，他终于不再平静，环顾周围那些冷血的人们，他发出自己的怒吼和愤怒：</p>
<blockquote>
<p>我救了你们，我救了这座城市，还有你们这些卑微的生命，我本可以让敌人杀死你们……我没杀死国王，我有罪是因为我是侏儒……我希望我有足够的毒药杀死你们所有人……我知道在这里得不到正义，我要让众神来决定我的命运，我要求比武审判</p>
</blockquote>
<p>这个矮小身材的男子汉的铮铮铁骨，震撼了在场的以前所有鄙视他的、视他为怪物的人们。</p>
<p>他的体内居然蕴藏着正常人不具备的巨大能量，他认识到要想拯救自己最终要靠自己。 </p>
<p>面对要判自己死刑的父亲，他吼道：       </p>
<blockquote>
<p>Yes, father. I’m guilty. Guilty, is that what you want to hear?<br>No, of that I’m innocent. I am guilty of a far more monstrous crime.<br>I am guilty of being a dwarf. I’ve been on trial for that my entire life.</p>
</blockquote>
<p>他所有的罪过和他遭受的一切唾弃与不公，全是因为他只是一个侏儒。然而他却是一个巨人，一个屹立在中世纪画卷中的巨人。</p>
<p><strong>力量就像墙上的影子，但影子却能杀人。而且，即便是矮小的人物，也能投射出硕大的影子。</strong></p>
]]></content>
      
        <categories>
            
            <category> 电影 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 美剧 </tag>
            
            <tag> 冰与火之歌 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[天问]]></title>
      <url>http://chuanqiang.github.io/2015/04/27/%E5%A4%A9%E9%97%AE/</url>
      <content type="html"><![CDATA[<blockquote>
<p>让我开始仰望星空<br>让我开始正视大地<br>这一刻，沧海桑田</p>
</blockquote>
<p> ——《三体》抽感</p>
<a id="more"></a>
<p>当太阳隐于天际，当黑夜遮蔽大地。斗转星移，东升西落。很平常，却不平凡。</p>
<p>茫茫寰宇：“上下未形，何由考之？冥昭瞢闇，谁能极之？冯翼惟像，何以识之？明明闇闇，惟时何为？阴阳三合，何本何化？圜则九重，孰营度之？惟兹何功，孰初作之？</p>
<p>问题永远多与答案，仰之弥高，钻之弥坚。愈学习，愈发现人类的无知；越探索，越证明人类的渺小。</p>
<p>仰望星空。它遥远吗？抬头目之所及。它很近吗？茫茫然不可期。</p>
<p>纵观辰宇亿亿年，人类弹指间；遍历生命万万代，文明无穷尽。正如苏子泛舟时所曰，”自其变者而观之，则天地万物曾不能以一瞬，自其不变者而观之，则物与我皆无尽也。</p>
<p>以有穷推测无穷，以有限丈量无限，以科学的方法找寻科学的局限性，让无知探索有知的世界。人类踽踽独行，皓首穷经，探索的不是未知，而是真理。然而没有永恒的真理，却有无尽的未知。人类正是在对无尽的未知的探索中一次次刷新对真理的认识。而这就是文明的秉性，亦或文明存在的意义。</p>
<p>人类否定上帝，并使自己无限的接近上帝。</p>
]]></content>
      
        <categories>
            
            <category> 书评 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 书评 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[朋友]]></title>
      <url>http://chuanqiang.github.io/2015/04/21/%E6%9C%8B%E5%8F%8B/</url>
      <content type="html"><![CDATA[<blockquote>
<p>不管风雨天涯路<br>缘永续<br>莫相忘</p>
</blockquote>
<a id="more"></a>
<p>这是时值高三毕业之际，在班级留言册上写的一首《未央赋》中的最后三句，其他的部分早已经记不起来了，唯独这最后的三句，深深地烙在了脑海中。</p>
<p>在那个兵荒马乱的高中时代，友谊似乎强大的坚不可摧，我们一起携手奔向高考的洪流，我们是一个战壕中的斗士，友谊在那个灰蒙蒙的季节里给了我们源源不断的温暖和鼓励。那时我们看着面前一张张纯真无邪的脸，似乎看到了一生的挚友。</p>
<p>如今，我们在高考的余烬后偷生，像微尘般散落在不同的角落。每个人在新的环境中演绎着别样的故事，故事起伏跌宕，但剧中已经鲜有曾近熟悉的面孔。</p>
<blockquote>
<p>这是一个流行离开的世界，但是我们都不擅长告别。</p>
</blockquote>
<p>春暖花开，心却无聊的像树干上爬上爬下、愣头愣脑的蚂蚁。而最近的一个电话，却又让阔别多年的高中骚年聚在了一起。看着眼前的耗子、萝卜、小哥，心里不由得想笑，虽然工作的工作，上学的上学，但他们丝毫没有改变，还是一模傻气，想高中那会淘气。一边大口喝酒吃肉，一遍谈笑往事，似乎岁月并没有在我们彼此的关系上留下丝毫的痕迹。肴核既尽，杯盘狼藉，不觉午夜之将至。</p>
<p>忽的一下明白，地域之隔，岁月之久，只是让他们消失于眼前，却仍烙印在心底。当你的一个微呼沓至耳边的时候，不管多远，朋友会永远都在。</p>
<p>跋山涉水，为你，千千万万遍。</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 独白 </tag>
            
            <tag> 朋友 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[偷影子的人]]></title>
      <url>http://chuanqiang.github.io/2015/04/16/%E5%81%B7%E5%BD%B1%E5%AD%90%E7%9A%84%E4%BA%BA/</url>
      <content type="html"><![CDATA[<p> 《偷影子的人》是法国作家马克·李维的一部小说，是一部治愈系的作品。书中描写了一个受班上欺负的瘦弱小男孩，拥有着一项特殊的能力——他能够偷走别人的影子，并能和别人的影子交谈，因此可以看到别人的心事，得知他人的秘密。他开始成为需要帮助者的心灵伙伴，为每一个所偷来的影子找到点亮生命的光芒，为他们找回隐匿的记忆拼图。</p>
<a id="more"></a>
<p><img src="/image/touyingzideren.png?r=54" alt=""></p>
<p>这本书虽然有科幻元素，但却不是一部科幻作品。它只是静静讲述了一个关于小男孩以及发生在他身边的故事。小男孩通过和影子交流这一媒介，帮助别人，治愈那些受伤的心灵。书中有和一个聋哑小女孩纯真的爱情，有朋友间无私的友谊，有母亲对儿子伟大的母爱。。。我相信当不同的人读它，会有不同的感悟，回想起关于自己、关于以前的让自己刻骨铭心的一些事情。无论你多么烦躁、心情多么糟糕，你都会安静下来。产生一种感觉：温暖、纯净。书中没有十分华丽的辞藻，没有矫揉造作的语言，更多的是平凡和质朴，但却能深深打动我，就像海明威的《老人与海》，就像卡勒德·胡塞尼的《追风筝的人》。所谓大繁至简，大音稀声，一流的作家只会用最朴实的文字来讲述最动听的故事。</p>
<p>书中的故事情节十分简单，没有一般小说的那种曲折跌宕，更多的是像一个朋友，向你娓娓道来。写作源于生活，高于生活。用最简单的文字讲述平凡的生活，却又深深打动生活着的我们。这或许是这本书成功的关键吧。</p>
<p>反观我们，还在抱怨吗？是生活太枯燥吗？是人生太单调吗？是日子太烦躁吗？全不是。</p>
<p>是我们的心太麻木了。</p>
]]></content>
      
        <categories>
            
            <category> 书评 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 书评 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[一只自由主义的笔]]></title>
      <url>http://chuanqiang.github.io/2015/04/09/%E4%B8%80%E5%8F%AA%E8%87%AA%E7%94%B1%E4%B8%BB%E4%B9%89%E7%9A%84%E7%AC%94/</url>
      <content type="html"><![CDATA[<p>毕福剑被调查了，因为酒足饭饱之后的一通话，视频中毕福剑不雅唱评智取威虎山，还有所谓的丑化毛泽东。<br><a id="more"></a><br>看完整个事件和媒体的口诛笔伐之后，只有一个感觉：可悲，可笑。不由得想起了文革时期的红卫兵，古代的文字狱。</p>
<p>先看一下“万恶的资本主义”的代表美国吧。 美国宪法规定:</p>
<blockquote>
<p>国会不得制定关于下列事项的法律：确定国教或禁止信教的自由；剥夺言论自由或出版自由；剥夺人民和平和向政府请愿伸冤的权利。</p>
</blockquote>
<p>在美国，言论自由主要体现在对团体，对政府的言论上，因为他们认为，这些自由是基本人权，即，这是一个人与生俱来天赋权利。如言论自由，只要是一个人，就有表达自己思想的权利，这跟发表言论的这个人是好人还是恶棍没有关系，这和表达出来的东西是真理还是谬误也毫不相干。哪怕他的思想是彻头彻尾的谬误，哪怕假设有一种方法，可以鉴定出他的思想不论在过去，现在和将来都绝对是谬误，他作为一个人，还是有权利说出他的想法来。说出来，是合法的。就像美国允许公民持有枪械，是因为宪法规定公民有武装推翻暴政的自由一样，言论自由权的意义，也是给人民表达愤懑、不公、诉求利益，批判专制、暴政的权利。在美国，就算你烧国旗都不算违法，因为那是你的自由。</p>
<p>当然，任何权利都是在一定的框架之下的，中国宪法规定：中华人民共和国公民在行使自由和权利的时候，不得损害国家的、社会的、集体的利益和其他公民的合法的自由和权利。但是以此观之，毕福剑的私下言论不知道损害了上述那种利益，又损害了其他公民的何种权利。对于一个生命个体，在私下场合，行使自己的言论自由权，哪怕你看孔子不顺眼，骂他句孔老二，我觉得都很正常。比如民国时候，农民可以一边种地一边聊天说“蒋光头”如何如何，但不等于农民到了县长面前就称“蒋总统”，而认为农民虚伪、不道德，恰恰相反，农民种地聊天时称“蒋光头”，到县长面前则称“蒋总统”，是符合于礼的。比如革命党人背后称“孙大炮”，但到了孙文跟前就称“中山先生”，这也是礼。谁又能如此表里如一，人前称呼先生，人后就不能戏谑为”那家伙“呢。我觉得这件事错不在于毕福剑，而在于偷拍上传视频的人，这种揭隐私、告密风气除了破坏规则外，更是破坏了社会交往中的“礼”。这是太悲哀的事情。当在一个连基本的礼也败坏，人与人的尊重淡薄，揭隐私、告密的风气吹拂的时代，技术的进步却可能提供无处不在的支持时，其强大的能力就令个人太渺小了。社会进步所艰难争取到了的一点自由，可能将被不断新出的技术挤压，成为坟头随风飘去的一张薄薄黄纸。</p>
<p>对于媒体媒体职责毕福剑丑化伟人毛主席，我想说：首先，毛泽东作为开国元勋，功比天高，但功是功，过是过，不能以功抵过。有错误就不能怕人说，就不能怕人发牢骚。文革是一场针对中国社会和中国人的有组织的暴力，是对人的基本权利的剥夺，具有反人类和反社会的性质，中共在十一届三中全会上已经将其定性为一场浩劫，并彻底否定。但是，为什么现如今对于文革，以及仍旧没有拨开迷雾的天安门事件，还是处于一种敏感状态。其实每个国家都有一段最黑暗，灭绝人性的历史，区别就是你怎么对待它。美国拍了很多关于黑奴时期，二战期间歧视美籍日本人等等反映当时真实社会的电影，奥斯卡奖影片《为奴十二年》就是一个例子。但为什么中国拍的揭露文革，揭露历史丑恶人性泯灭政府麻木的电影的就都要被审核，封杀？有关事件被屏蔽而在网上不能搜索到？比如《太阳和人》，比如《蓝风筝》。如果一个国家不能正视自己的历史，不允许后代了解并审视它的过去，还怎么让我们尊重这个国家的文化？    </p>
<p>真正地民族主义不是要与国家分享荣耀，而是分担耻辱。就像波兰思想家米奇尼克所说：</p>
<blockquote>
<p>为波兰的罪过而感到耻辱的人，就是波兰人。</p>
</blockquote>
<p>再者，中国的媒体似乎沦落为政治的工具。一切的内容审核都要经过广电总局，而广电总局隶属于国务院，也就是政府部门。这样一来，媒体对于政府的监督，还能那么纯粹嘛？这也就是每天“正三观”的央视新闻中所呈现那番景象的原因啦。在西方法治国家，媒体被称为除立法、司法和行政权力外的第四种权力，记者被称作“无冕之王”。美国第三届总统杰斐逊有一句名言：“宁要没有政府的报纸，不要没有报纸的政府“，从中我们可以看出舆论监督是何等重要。可以这样说：有了媒体，民主政治不一定就能完全实现，但没有媒体，民主政治建设绝不可能成功。国外的许多媒体都是私营的，完全脱离政府而取得经济上的独立。它们可以毫无顾忌的批判政府、批判总统。另外插一个小故事，美国有一个州议员（相当于我们这的省人大代表）在一次出门的时候，有民众因为不满他提出的一些议案而把他群殴，扔到了垃圾桶里。但是事后哪个州议员公开表示原谅并为民众道歉，理由是他的工作没有得到民众的满意。正因为美国的政府权威没有那么铁血，所以媒体人才能畅所欲言吧。当前我国地方新闻媒体，特别是市、县及广播电视局基本上都是在党委和政府的行政管之下，其生存和发展的主要经济来源仍然是财政拨款。由此一来,政治上受行政权力制约、经济上依赖政府财政的新闻媒体, 只能是政府的附属， 只能作为政府的“传声筒”，对政府进行监督必然底气不足，监督也往往无关痛痒。</p>
<p>媒体作为监督政府的一个主要工具，应该像法院一样对于政府应该有绝对的自由。尤其是如今的网络媒体，承载着人民交际，言论，当它被利用束缚的时候，那怕我们再怎么追求言论自由，都只能是带着枷锁在舞蹈。我们就像养在水缸里的鱼，以为眼前即为大海的广阔，但我们的记忆可不止七秒钟，当我们通过各种翻墙软件，听到更多声音、看到更多画面之后，就会明白，原来我们生存的地方有多狭窄。一个企图通过控制思想来奴化人民的政府，一定是不会长久的，因为，追求真理是人的本性。</p>
<p>或许现在有许多人说，中国需要时间，需要慢慢来改正，不可能一蹴而就。也有的人说，中国的国情所致，也是没办法的事情。但是我想说，<strong>在真理面前，在是非面前，国情、时间都不应该是借口，人活着的意义，不是安于天命，而是追求美好，历史正是被最开始的一群激进的人开始改变的，当人民都对这种行为，这种风气口诛笔伐的时候，对更公平民主、更言论自由、更教育公平、更政府透明开始有诉求、有期许的时候，或许也就是社会开始进步，人民胜利的时候。</strong></p>
]]></content>
      
        <categories>
            
            <category> 一支自由主义的笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 评议 </tag>
            
            <tag> 毕福剑事件 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[锦时]]></title>
      <url>http://chuanqiang.github.io/2015/04/08/%E9%94%A6%E6%97%B6/</url>
      <content type="html"><![CDATA[<p>快要滚出学校了。意味着，青春留下，我走。<br><a id="more"></a><br>周围的人开始行色匆匆，有的准备考研，有的准备考公务员，春天到了，他们心中的种子也开始慢慢发芽，为面对以后社会上的雨打风吹而变得茁壮。我的春天在哪里，我的种子能否枝繁叶茂，看着依旧稚嫩的自己，我说不出答案。</p>
<p>时间像是一个土匪，野蛮粗暴的把我们从青春的怀抱里掳走，吧唧丢向社会，任我门自生自灭。不远的将来，我们会在一刹那，失去与我们爱恨交织了十五六年的校园生活，失去了所谓的寒假暑假，失去了嗤之以鼻的食堂菜系，不用逃课，不用偷偷玩手机，我们失去了一个学生的身份，也失去了作为学生所拥有的一切。当若干年后，自己西装革履，拿着公文包，路过一所学校的时候，当学校里铃声响起的时候，当一个个少年少女从学校里笑着涌出的时候，我不知道那时的自己会想起什么，会是怎样的一番心境，但我肯定会驻足，远远看着他们，就像看着往昔幸福的自己。</p>
<p>时常畅想工作后的自己，开始会很苦，自己租一间小房子，在偌大的北京，踽踽独行。但随着对社会的适应，一切都会好起来，后每个月领一份不多不少的薪水，白天热火朝天的工作，晚上看自己喜欢的书，听喜欢的音乐，在大排档里大口吃串喝酒。会有几个朋友，不多，却交心，周末没事相约到处转。会开始照顾父母，听到父母收到我送的礼物后皱纹下的笑声。是不是也会开始有啤酒肚微微隆起，会不会发福变胖，头发可能会剪短，不会再碰到女孩子羞红了脸。可能不会再喜欢那些矫情的文字，不再折服于那些烧脑的电影，不再因为一点小事而神经质的傻笑，喜怒哀乐成为心情的晴雨表。那时的自己是不是会更加成熟，什么事情都能从容一笑，当你问起我过得怎样，不论多么斑驳，都点头说好。</p>
<p>把将来想象的太过美好，但也对，睡前要是知道自己做个美梦，肯定会愉快的上床入睡了。</p>
<blockquote>
<p>青春是一指流沙，成长是一段年华。回忆带走，时光留下。</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 独白 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[赤壁赋]]></title>
      <url>http://chuanqiang.github.io/2015/03/28/%E8%B5%A4%E5%A3%81%E8%B5%8B/</url>
      <content type="html"><![CDATA[<p>丹青笔，挥毫写意绕指。</p>
<a id="more"></a>
<p>千年之前，赤壁江畔，烈火映红天。不知千年之后，谁的面容，重塑此月正浓。历史跃出书中，叫嚣重重，追思一夜梦，梦里金戈铁马，热血战枭雄。</p>
<p>已定朔北，虎视江南，宛如手中玩物，雄兵百万，战将千员，挟兵锋正劲，破荆州，下江陵。旌旗所向，刘琮束手，荆襄九郡，望风归来。雄视古今，气吞山河，舳舻千里，荆旗蔽空。会猎于江东，月色正浓，天地浩大。曹操酾酒临江，横槊赋诗，吟“对酒当歌，人生几何”，歌“周公吐辅，天下归心”。是值处于时代浪头，立于历史锋尖，盖一世之雄也。</p>
<p>然世事难料，历史往往峰回路转，奥妙无穷，可谓算尽人心，难算天意。时顺时看河山大好，有多少意气风发；然断魂处，风声如雪，向暮色里十面残杀。东风意周郎，夹滔天火浪，烧尽战车舳舻，烧杀十万兵甲，烧的人心胆颤顾无暇，罢，罢，罢。</p>
<p>劫灰过尽，明月当空，流水依旧，是潇洒亦或无法作答。冲净江中水，冲不净数万英魂声撕裂；冲尽沉沙折戟，冲不尽历史悲风萧萧。高山黄土，大河东流，南方如此多娇，犹是最初梦幻里依稀眉目，却只一段情短于朝露，化作虚无，叹，叹，叹。</p>
<p>龙回许昌，重整旗鼓，前途似海，来日方长，厉兵秣马，养晦韬光。重整百万师，待十年，一剑定江南！</p>
]]></content>
      
        <categories>
            
            <category> 读书 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[爱情茶花]]></title>
      <url>http://chuanqiang.github.io/2015/03/27/%E7%88%B1%E6%83%85%E8%8C%B6%E8%8A%B1/</url>
      <content type="html"><![CDATA[<p>爱情，作为最丰富的一种情感，贯穿在人类历史的始终。对于爱情，生物学的解释是：通过进化的力量主导，通过激素起作用，伴随”爱情激素”的分泌产生情感和一系列化学反应的生物程序。</p>
<a id="more"></a>
<p>总之，爱情也许是人类填饱肚子之后最先思考的东西了，固有“饱暖生淫欲”之说。历史上有无数的文人墨客对爱情不吝笔墨的歌之颂之。而在物欲横流的今天，“爱情”一词似乎被蒙上了某种灰尘，成了物质的附属品，人们匆忙的相爱，然后匆忙的分手。娱乐圈里的分分合合让人累觉不爱，明星们的丑闻让人质疑真爱，酒池肉林里的肉体交易成了各取所需。类似梁山伯与祝英台的故事似乎只存在于文学作品中了。在这个追求效率与利益的年代，爱情本身无私、奉献、永恒等属性似乎脱离了这个时代的主题，于是，婚姻成了爱情的坟墓，归人往往变成了过客。</p>
<p>《茶花女》这本书是在图书馆无意中看到的，百无聊赖之时细细翻看，竟也读的津津有味。然后情不自禁沉浸在一个青年人与巴黎上流社会一位交际花曲折凄婉的爱情故事当中。我平时很少看儿女情长的故事，但还是被书中唯美至深的爱情故事所感动。更特别的是，作品描写的不是一个普通人，而是一个妓女的爱情悲剧。女主角玛格丽特虽为风尘女子，却纯真善良，她为了高贵的爱情，宁可失掉一切，宁可受尽屈辱和误会。最后，为真情付出了生命的代价。就像书中所说，“ 你们同情见不到阳光的瞎子，同情听不到大自然声响的聋子，同情不能用声音来表达自己思想的哑巴；但是，在一种虚假的所谓廉耻的借口下你们却不愿意同情这种心灵上的瞎子，灵魂上的聋子和良心上的哑巴”，是的，每个人都有追求爱情的权利，爱情之花可以盛开在每个卑微的角落。</p>
<blockquote>
<p>我不够富，不能像我希望的那样爱你；我也不够穷，不能像你希望的那样被你爱。让我们彼此忘却你是忘却一个对你说来相当冷酷的姓名，我是忘却一种我供养不起的幸福。<br>是你教会我怎样去爱，而我应该教会你怎样去生活.<br>我的心，不习惯幸福。也许，活在你心里更好，在你心里，世界就看不到我了。<br>你是我唯一可以推诚相见的人，在你面前我可以自由思想，自由交谈。<br>或许活在你的心中，是最好的地方，在那里别人是看不见的，那样就没有能鄙视我们的爱情了。</p>
</blockquote>
<p>书中这些感人至深的话让我感动。在那样一个看中阶级身份的时代，这样的爱情之花很容易就被凋谢，但至少她曾经盛开过，在门户之墙、拜金之风中坚强的存在过，亭亭净植，不蔓不枝。中国古代这样的故事也很多：梁祝化蝶，牛郎织女，白蛇传，长恨歌，西厢记，凤求凰，孔雀东南分等等。这些千古流传的故事告诉我们，爱情是凌驾于阶级、物质之上的，她作为人类最原始的情感，应当保持其纯洁性和神圣性。</p>
<p>爱情是生死契阔，与子成说，执子之手，与子偕老的坚贞，是天地合，乃敢与君绝的誓言；是愿得一人心，白首不分离，是情不知所起，一往而深。这种生死相依的感情，我相信她的存在，并且孜孜不倦的追求。</p>
<p>我相信，房子、车子不是爱情的陪嫁，地域相隔也不是爱情的距离，家庭、社会更不应该是爱情的阻隔。最重要的是与你相识时怦然的心动。跟一个人说出喜欢很简单，你长得不丑，性格还不错，便可以，这多半是荷尔蒙的吸引；但爱一个人却是难以出口成言的沉重，他需要你用一生去背负。他代表了一份责任与担当，一种灵魂深处的归宿。</p>
<p>茶花女的爱情随着她的死去已经凋谢。但茶花香却飘过漫漫岁月，芬芳了一代又一代人。</p>
<p>愿有情人，终成眷属。</p>
]]></content>
      
        <categories>
            
            <category> 书评 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 爱情 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[狼图腾]]></title>
      <url>http://chuanqiang.github.io/2015/03/17/%E7%8B%BC%E5%9B%BE%E8%85%BE/</url>
      <content type="html"><![CDATA[<p>第一次看小说《狼图腾》时还小，那个时候自己完全沉浸在草原的广袤无痕和狼的智慧勇猛当中。幻想自己成为一头狼，享受月黑风高夜捕杀猎物的快感。到了高中第二次读它时，才逐渐领悟到书中对的蒙古族、汉族狼性与奴性的的阐述，对生命的奔放与最严的赞美，对图腾崇拜、自然法则的理解。无疑，这是一部力透纸背的大书，让躲在城市里得过且过、唯唯诺诺的所谓的文明人找回一丝流有动物血脉的张狂与野性。</p>
<a id="more"></a>
<p><img src="/image/lang.jpg" alt=""><br>终于，电影版的狼图腾上映，光冲着中国第一编剧芦苇和导演阿诺，就很值得期待。10年前《狼图腾》小说畅销的时候，买到电影改编权的制片人在全国寻找导演，得到的答复都是：“好书，但是没法拍。既然国内找不到，那就全世界找，能够驾驭动物题材的导演在全世界都是稀缺人才，阿诺是第一人选，他拒绝了《少年派》的邀请，接手《狼图腾》。这部剧筹备7年，养狼3年，实景真狼拍摄2年。实为大作品，是导演阿诺躲在镜头背后对动物的礼赞，借此探讨人与自然的关系。</p>
<p>在当今综艺电影及娱乐商业片充斥的大环境中，在物欲横流的时代，《狼图腾》这部电影有点像在一堆商业软文里拎出的一首叙事长诗。它有故事，但更有的是情怀。手法干净的阿诺用的是一种近乎于手工做奢侈品的法国工匠方式，一帧一帧还原那个年月的粗枝与细节。它的精致，带人入戏，就算不了解草原、不了解狼、不了解知青、不了解文革，这没什么，只要了解生命的意义就行。”</p>
<p>当看到小狼在草原伫立，那一刻我明白，所有的生命都应该在蔚蓝的天空下张扬自己的生命力，自由而美好。</p>
]]></content>
      
        <categories>
            
            <category> 电影 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 狼 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[远远抛开一切，过千山万水]]></title>
      <url>http://chuanqiang.github.io/2015/03/16/%E8%BF%9C%E8%BF%9C%E6%8A%9B%E5%BC%80%E4%B8%80%E5%88%87%EF%BC%8C%E8%BF%87%E5%8D%83%E5%B1%B1%E4%B8%87%E6%B0%B4/</url>
      <content type="html"><![CDATA[<p>以梦为马，诗酒趁年华。</p>
<h2 id=""><a href="#" class="headerlink" title=""></a><a id="more"></a></h2><p>路过学校西边的蜿蜒小径，三月已漫上枝头，含苞待放的是浓浓的春意的诉说。不禁愕然，步履匆匆中我们错过了多少易逝韶光，多少时光锦绣。我们形色匆匆，在生活的催促中埋头奔波，在低头向前的路途中，究竟失去了多少景色。当我们偶然驻足后，才发现寻找的往往不是最重要的，而在步履匆匆中失去的才是你需要的。</p>
<p>年后不久，学驾照成了头等大事，也逐渐成为了一桩心事。就像你交了钱，还没受完该受的罪，拖拖拉拉，却也不能完全抛之脑后，挂之，惧之。驾校的诟病不言而喻，教练的习气也是不可理喻，无奈言轻身微，只能随波逐流。幸好科三，科四都走了狗屎运般顺利，抓紧拿了驾照，脱离那种学车的苦日子。之后，又开始了朝九晚五，无拘无束的混日子生活，教室、餐厅、宿舍三点一线，像是养老的生活——不温不火。</p>
<p>想要好好规划，天天向上一下，可身子像陷进沼泽，浑浑噩噩。大学行将就毕，社会在前方，我却看不见未来。过年时，看着以前的相识都貌似混的人模狗样的，有的结婚生子，有的西装革履，而自己仍旧一穷酸书生，况且也没有学富五车，才高八斗，不禁有些垂头丧气。转念想到一段话：身边总有些人，你看见他整天都开心，率真得像个小孩，人人都羡慕他；其实，你哪里知道：前一秒人后还伤心地流着泪的他，后一秒人前即刻洋溢灿烂笑容。他们其实没有能力独处，夜深人静时，总坐在窗前对着夜空冥想失意的苦楚。他们就像向日葵，向着太阳的正面永远明媚鲜亮，在照不到的背面却将悲伤深藏。生活如此安逸，又岂知生活不易。</p>
<p>现在的自己，抛却了儿女情长，没有了生活琐事，平心静气的站在时光的路口，前方充满了未知，需要自己去描绘，去点缀。等待自己的是什么，我不知道，但我肯定，前方很美好，只需用心去打造。</p>
<p>在春暖花开季，为何不浅浅哼唱一句“远远抛开一切，过千山万水~”。</p>
<p>然后大跨步向前。不用回头。</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 独白 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[天才在左，疯子在右]]></title>
      <url>http://chuanqiang.github.io/2015/02/24/%E5%A4%A9%E6%89%8D%E5%9C%A8%E5%B7%A6%EF%BC%8C%E7%96%AF%E5%AD%90%E5%9C%A8%E5%8F%B3/</url>
      <content type="html"><![CDATA[<p>这个世界是什么样的？道说：是人间；佛说：是六道之一；上帝说，是天堂和地域之间的战场；哲学说：是无穷的辩证迷雾；物理说：是基本粒子堆砌起来的聚合体；人文说；是时间的积累。很显然，各有各自的解释，这个世界是有无数面的不规则体。</p>
<a id="more"></a>
<p>这本书是一个我不曾认识的作者写的——高铭。它通过调查收集精神病患者的内心世界来来窥探这个奇妙世界的本质。世界在不同的人眼中是迥异的，但在正常人的眼中又很相似而简单，因为正常人的思维大都趋于“正常”，看待事物也都趋同，这是理性，也是思维束缚。在他们眼中，世界本该就是这个样子的啊，自古至今，耳濡目染，教科书上，都为我们理解和认识这个世界铺好了认知的道路，使你沿着条条框框，很难有独特的见解。当有一天的触碰到这些壁垒，你会开始迷茫，开始思考：这个世界到底是什么样的。而在精神病患者那里，人世的束缚则不那么明显，他们是疯子，也是天才，因为疯子和天才都有着一个共同的特点，他们对事物、外界有着属于自己的理解。</p>
<p>通过他们眼中的世界，我们可以看到更多的世界，或者世界另外的色彩。</p>
<p>虽然当今科学已经有了巨大的飞跃，以前许多问题得到解决。例如，由无知产生的迷信、鬼神之说。但是正如那句话：愈学习，愈发现自己的无知。我们在弄明白一些事情之后往往又陷入另一个迷惑。比如玛雅文化、人的大脑、癌症、时间的尽头、四维空间、量子理论，等等。人类是一种会思考的动物，要弄明白这个世界是什么样子的，从哪里来，到哪里去。否则，人类会失去安全感，对所处环境的不理解所导致的患得患失的不安全感，比如，宇宙大爆炸、小行星撞击地球、我们的环境会不会恶化等。为了获得这种安全感，人类一直努力寻找一种可以解释这个世界的理论，即为这个复杂的世界在内心找到一种可以说服自己已经理解了这个世界的一整套理论。自古至今人类都在寻找，古代的宗教，鬼神之说，现在的哲学、物理学说。不同的是，以前是停留在一种唯心领域的理论，是自己骗自己；现在是建立在唯物主义上的对事物规律总结认识中得出的相对科学的结论。但相同的是，都具有阶段上的局限性，不能完美的解释这个世界。有时在想，为什么一个事物的存在，你需要找寻一个它存在的理由呢？或许存在即是理由。就像事物本身提出一个问题，而事物本身也许就是这个问题的答案。可能并没有问题与答案之分，是人类在试图追寻一种理解世界的理论时，强加给自己的吧。我好像又从唯物走向了唯心，但谁又能否认，后之视今亦犹今之视古。</p>
<p>你的世界观是什么？这貌似是一个很难回答的问题，因为我们很难说自己了解了这个世界，但窥一斑，见全豹，没有观过世界，就不能有自己的世界观吗？世界观和观世界有必然的联系吗？佛说：</p>
<blockquote>
<p>一叶一菩提，一花一世界。</p>
</blockquote>
<p>当你内心有了一整套自己对于世界，对于人生的理解与感悟，那么，你就拥有了自己的世界观，就能平淡的看待生死，善待生活了。</p>
]]></content>
      
        <categories>
            
            <category> 书评 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 书评 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[关于玛雅文明]]></title>
      <url>http://chuanqiang.github.io/2015/02/07/%E5%85%B3%E4%BA%8E%E7%8E%9B%E9%9B%85%E6%96%87%E6%98%8E/</url>
      <content type="html"><![CDATA[<p>玛雅文明，是古代分布于今墨西哥东南部、危地马拉、洪都拉斯、萨尔瓦多和伯利兹五个国家的丛林文明。虽然处于新石器时代，却在天文学、数学、农业、艺术及文字等方面有极高的成就。是美洲三大文明之一。16世纪，玛雅文化的传承者被西班牙帝国消灭。    玛雅文明是拉丁美洲古代印第安人文明，美洲古代印第安文明的杰出代表，以印第安玛雅人而得名。形成约公元前1500年，玛雅人创造了辉煌的玛雅文明。</p>
<a id="more"></a>
<p>玛雅文明是世界上第一个诞生于热带丛林而不是大河流域的古代文明，充满神秘色彩。公元八世纪，玛雅人放弃了高度发达的文明，大举迁移，城市被完全放弃，一夜之间玛雅文明消失于美洲热带丛林中。11世纪后期复兴，后被西班牙殖民者彻底摧毁。</p>
<h2 id="文明历史"><a href="#文明历史" class="headerlink" title="文明历史"></a>文明历史</h2><p>建筑工程达到世界最高水平，能对坚固的石料进行雕镂加工<br>掌握日食周期和日、月、金星的运动规律<br>雕刻、彩陶、壁画有很高的艺术价值，被称为“美洲的希腊”。<br>玛雅文明属于石器文明，未发明使用青铜器、铁器。<br>掌握高度的建造技术，创造了高度的城市文明，不会用铜铁、轮车。然而轮子的概念在陶器等文物中出现。<br>农业以玉米为主食，却没有畜牧业的痕迹。<br>数学采用二十进制，发现并使用了“零”的概念，掌握高度的数学和天文历法知识。<br>使用独特的象形文字——玛雅文字         </p>
<h2 id="玛雅预言"><a href="#玛雅预言" class="headerlink" title="玛雅预言"></a>玛雅预言</h2><p>“地球并非人类所有，人类却属于地球所有”。我们的地球处在第五太阳纪，在每一纪结束时，都会发生惊心动魄的毁灭。第五太阳纪始于玛雅纪元3113年，经历玛雅大周期5125年，走向新纪元，并非世界末日 。</p>
<h2 id="马雅文"><a href="#马雅文" class="headerlink" title="马雅文"></a>马雅文</h2><p>玛雅所使用的象形文字有八百个，每个字有四个音节</p>
<h2 id="数字历法"><a href="#数字历法" class="headerlink" title="数字历法"></a>数字历法</h2><p>拉伯数字是由阿拉伯人从印度传往欧洲的。希腊人擅长发明，但必须用字母来写数字，罗马人虽然会使用数字，但只能用图解的方式以四个数字来表示。玛雅人使用一点、一横、一个代表零的贝型符号来表示数字。在雕刻的石柱中，记载着九千万年，四亿年的数字。</p>
<p>历法复杂。现代天文观测一年是365.2422，玛雅人测出一年是365.2420.  金星历年指金星环绕太阳一周所需要的时间，得出584天，今日计算为583.92天误差率每天不到十二秒。<strong>卓金历，一年260天计算，奇怪的是在太阳系内却没有一个适应这种历法的星球，依照这种历法，这颗行星的大致位置在金星和地球之间。</strong>（“卓金历”所言：地球已处在“第五个太阳纪”，这是最后一个“太阳纪”。在银河季候的这一时期，太阳系正在经历一个历时5100多年的“大周期”。时间从公元前3113年起到公元2012年止。在这个“大周期”中，地球以及太阳系正在通过一束来自银河系核心的银河射线。这束射线的横截面直径为5125地球年。换言之，地球通过这束射线需要5125年。玛雅人把这个“大周期”划分为13个阶段，每个阶段的演化都有着十分详细的记载。13个阶段中每一个阶段又划分为20个演化时期。每个时期历时20年。历法循环与中国的“天干”、“地支”十分相似。历法是循环不已的，不是像公元纪年直线似的没有终点。认为自创世以来，地球已经过四个太阳纪。当太阳系诸星体经历完这束银河射线的“大周期”之后，将会发生根本变化，玛雅人称之为“同化银河系”。从玛雅预言中的“大周期”的上看，从1992年到2012年这20年中，地球已进入“大周期”最后阶段的最后一个时期。玛雅人认为这是“同化银河系”之前的一个十分重要的时期，称之为“地球更新期”。在这个时期，地球要完全达到净化。在“地球更新期”过后地球将走出银河射线，进入“同化银河系”的新阶段。既然玛雅人的历法如此精准，其预言应该有一定的根据。在环境污染严重、天灾人祸不断的今日，可以设想，玛雅预言究竟在提醒我们何事？）</p>
<p>因为这种纪年法不是以地球上观察到的任何一种天体的运行为依据，以致有人认为，“卓金年”历法是玛雅人的祖先根据另一个至今我们尚不知道的星球制订的。玛雅人至少在<strong>公元前4世纪就掌握了“0”这个数字概念，比中国人和欧洲人早了800年至1000年</strong>。**玛雅人创造了20进位计数法，数字演算可沿用到400万年以后。这样庞大的天文数字，只有在现代星际航行和测算星空距离时才用得上。而几千年前的玛雅人刀耕火种，用树叶遮体，用可可豆作媒介以物换物，如此的数字演算他们用得着吗？</p>
<h2 id="发现"><a href="#发现" class="headerlink" title="发现"></a>发现</h2><p>神秘的玛雅民族在南美热带丛林中建造了一座座规模惊人的巨型建筑。雄伟壮观的提卡尔城，其电脑复原图出现时，许多现代城市的设计师也自叹弗如：建于7世纪的帕伦克宫，殿面长100米，宽80米。乌克斯玛尔的总督府，由22500块石雕拼成精心设计的图案，分毫不差。奇琴·伊察的武士庙，屋顶虽已消失，巍然耸立的1000根石柱仍然令人想起当年的气魄。这一切都使人感到，这是个不平凡的民族。随着对玛雅文化的进一步考察，人们惊奇地发现，几千年前的玛雅人竟有无与伦比的数学造诣，有独特的谜一样的文字。奇琴·伊察、提卡尔、帕伦克等地的巨型建筑并非出自玛雅人的实际生活需要、<strong>而是严格依照神奇的玛雅历法周期建造</strong>。</p>
<h2 id="知识生活"><a href="#知识生活" class="headerlink" title="知识生活"></a>知识生活</h2><p>玛雅人的历法可以维持到4亿年以后，计算的太阳年与金星年的差数可以精确到小数点以后的4位数字，有自己的文字——用800个符号和图形组成的象形文字，词汇量多达3万个。有精美绝伦的雕刻、绘画和艺术。然而<strong>在这个登峰造极的高度文明诞生之前，玛雅人巢居树穴以采集为生，这样的原始部落为何突然产生如此高度的文明？</strong></p>
<p>即使到了16世纪，西班牙人在布满古迹遗址的尤卡坦半岛上看到的印第安人，还是以树叶遮体、住泥巴茅屋、以采集狩猎糊口。显然那种精确的天文历法和数学，那种令全世界景仰的文明、艺术，都远超出当地印第安土著几近原始生活的实际需求。令人疑惑：古代玛雅人是怎样得到如此高深的知识的？灿烂的玛雅文化是如何产生的？后来又是怎样销声匿迹的？</p>
<h2 id="玛雅石板"><a href="#玛雅石板" class="headerlink" title="玛雅石板"></a>玛雅石板</h2><p>1952年6月5日，人们在墨西哥高原的玛雅古城帕伦克一处神殿的废墟，发掘出一块刻有人物和花纹的石板。当时人们仅把这当作是玛雅古代神话的雕刻。到了六十年代人们乘坐宇宙飞船进入太空后，那些参与宇航研究的美国科学家才恍然大悟：<strong>帕伦克石板上雕刻的，原来是一幅宇航员驾驶宇宙飞行器的图画！虽然经过图案化的变形，但宇宙飞船的进气口、排气管、操纵杆、脚踏板、方向舵、天线，软管及各种仪表仍清晰可见。这幅图画的照片被送往美国航天中心时，宇航专家们无不惊叹，一致认为它就是古代的宇航器。</strong></p>
<p>有些学者提出一种大胆的假想：<strong>在遥远的古代，美洲热带丛林中可能来过一批具有高度文明的外星智能生命，他们教授尚在原始时代的玛雅人各种先进知识，然后飘然而去。他们被玛雅人认为是天神。玛雅文化中令人难以理解的高深知识，就是出于外星人的传授。</strong>帕伦克石板上的雕刻，是玛雅人对外星宇航员的临摹。外星人离去时，曾向玛雅人许诺重返地球，但在玛雅人的祭司预言天神返回的日期里，外星人并未重新返回。于是导致玛雅人对其宗教和祭司统治丧失信心，进而引起整个民族心理的崩溃，终于使他们离开故乡，各自走散，玛雅文化就这样消失。也许人们会指责这种想法带有过多的假说意味。但即使否定这种说法，仍然无法圆满地解释玛雅文化神秘的内涵、众多不可思议的奇迹，以及突然消失的原因。** </p>
<h2 id="服装和时尚"><a href="#服装和时尚" class="headerlink" title="服装和时尚"></a>服装和时尚</h2><p>玛雅人认为对视眼和长脑袋很时髦，所以会用布缠住婴儿的脑袋让它变形，还会把珠子悬垂在婴儿鼻子的上方以改变眼睛的肌肉结构。</p>
<p>在玛雅文明里纹身和彩绘非常流行。男孩用黑色颜料彩绘，女孩用红色的。祭司用蓝色颜料纹身，战士则用红色和黑色的。</p>
<h2 id="神秘文物"><a href="#神秘文物" class="headerlink" title="神秘文物"></a>神秘文物</h2><p><strong>火箭浮雕</strong><br>令人惊讶的是其中有些可以辨识的图案，竟然与现代尖端科技非常接近。</p>
<p>一九四八年到一九五二年间，墨西哥籍考古学家路利教授 （Alberto Ruz Lhuiller）在巴伦杰神殿的“碑铭神庙 （The Temple of The Inscriptions）”中，发现在巨大石室的墙上刻有九位盛装的神官，以及一位带有奇妙头饰的青年浮雕。经过仔细观察，发现这个浮雕与现代的太空船十分相似！玛雅碑铭神庙的浮雕中，刻画一个带头盔的青年，正在操作一台类似飞行器的机器。路利教授在巴伦杰神殿所发现的浮雕和玛雅碑文有密切的关系。在被解读出来的碑文中，描述“白色的太阳之子，仿效雷神，从两手中喷出火……”</p>
<p><strong>水晶头颅</strong><br>一九二七年在中美洲伯利兹的玛雅遗迹中发现水晶制成的头颅，水晶头颅完全以石英加工研磨而成，大小几乎和人类的头颅骨相同。高十二点七公分，重五点二七公斤，是依照一个女人的头颅骨雕成。玛雅人依照人的头骨雕成的水晶头颅，展现了成熟的解剖学与光学技术，利用某种现代科技仍未掌握的碰撞技术制成。水晶头颅不仅外观逼真，而且内部结构与人的颅骨构造完全相符。其工艺水平极高，隐藏在基底的菱镜和眼窝中琢磨的透镜组合在一起，发出眩目的亮光。现代光学技术产生于十七世纪，而人类准确地认识自己的骨骼结构是在十八世纪解剖学兴起以后。水晶头颅却是在非常了解人体骨骼构造和光学原理的基础上雕刻而成，玛雅人是如何掌握高深的解剖学和光学知识的？水晶即石英晶体，硬度非常高，仅次于钻石（金钢石）和刚玉，用铜、铁或石制工具，都无法进行加工。即使是现代人要雕琢水晶制品，也只能使用金刚石等现代工具。经研究证实，此水晶头颅是利用某种碰撞力量技术雕刻而成的。由此观之，玛雅人掌握的工艺技术相当高超。与之相比，现代人的工艺技术黯然失色！难道玛雅人真的制作了神奇的水晶头颅吗？</p>
<h2 id="星外决策"><a href="#星外决策" class="headerlink" title="星外决策"></a>星外决策</h2><p>玛雅人的祖先很可能是外星人，玛雅人不过是外星人的后裔。玛雅人与外星系的祖先，可能保持密切联系和经常交往。当玛雅人人口剧增、粮食不足、自然灾害等导致困难重重、矛盾层出，使之不能自拔时，外星世界的祖先会作出大转移的决策，下达动迁的命令，从而使玛雅人以迅雷不及掩耳的速度，对地球上的玛雅人进行了太空大转移，让绝大多数的玛雅人，迁往另一个星球，开始他们的新生活。</p>
<h2 id="外星人说"><a href="#外星人说" class="headerlink" title="外星人说"></a>外星人说</h2><p>面对玛雅辉煌的古代文明，谁都会问这一切从何而来？史学界的材料表明，在玛雅灿烂文明诞生以前，玛雅人仍巢居树穴，以渔猎为生，其生活近乎原始。甚至有人对玛雅人是否为美洲土著表示怀疑。因为没有证据表明，中美洲丛林中这奇迹般的文明存在一种渐变或过渡阶段。 玛雅文明的兴衰笼罩着一层谜，没有一种说法有充足的证据令人信服。美国的艾力克和哥雷克两兄弟所言的“外太空人起源说”，重要依据是关于玛雅的“卓金历”。他们认为具如此高水准天文学的玛雅人，并非是要编造公转周期中毫无根据的“卓金历”，此历只是玛雅人用来表明自己的故乡——“地球外的行星”的历法。如果“卓金历”果真如此，就可以推知这颗行星的形态。公转周期为260日的行星，应是位于金星和地球中间，且此行星十分温暖。故古典期的玛雅人选择地球上酷热的热带雨林居住，可印证此观点。 </p>
<h2 id="金字塔遗址"><a href="#金字塔遗址" class="headerlink" title="金字塔遗址"></a>金字塔遗址</h2><p>在尤卡坦半岛上，耸立着九座巍峨的金字塔，与埃及最早的几座金字塔相比是孪生的姐妹</p>
<p>玛雅人金字塔的天文方位计算极为精确：天狼星的光线经过南墙上的气流通道，直射到上面厅堂中的法老头部；北极星的光线通过北墙的气流通道，径直射进下面的厅堂。然而金字塔与塔顶上的神龛极不相称，整个金字塔的建造水平是如此之高，神龛却相当粗糙，人们推测神龛可能是后来加上去的。<strong>100多年前从金字塔中发掘出来的文物，已有一部分被辨认出来：原来是一些精致的透镜、蓄电池、变压器、太阳系模型碎片、不锈钢和其它未知合金制成的机械和工具。</strong></p>
<p>总之，在人迹湮没的热带丛林地带，建造世界超文明，处于黄金时代的玛雅人突然消失之谜，过于深奥费解。</p>
<hr>
<h2 id="阔外篇——关于文字"><a href="#阔外篇——关于文字" class="headerlink" title="阔外篇——关于文字"></a>阔外篇——关于文字</h2><p>一种文明的文字其基础符号如果不到四十个，那么这种文字后面的语言一定是拼音语言，代表性的是拉丁语系；如果一个文明的文字有100个左右，那么这种文字就是音节文字，代表性的是梵文；如果一个文明的文字，基本符号高达几千个甚至上万个，那一定是表意文字体系的，就是象形文字基础的，代表性的是汉字。</p>
<p>拼音文和音节文的文化，大多注重的是自然或者人文，所以文字组成简单，是线性的；表意文字的文化核心侧重自然及历史传承，文字结构上是二维的，有上下和左右；玛雅文为三维，不但有上下左右，还有远近，在基础文字符号上，有重叠的特性，在读法上，先上后下，先左后右，先近后远。玛雅文化的核心为艺术，他们的文字和图画融合，有些文字直接放大作为配图使用。</p>
]]></content>
      
        <categories>
            
            <category> 书摘 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 玛雅文明 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[14，15]]></title>
      <url>http://chuanqiang.github.io/2015/01/01/14%EF%BC%8C15/</url>
      <content type="html"><![CDATA[<p>上次写1314的时候依稀感觉还在昨天，望着桌面上的日历牌，一刹那的惊愕与无奈。</p>
<p>的确，我得生命又在蜿蜒的人生道路上步履蹒跚了一年。</p>
<p>去年是13,14，今年是14,15。这貌似是一句废话。<br><a id="more"></a> </p>
<hr>
<h2 id="一-极简"><a href="#一-极简" class="headerlink" title="一.极简"></a>一.极简</h2><h3 id="精神极简"><a href="#精神极简" class="headerlink" title="精神极简"></a>精神极简</h3><p>了解、选择、专注于1-3项自己真正想从事的精神活动，充分学习、提高。不盲目浪费自己的时间与精力。</p>
<h3 id="物质极简"><a href="#物质极简" class="headerlink" title="物质极简"></a>物质极简</h3><p>不买不需要的物品。确有必要的物品，买高质量的的，充分使用它。</p>
<p>不囤东西，不用便宜货、次品。</p>
<p>用电脑写东西，少用纸。用电脑代替打稿的过程。</p>
<p>不购买不需要的电子产品。</p>
<p>精简出门行头，只带“身手钥纸钱”。</p>
<p>少带钱，用支付宝支付。</p>
<h3 id="信息极简"><a href="#信息极简" class="headerlink" title="信息极简"></a>信息极简</h3><p>精简信息输入源头，减少使用社交网络、即时通讯。</p>
<p>少看微博、朋友圈。</p>
<p>APP使用少而精，删除长期不使用的应用，手机当做一件工具，减少不必要的依赖。</p>
<h3 id="生活极简"><a href="#生活极简" class="headerlink" title="生活极简"></a>生活极简</h3><p>慢生活。生活节制而规律。</p>
<p>不做无效社交，交友随心。</p>
<p>锻炼。</p>
<p>穿着简洁、不花哨。</p>
<p>少吃含有添加剂的食品。</p>
<p>喝白水和纯果汁，不喝可乐等碳酸饮料，除聚餐外不喝酒。</p>
<h2 id="二-行动力"><a href="#二-行动力" class="headerlink" title="二.行动力"></a>二.行动力</h2><p>计划制定要切实可行，不要好高骛远。</p>
<p>严格按照计划进行，要说到做到，言必信，行必果。</p>
<p>切记拖拉，学会雷厉风行，永远不要说，“明天再弄吧”。</p>
<h2 id="三-旅行"><a href="#三-旅行" class="headerlink" title="三.旅行"></a>三.旅行</h2><p>去南方，苏州或者上海</p>
<p>尝试一个人远行，见不同的人，看不同的风景</p>
<h2 id="四-读书"><a href="#四-读书" class="headerlink" title="四.读书"></a>四.读书</h2><p>不只是当做一种兴趣和消遣，更是生活的一部分</p>
<p>除小说类，加大历史，经济，管理，专业书籍的阅读量</p>
<p>做到每天至少抽出一个小时读书</p>
<p>写读书笔记，书摘+感想</p>
<h2 id="五-日记"><a href="#五-日记" class="headerlink" title="五.日记"></a>五.日记</h2><p>坚持写日记</p>
<p>把有意义的事情和瞬间的感悟记录下来</p>
<h2 id="六-学习"><a href="#六-学习" class="headerlink" title="六.学习"></a>六.学习</h2><p>学习专业知识，提高自身竞争力</p>
<p>学习英语，过掉六级</p>
<p>学习感兴趣的学科</p>
<p>学习有用的学科</p>
<h2 id="七-提高身体素质"><a href="#七-提高身体素质" class="headerlink" title="七.提高身体素质"></a>七.提高身体素质</h2><p>加强锻炼</p>
<p>保证充足睡眠</p>
<p>养成良好的生活习惯</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[若有所思]]></title>
      <url>http://chuanqiang.github.io/2014/11/12/%E8%8B%A5%E6%9C%89%E6%89%80%E6%80%9D/</url>
      <content type="html"><![CDATA[<p>五点，夕阳如血，娇艳了天际。时光的影子在一点点拉长，伴随着旋落的枯黄的树叶，渲染着这个时空的苍凉。<br><a id="more"></a><br>脑袋中想说点什么，指尖却跃动不出任何的旋律，像一闪而过的火花，你想把它的美丽告诉别人，当别人看到时却只剩下空洞洞的黑暗。找不到一个 合适的主题，没有一个大致的轮廓。生活趋于平静，没有丝毫波浪。有时想想不由自主的后怕，想起火山爆发前的平静，因为一个人长时间的平凡必然会导致他的平 庸。我虽无大志，但也不想浑浑噩噩，得过且过。然而现如今我好像就是这样。</p>
<p>世界好像充满着纷纷扰扰，各种各样的信息扑面而来，它们夹杂着不同地方的气味，带着褒贬不一的观点，跋山涉水而来。它们充斥着你单调而无聊 的生活。双十一,一个本该充满悲观色彩的光棍节，现如今被金钱商品化，成了人们盲目消费的购物狂欢节，人们翘首以盼，坐等凌晨的钟声响起，然后不亦乐乎 的冲向商业的屠宰厂，像打了鸡血一般。500亿的交易额中，金灿灿的都是人们丢掉的理性。买卖，从来都是骗子与傻子的对话。我为草民，亦不能免俗，被这些 类似的潮流涌动着。我们喜欢刷微博，登空间，看电视连续剧，喜欢浅显而表面的东西，喜欢不假思索便能明了的东西，喜欢关注周围，关注别人，喜欢对别人的话 听之任之，喜欢赞一个，因为评论一下都要死几百脑细胞。不知何时，我们开始浮于生活的表面，不愿意思考，也懒得深究。开始耐不下性子看一本有深度的书，没 心思写写日记，记录下生活，好像生活没什么好记的，也对，因为我们从来都关注别人，不把镜头对准自己。有时觉得自己很忙，有一大队事情，考六级了，期末 了，学英语了；有时又很闲，什么也弄不进去，把手机主页滑来滑去，qq消息刷了一遍又一遍。我们像轻飘飘的柳絮，随风飘荡，无法再生活的大地上留下丝毫痕 迹。对我们来说，生活需要深度与扎实。生活只能一步一个脚印的去体会，不能飞着走，否则你会摔跟头的。</p>
<p>打开电脑，充斥而来的除了娱乐圈，就是科技界，似乎现在科技界快成了娱乐圈，也要靠宣传，靠博眼球。厂商们开始讲情怀，给粉丝掏心置腹， 拼工匠精神。情怀本用于表达人们的心情与胸怀，但是发展到互联网阶段，貌似就有些不同了。周鸿祎说“以前是先做事再说情怀，现在则是先讲情怀再做事”。这 样做的结果是 无论事情是否能成，反正先以情怀来示人，让人能感觉这是一个能做事的人或者企业，颇具营销的味道，以此有人称之为情怀营销，这不足为过，因 为情怀营销带有明显的互联网思维痕迹。情怀是需要科技和能力在下面做支撑的，毕竟消费者买的不是情怀，而是产品本身，不能依靠情感牌获得利益。一个企业的 情怀不是依靠口头宣传的，而是在产品中真真正正体现出来的，从工艺到细节，从服务到产品，切切实实体现企业、设计师对于产品的投注，就像苹果公司一样。语 言的巨人往往是行动的矮子，侃侃而谈的时候很难有深刻的思考。</p>
<p>每天早上被闹钟无情的叫醒，它才不管你昨夜几点入睡，或者正在做着什么春秋大梦，它只是按照一个固定的程式，在那一时刻把你叫醒，甚至在叫 醒你的这一刻它就已经规定了明天这个时刻，你梦境的结束。有气无力的按死闹钟，睡眼惺忪的瞥着白色的房顶，有那么一霎那我在思考身处何地。想明白之后，满 满的失落。</p>
<p>是不会单独在食堂吃饭的，图书馆自己也不常去。像是进入冬眠的小动物，缩头缩脑 在自己的窝里，靠着身边的同伴取暖。外面很冷，不如在窝里打着盹儿舒服，可这样睡去的冬天没有雪花，没有银装素裹的北国风光了。冬眠虽然惬意，可你会睡去 一个残缺的四季轮回；寒风虽然凛冽，但她孕育着来年的春暖花开。</p>
<p>入冬了，天气转凉，叶落大地。不知道这样的季节能不能静静这个浮躁的世界浮躁的心。</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 独白 </tag>
            
            <tag> 科技 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[有个学姐叫小齐]]></title>
      <url>http://chuanqiang.github.io/2014/11/03/%E6%9C%89%E4%B8%AA%E5%AD%A6%E5%A7%90%E5%8F%AB%E5%B0%8F%E9%BD%90/</url>
      <content type="html"><![CDATA[<p>午后，秋阳正暖。课听得昏昏欲睡。忽然叮咚的短信铃声响起：<br><a id="more"></a></p>
<blockquote>
<p>”好久没看到你了，我明天就要走了，给你说一声啊。”</p>
<p>”干嘛去？“</p>
<p>”去实习啊，姐都毕业了。“</p>
</blockquote>
<p> 。。。很久的沉默 。</p>
<blockquote>
<p>”去哪啊？“</p>
<p> ”先在济南，明年再说。“</p>
</blockquote>
<p>。。。无言以对。</p>
<p>这么早就走了。。。唉。。。</p>
<pre><code>。。。。。。
</code></pre><p>小齐学姐走了，这么一小孩儿都工作去了。现实感觉有点不真实，思绪有些模糊。可能她也会穿干练的职业装，踩尖尖的高跟鞋，在职场中忙来忙去。。。使劲甩甩脑袋，很难想象的场景。工作似乎对于我们都还是遥不可及的事，而如今，稚气未脱的小学姐对我说，她要去工作了，要结束她兵荒马乱的学生时代，步入洪流滚滚的社会。而这一切意味着，下一个，将是我。可我还未曾准备。</p>
<p>看着在书包里安静躺着的六级资料书，这是小学姐送的，想起它们已经在这里呆了一年了，而且还再用，霎时羞得满脸通红。</p>
<p>学姐高我一级，学院却在我们楼下。不知为何，背后都对她以学姐 相称，可等到面对面时，却怎么也叫不出口，总是直呼其名，叫的声音洪亮。她往往伴着白眼传来一声：”放肆！“也不能赖我，从哪看她都是学妹辈的，长的小，年龄也不大。</p>
<p>嘴里不说，心里却真把她当学姐，而我也确实当好了学弟的角色，咨询一些”好好学习，天天向上“的问题啦，借借辅导书啦，诉说一下大学的苦恼啦。总之，对于我来说，认识这个学姐挺幸运的，尽管平时联络不多，也没有到”烂熟“的地步，但却每次在我需要的时候有求必应。未曾相识的两个人，在某一焦点上给予你温暖和帮助，我把它称为上帝给你的幸运。</p>
<p>学姐是个不折不扣的东北人。虽然身形娇小似南方姑娘，但一口字正腔圆的东北话和雷厉风行的性格，彰显了东北人的霸气，尽管外表还是相差甚远。小学姐很能喝，这是我始料未及的，她说东北女生都这样。想想以前竟不知天高地厚的把她和自己拼酒的话当成”大言不惭“而嗤之以鼻，心里不由得后怕。看着这么一娇小的女生，把啤酒喝的”咕咚，咕咚“声响，我一边擦汗，一遍感叹”此女非凡物，不容小觑“。除了喝酒吓人，学姐性格还是很好的，没有一些女生的娇气和小心眼，有着东北人的直率和热情。</p>
<p>13年的冬天，期末在即，荒废了的学业也重操不易，一个人在教室奋笔疾书。心情烦躁，思绪不假，走到走廊尽头的窗前来回踱步。</p>
<p>夕阳西下，大片大片的彩云红灿灿的悬于天际。</p>
<p>给学姐打电话，她竟也在同样的位置，只不过她在三楼，我在四楼。</p>
<p>不知道三楼的窗户望出去风景怎样，但至少四楼的落日要迟一些。</p>
<p>学姐上来给我说了许多鼓励的话，虽然听起来跟大人教训小孩似的，但听着很激励，猛然间有了学习的冲动。她以居高临下的姿态给我洗脑，厚重的羽绒服让她显得更加娇小，有点像毛茸茸的小动物，但她语气里却透着一股子成熟劲儿，似乎告诉我，学姐就是学姐，不光代表着我比你多吃了一年饭！聊着聊着，他就讲到了东北的寒冷和美丽的冰雕，讲起了她那身材魁梧的男朋友，说他们一起摆摊儿，路灯下，一块儿回家。讲起他们俩未来的打算，她眼睛里闪着光。很幸福的畅想和目标。她说她现在要为之好好努力。我眼前浮现出他们一大一小两个背影，被夕阳映的红彤彤的。回到教室，发现许多人都在各自的人生路上马不停蹄。为自己。为父母，为爱情。每个人心中都有一只风筝，想阿米尔一样，无论意味着什么，应该勇敢的追。为自己，千千万万遍。</p>
<p>想着想着，总也想多，扯远。小学姐要走了，似乎我的生活并没有多大影响，仅仅让我有些许怀念和不舍。在我们的生活中，遇见又离去，是永恒不变的旋律，只是有不同的周期和频率而已。</p>
<p>我们周围的许多人，他们踏过时空的滚滚洪流来到你们身边，给你讲述一个动听的故事，然后转身离开。他们的背影告诉你：不必追。而你也只能默念一句：珍重。</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 独白 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[bad weather,bad mood]]></title>
      <url>http://chuanqiang.github.io/2014/10/21/bad%20weather,bad%20mood/</url>
      <content type="html"><![CDATA[<p>被滴滴答答的闹钟叫醒，心情向被窗外的天气传染了一样，晦暗烦躁，坏得一塌糊涂。一个美美的周末，就这样以一种狗血的方式开始了。<br><a id="more"></a><br>在三尺小床上腻歪了一会，蔫不拉几的起床洗漱。窗外的施工工地依旧如火朝天，各种施工噪音扑面而来。看着镜子中满脸倦容的自己，像是一个蓬头垢面的乞丐，好心情才会有好身体，我却总也高兴不起来。原因不想多说。儿女情长的事说也是说不清的。</p>
<p>喜欢看成功人士的传记，看他们大气磅礴的生命，然后反趁着自己的渺小无力。</p>
<p>每天问自己，你每天在做什么，你想怎么做，问的自己哑口无言，面红耳赤。我本不是一个豁达的人，已被生活中的无名小事所羁绊，像脖子上哪个被栓了一条绳子，无论你怎样努力奔跑，依旧在原地打转。</p>
<p>每个人在努力，为了未来的美好生活，但你真的确定你现在不是在牺牲你的幸福，去寻找一个未知的幸福。小时候的一根棒棒糖，你可以乐一天，现在的一根哈根达斯，却不见得怎样快乐。</p>
<p>Bad weather,bad mood.去他妈的生活。</p>
<p>努力过，好好活。</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 独白 </tag>
            
            <tag> 心情 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[10月14晚]]></title>
      <url>http://chuanqiang.github.io/2014/10/14/10%E6%9C%8814%E6%99%9A/</url>
      <content type="html"><![CDATA[<p>秋意渐渐加深，满树满树的叶子像是一夜之间用墨水染黄的，在通透的暖阳下发出黄灿灿的光。<br><a id="more"></a><br>时光正好，岁月安然，生活若无其事的走着。</p>
<p>许久没有动笔写东西了，是生活百无聊赖，还是心情浮躁，懒得动笔。不需言说，已然是后者。当心情浮躁的时候，人就很难关注身边的东西，因为你是漂浮着的，怎会留下脚印。</p>
<p>国庆节到处与国同庆，结婚也是一种方式，所以鞭炮声，不绝于耳。在园博园觅得一兼职，朝八晚六，日薪八十。工作颇为轻松，湖边一立，只需看牢车辆（观光车），收发车匹，简单自在。观湖，赏景，何乐而不为。短短六天，却深有一番感悟，这里有人生百态，有张牙舞爪的暴发户，有儒雅内敛的富有者，有目中无人的张扬跋扈者，有趋炎附势的下层小人物。他们摆着不同的嘴脸，为着不同的目的，或虚荣或欲望，充分体现着物竞天择，适者生存对人性的扭曲。三十年后的师生聚会，以为身患脑血栓，年过六旬的花甲老人，本应看破红尘，宠辱偕忘，竟也向我叨念起一个瓷杯的丢失，埋怨起“知人知面不知心”。湖边，衣着破烂，辛勤除草的清洁工人，把刚捡到的小野果子递向我：“小伙子，尝尝，很好吃”。那一刻，不禁让人眼角湿润。社会让每个人好像都少一份宽容与憨实，多了一丝狡猾与精明，让人与人之间的相处变得小心翼翼。</p>
<p>。。。</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 独白 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[成人的小孩]]></title>
      <url>http://chuanqiang.github.io/2014/09/15/%E6%88%90%E4%BA%BA%E7%9A%84%E5%B0%8F%E5%AD%A9/</url>
      <content type="html"><![CDATA[<p>人活到二十岁，已然成人，却还未长大。<br><a id="more"></a><br>品味了纯真童趣的童年，经历了放荡不羁的青春期，步入朝气蓬勃的青壮年。似乎我们已经了解并走入这个世界，这个世界也似乎褪去了童年时它对于我们的神秘，我们似乎可以大言不惭的向人吹嘘说：“我这一辈啊。。。。。。”。然而现如今看起来无人匹敌，百毒不侵的我们，可曾真正体味过人生，可曾真正经历过风雨。世界都没去过，还谈世界观，人生都未走完，哪来的人生观。我们的自大与骄傲源于我们的无知，没见过狮子的人，怎么能想象狮子的可怕。我们没有走出父母亲人家庭学校的呵护与庇佑，我们在温室里肆无忌惮的开放，反而嘲笑整个生态系统的单调与安逸。我们不曾孤单，不曾被抛弃，不曾经历无助和死亡。我们还没有每天为生计向厌烦恶心的人低头谄媚，还没有向伤害自己的人笑语盈盈。我们活得虽然自我，但很真实，真实的表达自己。</p>
<p>看到周围形形色色的人群，他们或西装革履，油头粉面，胳膊下夹着牛皮的公文包，拿着大屏的手机高分贝的谈着业务；或正经的职业装，朝九晚五，出入于写字楼、银行公司，几年如一日，波澜不惊的踽踽前行；或身穿廉价的地摊货，低头哈腰，为了生计堆起满脸的笑容，戴着面具混生。看着他们，好像只是他们罢了，好像只是和我们没有丝毫联系的人，就像看一部电视剧，里面的悲欢离合再怎么真是，我都只是个看客。当序幕拉下，一切与我无关。可是我们还能当多久的观众呢，弹指间，我们已成身临其境的演员，还没有彩排，没有剧本，角色演得好坏，你得为之负责，自己承受。路上匆匆而过的他们，也是不久而至的我们。</p>
<p>活在二十岁的的当下，站立在人生的十字路口，我们的人生拥有太多的不确定，他们都像含苞待放的花蕾，拥有最娇嫩的姿态与形状，但你无论如何也看不透他枝繁叶茂后的形状，但你必须做出选择，做出取舍，而且为之一路向前，即使天寒地冻，路远马亡。我们不知道以后，也看不见未来，所以我们迷惘，我们不知道现在的努力所指何处，是否会有能量的转换。我们后怕这样一种情景：“奋力攀登一个梯子，爬到顶之后才发现梯子搭在了错误的墙上“。我们还未体味生活的残酷，我们只是怯懦的孩子。这个世界上只有一种英雄主义，那就是在认识生活的真相后，依然热爱生活。</p>
<p>生活安逸的像是秋后的暖阳，时间被一点点拉长。我们有大把的青春，我们穿牛仔裤，蓝衬衫，指点江山，挥斥方遒，我们肆无忌惮的谈恋爱，我们谈着理想人生，写着矫情的文字，我们戴着耳机听着流行乐，哼着民谣。我们穿梭在校园，像鱼缸里的金鱼，只有七秒钟的记忆，以为眼前即为大海的广阔。</p>
<p><strong>我们只是孩子，即将面对成人的寂寞，正沉浸在梦中道路的迷离，在青春的尾巴中醉生梦死。</strong></p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 独白 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[就这样吧]]></title>
      <url>http://chuanqiang.github.io/2014/09/11/%E5%B0%B1%E8%BF%99%E6%A0%B7%E5%90%A7/</url>
      <content type="html"><![CDATA[<p>秋阳已不在那么炙热，阳光变得干净柔和，世界像喝了一杯香醇的红酒，调了一个微醺的暖色调。<br><a id="more"></a><br>大一新生如潮水般从全国各地涌来，拉着大大小小的行李箱，左顾右看，满眼的新奇。这里的土地及这里的生活对于他们来说都是全新的，这里有他们的梦想与渴望，也有失落与不满。不管你怀着怎样的心情，带着怎样的故事。无论如何，你都来到了这里。你都将在这里继续书写。</p>
<p>老生对于新生不免是排斥的，他们的到来意味着我们的衰老与离去，从学弟到学长，从学长到老学长。他们一下给我们添了一个“老”字，尽管我们的面庞依旧稚嫩，依旧不谙世事，放荡不羁。但是对于这片土地，他们是新生儿，我们已是垂垂老矣。当你总是畅想未来的时候，你仍是年幼；当你开始回忆过去的时候，你已然苍老。如今看着他们依旧明净的眼眸，回忆像疯涨的野草，蔓延进我的思绪中。。。。。。</p>
<p>目睹着我们所失去的东西在别人那里出现，时间、岁月、单纯、率真，只留下一个回忆的空壳，让你缅怀她曾经的丰盈。</p>
<p>食堂依旧拥挤，吃饭成了一件需要为之战斗的事，远比听上一节专业课来的复杂。食堂师傅的手艺没有丝毫的长进，菜还是那几样。最近可能食盐便宜，在饭菜里挥霍着。</p>
<p>课程无聊的像爬上爬下的蚂蚁，上课只是一个事先编写好的程式，你教，我听或者不听，时间一到，考试，然后各奔东西。我领悟不到丝毫的意义，那些学术的思想与深刻引发不了我的共鸣。它们是地上顽固的探索者，而我的思绪在天上。但身体被禁锢，用各种条条框框，像是在施暴，所以我只能反抗。望着满黑板的蝌蚪符号，丝毫看不出自己的未来，没有人肯花钱雇一个只会画蝌蚪，却养不出青蛙的人。天书晦涩难懂，考试也只能靠阿门了。</p>
<p>自己的愿望，有的陈列在回忆里，有的闪烁在畅想中，有的破灭在道路上。不论实现与否，它们都给了我一瞬间的光亮，让我在那么一刻，是幸福的。</p>
<p>目睹了《一个追风筝的人》，看阿米尔走过的一条再次成为好人的路。每个人心中都有一只风筝，无论它意味着什么，让我们勇敢的追。</p>
<blockquote>
<p>为自己，千千万万遍。</p>
</blockquote>
<p>就这样吧，生活还在继续。跑起来吧，生命经久不息。</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 独白 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[静夜思]]></title>
      <url>http://chuanqiang.github.io/2013/11/16/%E9%9D%99%E5%A4%9C%E6%80%9D/</url>
      <content type="html"><![CDATA[<p>不知怎的，总喜欢睡到很晚，仿佛和时间有个约会，总要缠绵一会才能睡去。<br><a id="more"></a><br>喜欢这样安静的夜，可能因为到了晚上，安静了，这个世界才清楚，才真实。一直觉得夜是个伟大的魔术师，魔术棒一挥，便隐去了耀眼的白昼，安静了一世的浮华。夜总能牵绕人的思绪，让它在夜空中交织，舞蹈，而我透过夜的瞳孔，去想象我的过去，我的现在我的未来，及与你在一起时片刻的光亮和寂静的悄然无语。</p>
<p>现在，高考的孩子们应该在梦中了吧，不知梦到的是兵荒马乱的高中时代还是大学的憧憬。想起顾城的《一代人》：</p>
<blockquote>
<p>黑夜给了我黑色的眼睛我却用它寻找光明</p>
</blockquote>
<p>我也在纯粹的夜色中看到了一闪一闪的光亮。 看到朋友的一句话，去年我们高三，明年我们大三。忽然就有种后怕了，像是处女一觉醒来发现自己贞操丟了，是的，我们丢的，是青春。我们嘶声力竭，却无力反抗。 我知道逝者如斯，追忆也是枉然，但请我再矫情一次，因为，你们在我眼前被放的那么大，你们现在是那么的真实。。。。</p>
<p>恩，还是不写了，我怕回忆的思绪刹不住，但，你要知道，无论你身处何方，我的朋友，在今晚，在这个清凉的雨夜，在此时此刻，我在想着你。。。 </p>
<p>雨，还在瓢泼，不知他们降临人间，是否会想起天上的生活，也不知道他们落地后，摔的痛不痛，但有一点可以肯定，他们再也回不去了。 </p>
<p>希望看到这些矫情的话，不要笑我，我更希望，你能知道，在远方，有人还挂念着你。 </p>
<p>睡了，亲们。</p>
<p>晚安。</p>
]]></content>
      
        <categories>
            
            <category> 独白 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 独白 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[菊]]></title>
      <url>http://chuanqiang.github.io/2013/11/15/%E8%8F%8A/</url>
      <content type="html"><![CDATA[<blockquote>
<p><strong>怒雪威寒千里白，</strong><br><a id="more"></a><br><strong>攒花点睛几痕开。</strong></p>
<p><strong>日落黄昏叹晚霞，</strong></p>
<p><strong>经霜犹傲独菊花。</strong></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 为你写诗 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 写诗 </tag>
            
            <tag> 菊花 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
