<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>七弦桐</title>
  
  <subtitle>以梦为马，随处可栖</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://chuanqiang.github.io/"/>
  <updated>2019-07-25T15:17:58.310Z</updated>
  <id>http://chuanqiang.github.io/</id>
  
  <author>
    <name>七弦桐</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>富爸爸，穷爸爸 - 书摘</title>
    <link href="http://chuanqiang.github.io/2019/07/18/%E5%AF%8C%E7%88%B8%E7%88%B8%EF%BC%8C%E7%A9%B7%E7%88%B8%E7%88%B8%20-%20%E4%B9%A6%E6%91%98/"/>
    <id>http://chuanqiang.github.io/2019/07/18/富爸爸，穷爸爸 - 书摘/</id>
    <published>2019-07-18T14:48:02.000Z</published>
    <updated>2019-07-25T15:17:58.310Z</updated>
    
    <content type="html"><![CDATA[<p>年少不知钱之贵，只知「千金散尽还复来」的潇洒豪迈，虽然至今我骨子里都是感性和文艺的，没有那么向往去当「有钱人」，但随着年岁有加，我也愈来愈明白，在弱肉强食的社会，金钱自始至终都是最强有力的通行证。尤其是当你肩负起越来越多的责任，还有人在江湖的「不由己」，让我开始正视财务，想知道除了朝九晚五的工作，还有什么方式能增加自己的财富。为此，准备涉猎一些理财方面的书籍，提高财商，也增加应对这个瞬息万变、充满天灾人祸的社会的能力。</p><a id="more"></a><p>《富爸爸，穷爸爸》是一本很好的对于理财的启蒙书籍，它里面可能没有具体的理财方法，但是能端正你对财富的看法，进而对理财产生兴趣。</p><hr><h3 id="书摘"><a href="#书摘" class="headerlink" title="书摘"></a>书摘</h3><p>富人之所以越来越富，穷人之所以越来越穷，中产阶级之所以总是在债务的泥潭中挣扎，其中一个主要原因就是，他们对金钱的认识不是来自学校，而是来自家庭。大多数人都是从父母那儿了解钱是怎么回事的。</p><p>我的一个爸爸总是习惯说“我可付不起”，而另一个爸爸则禁止我们说这样的话，他坚持让我这样说：“我怎样才能付得起？”这两句话，一句是陈述句，另一句是疑问句。一句让你放弃，而另一句则促使你去想办法。</p><p>一个爸爸认为“房子是最大的投资和资产”，而另一个爸爸则相信“房子是负债，如果你的房子是你最大的投资，你就有麻烦了。</p><p>贫穷和破产的区别是：破产是暂时的，而贫穷是永久的。</p><p><strong>穷人和中产阶级为钱而工作。富人让钱为他工作。</strong></p><p><img src="https://i.loli.net/2019/07/25/5d39c4d529f9c49477.jpg" alt="学习金字塔"><br>如果你不能下定决心，就永远也学不会如何赚钱。机会总是转瞬即逝。知道什么时候要迅速做出决定是一项非常重要的技能。</p><p><strong>购买或创造提供现金流的资产能使你的钱为你工作。高薪工作只意味着两件事：你在为钱工作，你所支付的税收可能会增加。</strong></p><p>真正的学习需要精力、激情和热切的愿望。愤怒是其中一个重要的组成部分，因为激情正是愤怒和热爱的结合体。</p><p>人们的生活永远被这两种感觉所控制：恐惧和贪婪。</p><p>很多人说“我对钱没兴趣”，可他们却每天工作8小时。</p><p>好好观察你的感情，别急于行动。大多数人并不知道是他们的感情代替了他们进行思考，感情只是感情，你还必须学会抛开感情来思考。</p><p><strong>如果你们不先控制恐惧和欲望，即使你们获得高薪，也只不过是金钱的奴隶而已。</strong></p><p><strong>因为恐惧和贪婪，大多数人一生都在追求工资、加薪和职业保障，从来不问这种感情支配思想的生活之路将通向哪里。就像一幅画表现的：驴子拉车，因为主人在它面前挂了个胡萝卜。主人清楚自己想要去哪里，而驴子却只是在追逐一个幻影。但第二天驴子依旧会去拉车，因为又有胡萝卜放在它的面前。</strong></p><p>富人知道钱是虚幻的东西，就像挂在驴子面前的胡萝卜一样。正是恐惧和贪婪使无数人紧抓着这个幻觉不放，还以为它是真实的。它不是。钱的确是造出来的，正是由于对这种幻觉的信任以及人们的无知才使人们做出许多经不起推敲的计划。</p><p>人生实际上是在无知和觉醒之间的一场斗争。</p><p>他说一个人一旦停止了解有关自己的知识和信息，就会变得无知。这种斗争实际上就是你时刻都要做的一种决定：是通过不断学习打开自己的心扉，还是封闭自己的头脑。</p><p>从长远来看，重要的不是你挣了多少钱，而是你能留下多少钱，以及能够留住多久。</p><p>如果你想发财，就要学习财务知识。</p><p>富人获得资产，而穷人和中产阶级获得负债，只不过他们以为那些负债就是资产。</p><p>资产是能把钱放进我口袋里的东西。负债是把钱从我口袋里取走的东西。</p><p><strong>未来学家阿尔文·托夫勒的这句话印证了20年前富爸爸对我的教导：“21世纪的文盲不是那些不能读和写的人，而是那些不能学习、忘记、再学习的人。”</strong></p><ul><li>富人买入资产。</li><li>穷人只有支出。</li><li>中产阶级购买自以为是资产的负债。</li></ul><p>重要的不是你挣了多少钱，而是你能留下多少钱，以及能够留住多久。</p><p>财富就是支撑一个人生存多长时间的能力，或者说，如果我今天停止工作，我还能活多久？</p><p>富人关心的焦点是资产而其他人关心的是收入。</p><p>存在财务问题的人经常耗费一生为别人工作</p><p>不需我到场就可以正常运作的业务。我拥有它们，但由别人经营和管理。如果我必须在那儿工作，那它就不是我的事业而是我的职业了。</p><ul><li>股票</li><li>债券</li><li>能够产生收入的房地产</li><li>票据（借据）</li><li>版税，如音乐、手稿、专利</li><li>其他任何有价值、可产生收入或有增值潜力并且有很好销路的东西</li></ul><p>富人与穷人一个重要的区别就是：富人最后才买奢侈品，而穷人和中产阶级会先买下诸如大房子、珠宝、皮衣、宝石、游艇等奢侈品，因为他们想让自己看上去很富有。他们看上去的确很富有，但实际上他们已深陷贷款的陷阱之中。那些能给子孙留下遗产的人和那些能长期富有的人，就是先构筑资产项，然后才用资产所产生的收入购买奢侈品的，而穷人和中产阶级则用他们的血汗钱和本应该留给子孙的遗产来购买奢侈品。</p><p>富人永远不会缴税。我们越来越频繁地看到政府利用税法刺激企业主和投资者创造更多的工作机会和住房。这些刺激政策降低了富人的税收。所以，政府只能从中产阶级那里获得税收。</p><p>公司并不意味着一定有刻着公司名称的办公楼、厂房和雇员，它可以只是一个没有灵魂的法律实体，它使富人的财富在这里受到保护。所得税法被通过之后，成立公司就变得流行起来了，因为企业所得税率低于个人收入所得税率。此外，公司的某些支出可以用税前收入支付。</p><p>我提醒人们，财商是由4个方面的专门知识构成的：</p><ol><li>会计<br>会计就是财务知识或解读数字的能力。如果你想建立一个自己的商业帝国，财务知识是非常重要的。你管理的钱越多，就越要精确，否则这幢大厦就会倒塌。这需要左脑来处理，是细节的部分。财务知识能帮助你读懂财务报表，还能让你辨别一项生意的优势和劣势。</li><li>投资<br>投资是钱生钱的科学。投资涉及策略和方案，这要右脑来做，是属于创造的部分。</li><li>了解市场<br>了解市场是供给与需求的科学。这要求了解受感情驱动的市场的“技术面”。市场的另一个因素是“基本面”，或者说是一项投资的经济意义。一项投资究竟有无意义最终取决于当前的市场状况。</li><li>法律<br>利用一个具有会计、投资和市场运营的企业会使你的财富实现爆炸性地增长。了解减税优惠政策和公司法的人会比雇员和小业主更快致富。这就像一个人在走，而另一个人却在飞，久而久之这种差距就更大了。</li></ol><p>公司就是一个装着法律文件的文件夹创造的法律实体。它不一定是一个真正的实体，不是一个工厂，也不是一群人。但是企业的所得税率要低于个人收入所得税率，而且公司的某些支出可以用税前收入支付。</p><p>300年前，土地是一种财富，所以，谁拥有土地，谁就拥有财富。后来，美国依靠工厂和工业产品上升为世界头号强国，工业家占有了财富。今天，信息便是财富。</p><p>我们唯一的，也是最重要的资产是我们的头脑。如果受到良好的训练，它转瞬间就能创造大量的财富。而未经训练的头脑通过教给自己的家庭不正确的理财方式，将会使子孙后代继续这种极度贫困的生活。</p><p>如果你清楚自己在做什么，就不是在赌博；如果你把钱投进一笔交易然后只是祈祷，才是在赌博。在任何一项投资中，成功的办法都是运用你的技术知识、智慧以及对于这个游戏的热爱来减少意外、降低风险。</p><p>要成为理财方面的天才既需要专业知识，又需要足够的勇气。试着去冒险，要勇敢，让你的才华把恐惧转变成力量和智慧——这是一个会吓到一些人的建议，因为当提到钱的时候很多人都变得谨慎。</p><p>大部分人需要学习和掌握不止一项技能，只有这样他们的收入才能获得显著增长。以前我提到过，财商是会计、投资、市场和法律等各方面知识和能力的综合。将上述4种技能结合起来，以钱生钱就会容易得多。</p><p>爸爸认为如果要破产的话，一定要在30岁以前，他的建议是“这样你还有时间东山再起”</p><p>因此，这些聪明的年轻人并不去专项钻研某一个部门的业务，而是从一个部门跳到另一个部门，从而学到整个企业各个系统的知识。富人们也常常这样“培养”自己的或是别人的孩子，通过这种方法，孩子们能对如何经营一家企业有一个整体的认识，并可以了解不同部门的相互关系。</p><p>成功所必需的管理技能包括：<br>1．对现金流的管理。<br>2．对系统的管理。<br>3．对人员的管理。</p><p>正如一句格言所说：“工作（job）一词就是‘比破产强一点’（just over broke）。”不幸的是，这适用于数百万人。</p><p>因为太害怕失败，所以才会失败</p><p>一位聪明的投资者知道，看似最糟糕的时代实际上却是赚钱的最佳时代。当别人都因为太恐惧而不敢行动时，他们却先发制人，收获回报</p><p>德斯上校在66岁时失去了所有的产业，开始靠社会保险金生活，而那点钱根本不够用。于是他走遍全国推销他的炸鸡秘方，在最终有人肯买秘方之前，他被拒绝了1009次。然而通过不懈努力，他在大部分人都退休的年龄成为了千万富翁。“他是一个勇敢、坚韧不拔的人”，富爸爸说的就是肯德基的创始人哈兰·桑德斯上校。</p><p>但掌握财务知识的人有时候还是不能积累丰厚的资产项，其主要原因有5个：（1）恐惧；（2）愤世嫉俗；（3）懒惰；（4）不良习惯；（5）自负。</p><p>克服恐惧的一个方法是尽早开始积累资产，让复利为你服务。从20岁开始储蓄与从30岁开始储蓄的人之间的确有巨大的差异。</p><p>疑虑和愤世嫉俗的心态使大多数人安于贫困。</p><p>止损：止损只是一个计算机指令，如果股票价格开始下降，交易系统将自动出售你的股票，这有助于最大限度地减少损失并最大限度地提高投资收益。</p><p>我要承认我确实会特意交一些有钱的朋友，我的目标不是他们的钱财，而是他们得以致富的知识。有时，这些有钱人会成为我的亲密朋友。</p><p>明智的投资者往往会购买一项不被大众看好的投资，他们懂得利润在购买时就已确定，而不是在出售时获得的，他们会耐心地等待投资的增值</p><p>但是，你越早得到信息，获利的机会就越大，风险也会越小，这就是朋友的作用。这也是一种财商。</p><p><strong>能否自律是将富人、穷人和中产阶级区分开来的首要因素</strong></p><p>开创事业所必备的最重要的3种管理技能是：<br>1．现金流管理。<br>2．人事管理。<br>3．个人时间管理。</p><p>利润是买来的，而不是卖出来的。</p><p>我看来，通过提高财商可以解决生活中的一些基本问题。如果没有受过理财训练，我们往往都会选择一种标准的模式度过一生，例如辛苦工作、储蓄、借款和缴纳本不应该缴纳的税。然而今天我们比以往更需要更好的生活模式。</p><p>三种收入<br>在会计领域里，有三种不同的收入：<br>1．劳动性收入。<br>2．投资组合收入。<br>3．被动收入。</p><p>变富有的关键是拥有尽快将劳动性收入转换成被动收入或投资组合收入的能力。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;年少不知钱之贵，只知「千金散尽还复来」的潇洒豪迈，虽然至今我骨子里都是感性和文艺的，没有那么向往去当「有钱人」，但随着年岁有加，我也愈来愈明白，在弱肉强食的社会，金钱自始至终都是最强有力的通行证。尤其是当你肩负起越来越多的责任，还有人在江湖的「不由己」，让我开始正视财务，想知道除了朝九晚五的工作，还有什么方式能增加自己的财富。为此，准备涉猎一些理财方面的书籍，提高财商，也增加应对这个瞬息万变、充满天灾人祸的社会的能力。&lt;/p&gt;
    
    </summary>
    
      <category term="书摘" scheme="http://chuanqiang.github.io/categories/%E4%B9%A6%E6%91%98/"/>
    
    
      <category term="书摘" scheme="http://chuanqiang.github.io/tags/%E4%B9%A6%E6%91%98/"/>
    
      <category term="理财" scheme="http://chuanqiang.github.io/tags/%E7%90%86%E8%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>1984 - 书摘</title>
    <link href="http://chuanqiang.github.io/2019/06/25/1984%20-%20%E4%B9%A6%E6%91%98/"/>
    <id>http://chuanqiang.github.io/2019/06/25/1984 - 书摘/</id>
    <published>2019-06-25T15:19:41.000Z</published>
    <updated>2019-07-25T15:24:07.265Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>1984（插图珍藏版）<br>乔治·奥威尔</p></blockquote><p>1984 是一本传世之作，是世界文坛最著名的反乌托邦、反极权的政治讽喻小说。小说描述的是对极权主义恶性发展的预言——人性遭到扼杀、自由被强行剥夺、思想受到钳制、生活极度贫乏单调的种种生存状态。乔治·奥威尔被誉为『一代英国人的冷峻良心』，更有赞誉称『多一个人看奥威尔，就多一份自由的保障』。</p><a id="more"></a><hr><p>和“艳阳天”做对比，突出了所处环境的恐怖</p><blockquote><p>街道上，一阵阵的风吹卷起尘土和碎纸片，越飞越高。虽然艳阳高照，天空也出奇的蓝，但除去无处不在的宣传画，似乎什么东西都没了颜色。那张留着浓密八字胡的脸，在每一个居高临下的角落直直地盯着一切。温斯顿对面那间房子的前面就贴有一张，下面写着：“老大哥正在看着你”。那双眼睛如利剑一般直逼他心底。</p><p>街道上，一阵阵的风吹卷起尘土和碎纸片，越飞越高。虽然艳阳高照，天空也出奇的蓝，但除去无处不在的宣传画，似乎什么东西都没了颜色。那张留着浓密八字胡的脸，在每一个居高临下的角落直直地盯着一切。温斯顿对面那间房子的前面就贴有一张，下面写着：“老大哥正在看着你”。那双眼睛如利剑一般直逼他心底。</p></blockquote><p>表现了厌恶的情绪</p><blockquote><p>像一只绿头大苍蝇</p><p>战争即和平<br>自由即奴役<br>无知即力量</p><p>政府机构四大职能部门的所在地：真理部负责新闻、娱乐、教育和美术；和平部负责战争；仁爱部负责维持法律和秩序；富裕部负责经济事务。</p></blockquote><p>中国米酒躺枪</p><blockquote><p>它散发出的也是一股令人作呕的油味，像中国的米酒。</p></blockquote><p>人在这种环境里时间久了，会变得麻木，最终失去思想，成为体制的机器</p><blockquote><p>真正下笔不是难事，只需要将多年来萦绕在他大脑里那些没完没了的内心独白转移到纸上就可以了。这种情况已经持续了好几年，然而在此刻，这种独白也变得枯竭，他感到脑袋空空如也。</p><p>两分钟的仇恨会的最可怕之处，并不是你会被迫参与进来，而是无法避免参与其中。</p><p>致未来或过去，致思想自由、人们各自不同但并非孤独生活着的时代——致真理尚存、发生过的事实不会被清零的时代：我们从千篇一律的时代、孤独的时代、老大哥的时代、双重思想的时代——向您致敬！</p><p>思想罪并不致人死亡：思想罪本身就是死亡。</p><p>的身体光滑白皙，但丝毫挑逗不起他的欲望。他确实不怎么看她。此时此刻，他心底最强烈的感情反而是佩服她扔掉衣服的那种姿态，这个动作潇洒又优雅，像是把整个文化和思想都摧毁了，单单是手臂一个无比漂亮的动作，就能把老大哥、党和思想警察甩到很远很远的地方去</p><p>谁控制了过去就控制了未来；谁控制了现在就控制了过去。</p><p>双重思想</p><p>知道或者不知道；明白全部的事实但说着精心编造的谎言；同时持有两种针锋相对的观点，明知道它们两者之间的矛盾但又深信不疑；用逻辑来反逻辑；一边拥护道德一边又否定道德；一边相信民主是不可能的一边又相信党是民主的捍卫者；忘掉一切必须忘掉的又在需要的时候想起它，然后又马上忘掉它，最重要的是，对于过程本身，他也是这样处理的。双重思想的最高境界是：有意识地诱导自己进入到无意识的状态中，然后，再次意识不到自己刚刚所完成的自我催眠行为。甚至要理解“双重思想”本身的含义，你也得使用双重思想。</p><p>过去已被篡改，而篡改本身已经被遗忘，谎言变成了真理。</p><p>自由，就是二加二等于四的自由。这一点若成立，其他一切就顺理成章了。</p><p>温斯顿累得像一块果冻</p><p>战争最根本的行为就是毁灭，不是非要取人性命，而是消耗人们的劳动产品。战争就是把这些产品炸个粉碎，抛到太空或者沉没海底，否则这些东西就会让人们生活得太过于舒服。从长远的意义来讲，这样会使他们变得太过于聪明而不受控制</p><p>可以看出，战争不仅仅是完成破坏这个任务，而且在心理层面也是需要被接受的。</p><p>三类人的目标是永远不可调和的。上等人想保持自己的地位，中等人则想着抢占上等人的位置，而下等人呢？如果说他们还有目标的话，那就是想消除社会的等级，创造一个人人平等的社会（但他们有一个特点，那就是终日被劳力所缠绕，只是偶尔想起才会注意到生活以外的事情）</p><p>上等人在掌权之后的很长一段时间后，迟早会在突然之间意识到自己失去了信仰，或者开始怀疑自己是否有能耐继续高效统治下去，或者两者兼而有之。这个时候，中等人就会借助为了自由和正义而奋斗的名义，拉拢下等人进入自己的阵营，一起对付上等人。等达到目标后，中等人又是一脚踢开下等人，让他们滚回自己原来受奴役的生活中去，自己一跃上升为上等人了。</p><p>在过去，上等阶层不断宣扬等级社会存在的必要性，除了王侯将相，那些依靠他们而存在的神职人员和法律人士，也鼓吹这一点。通常来说，他们是通过承诺人生最后的归宿乃是天国之类的言论，来淡化大家对现世等级社会的严酷性。中等阶层只要还在为掌权而的奋斗，就离不开自由、平等和博爱这些幌子</p><p>只有四种因素才会使一个统治集团丧失它的权力。外部的征服；统治效率低下，激起了人民的反抗；防范不周，让一个强大且对现实不满的中等阶层团体强大起来；丧失了对统治天下的自信和积极性。</p><p>他们会继续一代又一代、一个世纪又一个世纪地工作、繁衍、死亡，不但没有任何反抗的冲动，也不具备理解“世界除了现在这个样子还能够是什么样子”的能力，只有在工业技术的发展使得他们必须接受更高等的教育时，才会变得危险起来。</p><p>和平部关心的是战争，真理部供应谎言，仁爱部关心酷刑，富裕部制造饥荒。这些矛盾并不是偶然，也不是出于一般的伪善，它是“双重思想”中有意为之的杰作。</p><p>温斯顿发现周围一片寂静，就好像发现了一种新的声音。</p><p>世界上存在着真理与非真理，如果你选择站在真理这一边，即使全世界都与你为敌，你也不会疯掉</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;1984（插图珍藏版）&lt;br&gt;乔治·奥威尔&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;1984 是一本传世之作，是世界文坛最著名的反乌托邦、反极权的政治讽喻小说。小说描述的是对极权主义恶性发展的预言——人性遭到扼杀、自由被强行剥夺、思想受到钳制、生活极度贫乏单调的种种生存状态。乔治·奥威尔被誉为『一代英国人的冷峻良心』，更有赞誉称『多一个人看奥威尔，就多一份自由的保障』。&lt;/p&gt;
    
    </summary>
    
      <category term="书摘" scheme="http://chuanqiang.github.io/categories/%E4%B9%A6%E6%91%98/"/>
    
    
      <category term="书摘" scheme="http://chuanqiang.github.io/tags/%E4%B9%A6%E6%91%98/"/>
    
  </entry>
  
  <entry>
    <title>1988：我想和这个世界谈谈 - 书摘</title>
    <link href="http://chuanqiang.github.io/2019/03/03/1988%EF%BC%9A%E6%88%91%E6%83%B3%E5%92%8C%E8%BF%99%E4%B8%AA%E4%B8%96%E7%95%8C%E8%B0%88%E8%B0%88%20-%20%E4%B9%A6%E6%91%98/"/>
    <id>http://chuanqiang.github.io/2019/03/03/1988：我想和这个世界谈谈 - 书摘/</id>
    <published>2019-03-03T07:23:12.000Z</published>
    <updated>2019-03-03T07:23:52.944Z</updated>
    
    <content type="html"><![CDATA[<p>这是我觉得韩寒所有作品里最好的一部小说，他以一种『在路上』的方式，试图与这个世界谈谈，试图寻找令人信服的价值。</p><a id="more"></a><blockquote><p>我生命里的女孩们，无论你解不解我的风情，无论我解不解你的衣扣，在此刻，我是如此地想念你，不带们。</p><p>数火车是多么消磨时间的方式，唯一的缺点就是没有办法验算。但是何妨呢，恼人的时间在这一刻没有痛苦地过去，而是全神贯注。</p><p>这么多年来，一直是我脚下的流沙裹着我四处漂泊，它也不淹没我，它只是时不时提醒我，你没有别的选择，否则你就被风吹走了。我就这么浑浑噩噩地度过了我所有热血的岁月，被裹到东，被裹到西，连我曾经所鄙视的种子都不如。</p><p>于是我毅然往上一挣扎，其实也没有费力。我离开了流沙，往脚底下一看，原来我不是一棵植物，我是一只动物，这帮孙子骗了我二十多年。作为一个有脚的动物，我终于可以决定我的去向。我回头看了流沙一眼，流沙说，你走吧，别告诉别的植物其实他们是动物。</p><p>丁丁哥哥说，我去和他们谈谈。<br>我说，你和谁谈谈啊？<br>丁丁哥哥唇边露出微笑，急切地说，这个世界。<br>我说，哇噢。</p><p>这样的旅行在我年少时曾经幻想过无数次，夜晚的国道里，我带着自己梦寐以求的女子，开着自己梦寐以求的车，去往未知旅程的终点。未知旅程怎么会有终点。旅途上没有疲劳和困意，我们聊着电影和音乐，穿越群山和丛林，最终停在一泓无人的湖水旁边，有一个没有任何经济头脑的人开的酒店，干净便宜。</p><p>我要迎接漫天的星斗。<br>我要迎接满河的龙虾。<br>我要迎接能刺痛我皮肤的带刺的野草。<br>我要迎接能刺痛我眼睛的我从不敢正视的太阳。</p><p>为何在童年里，四季是那样的分明，每一朵花开，每一片浮云，每一阵微风，每一个女孩都在告诉你，我们到了什么样的一个季节。</p><p>这个世界之大能让你完全把自己洗没了，在一个陌生的环境里，我可以重新塑造一遍我自己，没有什么是不会改变的，我上一个角色已经演完了，这是我接的新戏。</p><p>回去以后的那段时间，我没日没夜地看碟，我看了几百部电影。这是比毒品更好的沉迷方式，我是一个很容易代入的人，看英雄代入英雄，看傻×代入傻×，看女人代入女人，唯独看猫狗大战的时候，我实在不知道是该代入猫好一点呢还是代入狗好一点。我总听到有人说，生活就像一场电影。我说，去你的，生活就像一场电视剧，粗制滥造，没有逻辑，但却猥琐前行，冗长，不过不能罢手。</p><p>有些事情，所有人都觉得是对的，它也有可能是错的。但是我是要告诉你，不要拿青蛙给现实改变自己找借口，温水是煮不了青蛙的，青蛙没有那么蠢，这就是现实。</p><p>我其实不知道她喜欢我什么，我也不知道我喜欢她什么。我深知这样的姑娘就像枪里的一颗子弹，她总要离开枪膛，因为那才是她的价值，不过她总是会射穿你的胸膛而落在别处，也许有个好归宿，也许只是掉落在地上，而你已经无力去将她拾起来。更难过的是，扣动扳机的永远还是你自己。</p><p>真实总是没有错，但我们的面具只要不狰狞，是不是已经足够。</p><p>我实在不知道应该要怎么给人安全感，因为我深知人总是一边在寻求安全感，一边在寻求刺激感。</p><p>人们埋怨一成不变，但也埋怨居无定所，人们其实都无所谓，只是要给日子找点岔子而已，似乎只有违背现在的生活，才真正懂得了生活，生活就是一个婊子、一个戏子、一个你能想到的一切，你所有的比喻就往里面扔吧，你总是对的。因为生活太强大了，最强者总是懒得跟你反驳，甚至任你修饰，然后悄悄地把锅盖盖住。</p><p>她这样的一个女人，在前行的路上，总是需要不停地搭车，有些车送她去目的地，有些车还绕点弯路，有些车会出点事故，而我只是那个和她一样在走路的人，我走得还比她慢，只是她在超越我和我并肩的时候我推了她一把，仅此，这是所有我能做的，而后，她离开了我的臂长范围，我只能给她喊几句话，再远，她就听不到我说什么了。我不想走得快一些，因为那是我的节奏，在那个节奏里我已经应接不暇。</p><p>我们只是在此一时里痛苦翻腾着，然后在彼一时里忘得干干净净。</p><p>我说，娜娜，你知道么，“虚惊一场”这四个字是人世间最好的成语，比起什么兴高采烈、五彩缤纷、一帆风顺都要美好百倍。你可懂什么叫失去。</p><p>终于轮到我冷笑了，我说，做自己，多土的词。想生存下去，谁不都得察言观色，然后表演一番。</p><p>我真的是那样地喜欢刘茵茵，当我的生命里只能讲一个故事的时候，我愿将这个故事说出来，这个故事平淡无奇，平铺直叙，既没有曲折，也没有高潮，也就是寻找，相识，分开，就如同走在路上看见一盏红绿灯一样稀松平常，但若驻足，你会发现，它永远闪着黄灯。我就一直看着这盏信号灯，在灯下等了很久，始终不知道黄灯结束以后将要亮起的是红色还是绿色，一直等成了一个红绿色盲。</p><p>对于当时从来没有弄明白自己有什么追求的我来说，姑娘就是唯一的追求。这种追求是多么的煎熬</p><p>但我至少等待过，我知道你从不会来，但我从不怀疑你彼时的真心，就如同我的每一个谎言都是真心的。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是我觉得韩寒所有作品里最好的一部小说，他以一种『在路上』的方式，试图与这个世界谈谈，试图寻找令人信服的价值。&lt;/p&gt;
    
    </summary>
    
      <category term="书摘" scheme="http://chuanqiang.github.io/categories/%E4%B9%A6%E6%91%98/"/>
    
    
      <category term="书摘" scheme="http://chuanqiang.github.io/tags/%E4%B9%A6%E6%91%98/"/>
    
      <category term="韩寒" scheme="http://chuanqiang.github.io/tags/%E9%9F%A9%E5%AF%92/"/>
    
  </entry>
  
  <entry>
    <title>流浪地球和飞驰人生</title>
    <link href="http://chuanqiang.github.io/2019/03/03/%E6%B5%81%E6%B5%AA%E5%9C%B0%E7%90%83%E5%92%8C%E9%A3%9E%E9%A9%B0%E4%BA%BA%E7%94%9F/"/>
    <id>http://chuanqiang.github.io/2019/03/03/流浪地球和飞驰人生/</id>
    <published>2019-03-03T06:49:48.000Z</published>
    <updated>2019-03-03T07:15:01.811Z</updated>
    
    <content type="html"><![CDATA[<p>梭罗说，日出未必意味着光明，太阳也无非是一颗晨星而已，只有在我们醒着时，才是真正的破晓。每天东升西落，朝九晚五，究竟我们的白天能有时间几许呢？</p><a id="more"></a><p>春节档的电影充斥着国产的烂片，所谓春节档就是国产电影保护壁垒下捞钱的合家欢电影大集合。星爷的《新喜剧之王》烂出新高度，观众早已不欠他的电影票，而是他欠观众一部出色的电影。当然，也有两部电影还可以，一部是《流浪地球》，另一部是韩寒的《飞驰人生》。</p><p><img src="https://upload-images.jianshu.io/upload_images/763193-3c03c3080fa5e8d9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="流浪地球海报"></p><p>《流浪地球》是一部不错的灾难片，却也是一部糟糕的科幻片，就像波米在『反派影评』里说的那样：『不是特效越多就越科幻，‘毁天灭地’那是灾难片的标配；拍科幻也不是造航母搞核弹，没必要天天强煽‘中国科幻零的突破’。可以说，科幻提供一切但恰恰不提供民族情绪的出口，如果影片全凭激发民族自豪感而成功，这本身就是对科幻二字的羞辱』。之后我也看了刘慈欣的电影同名小说，相比于原著的宏大设定，电影只是取了里面的一个小片段进行了放大和改编，具有工业级别的水准，但也只是在灾难片的范畴中而已。而在原著《流浪地球》中，作者用很简短的篇幅叙述出了一段波澜壮阔的人类逃亡旅程。其实里面的内容完全可以展开，写成一部浩瀚的科幻历史长卷，但大刘总是立意先行的作者，好像是先抓住心中一闪而过的灵光而进行的匆忙记录。</p><p>书中记录了人类流亡的历程：</p><blockquote><p>人类的逃亡分为五步：第一步，用地球发动机使地球停止转动，使发动机喷口固定在地球运行的反方向；第二步，全功率开动地球发动机，使地球加速到逃逸速度，飞出太阳系；第三步，在外太空继续加速，飞向比邻星；第四步，在中途使地球重新自转，掉转发动机方向，开始减速；第五步，地球泊入比邻星轨道，成为这颗恒星的卫星。人们把这五步分别称为刹车时代、逃逸时代、流浪时代I（加速）、流浪时代II（减速）、新太阳时代。 </p></blockquote><p>在那个时代下，人们的信仰都消失，上帝已死亡。人们眼中的死亡都是雪亮的。</p><blockquote><p>在这个时代，人们在看四个世纪以前的电影和小说时都莫名其妙，他们不明白，前太阳时代的人怎么会在不关生死的事情上倾注那么多的感情。当看到男女主人公为爱情而痛苦或哭泣时，他们的惊奇是难以言表的。在这个时代，死亡的威胁和逃生的欲望压倒了一切，除了当前太阳的状态和地球的位置，没有什么能真正引起他们的注意并打动他们了。这种注意力高度集中的关注，渐渐从本质上改变了人类的心理状态和精神生活，对于爱情这类东西，他们只是用余光瞥一下而已，就像赌徒在盯着轮盘的间隙抓住几秒钟喝口水一样。</p><p>我想象中的死亡之墙应该是雪亮的，这就是为什么那道等离子体墙让我想起了它。这个时代，死亡不再是黑色的，它是闪电的颜色，当那最后的闪电到来时，世界将在瞬间变成蒸气。</p></blockquote><p>无论还是在电影或者小说中，当人们面对毁天灭地的大灾难的时候，我们和西方国家的处理方式截然不同，西方普遍是『飞船派』——地球只是一个居所，毁灭了就用飞行器去其他星球。但《流浪地球》中却是携全球之力，带着地球出逃，这种故土情结很好的体现了我们自己的科幻元素，只是故事关于科幻内核的东西展现的不够。</p><p><img src="https://upload-images.jianshu.io/upload_images/763193-7b4db16beac224f3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="飞驰人生海报"></p><p>《飞驰人生》是韩寒的又一新作，作品相比较韩寒之前的作品还可以，是一部照顾到情怀和市场的商业片，前半段很烂，后半段很燃。电影之后，看了『晓说』里高晓松对韩寒的节目，作为一代人学生时代的记忆，韩寒更像是一个符号，一个被捧上神坛代表『叛逆』、『不羁』的符号，而现在的韩寒温柔可掬，在节目里会自嘲和为对方找补，许多人说韩寒变了，他背叛了曾经支持他的那一代人，成为了之前我们讨厌的那群人。但其实这是一种成长和包容，更加客观的认识自己和这个世界。</p><p>十八岁的韩寒，认为《三重门》的爆红，几乎全凭他的实力；《三重门》刚出版时，韩寒曾说：『《三重门》五十年内无人能及』，这显然是自大蒙蔽了双眼，无论哪个角度，《三重门》都没有好到那个地步。在《晓说》里韩寒坦言：</p><blockquote><p>这本书现在看来，多有幼稚和卖弄<br>我当年之所以那么写，是想模仿梁实秋和钱钟书<br>写完《三重门》后我开始反思，觉得这样太做作<br>从第二本小说开始，我彻底抛弃了这个风格</p><p>我自己当时 无论是知识储备<br>（还是）我的自我认知，与我获得的关注跟地位<br>我自己觉得是没有匹配的<br>我应该是一个更强的自己<br>才能匹配到那样的地位</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/763193-d1b81ac86132d1ab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1988：我想和这个世界谈谈"></p><p>这是成长后对自我认知的提升，成长就是不断发现自己无知的过程。之后又重新读了韩寒的《1988：我想和这个世界谈谈》，感觉这应该是韩寒写的最好的一本书了，他以一种『在路上』的方式，试图与这个世界谈谈，试图寻找令人信服的价值。</p><blockquote><p> 真实总是没有错，但我们的面具只要不狰狞，是不是已经足够。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;梭罗说，日出未必意味着光明，太阳也无非是一颗晨星而已，只有在我们醒着时，才是真正的破晓。每天东升西落，朝九晚五，究竟我们的白天能有时间几许呢？&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://chuanqiang.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="读书" scheme="http://chuanqiang.github.io/tags/%E8%AF%BB%E4%B9%A6/"/>
    
      <category term="电影" scheme="http://chuanqiang.github.io/tags/%E7%94%B5%E5%BD%B1/"/>
    
  </entry>
  
  <entry>
    <title>1月11日晚</title>
    <link href="http://chuanqiang.github.io/2019/01/20/1%E6%9C%8811%E6%97%A5%E6%99%9A/"/>
    <id>http://chuanqiang.github.io/2019/01/20/1月11日晚/</id>
    <published>2019-01-20T13:09:45.000Z</published>
    <updated>2019-01-20T13:09:45.161Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://upload-images.jianshu.io/upload_images/763193-6ae9d691896691c9.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="十号地铁"></p><a id="more"></a><blockquote><p>同样的夜晚，<br>抬头已繁星点点。<br>奔忙的年头，<br>生活哪里还有温柔。<br>地铁无情的向前，<br>我又坐过了站。<br>道路可以回转，<br>人生却没有彼岸。</p><p>宽阔的十字路口，<br>我却不能向左和向右，<br>出卖着自己的时间，<br>只为苟活在世间。<br>蹚过的岁月被留在身后，<br>就像那些丢弃的烟头。<br>和过往说声晚安，<br>道声青春再见。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/763193-6ae9d691896691c9.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;十号地铁&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="为你写诗" scheme="http://chuanqiang.github.io/categories/%E4%B8%BA%E4%BD%A0%E5%86%99%E8%AF%97/"/>
    
    
      <category term="诗" scheme="http://chuanqiang.github.io/tags/%E8%AF%97/"/>
    
      <category term="岁月" scheme="http://chuanqiang.github.io/tags/%E5%B2%81%E6%9C%88/"/>
    
  </entry>
  
  <entry>
    <title>走吧，去国图静静</title>
    <link href="http://chuanqiang.github.io/2019/01/05/%E8%B5%B0%E5%90%A7%EF%BC%8C%E5%8E%BB%E5%9B%BD%E5%9B%BE%E9%9D%99%E9%9D%99/"/>
    <id>http://chuanqiang.github.io/2019/01/05/走吧，去国图静静/</id>
    <published>2019-01-05T08:29:33.000Z</published>
    <updated>2019-01-05T08:35:47.813Z</updated>
    
    <content type="html"><![CDATA[<p>终于，来到了慕名已久的国家图书馆。作为一个浑身散发人文主义光芒的伪文青，并且在北京待了两年多，而没去国图看一看，真的很说不过去。好多次想去，但总因为这样那样的原因没去成。其实一切原因都是借口，归根到底还是因为生活总沿着惯性平步向前，缺少一些冲动和决心。我们身边处处布满围栏，但咬牙翻过去就是不一样的风景和体验。</p><p><img src="https://upload-images.jianshu.io/upload_images/763193-47a3acbcaa5f1db8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="国图"></p><a id="more"></a><p>国图没想象中的气势磅礴，从外面看反倒四四方方毫不起眼，甚至如果没有标牌你都看不出这是堂堂的国家图书馆，不过这样也很好，读书本来就是一个安静、低调的事情，静静在那里就好了。外面虽然没什么，但是一进到国图里面，就是另一番天地了。我进来的这个应该是北区，整个建筑采用了钢结构加玻璃，简约大气，有很强烈的现代气息，并且玻璃设计增加采光度，方便阅读。陈列有序的原木书架摆满了书籍，四四方方的书桌一字排开，很是气派，没有什么装饰品能比得过一面面的书墙更优雅大气的了。</p><p>看到这些陈列的书籍，会使人不由的产生一种对知识的敬畏之情。安静、知识、学习是你在这里能强烈感受到的气氛，这种感觉很奇妙，能带动你的情绪，让你内心安静。据我观察，来这里的人一部分是来借阅、阅读图书典籍，更多的人是带着电脑在这里学习和办公上网，就像去星巴克一样，享受的是并不是这里的图书资源，而是这里的学习气氛和环境。在当下纷纷扰扰的生活中，浮躁和喧嚣充斥在我们身边，我们需要一个安适的场所和环境来让我们静下来做些我们喜欢的事。就像赵雷的歌『静下来』里唱的：</p><blockquote><p>我想应该静下来想一些话<br>我想应该静下来走一段路<br>我想应该静下来看一本书<br>我只想静下来做这些事<br>当一切都开始静下来的时候<br>静的可以让我听到平和安详的心跳<br>静的像云 静的像空气</p></blockquote><p>以后把他当做生活的休憩地，就像大学泡图书馆一样，周末也常来这里泡泡。明天准备继续来这儿，不知道在这里撸代码会不会是另一番体验呢。</p><p>静下来，别走的太快，等一等你的灵魂。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;终于，来到了慕名已久的国家图书馆。作为一个浑身散发人文主义光芒的伪文青，并且在北京待了两年多，而没去国图看一看，真的很说不过去。好多次想去，但总因为这样那样的原因没去成。其实一切原因都是借口，归根到底还是因为生活总沿着惯性平步向前，缺少一些冲动和决心。我们身边处处布满围栏，但咬牙翻过去就是不一样的风景和体验。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/763193-47a3acbcaa5f1db8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;国图&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://chuanqiang.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://chuanqiang.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>年末、老罗和书</title>
    <link href="http://chuanqiang.github.io/2018/12/23/%E5%B9%B4%E6%9C%AB%E3%80%81%E8%80%81%E7%BD%97%E5%92%8C%E4%B9%A6/"/>
    <id>http://chuanqiang.github.io/2018/12/23/年末、老罗和书/</id>
    <published>2018-12-23T14:25:43.000Z</published>
    <updated>2018-12-23T14:35:54.703Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://upload-images.jianshu.io/upload_images/763193-1c50a0ba135a158a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="from unsplash"></p><p>有些东西放下了，就放下了，想要拾起来可不知道猴年马月了，就像自己记录日志。当有一天打开 Bear 才发现，天啊，我这是有多久没写了，我之前干嘛了。习惯养成很难，丢掉却很容易，尤其是这种需要自律的习惯，所以为了对得起之前的付出，千万不要轻易「放下」。</p><a id="more"></a><p>已经进入十二月底了，年末临近，各种关于18年总结在网上流行着，不时的提醒你，甚至叫嚣的在你耳边吼：「看吧，你又虚度了一年的光阴，你又要年老了一岁，而你仍旧这么平庸、碌碌无为！」。朋友圈给人开玩笑回复，说我这一年，除了蚂蚁森林坚持每天早上偷能量外，没有什么其他坚持的好的了😂。各种节日也开始了，像冬至日、圣诞节、元旦、新年，年味儿越来越浓，心底却越来越慌，有一种紧迫感，想要抓住年末的尾巴，仿佛临近考试抱佛脚的学生，挣扎着突击去换取一个学期末的好成绩。</p><p>最近有一些事情觉得需要记录一下，有开心的、不开心的。琐碎、无聊却是实实在在的生活。</p><p>老罗的公司摇摇欲坠，看网上新闻好像是经历了资金链问题，现在在和各个公司谈收购的事。看到这些消息，我很失落。一直对老罗和锤子科技很欣赏和钦佩，尤其是老罗的工匠精神和理想主义。现在有一些人，不知道为什么总这些词来讽刺，好像「工匠精神」和「理想主义」成了贬义词，是嗤之以鼻时讽刺和挖苦来用的词。我丝毫理解不了他们的脑回路，于我而言，这是两个熠熠生辉的词汇，是两种珍贵的品质，一个是生产行业和手艺人应该追求的，另一个是保持初心人应该追寻和保有的，我对拥有这两个品质的人充满敬意，理解不了他们的笑点和梗，只是觉得这群人的无聊。一个和你毫无瓜葛的人，做出了优秀的产品，传播了他的设计理念和情怀，并且对手机行业起到了一些十分积极的作用，这样一个人，不管怎样，在我看来都是虽败犹荣，竟招来网上这么多的落井下石。我们的这个国家自古以来都是「胜者王，败者寇」，只崇拜胜者，以结果的成败来衡量一切，而不看过程中体现的东西。我认为老罗的硬件设计和软件创新都是国内一流的，作为一个新晋手机品牌，已经做到了足够的高度。但是供应链的不足和技术快速的更新迭代让追求工匠精神的老罗吃不消了，打磨是一个耗时间的活儿，而时间就是金钱，产品周期控制不好必将导致资金量的断裂，而资金一断，就像推翻了多米诺骨牌，整个就坍塌了。当前创办锤子科技的时候，老罗说：</p><blockquote><p>不是为了输赢，我就是认真。</p></blockquote><p>希望这次老罗能挺住，就像之前他在演讲里说的：</p><blockquote><p>面对挫折、打击的时候，不要伤心、不要难过、不要沮丧，甚至不要控诉、不要愤怒、不要抗议，只管埋头默默擦亮你的武器，准备下一次的战斗。</p></blockquote><p>许多互联网公司的独角兽过的不好，ofo 也面临破产，公司的无人货架换了一家又一家，好像今年是资本寒冬，各家过的都不好。资本其实是很诚实的，赚不来钱靠画饼和讲故事终究会被淘汰，寒冬其实也不全是坏事，它能促进优胜劣汰，那些耐得住寒冬的证明了他们的价值，那些死掉的也推翻了一些没有价值的商业模式。在资本寒冬时代的下半场，创新思维应当摒弃浮躁进行降噪，要回归商业本质。</p><p>最近看了几本书，一本是罗永浩的《生命不息，折腾不止》，一本是《成为乔布斯》，最近在看的一本是《鱼翅与花椒》和《怪诞行为学》，都是很好的书，在地铁通勤时也不觉难熬了。进入互联网社会，各种信息和媒介层出不穷，除了文字外，音频、视频甚至VR、AR都能充当信息传播的载体，相比他们而言，书本好像变得淡薄和平淡，既不生动，纬度也单一，难道书真成了现在社会的淘汰品和老古董嘛？我不这么认为。书有他独特的地方，不得不承认，迄今为止，书仍然是信息质量最高、筛选成本最低且知识最密集的载体。不论是公众号、豆瓣知乎、B站还是其他视频网站，他们的内容都良莠不齐的掺杂在一起，还没等你分辨出食粮和垃圾，就已经在那些标题党、大无用、浮夸和惊世骇俗的信息流和视频流里沦陷了。在这种情形下，你是被动的接受，不需要思考和费力气，根据人的惰性，当然会倾向于这些甚至上瘾。时间久了，大脑就懒得思考和输出了，就像鸦片一样，躺着享受暂时的欢愉。而读书不一样，读书是一个主动汲取的过程，你需要思考、费力气，写读书笔记和感想再汇总知识信息进行输出，这个过程好比强身健体，虽辛苦但受益无穷。希望自己一直能把读书这个习惯坚持下去，少刷抖音多读书😂</p><p>新年临近，岁月增长，希望能让自己永远年轻，永远热泪盈眶。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/763193-1c50a0ba135a158a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;from unsplash&quot;&gt;&lt;/p&gt;
&lt;p&gt;有些东西放下了，就放下了，想要拾起来可不知道猴年马月了，就像自己记录日志。当有一天打开 Bear 才发现，天啊，我这是有多久没写了，我之前干嘛了。习惯养成很难，丢掉却很容易，尤其是这种需要自律的习惯，所以为了对得起之前的付出，千万不要轻易「放下」。&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://chuanqiang.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="读书" scheme="http://chuanqiang.github.io/tags/%E8%AF%BB%E4%B9%A6/"/>
    
      <category term="随笔" scheme="http://chuanqiang.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="老罗" scheme="http://chuanqiang.github.io/tags/%E8%80%81%E7%BD%97/"/>
    
  </entry>
  
  <entry>
    <title>生命不息，折腾不止 - 书摘</title>
    <link href="http://chuanqiang.github.io/2018/12/16/%E7%94%9F%E5%91%BD%E4%B8%8D%E6%81%AF%EF%BC%8C%E6%8A%98%E8%85%BE%E4%B8%8D%E6%AD%A2%20-%20%E4%B9%A6%E6%91%98/"/>
    <id>http://chuanqiang.github.io/2018/12/16/生命不息，折腾不止 - 书摘/</id>
    <published>2018-12-16T12:51:52.000Z</published>
    <updated>2018-12-16T12:53:28.407Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://upload-images.jianshu.io/upload_images/763193-7fd89d3fc3410f17.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="罗永浩"></p><a id="more"></a><h3 id="第1章-序"><a href="#第1章-序" class="headerlink" title="第1章 序"></a>第1章 序</h3><p>他是一个正常的好人，带一点趣味，带一点理想主义。不怎么勇敢，却比别人勇敢，不怎么彪悍，却被迫活得彪悍。</p><p>生活在不正常的世界里，你稍微正常些就会显得另类和难得可贵<br>他说了这许多，无非是在告诉你一件令人发指的事实，活在这个世上，能有一点正常的思维已经非常难得。</p><p>老罗一定是有洁癖的人，我指的是思想上。一个有洁癖的人，才会把守护平等公正变成自己的本能。</p><p>老罗的意义还在于他显露出的勇猛和积极，他证明了在一个烂掉的环境下，我们不仅可以选择逃避与抵抗，还可以选择反击。 </p><p>这绝不是一本教你成功的书，而是一本教你变正常的书</p><p>等你变正常，在这片土地上你就算是个人物了</p><p>当我们的商业能力和那些巨头没有多少差距时，理想主义将所向披靡。</p><h3 id="第2章-我的奋斗"><a href="#第2章-我的奋斗" class="headerlink" title="第2章 我的奋斗"></a>第2章 我的奋斗</h3><p>我觉得无论你是土财主还是洋财主，土穷光蛋还是洋穷光蛋，只要自己活得开心，而且坚持了自我，就是成功人士。从这个意义上，别人说我是成功人士，我也不否认这一点，尽管我是个穷光蛋。</p><p>全世界的成功学书籍，出了几亿种，归根到底就是一句话：只要努力，就能成功。就是这么一句屁话嘛。</p><p>当你定下一个艰巨的、阶段性的计划的时候，有这么几本书放在床边，绝对是最好的精神鸦片。 </p><p>我们年轻时坚持一些自己认为是正确的东西的时候，总有些长辈，完全是出于善意好心，过来提醒你，告诉你这个社会不像你想的那样，如果你要想怎么样，就必须怎么怎么样。这种话你是不是听过很多次啊？我长大的过程中也不断地听到这种话，我从来都不听，我就一直坚持我年轻时认为是正确的东西。 </p><p>我从来都没有那么多勇敢，我只是有一点点勇敢，但是在普遍懦弱的中国，这已经是难能可贵的品质了。 </p><p>所以这些正直的年轻人到了三十岁很彷徨，开始产生严重的自我怀疑，心想我到底在干吗呢！于是他为了获得生存上的好处，决定跟着耍流氓。所以这些人呢，不管是什么借口，最终选择了去做恶心的成年人社会中的一个恶心的人，最可气的是他们之后还产生了幻觉，说这就是“成熟”。于是又过来毒害年轻人，跟他们说，你看，我年轻的时候也像你这样，现在我这叫成熟，你这叫幼稚。</p><p>每一个生命来到世间，都注定改变世界，这是你的宿命，你别无选择。你要么把世界变得好一点，要么把世界变得坏一点。</p><p>你如果走进社会，为了生存或是为了什么不要脸的理由，变成了一个恶心的成年人社会中的一员，那你就把这个世界变得恶心了一点点。如果你一生耿直，刚正不阿，没做任何恶心的事情，没做任何对别人造成伤害的事情，一辈子拼了老命勉强把老婆、孩子、老娘，把身边的这些人照顾好了，没有成名，没有发财，没有成就伟大的事业，一生正直，最后梗着脖子到了七八十岁死掉了，你这一生是不是没有改变世界？你还是改变世界了，你把这个世界变得美好了一点点。因为你，这个世界又多了一个好人，听懂了吧？</p><p>面对挫折、打击的时候，不要伤心、不要难过、不要沮丧，甚至不要控诉、不要愤怒、不要抗议，只管埋头默默擦亮你的武器，准备下一次的战斗。</p><h3 id="第3章-一个理想主义者的创业故事Ⅰ"><a href="#第3章-一个理想主义者的创业故事Ⅰ" class="headerlink" title="第3章 一个理想主义者的创业故事Ⅰ"></a>第3章 一个理想主义者的创业故事Ⅰ</h3><p>因为我从来不觉得理想主义者和金钱之间有什么不可调和的矛盾。 </p><p>列侬死的时候是四十岁，（笑声、掌声）我是1972年出生的，今年已经三十八岁了，所以，有一些这样的故事激励着你，你就会把每一天过得像是最后一天一样。（笑声、掌声）我尝试创业的时候，尽可能让自己勤奋一些就是靠这样的东西来支撑。 </p><p>我当时创业半年，意识到这个问题的迫切和重要性以后，以我三十七岁的高龄，硬着头皮用加班时间开始自学广告设计。（笑声、掌声） </p><p>自己动手，丰衣足食”，那是1939年2月，当时延安经费紧张……（笑声、掌声）反正这句话鼓励了我，我开始“自己动手，丰衣足食”，学着做一些平面设计这方面的东西。硬着头皮用每天加班的时间，到现在为止大概做了一年半。 </p><p>每一次如果能够的话，尽可能让你设计的东西有一点好玩的特质，便于它的传播。 </p><p>安德鲁·格鲁夫大家知道吧？英特尔公司的前总裁。他是一个难民，跟着父母流浪到美国去，后来创立了自己的机构。他写过一本书很著名，名字叫《只有偏执狂才能生存》。我很喜欢这句话，在高度竞争、高度完善的这样一个行业里，只有偏执狂才能生存。我们经常见一些成功的企业领袖，他做得稀里糊涂，但是就把事儿做成了。这种情况除了运气的成分，还有一个比较合理的解释，就是这通常不是一个充分竞争的、高度发达的行业。如果是高度发达、充分竞争的行业，那基本上只有偏执狂才能生存。 </p><p>你去给别人打工，你图什么呢？要么就是钱，要么就是有一个奔头。</p><p>我从来都不觉得我有多么勇敢，我只是有一点点勇敢。在普遍怂货的局面下，你就显得非常勇敢了。就好像你生理上只是正常的，但是在一群阳痿面前，你就是一个猛男。</p><p>我做企业时候的感想，也是差不多的。就是我们没有做出什么特别优秀、特别牛的东西。但是，我们做到了一些特别基本的东西，于是就卓尔不群了，就是这个样子。 </p><p>真的没有觉得做得有多高尚。但别人真的太差了，我的自大是这帮兔崽子自小导致的。我们本来就不用自大、自小，自中就好了。但是，一群人围着你献媚般地自小，逼得你就膨胀起来了。（笑声） </p><p>在理想集团和利益集团的斗争中，最终，总是以理想集团获胜而告终的</p><p>吉姆·柯林斯在他著名的商业书籍《基业长青》中讲“为正确的核心价值观和使命感所驱使的人，所赚的钱比纯粹以赚钱为目的的人赚的钱更多”，这是调查了世界一百多个大型企业以后，通过一些分析得出的数据和结论。</p><p>通过实现理想让人相信实现理想是可能的，通过改变世界让人相信改变世界是可能的”，最后一条才是关键：“即使是在中国”</p><p>有个在全球范围内都取得商业上的成功，非常了不起的机构，甚至把不作恶都写到了自己宗旨里，它来到一个神奇的国度，由于没有采用神奇的方式，不像什么度那样采用神奇的方式，（笑声、掌声）尝试以不神奇的方式在一个神奇的土地上挣扎，甚至做一些妥协和让步，尝试一些调整和转型。它还是失败了，现在，被迫跑到香港去了，但我不觉得这是谷歌的失败。我觉得这是我们国家和时代的耻辱。</p><p>现在这个国家还在上演这种”神奇”。我觉得谷歌迟早会回来，那时候国家应该已经变得不神奇了</p><p>考虑到能让自己的老爹老娘这么开心，当时周云蓬老师说了孝心感动天地的一句话，他说：“只要能让老娘高兴，就算让我上春晚我都在所不惜。”（笑声、掌声）这个是我对孝顺能理解的极限。</p><h3 id="第4章-一个理想主义者的创业故事Ⅱ"><a href="#第4章-一个理想主义者的创业故事Ⅱ" class="headerlink" title="第4章 一个理想主义者的创业故事Ⅱ"></a>第4章 一个理想主义者的创业故事Ⅱ</h3><p>微软看了很激动，微软市场部的一个高管看了完全精神崩溃了，因为其中我提到了，作为中国国内土生土长的中小企业，我们创业开始到今天，在办公室里没有使用过任何一个盗版软件，无论Office还是什么软件，都是正版，这个真的打动了市场部的那个高管。所以，他一怒之下给我们免费赠送了价值好几万元的Windows 7正版和Office 2010的正版，使得我们未来很长的一段时间内增加的人手和增加的电脑都不需要再买正版的Windows和Office软件了。 </p><p>看到身边一些做得恶心的人活得比你好，可能由于脆弱产生一些动摇。但是坚持走下去，一时一地我们不敢讲，长远地看，这个世界大体还是公平的是吧？所以，请大家有一个坚定的信念。 </p><p>美国的政治笑话：一个美国人说，我最讨厌两种人，一种人是种族主义者，一种是黑人。这就是典型的隐性的种族主义者。 </p><p>不要让一小撮人破坏了大多数人的用户体验”</p><p>因为我从来没有从事过商业领域的工作，第一次做这个的时候，我有很多跟年轻时一样的坚持。 </p><p>不是输出技术，输出人才，而是输出价值观。我们虽然是商业机构，但我们是一个能输出价值观的机构。</p><h3 id="第5章-一个理想主义者的创业故事Ⅲ"><a href="#第5章-一个理想主义者的创业故事Ⅲ" class="headerlink" title="第5章 一个理想主义者的创业故事Ⅲ"></a>第5章 一个理想主义者的创业故事Ⅲ</h3><p>不得不佩服罗永浩的本事，他踩到了狗屎，但他能让狗屎后悔。</p><p>如果你是受害一方，别人主动过来招惹你，然后对你下各种黑手……就是我回应的时候，明明你是受害者，如果你搞得很悲催，搞得很愤怒，搞得特别的义正词严，公众是很反感的。所以我们在斗争过程中，即使是受害的一方，也要保持一个良好的心态，带着革命乐观主义去斗智斗勇，这是必要的。</p><p>所以我们说实话，在很多时候对老方这样的人……你看我从去年年底到现在已经六个月了，你想谁有那么好的心情和兴致呢，但我们总是尽可能，把它处理得开心一点，免得公众感到寂寞，所以“娱乐精神”很重要，首先，你要讲道理，同时，有娱乐精神。</p><p>你在每一个阶段，把你该做的事情做完就行了，至于结果怎么样，取决于你怎么看待这个事情</p><p>我们在人生的每一个阶段，能影响多少人，就影响多少人，哪怕只能影响一个人，也好过不影响。就是这样。</p><p>想说的是，在中国，努力去做一个产品的企业家，就是像乔布斯一样做一个完美的产品，有这个意识和能耐的这种企业家，我是没有看到的。我不觉得小米是这样一个方向，尽管它在这方面取得了一些令人尊敬的成绩。也许朝这个方向很努力的黄章老师，可以认为是，魅族的，但是他真的天分非常有限，我说这句话没有任何的恶意或善意，完全是客观中性的这么一个评价。</p><p>想说的是，在中国，努力去做一个产品的企业家，就是像乔布斯一样做一个完美的产品，有这个意识和能耐的这种企业家，我是没有看到的。我不觉得小米是这样一个方向，尽管它在这方面取得了一些令人尊敬的成绩。也许朝这个方向很努力的黄章老师，可以认为是，魅族的，但是他真的天分非常有限，我说这句话没有任何的恶意或善意，完全是客观中性的这么一个评价。 </p><p>现实扭曲场</p><h3 id="第6章-锤子科技Smartisan-T1发布会"><a href="#第6章-锤子科技Smartisan-T1发布会" class="headerlink" title="第6章 锤子科技Smartisan T1发布会"></a>第6章 锤子科技Smartisan T1发布会</h3><p>我们理解的话呢，打造一个完美的产品和用户体验，靠的是三个最基本的东西：硬件配置、设计和工艺、操作系统和软件。</p><p>它的本质是一个企业，到底是设计需求驱动还是工程需求驱动，是工艺完美导向还是生产便利导向</p><p>我们的设计哲学永远围绕着那些美好而永恒的事物，但它们也要具有某些能够与人相互作用、相互影响的特质。产品不应仅仅是一个物件，我们的公司就建立在这一信念之上。产品是设计者的想法，是与人相关联的事物。</p><p>传统上制造这种精美漂亮完善的小的电子元器件和产品，全世界最擅长的本来是谁？日本人本来是最擅长做这个东西的，精致的、小巧的、美妙的这些电子小设备，全世界日本是通杀的，无敌的。但是乔布斯给媒体人的解释是——为什么到了数码时代苹果赶超了日本的那些巨头？为什么呢？——真正核心的原因是日本的传统制造业的这些巨头们，由于我们一时很难说清楚的原因，这背后的成因是很复杂的，总之他们不是特别擅长软件</p><p>乔布斯甚至曾经说过，虽然外界认为苹果是一家硬件公司，但是苹果自己的人，内部定义自己是一家软件公司。</p><p>我相信我已经说服了一部分人。这时候我们迎来第二个严肃的问题就是“怎样把一部4000元的手机在中国卖得特别的好”，正确答案是3000元！（大笑、欢呼、掌声）【真是一手的好营销】</p><p>我觉得这是一个千疮百孔的世界。我发现这个行业里只有一个聪明人，叫乔布斯，他死了，剩下一群笨蛋在做一些丑陋的东西，我感觉被时代选中了</p><p>通过处心积虑地改善人类的生活品质来获取利润，而不是通过处心积虑地获取利润来获取利润”，这也是我们一直信奉的一个信念。（掌声）最后，“和消费类电子产品行业里最具工匠精神和设计意识的先驱者博朗兄弟、盛田昭夫、乔布斯一样，我们始终相信更好的技巧和手艺能创造更好的生活”！这也是挺着我们一路走到今天的工匠精神，一路走到今天。</p><p>不是为了输赢，我就是认真</p><h3 id="第7章-一个理想主义者的创业故事Ⅳ"><a href="#第7章-一个理想主义者的创业故事Ⅳ" class="headerlink" title="第7章 一个理想主义者的创业故事Ⅳ"></a>第7章 一个理想主义者的创业故事Ⅳ</h3><p>人性的角度出发，我们喜欢看到我们讨厌的人的坏消息，也倾向于相信这些坏消息。”这就解释了为什么那些正规的媒体虽然不至于造我的谣，也传了很多关于我的谣言。他讨厌我，看到跟我相关的坏消息的时候，他从人性的角度出发是倾向于相信这些是真的，这是非常合理的一个解读。</p><p>这些事情并不是没有方法解决的，对于任何一个做企业的都是躲不掉的一课。坦率地讲这是我个人的问题，由于过去在媒体这方面过分自信导致出现这种情况。</p><p>他们不是我的粉丝，他们是某种信念、某种价值观、某种理想、某种人生态度的粉丝，他们来到现场，是知道从我身上能看到这些东西</p><p>如果是说这个产品，所有的困难点我都能预见到。那这个产品一定是个很平庸的产品。 </p><p>认真你就输了。不对，不应该这样。我认为，认真你就赢了。 </p><p>创造一些不同，创造一些可以去真正改变人生活的产品</p><p>所以我们虽然被黑，但是仍然要倔强地表现出我们比任何时候都更爱这个世界。虽然心里偶尔也有一些不爽，但是始终都保持心态健康，这个是非常重要的。这也是最后我想跟大家讲的</p><h3 id="第8章-附录：我的故事"><a href="#第8章-附录：我的故事" class="headerlink" title="第8章 附录：我的故事"></a>第8章 附录：我的故事</h3><p>我觉得自己的目光很深情，但后来交往过的女朋友们都说，当我对着喜欢的女孩子深情凝视的时候，从别人的眼中看来，刚好是我最猥琐的时候，这样看来，当年还真是难为她了。</p><p>我们来到世间，本不想互相伤害，但是由于年轻，由于造化弄人，我们确实伤害和被伤害了。</p><p>在我接触到那些真正意义上的启蒙读物之前，单是因为忠于自己的感受，或是基于一些常识，就已经能感觉到这个世界是荒谬和愚蠢的了</p><p>浑浑噩噩的人来到世间，总是跳不出这个圈子：先是傻头傻脑地成为受害者，然后再愣头愣脑地成为施害者。 </p><p>“人心不会熄灭，但它可能蒙上灰烬而不再燃烧。灰烬本来是燃烧的产物，但它反过来又抑制了燃烧。拨开灰烬，你会看到重新燃烧的人心</p><p>又渐渐发现自己其实是一个内心强大、择善固执的人。我不能确定这里面有多大的运气成分，想来一定是有的；我能确定的是，我为了一个我希望坚持的东西做过很多努力和心理调节。 </p><p>永远年轻，永远热泪盈眶。当你试图放弃一个你知道是正确的事情的时候，希望你能再看看这句话。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/763193-7fd89d3fc3410f17.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;罗永浩&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="书摘" scheme="http://chuanqiang.github.io/categories/%E4%B9%A6%E6%91%98/"/>
    
    
      <category term="书摘" scheme="http://chuanqiang.github.io/tags/%E4%B9%A6%E6%91%98/"/>
    
      <category term="演讲" scheme="http://chuanqiang.github.io/tags/%E6%BC%94%E8%AE%B2/"/>
    
      <category term="老罗" scheme="http://chuanqiang.github.io/tags/%E8%80%81%E7%BD%97/"/>
    
  </entry>
  
  <entry>
    <title>抖音为什么能火</title>
    <link href="http://chuanqiang.github.io/2018/11/11/%E6%8A%96%E9%9F%B3%E4%B8%BA%E4%BB%80%E4%B9%88%E8%83%BD%E7%81%AB/"/>
    <id>http://chuanqiang.github.io/2018/11/11/抖音为什么能火/</id>
    <published>2018-11-11T14:28:56.000Z</published>
    <updated>2018-12-15T16:12:04.841Z</updated>
    
    <content type="html"><![CDATA[<p>不管你玩不玩抖音，你都得承认——抖音火了。就连一直对这种短视频APP嗤之以鼻的我现在没事也会刷一下来消磨时间。客观的说，抖音上百分之八十都是无用的信息，但是如果你懂得搜索筛选和『拿来主义』，抖音也可以在消磨时间换取短暂欢笑的同时收获一些知识技能。比如这次家里装修，我就在抖音上get到一些技巧和经验，不得不说，无论是什么样的信息源，都会良莠不齐，重要的是你知道你需要什么，知道如何区分辨别真假，知道如何利用并并不被它劫持。</p><p><img src="https://upload-images.jianshu.io/upload_images/763193-19401fd2824dec9d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="抖音APP"></p><a id="more"></a><p>至于抖音为什么火，知乎上有许多大神的高见，对于从产品设计角度去研究很有借鉴和学习意义。比如抖音媒介的去中心化，这种话语权由集权向民主，中心化向去中心化转移，且势不可挡。还有算法的功效：智能分发，叠加推荐，及热度加权。但这都是抖音成功锦上添花的部分，真正底层的原因是抖音顺应了人性。那么具体顺应了什么样的人性呢？</p><ol><li>我们的注意力，正朝着碎片化堕落。现在，『短』成了风口，从微电影到短视频，从长篇小说到公众号文章，人们的注意力的持久力愈来愈短，通过音乐视频快速获取大脑的兴奋成了一种常态的刺激，有点像吸毒。于是我们也越来越适应这种快消品，很难再看得下去冗长的文艺片和大部头的文学名著，就像总给他吃肉吃辣吃咸，他就很难再去品尝清淡但健康的食物了。我们现在正朝着高频率的短刺激和碎片化堕落，这背后也有移动互联网兴起的大背景的推动。</li><li>现在人们的工作压力大。累了一天躺在床上，很难再有动力去看书学习，此时最想做的是放松压力，追求快乐，逃避痛苦，而抖音正合适。有时候玩游戏很累，但是刷抖音却很轻松。在抖音上你总能找到喜欢和共鸣，然后时不时发出杀猪般的笑声，虽然那只是短暂的欢乐。</li><li>满足虚荣心。抖音上的小哥哥小姐姐平时可能都是些朋友圈点赞没几个，生活枯燥无聊的人，但是借助抖音的神道具和场景也能拍的有趣并俘获一大波点赞和关注，这就比朋友圈带劲多了，能找到认同和满足内心的小虚荣，给你深深的存在感和成就感。</li></ol><p>抖音加速了人们碎片化的生活走向，现在社会上的人是一边批评的慷慨激昂、横眉冷对，一边转眼就自己躲到角落里刷的不亦乐乎了。关于抖音，并不能说明这个社会现象好不好，只能说有其现阶段出现的合理性。还是那句话，掌控自己，不被APP控制，知道自己需要什么就够了。</p><p>况且，抖音上确实一些很有意思呢，哈哈哈。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;不管你玩不玩抖音，你都得承认——抖音火了。就连一直对这种短视频APP嗤之以鼻的我现在没事也会刷一下来消磨时间。客观的说，抖音上百分之八十都是无用的信息，但是如果你懂得搜索筛选和『拿来主义』，抖音也可以在消磨时间换取短暂欢笑的同时收获一些知识技能。比如这次家里装修，我就在抖音上get到一些技巧和经验，不得不说，无论是什么样的信息源，都会良莠不齐，重要的是你知道你需要什么，知道如何区分辨别真假，知道如何利用并并不被它劫持。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/763193-19401fd2824dec9d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;抖音APP&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://chuanqiang.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="产品" scheme="http://chuanqiang.github.io/tags/%E4%BA%A7%E5%93%81/"/>
    
      <category term="抖音" scheme="http://chuanqiang.github.io/tags/%E6%8A%96%E9%9F%B3/"/>
    
  </entry>
  
  <entry>
    <title>那些岁月</title>
    <link href="http://chuanqiang.github.io/2018/11/10/%E9%82%A3%E4%BA%9B%E5%B2%81%E6%9C%88/"/>
    <id>http://chuanqiang.github.io/2018/11/10/那些岁月/</id>
    <published>2018-11-10T15:14:15.000Z</published>
    <updated>2018-11-10T15:16:05.951Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>花有重开日，青春不再来</p></blockquote><a id="more"></a><p>上周六是克明的婚礼，我周五下了班从北京赶回家。自从搬家之后，回济南的家就变得非常容易了。从公司出发，一个小时地铁到北京南站，然后高铁一个半小时到达济南西站，然后打车十几分钟就到家了。在时间上缩短了，在精神上也轻松很多，回趟家也没有了疲惫感，我可以做到周五下班回家，然后周一早上坐高铁去上班还精神焕发，在家可以待足两天。唯一的缺点是高铁费钱😶</p><p>克明的婚礼在长清的一酒店，新娘和他是一个小区的，可谓是近水楼台先得月了。婚礼办得不错，简单又体面，现场布置的浪漫温馨，又没那么奢华浪费。我觉得他俩挺般配的，新娘贤惠懂事，新郎踏实稳重，都是居家过日子的主。看着往日宿舍里的毛头小子，也西装革履，开始结婚成家，心里还感慨颇多。当浪漫的音乐响起，当看到台上的萝卜单膝下跪对着新娘说出爱情的誓言的时候，眼睛忍不住有点酸。那年我们还少不更事、岁月青葱，如今都已到了成家立业的年纪。年少的夕阳，来的太快，忘记了什么是天真烂漫。转眼冬至，飞雪漫天，长亭一梦如初却已变沧海桑田。</p><p>相逢和离别是人生永远的主旋律，你不断的认识其他人，他们会与你随行一段旅程，然后离别，你们忙着在各自的道路上披荆斩棘，无暇他顾，幸好还有记忆来见证那些岁月和故事。当然，还有这些照片。<br><img src="https://upload-images.jianshu.io/upload_images/763193-9207b0f67a570e49.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="高中舍友"></p><p><img src="https://upload-images.jianshu.io/upload_images/763193-b961c45f1c8c18c9.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="高中舍友"></p><p>看，我曾经也是宿舍扛把子😀</p><p>毕业之后聚少离多，恐怕只有春节和哪个哥们结婚才能借机小聚一下，欢聚时候经常会胡侃当初在我们兵荒马乱的学生时代里那些让人忍俊不禁的事，谁谁谁的笑料，谁谁谁被老师批评，还有那些班里的女同学，酒过三巡，许多沉睡的记忆也从角落里苏醒过来，奇怪的是昨天的事情都不记得了怎么这么久的事情还都能记得这么清楚，仿佛一切都在昨天发生，仿佛我们还像以前那样青春烂漫。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;花有重开日，青春不再来&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://chuanqiang.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://chuanqiang.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>也话明星</title>
    <link href="http://chuanqiang.github.io/2018/10/16/%E4%B9%9F%E8%AF%9D%E6%98%8E%E6%98%9F/"/>
    <id>http://chuanqiang.github.io/2018/10/16/也话明星/</id>
    <published>2018-10-16T15:03:55.000Z</published>
    <updated>2018-10-16T15:20:46.022Z</updated>
    
    <content type="html"><![CDATA[<p>今天新浪微博的服务器宕机了，是因为两个明星结婚，微博服务器一下并发量剧增导致。挂掉就挂掉吧，本来是没什么大不了的一件事，新浪微博的服务器之前也宕过几次，但这次有趣的地方是新浪曾经信息满满的立下Flag，鼓吹并发承载多强，支持八位明星并发出轨。但是却没能抵得过一对明星结婚。这下悲剧了，啪啪啪的打脸。</p><a id="more"></a><p>翻看网上新闻的评论，发现一个有趣的现象：许多人慷慨激昂的指责现在明星工资太高，说什么戏子误国的话。我倒觉得并不是这样，明星的身价几何说到底是市场经济决定的，投资人并不是傻子，如果明星不能带来那么多的利益，他们才不会给明星那么多的薪酬，既然能给到，就说明明星能撬动这么大的蛋糕，既然能，并且符合市场规律和国家法规，那么明星的钱就挣得没问题。一个明星带来的经济效益远不是明面上我们看到的那些，更多的是给品牌带来的溢价和巨大的流量，单从这几年新浪微博的宕机历史就能看出一个明星带来的流量大小了，在这个年头，流量就是红利。</p><p>有人说戏子误国，其实说到底，戏子是谁养的呢？还不是大众粉丝。其实不光是粉丝，就算是普通人都会不自觉的被网络引流，比如你翻看了相关网页，点击了相关链接都是贡献了你的一个流量，嘴上说的大义凛然，下了班还不照样刷微博看明星演的电视剧。戏子只是粉丝经济中的一小部分受益者，更大的受益者是投资人。如果说是戏子误国，不如说是这个娱乐至死的风气误国，而我们每个人都要为之负责。</p><p>话说回来，娱乐并不是毒品，没必要那么排斥和抵触，这些年我们一直喊娱乐至死可也没耽误好好建设祖国，贡献GDP啊。一个国家经济消费水平越高，精神生活越富足，这个国家的娱乐业才越发达，明星收入也相应越高。你看美国的明星的身价和片酬就知道了。另外，明星也不是那么容易当的，人人都喜欢当明星，但中国15亿人口才有多少当红明星，这个概率和彩票中奖差不多。大部分是默默无闻的，拔尖儿的只是一小撮幸运儿，单看这点，就能产生市场价值。</p><p>之所以有这种声音，一方面确实是对当下娱乐泛滥的担忧，但我总觉得更多的是大众普遍的仇富心态。高喊着戏子误国的那些人，你如果让去他当明星，给他大把大把的钞票，他也是乐滋滋的。只不过他们羡慕明星的生活，没有明星的命，才会说葡萄酸吧。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天新浪微博的服务器宕机了，是因为两个明星结婚，微博服务器一下并发量剧增导致。挂掉就挂掉吧，本来是没什么大不了的一件事，新浪微博的服务器之前也宕过几次，但这次有趣的地方是新浪曾经信息满满的立下Flag，鼓吹并发承载多强，支持八位明星并发出轨。但是却没能抵得过一对明星结婚。这下悲剧了，啪啪啪的打脸。&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://chuanqiang.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://chuanqiang.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>关于房子的随想</title>
    <link href="http://chuanqiang.github.io/2018/10/14/%E5%85%B3%E4%BA%8E%E6%88%BF%E5%AD%90%E7%9A%84%E9%9A%8F%E6%83%B3/"/>
    <id>http://chuanqiang.github.io/2018/10/14/关于房子的随想/</id>
    <published>2018-10-14T15:20:36.000Z</published>
    <updated>2019-01-20T13:57:15.164Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>天可补，海可填，南山可移。日月既往，不可复追。</p></blockquote><p>国庆节结束，秋意渐浓，凉意已觉。</p><a id="more"></a><p>国庆节对于上班族来说是除了春节之外最长的一个假期了，所以人们都会选择在这一天去旅行、探亲、结婚。人一旦上班，就像是给自己戴上了枷锁，把自己推进了牢狱——虽然衣食无忧，但是已经远离了自由。你不由的要去挤早高峰的地铁，要朝九晚五，要兢兢业业。虽然也有假期和闲时，但那只像被狱警安排的定时放风罢了。愈长大，愈欲望更多，愈不自由。</p><p>人生如朝露，短瞬即逝。该如何过这一生呢？我等俗人，人云亦云，麻木的不去想这个问题。</p><p><img src="http://image.zhangcq.vip/20181014153952984658615.jpg" alt="20181014153952984658615.jpg"></p><p>济南的房子终于装修完毕，家具也大致买全，只待散散味道，挑一吉日良辰，搬家入住。房子不大，紧凑三居两厅，位于济南西，满意的是小区环境和临近济南西站交通枢纽，这样以后做高铁往来北京乃至去往其他各地，都十分方便。在不到二十五岁的当下，终于有了一个属于自己的家。谁都不想一生浪迹，有了一个安身之处，哪怕羁旅在外，只要想到有一个属于自己的小地方，便顿觉安心。</p><p>中国人不但有故土情节，也有房子情节，不然不能理解一个人会为了一个房子而辛苦奋斗半生这种行为。房，在一个人一生中扮演了很重要的角色，我们奔波劳累、含辛茹苦可能就是为了在某一个城市买一个房子，安一个家。因此，对于房子的装修也就变得很重要。从装修的设计施工，到家具的挑选购买，都是一个让人费脑筋却也使人兴奋的过程，想象住到自己亲手置办的房子里生活，也是很幸福的。诚然，这一过程也是挥金的过程，钱哗哗哗的消耗掉，不但房子花钱，装修花钱，我还一同买了14万的车位和11万的储藏室，让人不禁生出『钱到用时方恨少』的感慨。</p><p><img src="http://image.zhangcq.vip/20181014153953059850519.jpg" alt="房子走廊.jpg"></p><p>家装是一个尺度范围很大的消费行为，一个一百平的房子，装修的花费可以做到从六七万到六七十万甚至更多，里面的讲究、坑也很多，如果是没有装修常识的人去弄，确实费时费力费财，感觉这个市场很是浑水摸鱼，各个公司水平参差不齐，但同样也是一块很大的蛋糕。反正在济南兼顾口碑和实惠的公司几乎没有，或多或少都会在一些地方『坑』你一下。幸亏有个好老爸，能帮我一手搞定，幸甚至哉！</p><p>国庆在家唠家常，父母辈的都诉说他们那代人艰苦岁月，不时对比得出一个我们这代人多么幸福的结论。我表弟不懈的努努嘴：『我们这代人，谁身上没有个百八十万的贷款啊』。一想，真是！</p><p>背上贷款，我也成了房奴，世界好像就是这样，用年华和自由来换取物欲横流。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;天可补，海可填，南山可移。日月既往，不可复追。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;国庆节结束，秋意渐浓，凉意已觉。&lt;/p&gt;
    
    </summary>
    
      <category term="独白" scheme="http://chuanqiang.github.io/categories/%E7%8B%AC%E7%99%BD/"/>
    
    
      <category term="独白" scheme="http://chuanqiang.github.io/tags/%E7%8B%AC%E7%99%BD/"/>
    
      <category term="随笔" scheme="http://chuanqiang.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>失明症漫记 - 书摘</title>
    <link href="http://chuanqiang.github.io/2018/09/16/%E5%A4%B1%E6%98%8E%E7%97%87%E6%BC%AB%E8%AE%B0%20-%20%E4%B9%A6%E6%91%98/"/>
    <id>http://chuanqiang.github.io/2018/09/16/失明症漫记 - 书摘/</id>
    <published>2018-09-16T12:54:01.000Z</published>
    <updated>2018-09-30T06:03:25.420Z</updated>
    
    <content type="html"><![CDATA[<p>《失明症漫记》是诺贝尔文学奖得主若泽·萨拉马戈代表作，入选诺贝尔学院『所有时代百部最佳文学作品』。</p><a id="more"></a><p>书中讲述了有一种失明症的疾病开始在人群中蔓延，得病的人眼前全部是白色的，什么都看不见。第一批的得病的人以及和患者有过接触的人被控制在一个废弃的精神病院里，后来整个精神病院只有一位医生的妻子还能看见。很快精神病院变为人间地狱，在失明、恐惧、饥饿面前，人性磨灭，兽性凸显，甚至病房内的男性必须用他们妻子、情人的身体来换取苟活的食物。世界也全部沦为地狱，像丧尸中的世界——人们为了食物在街上晃荡，连宠物狗都恢复了兽性，开始吃人。。。最后，当光明重回人间，面对这个充满蛮夷混乱的世界，人们在想些什么？</p><blockquote><p>如果你能看，就要看见，如果你能看见，就要仔细观察。——《箴言书》 </p><p>我们都是这样的混合物，一般是冷漠无情，一般是卑鄙邪恶。</p><p>那人的眼睛似乎正常，虹膜清晰明亮，巩膜像瓷器一样洁白致密。</p><p>现在，他伸出双手在面前神经质地舞动，仿佛正在他刚才所说的牛奶海里游泳。就在他已经张开嘴要高喊救命的时候，就在这最后一刻</p><p>那天夜里，盲人梦见自己失明了。</p><p>如果一个被怀疑受感染者失明了，当然，这迟早会发生，那么请部长先生相信，其他人，就是那些还能看得见的人，马上就会把他赶出去；</p><p>对我们来说，名字有什么用呢，有什么用呢，没有哪一条狗是通过人们给起的名字认出和认识另一条狗的，它们通过气味确认自己和其他狗的身份。在这里，我们是另一种狗，通过吠叫和说话声相互认识</p><p>我们所有人都软弱的时候，重要的是我们还会哭，在许多情况下哭是一种获救的方式，有的时候我们不哭就非死不可。</p><p>如果我们不能完全像正常人一样生活，那么至少应当尽一切努力不要像动物一样生活。</p><p>我们被迫生活在这个地狱里，在我们自己打造的这个地狱中的地狱里，如果说廉耻二字还有一点意义的话，应当感谢那个有胆量进入鬣狗的巢穴去杀死鬣狗的人。</p><p>不论你是何人，你说得对，总有人用恬不知耻填饱肚子。但我们呢，我们已经一无所有，只剩下这最后一点当之有愧的尊严，至少我们还能为享有本属于我们的权利而斗争。（这个时候的眼罩老人太帅！）</p><p>“政府还在吗？”<br>“我不相信还有什么政府，即使有的话也是个想统治盲人的盲人政府，也就是说，虚无企图把虚无组织起来。</p><p>他早已失明，现在依然失明，只是走到厨房门口，听见了她们在阳台上说的话，听见了笑声雨声和水声，呼吸到带肥皂味的空气，然后回到了他的沙发上，正在想这世界上还存在生活，正在问这生活是否还有他的一份。</p><p>即使灾难降临在所有人头上的时候，总是有一些人比另一些人生活得更糟。</p><p>我想我们没有失明，我想我们现在是盲人；能看得见的盲人；能看但又看不见的盲人。</p><p>萨拉马戈希望在他的墓碑上刻上这样的墓志铭：这里安睡着一个愤怒的人。<br>之所以愤怒，因为他认为，‘虽然我生活得很好，但这个世界并不好’‘残忍是人类的发明’‘当权者专横，将一部分人排斥在社会之外’。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;《失明症漫记》是诺贝尔文学奖得主若泽·萨拉马戈代表作，入选诺贝尔学院『所有时代百部最佳文学作品』。&lt;/p&gt;
    
    </summary>
    
      <category term="读书" scheme="http://chuanqiang.github.io/categories/%E8%AF%BB%E4%B9%A6/"/>
    
    
      <category term="书摘" scheme="http://chuanqiang.github.io/tags/%E4%B9%A6%E6%91%98/"/>
    
      <category term="小说" scheme="http://chuanqiang.github.io/tags/%E5%B0%8F%E8%AF%B4/"/>
    
  </entry>
  
  <entry>
    <title>Java汉字转拼音pinyin4j用法</title>
    <link href="http://chuanqiang.github.io/2018/09/04/Java%E6%B1%89%E5%AD%97%E8%BD%AC%E6%8B%BC%E9%9F%B3pinyin4j%E7%94%A8%E6%B3%95/"/>
    <id>http://chuanqiang.github.io/2018/09/04/Java汉字转拼音pinyin4j用法/</id>
    <published>2018-09-04T08:19:01.000Z</published>
    <updated>2018-09-04T08:19:49.722Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、工具介绍"><a href="#一、工具介绍" class="headerlink" title="一、工具介绍"></a>一、工具介绍</h2><p>pinyin4j 是一个支持将简体和繁体中文转换到成拼音的Java开源类库；</p><a id="more"></a><h4 id="1-功能"><a href="#1-功能" class="headerlink" title="1. 功能"></a>1. 功能</h4><ul><li>支持同一汉字有多个发音</li><li>还支持拼音的格式化输出，比如第几声之类的，</li><li>同时支持简体中文、繁体中文转换为拼音…使用起来也非常简单。下面是其官方网址，其中提供了下载：<ul><li>pinyin4j的<a href="http://sourceforge.net/projects/pinyin4j/files/" target="_blank" rel="external">官方下载地址</a></li></ul></li></ul><h4 id="2-目录结构及说明"><a href="#2-目录结构及说明" class="headerlink" title="2. 目录结构及说明"></a>2. 目录结构及说明</h4><ul><li>doc : pinyin4j的api文档</li><li>lib : pinyin4j的jar包</li><li>src: pinyin4j的源代码</li><li>CHANGELOG.txt : pinyin4j的版本更新日志</li><li>COPYING.txt : LICENSE说明</li><li>README.txt : pinyin4j的概要介绍</li></ul><h4 id="3-原理"><a href="#3-原理" class="headerlink" title="3. 原理"></a>3. 原理</h4><p>pinyin4j使用了一个.txt的文本文件（uicode_to_hanyu_pinyin.txt）用来存储汉字unicode编码与拼音的对应关系，通过读取该配置文件达到转换的目的。该属性文件存储信息的基本格式如下：89E3 (jie3,jie4,xie4)   //(对应汉字”解”)89E3 是汉字对应的unicode编码的16进制数，(jie3,jie4,xie4)是该汉字对应的三种读音(在汉语里有多音字)，说明pinyin4j支持多音字的处理pinyin4j的处理过程是这样的：根据String的toCharArray方法得到每个字符（得到”解”字的unicode编码，实际上是35299，由于java中char和String都是unicode编码的可以直接转为int型的编码数据35299），然后利用Integer.toHexString(c1).toUpperCase()将其转换成16进制数[也就是89E3]，通过读取配置文件得到“解”字的拼音(jie3,jie4,xie4)，那么这里有三个拼音，pinyin4j的默认取值为第一个，也就是jie3[表示读jie，声调是三声]</p><h2 id="二、pinyin4J-使用"><a href="#二、pinyin4J-使用" class="headerlink" title="二、pinyin4J 使用"></a>二、pinyin4J 使用</h2><p>pinyin4j 提供的工具类为<code>PinyinHelper</code>,里边提供了静态方法</p><ul><li><code>toHanyuPinyinString()</code>(过时)</li><li><code>toHanyuPinyinStringArray()</code></li></ul><p>pinyin4j 中有四个辅助类分别是：</p><ul><li>HanyuPinyinCaseType</li><li>HanyuPinyinToneType</li><li>HanyuPinyinVCharType</li><li>HanyuPinyinOutputFormat</li></ul><p>具体功能和用法见一下代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">HanyuPinyinOutputFormat defaultFormat = <span class="keyword">new</span> HanyuPinyinOutputFormat();</div><div class="line"><span class="comment">// 控制大小写</span></div><div class="line"><span class="comment">// UPPERCASE：大写  (ZHONG)</span></div><div class="line"><span class="comment">// LOWERCASE：小写  (zhong)</span></div><div class="line">defaultFormat.setCaseType(HanyuPinyinCaseType.UPPERCASE);</div><div class="line"><span class="comment">// WITHOUT_TONE：无音标  (zhong)</span></div><div class="line"><span class="comment">// WITH_TONE_NUMBER：1-4数字表示英标  (zhong4)</span></div><div class="line"><span class="comment">// WITH_TONE_MARK：直接用音标符（必须WITH_U_UNICODE否则异常）  (zhòng)</span></div><div class="line">defaultFormat.setToneType(HanyuPinyinToneType.WITH_TONE_NUMBER);</div><div class="line"><span class="comment">// WITH_V：用v表示ü  (nv)</span></div><div class="line"><span class="comment">// WITH_U_AND_COLON：用"u:"表示ü  (nu:)</span></div><div class="line"><span class="comment">// WITH_U_UNICODE：直接用ü (nü)</span></div><div class="line">defaultFormat.setVCharType(HanyuPinyinVCharType.WITH_U_UNICODE);</div><div class="line"><span class="comment">// oHanyuPinyinStringArray如果传入的字符不是汉字不能转换成拼音，那么会直接返回null。</span></div><div class="line">String[] pinyin = PinyinHelper.toHanyuPinyinStringArray(<span class="string">'重'</span>, defaultFormat);</div><div class="line"><span class="keyword">for</span>(String str: pinyin)&#123;</div><div class="line">System.out.println(str);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>结果：</p><blockquote><p>ZHONG4 </p><p>CHONG2</p></blockquote><h4 id="其他工具类"><a href="#其他工具类" class="headerlink" title="其他工具类"></a>其他工具类</h4><blockquote><p>获取获得汉语拼音首字母</p><p>将字符串中的中文转化为拼音,英文字符不变<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 获得汉语拼音首字母</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * <span class="doctag">@param</span> chines</span></div><div class="line"><span class="comment"> *            汉字</span></div><div class="line"><span class="comment"> * <span class="doctag">@return</span></span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getAlpha</span><span class="params">(String chines)</span> </span>&#123;</div><div class="line">String pinyinName = <span class="string">""</span>;</div><div class="line"><span class="keyword">char</span>[] nameChar = chines.toCharArray();</div><div class="line">HanyuPinyinOutputFormat defaultFormat = <span class="keyword">new</span> HanyuPinyinOutputFormat();</div><div class="line">defaultFormat.setCaseType(HanyuPinyinCaseType.UPPERCASE);</div><div class="line">defaultFormat.setToneType(HanyuPinyinToneType.WITHOUT_TONE);</div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nameChar.length; i++) &#123;</div><div class="line"><span class="keyword">if</span> (nameChar[i] &gt; <span class="number">128</span>) &#123;</div><div class="line"><span class="keyword">try</span> &#123;</div><div class="line">pinyinName += PinyinHelper.toHanyuPinyinStringArray(</div><div class="line">nameChar[i], defaultFormat)[<span class="number">0</span>].charAt(<span class="number">0</span>);</div><div class="line">&#125; <span class="keyword">catch</span> (BadHanyuPinyinOutputFormatCombination e) &#123;</div><div class="line">e.printStackTrace();</div><div class="line">&#125;</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">pinyinName += nameChar[i];</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> pinyinName;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 将字符串中的中文转化为拼音,英文字符不变</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * <span class="doctag">@param</span> inputString</span></div><div class="line"><span class="comment"> *            汉字</span></div><div class="line"><span class="comment"> * <span class="doctag">@return</span></span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getPingYin</span><span class="params">(String inputString)</span> </span>&#123;</div><div class="line">HanyuPinyinOutputFormat format = <span class="keyword">new</span> HanyuPinyinOutputFormat();</div><div class="line">format.setCaseType(HanyuPinyinCaseType.LOWERCASE);</div><div class="line">format.setToneType(HanyuPinyinToneType.WITHOUT_TONE);</div><div class="line">format.setVCharType(HanyuPinyinVCharType.WITH_V);</div><div class="line">String output = <span class="string">""</span>;</div><div class="line"><span class="keyword">if</span> (inputString != <span class="keyword">null</span> &amp;&amp; inputString.length() &gt; <span class="number">0</span></div><div class="line">&amp;&amp; !<span class="string">"null"</span>.equals(inputString)) &#123;</div><div class="line"><span class="keyword">char</span>[] input = inputString.trim().toCharArray();</div><div class="line"><span class="keyword">try</span> &#123;</div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; input.length; i++) &#123;</div><div class="line"><span class="keyword">if</span> (java.lang.Character.toString(input[i]).matches(</div><div class="line"><span class="string">"[\\u4E00-\\u9FA5]+"</span>)) &#123;</div><div class="line">String[] temp = PinyinHelper.toHanyuPinyinStringArray(</div><div class="line">input[i], format);</div><div class="line">output += temp[<span class="number">0</span>];</div><div class="line">&#125; <span class="keyword">else</span></div><div class="line">output += java.lang.Character.toString(input[i]);</div><div class="line">&#125;</div><div class="line">&#125; <span class="keyword">catch</span> (BadHanyuPinyinOutputFormatCombination e) &#123;</div><div class="line">e.printStackTrace();</div><div class="line">&#125;</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line"><span class="keyword">return</span> <span class="string">"*"</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> output;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 汉字转换为汉语拼音首字母，英文字符不变</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * <span class="doctag">@param</span> chines</span></div><div class="line"><span class="comment"> *            汉字</span></div><div class="line"><span class="comment"> * <span class="doctag">@return</span> 拼音</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">converterToFirstSpell</span><span class="params">(String chines)</span> </span>&#123;</div><div class="line">String pinyinName = <span class="string">""</span>;</div><div class="line"><span class="keyword">char</span>[] nameChar = chines.toCharArray();</div><div class="line">HanyuPinyinOutputFormat defaultFormat = <span class="keyword">new</span> HanyuPinyinOutputFormat();</div><div class="line">defaultFormat.setCaseType(HanyuPinyinCaseType.UPPERCASE);</div><div class="line">defaultFormat.setToneType(HanyuPinyinToneType.WITHOUT_TONE);</div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nameChar.length; i++) &#123;</div><div class="line"><span class="keyword">if</span> (nameChar[i] &gt; <span class="number">128</span>) &#123;</div><div class="line"><span class="keyword">try</span> &#123;</div><div class="line">pinyinName += PinyinHelper.toHanyuPinyinStringArray(</div><div class="line">nameChar[i], defaultFormat)[<span class="number">0</span>].charAt(<span class="number">0</span>);</div><div class="line">&#125; <span class="keyword">catch</span> (BadHanyuPinyinOutputFormatCombination e) &#123;</div><div class="line">e.printStackTrace();</div><div class="line">&#125;</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">pinyinName += nameChar[i];</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> pinyinName;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、工具介绍&quot;&gt;&lt;a href=&quot;#一、工具介绍&quot; class=&quot;headerlink&quot; title=&quot;一、工具介绍&quot;&gt;&lt;/a&gt;一、工具介绍&lt;/h2&gt;&lt;p&gt;pinyin4j 是一个支持将简体和繁体中文转换到成拼音的Java开源类库；&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://chuanqiang.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="java" scheme="http://chuanqiang.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>时区计算</title>
    <link href="http://chuanqiang.github.io/2018/09/04/%E6%97%B6%E5%8C%BA%E8%AE%A1%E7%AE%97/"/>
    <id>http://chuanqiang.github.io/2018/09/04/时区计算/</id>
    <published>2018-09-04T08:18:50.000Z</published>
    <updated>2018-09-04T08:19:16.756Z</updated>
    
    <content type="html"><![CDATA[<p>本文讲解了在 JS 和 JAVA 中关于时区的计算方法。</p><a id="more"></a><h2 id="一、-JS"><a href="#一、-JS" class="headerlink" title="一、 JS"></a>一、 JS</h2><h3 id="两个函数"><a href="#两个函数" class="headerlink" title="两个函数"></a>两个函数</h3><ol><li>得到标准时区的时间</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//得到标准时区的时间</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getLocalTime</span>(<span class="params">i</span>) </span>&#123;</div><div class="line">    <span class="comment">//参数i为时区值数字，比如北京为东八区则输入8,西5输入-5,现默认东八区北京时间</span></div><div class="line">    <span class="keyword">var</span> i=i?<span class="built_in">parseFloat</span>(i):<span class="number">8</span>; </div><div class="line"> </div><div class="line">    <span class="comment">//得到本地时间</span></div><div class="line">    <span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">Date</span>();</div><div class="line"> </div><div class="line">    <span class="comment">//得到1970年一月一日到现在的秒数</span></div><div class="line">    <span class="keyword">var</span> local = d.getTime();</div><div class="line"> </div><div class="line">    <span class="comment">//本地时间与GMT时间的时间偏移差</span></div><div class="line">    <span class="keyword">var</span> offset = d.getTimezoneOffset() * <span class="number">60000</span>;</div><div class="line"> </div><div class="line">    <span class="comment">//得到现在的格林尼治时间</span></div><div class="line">    <span class="keyword">var</span> utcTime = local + offset;</div><div class="line"> </div><div class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Date</span>(utcTime + <span class="number">3600000</span> * i);</div><div class="line">&#125;</div></pre></td></tr></table></figure><ol><li>转换服务器时区时间</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//转换服务器时区时间</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">formatTime</span>(<span class="params">t,utc</span>)</span>&#123;</div><div class="line">    <span class="comment">//t传入的时间参数,utc传入的时区参数</span></div><div class="line">    <span class="keyword">if</span>(!t) <span class="keyword">return</span>;</div><div class="line"> </div><div class="line">    <span class="comment">//获取本地时间</span></div><div class="line">    <span class="keyword">var</span> d=<span class="keyword">new</span> <span class="built_in">Date</span>();</div><div class="line"> </div><div class="line">    <span class="comment">//获得本地时区</span></div><div class="line">    utc=utc?<span class="built_in">parseFloat</span>(utc):d.getTimezoneOffset()/<span class="number">60</span>;</div><div class="line"> </div><div class="line">    <span class="comment">//格式化传入时间</span></div><div class="line">    <span class="keyword">var</span> time=<span class="keyword">new</span> <span class="built_in">Date</span>(t);</div><div class="line"> </div><div class="line">    <span class="comment">//转换传入时间为本地时间（默认传入服务器时间为东八区时间）</span></div><div class="line">    time.setHours(time.getHours()+(utc<span class="number">-8</span>));</div><div class="line"> </div><div class="line">    <span class="comment">//输出时间</span></div><div class="line">    <span class="keyword">var</span> yy=time.getFullYear();</div><div class="line">    <span class="keyword">var</span> MM=time.getMonth()+<span class="number">1</span>;</div><div class="line">    MM=MM&lt;<span class="number">10</span>?<span class="string">'0'</span>+MM:MM;</div><div class="line">    <span class="keyword">var</span> dd=time.getDate();</div><div class="line">    dd=dd&lt;<span class="number">10</span>?<span class="string">'0'</span>+dd:dd;</div><div class="line">    <span class="keyword">var</span> hh=time.getHours();</div><div class="line">    hh=hh&lt;<span class="number">10</span>?<span class="string">'0'</span>+hh:hh;</div><div class="line">    <span class="keyword">var</span> mm=time.getMinutes();</div><div class="line">    mm=mm&lt;<span class="number">10</span>?<span class="string">'0'</span>+mm:mm;</div><div class="line">    <span class="keyword">var</span> ss=time.getSeconds();</div><div class="line">    ss=ss&lt;<span class="number">10</span>?<span class="string">'0'</span>+ss:ss;</div><div class="line">    <span class="keyword">var</span> date=yy+<span class="string">'-'</span>+MM+<span class="string">'-'</span>+dd+<span class="string">' '</span>+hh+<span class="string">':'</span>+mm+<span class="string">':'</span>+ss;</div><div class="line"> </div><div class="line">    <span class="keyword">return</span> date;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="利用Date对象得到本地时间"><a href="#利用Date对象得到本地时间" class="headerlink" title="利用Date对象得到本地时间"></a>利用Date对象得到本地时间</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">d = <span class="keyword">new</span> <span class="built_in">Date</span>();</div><div class="line">localTime = d.getTime(); <span class="comment">//通过调用Data()对象的getTime()方法，即可显示1970年1月1日后到此时时间之间的毫秒数。</span></div></pre></td></tr></table></figure><p>接下来，通过Data()对象的getTimezoneOffset()方法来找出当地时间偏移值。在缺省情况下，此方法以分钟显示时区偏移值结果，因此在早先的计算中要将此值转换成毫秒。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">localOffset = d.getTimezoneOffset() * <span class="number">3600000</span>;</div></pre></td></tr></table></figure><p>然后将当前时间与时区偏移量相加，得到国际标准时间（用毫秒表示的，因为后面还需要计算，所以这里不做转换），然后与你想要知道的时区的偏移量再进行相加，得到那个时间的时间，然后再利用Date对象将其转换为时间字符串。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">utc = localTime + localOffset; <span class="comment">//得到国际标准时间  </span></div><div class="line">offset = <span class="number">5.5</span>;  <span class="comment">// 已知的时区</span></div><div class="line">calctime = utc + (<span class="number">3600000</span>*offset);  </div><div class="line">nd = <span class="keyword">new</span> <span class="built_in">Date</span>(calctime);  </div><div class="line"><span class="built_in">document</span>.write(<span class="string">'指定时区时间是：'</span> + nd.toLocalString());</div></pre></td></tr></table></figure></p><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p><strong>场景描述</strong>：根据国外用户所在的时区，获取数据库（东八区录入）在当地所应展示的时间</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">getLocalTime</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">Date</span>();<span class="comment">//获得当前时间</span></div><div class="line">    <span class="keyword">var</span> gmtHours =-( d.getTimezoneOffset()/<span class="number">60</span>);<span class="comment">//根据当前时间得到你是哪个时区的</span></div><div class="line">    <span class="keyword">var</span> date = <span class="string">'2014-08-12 09:25:24'</span>;<span class="comment">//上课时间</span></div><div class="line">    date=date.replace(<span class="regexp">/-/g</span>,<span class="string">':'</span>).replace(<span class="string">' '</span>,<span class="string">':'</span>);</div><div class="line">    date=date.split(<span class="string">':'</span>);</div><div class="line">    <span class="keyword">var</span> time1 = <span class="keyword">new</span> <span class="built_in">Date</span>(date[<span class="number">0</span>],(date[<span class="number">1</span>]<span class="number">-1</span>),date[<span class="number">2</span>],date[<span class="number">3</span>],date[<span class="number">4</span>],date[<span class="number">5</span>]);</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">"时区："</span> + gmtHours);</div><div class="line">    <span class="comment">//得到1970年一月一日到现在的秒数</span></div><div class="line">    <span class="keyword">var</span> len = time1.getTime();</div><div class="line">    <span class="comment">//本地时间与GMT时间的时间偏移差</span></div><div class="line">    <span class="keyword">var</span> offset = <span class="number">-8</span> * <span class="number">3600000</span>; <span class="comment">// 东八区</span></div><div class="line">    <span class="comment">//得到现在的格林尼治时间 </span></div><div class="line">    <span class="keyword">var</span> utcTime = len + offset;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Date</span>(utcTime + <span class="number">3600000</span> *gmtHours );</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="二、Java"><a href="#二、Java" class="headerlink" title="二、Java"></a>二、Java</h2><h3 id="1-Date中保存的是什么"><a href="#1-Date中保存的是什么" class="headerlink" title="1.Date中保存的是什么"></a>1.Date中保存的是什么</h3><p>在java中，只要我们执行<br><code>Date date = new Date();</code><br>就可以得到当前时间。如：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Date date = <span class="keyword">new</span> Date();  </div><div class="line">System.out.println(date);</div></pre></td></tr></table></figure></p><p>输出结果是：<br><code>Thu Aug 24 10:15:29 CST 2017</code></p><p>也就是我执行上述代码的时刻：2017年8月24日10点15分29秒。是不是Date对象里存了年月日时分秒呢？不是的，Date对象里存的只是一个long型的变量，其值为自1970年1月1日0点至Date对象所记录时刻经过的毫秒数，调用Date对象getTime()方法就可以返回这个毫秒数，如下代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Date date = new Date();  </div><div class="line">System.out.println(date + &quot;, &quot; + date.getTime());</div></pre></td></tr></table></figure></p><p>输出如下：<br><code>Thu Aug 24 10:48:05 CST 2017, 1503542885955</code><br>即上述程序执行的时刻是2017年8月24日10点48分05秒，该时刻距离1970年1月1日0点经过了1503542885955毫秒。反过来说，输出的年月日时分秒其实是根据这个毫秒数来反算出来的。</p><h3 id="2-时区"><a href="#2-时区" class="headerlink" title="2.时区"></a>2.时区</h3><p>全球分为24个时区，相邻时区时间相差1个小时。比如北京处于东八时区，东京处于东九时区，北京时间比东京时间晚1个小时，而英国伦敦时间比北京晚7个小时（英国采用夏令时时，8月英国处于夏令时）。比如此刻北京时间是2017年8月24日11:17:10，则东京时间是2017年8月24日12:17:10，伦敦时间是2017年8月24日4:17:10。</p><p>既然Date里存放的是当前时刻距1970年1月1日0点时刻的毫秒数，如果此刻在伦敦、北京、东京有三个程序员同时执行如下语句：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Date date = new Date();</div></pre></td></tr></table></figure></p><p>那这三个date对象里存的毫秒数是相同的吗？还是北京的比东京的小3600000（北京时间比东京时间晚1小时，1小时为3600秒即3600000毫秒）？答案是，这3个Date里的毫秒数是完全一样的。确切的说，Date对象里存的是自格林威治时间（ GMT）1970年1月1日0点至Date对象所表示时刻所经过的毫秒数。所以，如果某一时刻遍布于世界各地的程序员同时执行new<br> Date语句，这些Date对象所存的毫秒数是完全一样的。也就是说，Date里存放的毫秒数是与时区无关的。</p><p>继续上述例子，如果上述3个程序员调用那一刻的时间是2017年8月24日11:17:10，他们继续调用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">System.out.println(date);</div></pre></td></tr></table></figure></p><p>那么北京的程序员将会打印出2017年8月24日11:17:10，而东京的程序员会打印出2017年8月24日12:17:10，伦敦的程序员会打印出2017年8月24日4:17:10。既然Date对象只存了一个毫秒数，为什么这3个毫秒数完全相同的Date对象，可以打印出不同的时间呢？这是因为Sysytem.out.println函数在打印时间时，会取操作系统当前所设置的时区，然后根据这个时区将同毫秒数解释成该时区的时间。当然我们也可以手动设置时区，以将同一个Date对象按不同的时区输出。可以做如下实验验证：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">Date date = <span class="keyword">new</span> Date(<span class="number">1503544630000L</span>);  <span class="comment">// 对应的北京时间是2017-08-24 11:17:10  </span></div><div class="line">  </div><div class="line">SimpleDateFormat bjSdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);     <span class="comment">// 北京  </span></div><div class="line">bjSdf.setTimeZone(TimeZone.getTimeZone(<span class="string">"Asia/Shanghai"</span>));  <span class="comment">// 设置北京时区  </span></div><div class="line">  </div><div class="line">SimpleDateFormat tokyoSdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);  <span class="comment">// 东京  </span></div><div class="line">tokyoSdf.setTimeZone(TimeZone.getTimeZone(<span class="string">"Asia/Tokyo"</span>));  <span class="comment">// 设置东京时区  </span></div><div class="line">  </div><div class="line">SimpleDateFormat londonSdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>); <span class="comment">// 伦敦  </span></div><div class="line">londonSdf.setTimeZone(TimeZone.getTimeZone(<span class="string">"Europe/London"</span>));  <span class="comment">// 设置伦敦时区  </span></div><div class="line">  </div><div class="line">System.out.println(<span class="string">"毫秒数:"</span> + date.getTime() + <span class="string">", 北京时间:"</span> + bjSdf.format(date));  </div><div class="line">System.out.println(<span class="string">"毫秒数:"</span> + date.getTime() + <span class="string">", 东京时间:"</span> + tokyoSdf.format(date));  </div><div class="line">System.out.println(<span class="string">"毫秒数:"</span> + date.getTime() + <span class="string">", 伦敦时间:"</span> + londonSdf.format(date));</div></pre></td></tr></table></figure></p><p>输出为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">毫秒数:1503544630000, 北京时间:2017-08-24 11:17:10</div><div class="line">毫秒数:1503544630000, 东京时间:2017-08-24 12:17:10</div><div class="line">毫秒数:1503544630000, 伦敦时间:2017-08-24 04:17:10</div></pre></td></tr></table></figure></p><p>可以看出，同一个Date对象，按不同的时间来格式化，将得到不同时区的时间。由此可见，Date对象里保存的毫秒数和具体输出的时间（即年月日时分秒）是模型和视图的关系，而时区（即Timezone)则决定了将同模型展示成什么样的视图。</p><h3 id="3-从字符串中读取时间"><a href="#3-从字符串中读取时间" class="headerlink" title="3.从字符串中读取时间"></a>3.从字符串中读取时间</h3><p>有时我们会遇到从一个字符串中读取时间的要求，即从字符串中解析时间并得到一个Date对象，比如将”2017-8-24<br> 11:17:10”解析为一个Date对象。现在问题来了，这个时间到底指的是北京时间的2017年8月24日11:17:10，还是东京时间的2017年8月24日11:17:10？如果指的是北京时间，那么这个时间对应的东京时间2017年8月24日12:17:10；如果指的是东京时间，那么这个时间对应的北京时间就是2017年8月24日10:17:10。因此，只说年月日时分秒而不说是哪个时区的，是有歧义的，没有歧义的做法是，给出一个时间字符串，同时指明这是哪个时区的时间。<br>从字符串中解析时间的正确作法是：指定时区来解析。示例如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">String timeStr = <span class="string">"2017-8-24 11:17:10"</span>; <span class="comment">// 字面时间  </span></div><div class="line">SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);  </div><div class="line">sdf.setTimeZone(TimeZone.getTimeZone(<span class="string">"Asia/Shanghai"</span>)); <span class="comment">// 设置北京时区  </span></div><div class="line">Date d = sdf.parse(timeStr);  </div><div class="line">System.out.println(sdf.format(d) + <span class="string">", "</span> + d.getTime());</div></pre></td></tr></table></figure></p><p>输出为：<br><code>2017-08-24 11:17:10, 1503544630000</code>,</p><p>将一个时间字符串按不同时区来解释，得到的Date对象的值是不同的。验证如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">String timeStr = <span class="string">"2017-8-24 11:17:10"</span>; <span class="comment">// 字面时间  </span></div><div class="line">SimpleDateFormat bjSdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);  </div><div class="line">bjSdf.setTimeZone(TimeZone.getTimeZone(<span class="string">"Asia/Shanghai"</span>));  </div><div class="line">Date bjDate = bjSdf.parse(timeStr);  <span class="comment">// 解析  </span></div><div class="line">System.out.println(<span class="string">"字面时间: "</span> + timeStr +<span class="string">",按北京时间来解释:"</span> + bjSdf.format(bjDate) + <span class="string">", "</span> + bjDate.getTime());  </div><div class="line">  </div><div class="line">SimpleDateFormat tokyoSdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);  <span class="comment">// 东京  </span></div><div class="line">tokyoSdf.setTimeZone(TimeZone.getTimeZone(<span class="string">"Asia/Tokyo"</span>));  <span class="comment">// 设置东京时区  </span></div><div class="line">Date tokyoDate = tokyoSdf.parse(timeStr); <span class="comment">// 解析  </span></div><div class="line">System.out.println(<span class="string">"字面时间: "</span> + timeStr +<span class="string">",按东京时间来解释:"</span>  + tokyoSdf.format(tokyoDate) + <span class="string">", "</span> + tokyoDate.getTime());</div></pre></td></tr></table></figure></p><p>输出为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">字面时间: 2017-8-24 11:17:10,按北京时间来解释:2017-08-24 11:17:10, 1503544630000</div><div class="line">字面时间: 2017-8-24 11:17:10,按东京时间来解释:2017-08-24 11:17:10, 1503541030000</div><div class="line">可以看出，对于&quot;2017-8-24 11:17:10&quot;这个字符串，按北京时间来解释得到Date对象的毫秒数是</div><div class="line">1503544630000；而按东京时间来解释得到的毫秒数是1503541030000，前者正好比后者大于3600000毫秒即1个小时，正好是北京时间和东京时间的时差。这很好理解，北京时间2017-08-24 11:17:10对应的毫秒数是1503544630000，而东京时间2017-08-24 11:17:10对应的北京时间其实是2017-08-24 10:17:10（因为北京时间比东京时间晚1个小时），北京时间2017-08-24</div><div class="line"> 10:17:10自然比北京时间2017-08-24 11:17:10少3600000毫秒。</div></pre></td></tr></table></figure></p><h3 id="4-将字符串表示的时间转换成另一个时区的时间字符串"><a href="#4-将字符串表示的时间转换成另一个时区的时间字符串" class="headerlink" title="4.将字符串表示的时间转换成另一个时区的时间字符串"></a>4.将字符串表示的时间转换成另一个时区的时间字符串</h3><p>综合以上分析，如果给定一个时间字符串，并告诉你这是某个时区的时间，要将它转换为另一个时区的时间并输出，正确的做法是：</p><ol><li>将字符串按原时区转换成Date对象；</li><li>将Date对象格式化成目标时区的时间。</li></ol><p>比如，将北京时间”2017-8-24 11:17:10”输出成东京时间，代码为：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">String timeStr = <span class="string">"2017-8-24 11:17:10"</span>; <span class="comment">// 字面时间  </span></div><div class="line">SimpleDateFormat bjSdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);  </div><div class="line">bjSdf.setTimeZone(TimeZone.getTimeZone(<span class="string">"Asia/Shanghai"</span>));  </div><div class="line">Date date = bjSdf.parse(timeStr);  <span class="comment">// 将字符串时间按北京时间解析成Date对象  </span></div><div class="line">  </div><div class="line">SimpleDateFormat tokyoSdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);  <span class="comment">// 东京  </span></div><div class="line">tokyoSdf.setTimeZone(TimeZone.getTimeZone(<span class="string">"Asia/Tokyo"</span>));  <span class="comment">// 设置东京时区  </span></div><div class="line">System.out.println(<span class="string">"北京时间: "</span> + timeStr +<span class="string">"对应的东京时间为:"</span>  + tokyoSdf.format(date));</div></pre></td></tr></table></figure></p><p>输出为：<br><code>北京时间:2017-8-24 11:17:10对应的东京时间为:2017-08-24 12:17:10</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文讲解了在 JS 和 JAVA 中关于时区的计算方法。&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://chuanqiang.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="java" scheme="http://chuanqiang.github.io/tags/java/"/>
    
      <category term="时区" scheme="http://chuanqiang.github.io/tags/%E6%97%B6%E5%8C%BA/"/>
    
  </entry>
  
  <entry>
    <title>Spring AOP 详解和实例</title>
    <link href="http://chuanqiang.github.io/2018/09/04/Spring%20AOP%20%E8%AF%A6%E8%A7%A3%E5%92%8C%E5%AE%9E%E4%BE%8B/"/>
    <id>http://chuanqiang.github.io/2018/09/04/Spring AOP 详解和实例/</id>
    <published>2018-09-04T08:10:10.000Z</published>
    <updated>2018-09-04T08:30:19.722Z</updated>
    
    <content type="html"><![CDATA[<p>本文重要讲解了 AOP 的概念和原理，并提供了四个实例来帮助理解。<br><a id="more"></a></p><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>面向切面编程(也叫面向方面编程)：Aspect Oriented Programming(AOP)，是软件开发中的一个热点，也是Spring框架中的一个重要内容。利用AOP可以对业务逻辑的各个部分进行隔离，从而使得业务逻辑各部分之间的耦合度降低，提高程序的可重用性，同时提高了开发的效率。</p><p>主要的功能是：日志记录，性能统计，安全控制，事务处理，异常处理等等。</p><p>主要的意图是：将日志记录，性能统计，安全控制，事务处理，异常处理等代码从业务逻辑代码中划分出来，通过对这些行为的分离，我们希望可以将它们独立到非指导业务逻辑的方法中，进而改变这些行为的时候不影响业务逻辑的代码。</p><p><img src="http://oeckzejn4.bkt.clouddn.com/20180904153604496563715.png" alt=""></p><p>我们要做的，是定义一个切面，在切面的纵向定义处理方法，处理完成后，回到横向业务流（静态代理模式实现 proxy）。</p><p>因为Java 是一门静态的强类型语言， 代码一旦写好， 编译成 <code>java class</code> 以后 ，可以在运行时通过反射（Reflection）来查看类的信息， 但是对类进行修改的话很困难。有如下方式来实现：</p><ol><li>在编译的时候， 根据AOP的配置信息，悄悄的把日志，安全，事务等“切面”代码 和业务类编译到一起去。【预编译】</li><li>在运行期，业务类加载以后， 通过Java动态代理技术为业务类生产一个代理类， 把“切面”代码放到代理类中，  Java 动态代理要求业务类需要实现接口才行。【运行期动态代理】</li><li>在运行期， 业务类加载以后， 动态的使用字节码构建一个业务类的子类，将“切面”逻辑加入到子类当中去, CGLIB就是这么做的。</li></ol><p>spring 采用（1）+（2）方式</p><h2 id="实现方式"><a href="#实现方式" class="headerlink" title="实现方式"></a>实现方式</h2><h3 id="1-实现-AOP-接口"><a href="#1-实现-AOP-接口" class="headerlink" title="1. 实现 AOP 接口"></a>1. 实现 AOP 接口</h3><h3 id="2-通过-xml配置方式"><a href="#2-通过-xml配置方式" class="headerlink" title="2. 通过.xml配置方式"></a>2. 通过<code>.xml</code>配置方式</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"personDao"</span> <span class="attr">class</span>=<span class="string">"com.itheima12.spring.aop.xml.transaction.PersonDaoImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"transaction"</span> <span class="attr">class</span>=<span class="string">"com.itheima12.spring.aop.xml.transaction.Transaction"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></div><div class="line">      <span class="comment">&lt;!-- 切入点表达式  确定目标类 --&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">expression="execution(*</span> <span class="attr">com.itheima12.spring.aop.xml.transaction.PersonDaoImpl.</span>*(<span class="attr">..</span>))"  <span class="attr">id</span>=<span class="string">"perform"</span>/&gt;</span></div><div class="line">      <span class="comment">&lt;!-- ref指向的对象就是切面 --&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">"transaction"</span>&gt;</span></div><div class="line">          <span class="comment">&lt;!-- </span></div><div class="line"><span class="comment">              前置通知</span></div><div class="line"><span class="comment">                 1、在目标方法执行之前</span></div><div class="line"><span class="comment">                 2、获取不到目标方法的返回值</span></div><div class="line"><span class="comment">           --&gt;</span></div><div class="line">          <span class="comment">&lt;!-- </span></div><div class="line"><span class="comment">              &lt;aop:before method="beginTransaction" pointcut-ref="perform"/&gt;</span></div><div class="line"><span class="comment">           --&gt;</span></div><div class="line">          <span class="comment">&lt;!-- </span></div><div class="line"><span class="comment">              后置通知</span></div><div class="line"><span class="comment">                 1、后置通知可以获取到目标方法的返回值</span></div><div class="line"><span class="comment">                 2、当目标方法抛出异常，后置通知将不再执行</span></div><div class="line"><span class="comment">           --&gt;</span></div><div class="line">           <span class="comment">&lt;!-- </span></div><div class="line"><span class="comment">              &lt;aop:after-returning method="commit" pointcut-ref="perform" returning="val"/&gt;</span></div><div class="line"><span class="comment">           --&gt;</span></div><div class="line">          <span class="comment">&lt;!-- </span></div><div class="line"><span class="comment">              最终通知</span></div><div class="line"><span class="comment">                 无论目标方法是否抛出异常都将执行</span></div><div class="line"><span class="comment">           --&gt;</span></div><div class="line">              <span class="tag">&lt;<span class="name">aop:after</span> <span class="attr">method</span>=<span class="string">"finallyMethod"</span> <span class="attr">pointcut-ref</span>=<span class="string">"perform"</span>/&gt;</span></div><div class="line">          <span class="comment">&lt;!-- </span></div><div class="line"><span class="comment">              异常通知（多个异常的处理）这个异常处理是完全独立于系统之外的，脱离业务逻辑</span></div><div class="line"><span class="comment">           --&gt;</span></div><div class="line">              <span class="tag">&lt;<span class="name">aop:after-throwing</span> <span class="attr">method</span>=<span class="string">"throwingMethod"</span> <span class="attr">throwing</span>=<span class="string">"ex"</span> <span class="attr">pointcut-ref</span>=<span class="string">"perform"</span>/&gt;</span></div><div class="line">          <span class="comment">&lt;!-- </span></div><div class="line"><span class="comment">              环绕通知（可以进行权限管理，比如 shiro 底层）</span></div><div class="line"><span class="comment">                      1. 能控制目标方法的执行</span></div><div class="line"><span class="comment">                      2. 前置通知和后置通知能在目标方法的前面和后面加一些代码，但是不能控制目标方法的执行</span></div><div class="line"><span class="comment">           --&gt;</span></div><div class="line">              <span class="tag">&lt;<span class="name">aop:around</span> <span class="attr">method</span>=<span class="string">"aroundMethod"</span> <span class="attr">pointcut-ref</span>=<span class="string">"perform"</span>/&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="一些概念"><a href="#一些概念" class="headerlink" title="一些概念"></a>一些概念</h3><ul><li>切面(aspect)：用来切插业务方法的类。</li><li>连接点(joinpoint)：是切面类和业务类的连接点，其实就是封装了业务方法的一些基本属性，作为通知的参数来解析。</li><li>通知(advice)：在切面类中，声明对业务方法做额外处理的方法。</li><li>切入点(pointcut)：业务类中指定的方法，作为切面切入的点。其实就是指定某个方法作为切面切的地方。</li><li>目标对象(target object)：被代理对象。</li><li>AOP代理(aop proxy)：代理对象。</li><li>通知<ul><li>前置通知(before advice)：在切入点之前执行。</li><li>后置通知(after returning advice)：在切入点执行完成后，执行通知。</li><li>环绕通知(around advice)：包围切入点，调用方法前后完成自定义行为。</li><li>异常通知(after throwing advice)：在切入点抛出异常后，执行通知。　　</li></ul></li></ul><h3 id="切入点表达式"><a href="#切入点表达式" class="headerlink" title="切入点表达式"></a>切入点表达式</h3><p><img src="http://oeckzejn4.bkt.clouddn.com/20180904153604608697869.png" alt="切入点表达式"></p><h3 id="Spring-AOP-的原理："><a href="#Spring-AOP-的原理：" class="headerlink" title="Spring AOP 的原理："></a>Spring AOP 的原理：</h3><ol><li>当spring启动的时候，加载两个bean，对两个bean进行实例化</li><li>当spring容器对配置文件解析到<code>&lt;aop：config&gt;</code>的时候，把切入点表达式解析出来，按照切入点表达式匹配spring容器内的bean。</li><li>如果匹配成功，则为该<code>bean</code>创建对象</li><li>当客户端利用context.getBean获取一个对象时，如果该对象有代理对象，则返回代理对象。如果没有，则返回本身</li></ol><h2 id="应用实例"><a href="#应用实例" class="headerlink" title="应用实例"></a>应用实例</h2><h3 id="1-AOP-权限管理（环绕通知）"><a href="#1-AOP-权限管理（环绕通知）" class="headerlink" title="1. AOP 权限管理（环绕通知）"></a>1. AOP 权限管理（环绕通知）</h3><p>自定义注解<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Target</span>(ElementType.METHOD) <span class="comment">//范围：在方法上</span></div><div class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</div><div class="line"><span class="keyword">public</span> <span class="meta">@interface</span> PrivlegeInfo &#123;</div><div class="line">    <span class="function">String <span class="title">name</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>编写注解解析器<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AnnotationParse</span> </span>&#123;</div><div class="line">    <span class="comment">/*</span></div><div class="line"><span class="comment">     * targetClass  目标类的class形式</span></div><div class="line"><span class="comment">     * methodName  在客户端调用哪个方法，methodName就代表哪个方法</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">parse</span><span class="params">(Class targetClass,String methodName)</span> <span class="keyword">throws</span> Exception</span>&#123;</div><div class="line">        String methodAccess = <span class="string">""</span>;</div><div class="line">        <span class="comment">/**</span></div><div class="line"><span class="comment">         * 该方法没有参数</span></div><div class="line"><span class="comment">         */</span></div><div class="line">        Method method = targetClass.getMethod(methodName);</div><div class="line">        <span class="comment">//判断方法上面是否存在PrivilegeInfo注解</span></div><div class="line">        <span class="keyword">if</span>(method.isAnnotationPresent(PrivlegeInfo.class))&#123;</div><div class="line">            <span class="comment">//得到方法上面的注解</span></div><div class="line">            PrivlegeInfo privlegeInfo = method.getAnnotation(PrivlegeInfo.class);</div><div class="line">            methodAccess = privlegeInfo.name();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> methodAccess;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>service方法<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PersonServiceImpl</span> <span class="keyword">implements</span> <span class="title">PersonService</span></span>&#123;</div><div class="line">    <span class="meta">@PrivlegeInfo</span>(name=<span class="string">"savePerson"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">savePerson</span><span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"save person"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@PrivlegeInfo</span>(name=<span class="string">"updatePerson"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updatePerson</span><span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"update person"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>用户权限的切面类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PrivilegeAspect</span> </span>&#123;</div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 用户拥有的权限</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="keyword">private</span> List&lt;Privilege&gt; privileges = <span class="keyword">new</span> ArrayList&lt;Privilege&gt;();</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> List&lt;Privilege&gt; <span class="title">getPrivileges</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> privileges;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPrivileges</span><span class="params">(List&lt;Privilege&gt; privileges)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.privileges = privileges;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">isAccessMethod</span><span class="params">(ProceedingJoinPoint joinPoint)</span> <span class="keyword">throws</span> Throwable</span>&#123;</div><div class="line">        <span class="comment">/**</span></div><div class="line"><span class="comment">         * 1、获取访问目标方法应该具备的权限</span></div><div class="line"><span class="comment">         *     得到</span></div><div class="line"><span class="comment">         *        1、目标类的class形式</span></div><div class="line"><span class="comment">         *        2、方法的名称</span></div><div class="line"><span class="comment">         */</span></div><div class="line">        Class targetClass = joinPoint.getTarget().getClass();</div><div class="line">        String methodName = joinPoint.getSignature().getName();</div><div class="line">        <span class="comment">//得到访问该方法的权限</span></div><div class="line">        String methodAccess = AnnotationParse.parse(targetClass, methodName);</div><div class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</div><div class="line">        <span class="comment">//遍历用户所有的权限，查看是否用访问该方法的权限</span></div><div class="line">        <span class="keyword">for</span> (Privilege privilege : privileges) &#123;</div><div class="line">            <span class="comment">//该用户能够访问目标方法</span></div><div class="line">            <span class="keyword">if</span>(methodAccess.equals(privilege.getName()))&#123;</div><div class="line">                flag = <span class="keyword">true</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;        </div><div class="line">        <span class="keyword">if</span>(flag)&#123;<span class="comment">//访问目标方法</span></div><div class="line">            joinPoint.proceed();</div><div class="line">        &#125;<span class="keyword">else</span>&#123;</div><div class="line">            System.out.println(<span class="string">"对不起，您没有权限访问"</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>application 配置文件<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">aop:pointcut</span> </span></div><div class="line"><span class="tag">          <span class="attr">expression</span>=<span class="string">"execution(* com.itheima12.spring.aop.xml.privilege.service.impl.*.*(..))"</span> <span class="attr">id</span>=<span class="string">"perform"</span>/&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">"privilegeAspect"</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">aop:around</span> <span class="attr">method</span>=<span class="string">"isAccessMethod"</span> <span class="attr">pointcut-ref</span>=<span class="string">"perform"</span>/&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></div></pre></td></tr></table></figure></p><p>测试<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PrivilegeTest</span> </span>&#123;</div><div class="line">    <span class="meta">@Test</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testPrivilege</span><span class="params">()</span></span>&#123;</div><div class="line">        ApplicationContext context = </div><div class="line">            <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"applicationContext.xml"</span>);</div><div class="line">        <span class="comment">/**</span></div><div class="line"><span class="comment">         * 初始化用户的权限</span></div><div class="line"><span class="comment">         */</span></div><div class="line">        PrivilegeAspect privilegeAspect = (PrivilegeAspect)context.getBean(<span class="string">"privilegeAspect"</span>);</div><div class="line">        Privilege privilege1 = <span class="keyword">new</span> Privilege();</div><div class="line">        privilege1.setName(<span class="string">"savePerson"</span>);</div><div class="line"></div><div class="line">        Privilege privilege2 = <span class="keyword">new</span> Privilege();</div><div class="line">        privilege2.setName(<span class="string">"updatePerson"</span>);</div><div class="line"></div><div class="line">        privilegeAspect.getPrivileges().add(privilege2);</div><div class="line">        privilegeAspect.getPrivileges().add(privilege1);</div><div class="line"></div><div class="line">        PersonService personService = (PersonService)context.getBean(<span class="string">"personService"</span>);</div><div class="line">        personService.savePerson();</div><div class="line">        personService.updatePerson();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h3 id="2-AOP-缓存"><a href="#2-AOP-缓存" class="headerlink" title="2. AOP 缓存"></a>2. AOP 缓存</h3><p>application<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.itheima12.spring.aop.xml.transaction"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:aspectj-autoproxy</span>&gt;</span></div></pre></td></tr></table></figure></p><p>切面类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * <span class="doctag">@Aspect</span></span></div><div class="line"><span class="comment"> * <span class="doctag">@Pointcut</span>("execution(* com.itheima12.spring.aop.xml.transaction.PersonDaoImpl.*(..))")</span></div><div class="line"><span class="comment"> * private void aa()&#123;&#125;</span></div><div class="line"><span class="comment">       就相当于</span></div><div class="line"><span class="comment"> * &lt;aop:config&gt;</span></div><div class="line"><span class="comment">          &lt;aop:pointcut </span></div><div class="line"><span class="comment">              expression="execution(* com.itheima12.spring.aop.xml.transaction.PersonDaoImpl.*(..))" </span></div><div class="line"><span class="comment">              id="aa()"/&gt;</span></div><div class="line"><span class="comment">   &lt;/aop:config&gt;</span></div><div class="line"><span class="comment"> * <span class="doctag">@author</span> zd</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="meta">@Component</span>(<span class="string">"transaction"</span>)  <span class="comment">// 加入到spring容器中</span></div><div class="line"><span class="meta">@Aspect</span>    <span class="comment">// 证明这个注解所在类是切面类</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Transaction</span> </span>&#123;</div><div class="line">    <span class="meta">@Pointcut</span>(<span class="string">"execution(* com.itheima12.spring.aop.xml.transaction.PersonDaoImpl.*(..))"</span>)</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">aa</span><span class="params">()</span></span>&#123;&#125;  <span class="comment">//方法签名</span></div><div class="line"></div><div class="line">    <span class="meta">@Before</span>(<span class="string">"aa()"</span>)  <span class="comment">// 前置通知</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">beginTransaction</span><span class="params">()</span></span>&#123;</div><div class="line">        System.out.println(<span class="string">"begin transaction"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@AfterReturning</span>(<span class="string">"aa()"</span>)  <span class="comment">// 后置通知</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">commit</span><span class="params">()</span></span>&#123;</div><div class="line">        System.out.println(<span class="string">"commit"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h3 id="3-AOP-日志管理"><a href="#3-AOP-日志管理" class="headerlink" title="3. AOP 日志管理"></a>3. AOP 日志管理</h3><p>此项目是在 spring boot 环境下实现。</p><p>1、 添加maven依赖注解<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--springBoot 的aop--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure></p><p>2、添加数据库表<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`journal`</span>;</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`journal`</span> (</div><div class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT <span class="keyword">COMMENT</span> <span class="string">'日志id'</span>,</div><div class="line">  <span class="string">`uid`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'用户id'</span>,</div><div class="line">  <span class="string">`modularType`</span> <span class="built_in">int</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'模块类型'</span>,</div><div class="line">  <span class="string">`operationType`</span> <span class="built_in">int</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'操作类型：0：增/1：删/2：改/3：关闭/4：移动'</span>,</div><div class="line">  <span class="string">`operationTime`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'操作时间'</span>,</div><div class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</div><div class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</div></pre></td></tr></table></figure></p><p>3、增加对应的实体类</p><p>4、日志添加 Mapper<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"> /**</div><div class="line"> * 日志管理</div><div class="line"> * Created by 陈梓平 on 2017/8/12.</div><div class="line"> */</div><div class="line">public interface JournalMapper &#123;</div><div class="line">    /**日志添加*/</div><div class="line">    int addJournalInfo(JournalInfo journalInfo);</div><div class="line">&#125;</div><div class="line"></div><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="meta">&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></div><div class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.chen.mapper.JournalMapper"</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!--添加日志信息--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"addJournalInfo"</span>&gt;</span></div><div class="line">      INSERT INTO journal  (uid,modularType,operationType,operationTime)</div><div class="line">      VALUES (10086,#&#123;modularType&#125;,#&#123;operationType&#125;,NOW())</div><div class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></div></pre></td></tr></table></figure></p><p>5、日志工具类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Component</span></div><div class="line"><span class="meta">@Transactional</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JournalUtils</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> JournalMapper jouUtilsJournalMapper;</div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> JournalInfo journalInfo;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 添加日志</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> modeularType</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> operationType</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addJournalInfo</span><span class="params">(<span class="keyword">int</span> modeularType,<span class="keyword">int</span> operationType,<span class="keyword">int</span> uid)</span> </span>&#123;</div><div class="line">        journalInfo.setModularType(modeularType);</div><div class="line">        journalInfo.setOperationType(operationType);</div><div class="line">        journalInfo.setUid(uid);</div><div class="line">        jouUtilsJournalMapper.addJournalInfo(journalInfo);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>6、静态类（包括模块和操作）<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 静态信息</span></div><div class="line"><span class="comment"> * Created by Administrator on 2017/8/12.</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StaticInfo</span> </span>&#123;</div><div class="line">    <span class="comment">/**--------------------  模块类型  ----------------*/</span></div><div class="line">    <span class="comment">//模块1</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MODEULARTTYPE_FIRST= <span class="number">1</span>;</div><div class="line"></div><div class="line">    <span class="comment">/**--------------------  操作类别  ---------------*/</span></div><div class="line">    <span class="comment">//增加</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> OPERATIONTYPE_ADD = <span class="number">0</span>;</div><div class="line">    <span class="comment">//删除</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> OPERATIONTYPE_UPDATE = <span class="number">1</span>;</div><div class="line">    <span class="comment">//修改</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> OPERATIONTYPE_DELETE = <span class="number">2</span>;</div><div class="line">    <span class="comment">//开启</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> OPERATIONTYPE_OPEN = <span class="number">3</span>;</div><div class="line">    <span class="comment">//关闭</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> OPERATIONTYPE_CLOSE = <span class="number">4</span>;</div><div class="line">    <span class="comment">//移动</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> OPERATIONTYPE_MOVER = <span class="number">5</span>;</div><div class="line"></div><div class="line">    <span class="comment">/**---------------   AOP代理  --------------------*/</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String AOP_OPERATION_TYPE_ADD =  <span class="string">"add"</span>;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String AOP_OPERATION_TYPE_EDIT =  <span class="string">"edit"</span>;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String AOP_OPERATION_TYPE_MOVE =  <span class="string">"move"</span>;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String AOP_OPERATION_TYPE_DELETE =  <span class="string">"delete"</span>;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String AOP_OPERATION_TYPE_OPENORCLOSE =  <span class="string">"openOrClose"</span>;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String AOP_MODULAR_TYPE_FIRST = <span class="string">"Journal"</span>;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String AOP_SPIT_CLASSNAME = <span class="string">"impl."</span>;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String AOP_SPIT_MODULAR_TYPE= <span class="string">"ServiceImpl"</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>7、日志切面AOP<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Component</span></div><div class="line"><span class="meta">@Aspect</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JournalAspect</span> </span>&#123;</div><div class="line">    <span class="comment">/**日志输出*/</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(JournalAspect.class);</div><div class="line"></div><div class="line">    <span class="comment">/**日志工具类*/</span></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> JournalUtils aspectJournalUtils;</div><div class="line"></div><div class="line">    <span class="comment">/**service层切面*/</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String POINT_CUT = <span class="string">"execution(* com.chen.service..*(..))"</span>;</div><div class="line"></div><div class="line">    <span class="meta">@Pointcut</span>(POINT_CUT)</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">pointcut</span><span class="params">()</span></span>&#123;&#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 后置最终通知（目标方法只要执行完了就会执行后置通知方法）</span></div><div class="line"><span class="comment">     * 日志管理</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> joinPoint</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="meta">@After</span>(value = <span class="string">"pointcut()"</span>)</div><div class="line">    <span class="meta">@Transactional</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doAfterAdvice</span><span class="params">(JoinPoint joinPoint)</span> <span class="keyword">throws</span> CustomException </span>&#123;</div><div class="line">        <span class="comment">//用的最多 通知的签名</span></div><div class="line">        Signature signature = joinPoint.getSignature();</div><div class="line">        <span class="comment">//1.获取模块类型</span></div><div class="line">        <span class="comment">//AOP代理类的名字（包括包名）</span></div><div class="line">        String declaringTypeName = signature.getDeclaringTypeName();</div><div class="line">        logger.info(<span class="string">"AOP代理类的名字"</span>+declaringTypeName);</div><div class="line">        <span class="comment">//获取代理类的类名</span></div><div class="line">        String[] split = declaringTypeName.split(StaticInfo.AOP_SPIT_CLASSNAME);</div><div class="line">        String className = split[<span class="number">1</span>];</div><div class="line">        <span class="comment">//获取模块名</span></div><div class="line">        String[] modularTypeNames = className.split(StaticInfo.AOP_SPIT_MODULAR_TYPE);</div><div class="line">        String modularTypeName = modularTypeNames[<span class="number">0</span>];</div><div class="line">        <span class="keyword">int</span> modulerType = -<span class="number">1</span>;</div><div class="line">        <span class="comment">//模块类型筛选</span></div><div class="line">        modulerType = <span class="keyword">this</span>.getModularType(modularTypeName, modulerType);</div><div class="line"></div><div class="line">        <span class="comment">//2.获取操作类型</span></div><div class="line">        <span class="comment">//代理的是哪一个方法</span></div><div class="line">        String  methodName = signature.getName();</div><div class="line">        logger.info(<span class="string">"AOP代理方法的名字"</span>+signature.getName());</div><div class="line">        <span class="keyword">int</span> opreationType = -<span class="number">1</span>;</div><div class="line">        opreationType = getOpreationType(joinPoint, signature, opreationType,methodName);</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (modulerType==-<span class="number">1</span>&amp;&amp;opreationType==-<span class="number">1</span>)</div><div class="line">            <span class="keyword">if</span> (!StringUtils.isBlank(methodName)||!StringUtils.isBlank(modularTypeName))</div><div class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> CustomException(ResultEnum.JOURNAL_LOG_ERROR);</div><div class="line"></div><div class="line">        <span class="comment">//3.添加日志</span></div><div class="line">        <span class="keyword">if</span> (modulerType!=-<span class="number">1</span>&amp;&amp;opreationType!=-<span class="number">1</span>)</div><div class="line">            <span class="comment">//TODO 3.1 从请求获取用户id</span></div><div class="line">            aspectJournalUtils.addJournalInfo(modulerType,opreationType, <span class="number">10086</span>);</div><div class="line"></div><div class="line"></div><div class="line">    &#125;</div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 模块类型筛选</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> modularTypeName</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> type</span></div><div class="line"><span class="comment">     * <span class="doctag">@return</span></span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">getModularType</span><span class="params">(String modularTypeName, <span class="keyword">int</span> type)</span> </span>&#123;</div><div class="line">        <span class="comment">//模块类型筛选</span></div><div class="line">        <span class="keyword">switch</span> (modularTypeName)&#123;</div><div class="line">            <span class="keyword">case</span> StaticInfo.AOP_MODULAR_TYPE_FIRST:</div><div class="line">                type = StaticInfo.MODEULARTTYPE_FIRST;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">                <span class="comment">//多模块添加</span></div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> type;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * 获取操作类型</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> joinPoint</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> signature</span></div><div class="line"><span class="comment">     * <span class="doctag">@param</span> opreationType</span></div><div class="line"><span class="comment">     * <span class="doctag">@return</span></span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">getOpreationType</span><span class="params">(JoinPoint joinPoint, Signature signature, <span class="keyword">int</span> opreationType,String  methodName )</span> </span>&#123;</div><div class="line">        <span class="keyword">switch</span> (methodName)&#123;</div><div class="line">            <span class="keyword">case</span> StaticInfo.AOP_OPERATION_TYPE_ADD:</div><div class="line">                opreationType = StaticInfo.OPERATIONTYPE_ADD;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> StaticInfo.AOP_OPERATION_TYPE_EDIT:</div><div class="line">                opreationType = StaticInfo.OPERATIONTYPE_UPDATE;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> StaticInfo.AOP_OPERATION_TYPE_MOVE:</div><div class="line">                opreationType = StaticInfo.OPERATIONTYPE_MOVER;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> StaticInfo.AOP_OPERATION_TYPE_DELETE:</div><div class="line">                opreationType = StaticInfo.OPERATIONTYPE_DELETE;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> StaticInfo.AOP_OPERATION_TYPE_OPENORCLOSE:</div><div class="line">                Object[] obj = joinPoint.getArgs();</div><div class="line">                <span class="keyword">int</span> arg = (<span class="keyword">int</span>) obj[<span class="number">1</span>];</div><div class="line">                <span class="keyword">if</span> (arg==<span class="number">1</span>)</div><div class="line">                    opreationType = StaticInfo.OPERATIONTYPE_OPEN;</div><div class="line">                <span class="keyword">else</span></div><div class="line">                    opreationType = StaticInfo.OPERATIONTYPE_CLOSE;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> opreationType;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>8、添加Controller测试<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@RestController</span></div><div class="line"><span class="meta">@RequestMapping</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JournalController</span> </span>&#123;</div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> JournalService journalService;</div><div class="line"></div><div class="line">    <span class="meta">@PostMapping</span>(value = <span class="string">"journalAdd"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">add</span><span class="params">()</span></span>&#123;</div><div class="line">        <span class="keyword">return</span> journalService.add();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>9、添加Service测试<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Service</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JournalServiceImpl</span> <span class="keyword">implements</span> <span class="title">JournalService</span> </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">add</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> ResultUtils.success(ResultEnum.OK);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h3 id="4-AOP-实现分布式锁"><a href="#4-AOP-实现分布式锁" class="headerlink" title="4. AOP 实现分布式锁"></a>4. AOP 实现分布式锁</h3><p>改造前：<br>所有应用分布式锁的地方都需要如下代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">RLock redissonLock = redissonUtil.getRedisson().getLock(<span class="string">"saveCourseApplyResource"</span>+courseApplyResource.getUserId());</div><div class="line">    <span class="keyword">boolean</span> res = <span class="keyword">false</span>;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        <span class="comment">//等待3秒，有效期5秒</span></div><div class="line">        res = redissonLock.tryLock(<span class="number">3</span>, <span class="number">5</span>, TimeUnit.SECONDS);</div><div class="line">        <span class="keyword">if</span>(res)&#123;</div><div class="line">            <span class="comment">//执行业务操作</span></div><div class="line">        &#125;</div><div class="line">    &#125;<span class="keyword">catch</span> (RuntimeException e)&#123;</div><div class="line">        <span class="keyword">throw</span> e;</div><div class="line">    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</div><div class="line">        e.printStackTrace();</div><div class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"网络错误，请重试"</span>);</div><div class="line">    &#125; <span class="keyword">finally</span> &#123;</div><div class="line">        <span class="keyword">if</span>(res)&#123;</div><div class="line">            redissonLock.unlock();</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure><p>改造后： </p><ol><li><p>首先需要一个注解：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * Description: 分布式锁应用注解&lt;br&gt;</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * <span class="doctag">@author</span>: name：yuxin &lt;br&gt;email: yuruixin@ixincheng.com &lt;br&gt;</span></div><div class="line"><span class="comment"> * Create Time:  2018/3/4 0004-下午 8:48&lt;br&gt;</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">import</span> java.lang.annotation.Documented;</div><div class="line"><span class="keyword">import</span> java.lang.annotation.ElementType;</div><div class="line"><span class="keyword">import</span> java.lang.annotation.Retention;</div><div class="line"><span class="keyword">import</span> java.lang.annotation.RetentionPolicy;</div><div class="line"><span class="keyword">import</span> java.lang.annotation.Target;</div><div class="line"></div><div class="line"><span class="meta">@Target</span>(&#123; ElementType.METHOD, ElementType.TYPE &#125;)</div><div class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</div><div class="line"><span class="meta">@Documented</span></div><div class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Lock &#123;</div><div class="line">    <span class="comment">//分布式锁的key前缀</span></div><div class="line">    <span class="function">String <span class="title">lockName</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;</div><div class="line">    <span class="comment">//等待时长</span></div><div class="line">    <span class="function"><span class="keyword">int</span> <span class="title">waitTime</span><span class="params">()</span> <span class="keyword">default</span> 3</span>;</div><div class="line">    <span class="comment">//有效期时长</span></div><div class="line">    <span class="function"><span class="keyword">int</span> <span class="title">effectiveTime</span><span class="params">()</span> <span class="keyword">default</span> 5</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>然后，需要一个切面服务类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * Description: 分布式锁切面服务&lt;br&gt;</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * <span class="doctag">@author</span>: name：yuxin &lt;br&gt;email: yuruixin@ixincheng.com &lt;br&gt;</span></div><div class="line"><span class="comment"> * Create Time:  2018/3/4 0004-下午 8:46&lt;br&gt;</span></div><div class="line"><span class="comment"> */</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> com.xczhihui.bxg.online.common.utils.RedissonUtil;</div><div class="line"><span class="keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;</div><div class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Around;</div><div class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Aspect;</div><div class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Pointcut;</div><div class="line"><span class="keyword">import</span> org.redisson.api.RLock;</div><div class="line"><span class="keyword">import</span> org.slf4j.Logger;</div><div class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</div><div class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</div><div class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.lang.reflect.Method;</div><div class="line"><span class="keyword">import</span> java.util.HashMap;</div><div class="line"><span class="keyword">import</span> java.util.Map;</div><div class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</div><div class="line"></div><div class="line"><span class="meta">@Component</span></div><div class="line"><span class="meta">@Aspect</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LockService</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String LOCK_NAME = <span class="string">"lockName"</span>;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String WAIT_TIME = <span class="string">"waitTime"</span>;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String EFFECTIVE_TIME = <span class="string">"effectiveTime"</span>;</div><div class="line"></div><div class="line">    <span class="meta">@Autowired</span></div><div class="line">    <span class="keyword">private</span> RedissonUtil redissonUtil;</div><div class="line">    <span class="keyword">protected</span> Logger logger = LoggerFactory.getLogger(<span class="keyword">this</span>.getClass());</div><div class="line"></div><div class="line">    <span class="meta">@Pointcut</span>(<span class="string">"@annotation(com.xczhihui.common.Lock)"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">lockPointcut</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Around</span>(<span class="string">"lockPointcut()"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">around</span><span class="params">(ProceedingJoinPoint point)</span> <span class="keyword">throws</span> Throwable </span>&#123;</div><div class="line"></div><div class="line">        Map&lt;String,Object&gt; map = getLockParams(point);</div><div class="line">        String lockName = (String) map.get(LOCK_NAME);</div><div class="line">        <span class="keyword">int</span> waitTime = (<span class="keyword">int</span>) map.get(WAIT_TIME);</div><div class="line">        <span class="keyword">int</span> effectiveTime = (<span class="keyword">int</span>) map.get(EFFECTIVE_TIME);</div><div class="line">        Object[] methodParam = <span class="keyword">null</span>;</div><div class="line">        Object object=<span class="keyword">null</span>;</div><div class="line">        <span class="keyword">boolean</span> resl = <span class="keyword">false</span>;</div><div class="line">        <span class="comment">//获取方法参数</span></div><div class="line">        methodParam = point.getArgs();</div><div class="line">        String lockKey = (String) methodParam[<span class="number">0</span>];</div><div class="line">        <span class="comment">// 获得锁对象实例</span></div><div class="line">        RLock redissonLock = redissonUtil.getRedisson().getLock(lockName+lockKey);</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="comment">//等待3秒 有效期8秒</span></div><div class="line">            resl = redissonLock.tryLock(waitTime, effectiveTime, TimeUnit.SECONDS);</div><div class="line">            <span class="keyword">if</span>(resl)&#123;</div><div class="line">               object = point.proceed(point.getArgs());</div><div class="line">            &#125;</div><div class="line">        &#125;<span class="keyword">catch</span> (RuntimeException e)&#123;</div><div class="line">            <span class="keyword">throw</span> e;</div><div class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</div><div class="line">            e.printStackTrace();</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"网络错误，请重试"</span>);</div><div class="line">        &#125;<span class="keyword">finally</span> &#123;</div><div class="line">            <span class="keyword">if</span>(resl)&#123;</div><div class="line">                logger.info(<span class="string">"开锁,&#123;&#125;"</span>,lockName+lockKey);</div><div class="line">                redissonLock.unlock();</div><div class="line">            &#125;<span class="keyword">else</span>&#123;</div><div class="line">                logger.error(<span class="string">"未获得锁,&#123;&#125;"</span>,lockName+lockKey);</div><div class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"网络错误，请重试"</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> object;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * Description：获取方法的中锁参数</span></div><div class="line"><span class="comment">     * creed: Talk is cheap,show me the code</span></div><div class="line"><span class="comment">     * <span class="doctag">@author</span> name：yuxin &lt;br&gt;email: yuruixin@ixincheng.com</span></div><div class="line"><span class="comment">     * <span class="doctag">@Date</span>: 2018/3/4 0004 下午 8:59</span></div><div class="line"><span class="comment">     **/</span></div><div class="line">    <span class="function"><span class="keyword">public</span>  Map&lt;String,Object&gt; <span class="title">getLockParams</span><span class="params">(ProceedingJoinPoint joinPoint)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        String targetName = joinPoint.getTarget().getClass().getName();</div><div class="line">        String methodName = joinPoint.getSignature().getName();</div><div class="line">        Object[] arguments = joinPoint.getArgs();</div><div class="line"></div><div class="line">        Class targetClass = Class.forName(targetName);</div><div class="line">        Method[] method = targetClass.getMethods();</div><div class="line">        Map&lt;String,Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</div><div class="line">        <span class="keyword">for</span> (Method m : method) &#123;</div><div class="line">            <span class="keyword">if</span> (m.getName().equals(methodName)) &#123;</div><div class="line">                Class[] tmpCs = m.getParameterTypes();</div><div class="line">                <span class="keyword">if</span> (tmpCs.length == arguments.length) &#123;</div><div class="line">                    Lock lock = m.getAnnotation(Lock.class);</div><div class="line">                    <span class="keyword">if</span> (lock != <span class="keyword">null</span>) &#123;</div><div class="line">                        String lockName = lock.lockName();</div><div class="line">                        <span class="keyword">int</span> waitTime = lock.waitTime();</div><div class="line">                        <span class="keyword">int</span> effectiveTime = lock.effectiveTime();</div><div class="line">                        map.put(LOCK_NAME,lockName);</div><div class="line">                        map.put(WAIT_TIME,waitTime);</div><div class="line">                        map.put(EFFECTIVE_TIME,effectiveTime);</div><div class="line">                    &#125;</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> map;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>在需要加锁的方法上添加注解:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Transactional</span>(propagation = Propagation.REQUIRES_NEW)</div><div class="line"><span class="meta">@Lock</span>(lockName = <span class="string">"addCollectionApply"</span>,waitTime = <span class="number">2</span>,effectiveTime = <span class="number">3</span>)</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveCollectionApply4Lock</span><span class="params">(String lockKey,CourseApplyInfo courseApplyInfo)</span></span>&#123;</div><div class="line">    <span class="comment">//业务逻辑处理</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文重要讲解了 AOP 的概念和原理，并提供了四个实例来帮助理解。&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://chuanqiang.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="java" scheme="http://chuanqiang.github.io/tags/java/"/>
    
      <category term="spring" scheme="http://chuanqiang.github.io/tags/spring/"/>
    
      <category term="AOP" scheme="http://chuanqiang.github.io/tags/AOP/"/>
    
  </entry>
  
  <entry>
    <title>世间多少不平事</title>
    <link href="http://chuanqiang.github.io/2018/09/01/%E4%B8%96%E9%97%B4%E5%A4%9A%E5%B0%91%E4%B8%8D%E5%B9%B3%E4%BA%8B/"/>
    <id>http://chuanqiang.github.io/2018/09/01/世间多少不平事/</id>
    <published>2018-08-31T16:00:00.000Z</published>
    <updated>2018-09-16T12:53:25.704Z</updated>
    
    <content type="html"><![CDATA[<p>最近社会上不平事颇多  ，值得反思一下当下社会是怎么了？</p><a id="more"></a><h3 id="事件一：滴滴顺风车谋杀事件"><a href="#事件一：滴滴顺风车谋杀事件" class="headerlink" title="事件一：滴滴顺风车谋杀事件"></a>事件一：滴滴顺风车谋杀事件</h3><p>不到一百天的时间里，滴滴顺风车发生了两起乘客遇害事件。虽然滴滴只是一个平台，其和乘客之间属于居间合同关系，但滴滴作为居间人，本身负有安排真实、准确、合格、合法车辆及驾驶服务的义务。基于保证乘客安全，滴滴对于因司机信息审核不严格造成的损害，就应承担一定的赔偿责任。这种事件为什么发生呢？有个细节是一开始滴滴第一次出事之后，滴滴下线了顺风车产品，之后，滴滴推出了一系列针对顺风车的整顿措施。其中重要的一项，是将乘客的个人信息，由默认公开，变成了默认关闭。默认关闭后的乘客头像，全都变成了虚拟图像。这样一来，司机就不再能够看乘客的性别，年龄，职业和容貌。然后，滴滴顺风车宣布回归。但是，这一措施并没有维持多久，有众多顺风车司机证实，滴滴在重新上线一段时间后，将默认关闭的乘客个人信息，重新又变成了默认开放。而乘客的头像，也再次变成了真实照片。滴滴之所以这样做是想用顺风车做社交，当经济激励不足以刺激供给时，滴滴通过异性社交来拉动需求，可以说是抓住了人性啊，利用暧昧的异性社交做噱头而不管不顾乘客自身的安全，这就是滴滴的原罪。</p><p>应该说顺风车是适应社会发展的产物，在交通拥堵的矛盾和资源共享的潮流下诞生的。它的出现为人们的出行提供了便利，这本身是没问题的，但是如果法律和监管缺位，企业就会为了追求利益的最大化，而忽略了道德和底线，最终酿成大祸。</p><h3 id="事件二：自如甲醛房"><a href="#事件二：自如甲醛房" class="headerlink" title="事件二：自如甲醛房"></a>事件二：自如甲醛房</h3><p>阿里 P7 一位员工因为租住的自如房子甲醛超标，仅仅住了六个多月后身患急性白血病去世。在资本运作下，房产中介很少会把装修好的房子晾晒几个月后才租给客户，他们多会选择立马找到租客来减少成本。资本市场只管赚钱，哪管得了你的健康。</p><h3 id="事件三：昆山砍人事件"><a href="#事件三：昆山砍人事件" class="headerlink" title="事件三：昆山砍人事件"></a>事件三：昆山砍人事件</h3><p>事件经过：2018年8月27日21时30分许，刘海龙驾驶宝马轿车在昆山市震川路西行至顺帆路路口，与同向骑自行车的于海明发生争执。刘海龙从车中取出一把砍刀连续击打于海明，后被于海明反抢砍刀并捅刺、砍击数刀，刘海龙身受重伤，经抢救无效死亡。法院的判决是：于海明正当防卫，无罪。</p><p>这是一个大快人心的判决结果，正当防卫审判案例中少有的成功，这个案件必将写入我国的司法史，也说明我国的司法公正确实是在进步之中。一个江湖混子，欺负一个老实人，让老实人没活路，却不知每个人都是有血性的，逼到份上都会撸袖子跟你干！网友有打油诗一首：</p><blockquote><p>青龙朱雀身上纹<br>装逼不成反被轮<br>江湖有道江湖用<br>莫欺路上老实人</p></blockquote><p>在号称如此文明的现在，其实资本从未改变，也不需要指望它会改变，真正需要改变的是这个国家的法律、监管力度和坚守的底线。当普通民众的利益被一再的侵犯，当整个社会的底线被反复的触及，不禁要问我们的法律在哪里？我们的监管又体现在哪里？监管总是出了事情才姗姗来迟，法律也不能总用生命的代价来促进它完善。文明，就是停下来想一想自己在做什么。资本是野蛮的，人心也多是叵测和邪恶，我们必须为它们套上人性、道德和法律的枷锁，让世间不平事在烈日下曝晒，来接受恶果和恶报。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近社会上不平事颇多  ，值得反思一下当下社会是怎么了？&lt;/p&gt;
    
    </summary>
    
      <category term="独白" scheme="http://chuanqiang.github.io/categories/%E7%8B%AC%E7%99%BD/"/>
    
    
      <category term="社会" scheme="http://chuanqiang.github.io/tags/%E7%A4%BE%E4%BC%9A/"/>
    
  </entry>
  
  <entry>
    <title>无人生还 - 书评</title>
    <link href="http://chuanqiang.github.io/2018/08/12/%E6%97%A0%E4%BA%BA%E7%94%9F%E8%BF%98%20-%20%E4%B9%A6%E8%AF%84/"/>
    <id>http://chuanqiang.github.io/2018/08/12/无人生还 - 书评/</id>
    <published>2018-08-12T02:19:47.000Z</published>
    <updated>2019-01-20T14:33:12.013Z</updated>
    
    <content type="html"><![CDATA[<p>《无人生还》是英国侦探小说女王阿加莎·克里斯蒂的代表作，讲述了一个惊悚悬疑的孤岛杀人故事。由于作者出色的笔力和巧妙的构思，整个内容步步悬疑，营造恐怖惊悚氛围的同时也紧紧抓住读者眼球。我是一气呵成读完的，读时的畅快淋漓和结局的恍然大悟，让我感受到这部作品的魅力所在。</p><p><img src="http://image.zhangcq.vip/20180812153404739522240.png" alt="无人生还.png"></p><a id="more"></a><p>小说的故事并不复杂，主要讲述了八个素不相识身份各异的人都不约而同的收到一封邀请，去德文郡海岸边一座孤岛上的豪宅。然而到那里之后，并没有出现所谓的邀请者欧文，而是只有两个临时雇来的管家罗杰斯夫妇。正当这十个人享用晚餐的时候，餐厅里的留声机忽然响起，指控宾客以及管家夫妇这十人都曾犯有谋杀罪。众人无不惊恐，纷纷掩饰自己的罪行。桌上有十个瓷娃娃，还有一首古老的童谣宛如死亡的魔咒：</p><blockquote><p>十个小士兵，出门打牙祭；不幸噎住喉，十个只剩九。<br>九个小士兵，秉烛到夜半；清早叫不答，九个只剩八。<br>八个小士兵，旅行去德文；流连不离去，八个只剩七。<br>七个小士兵，举斧砍柴火；失手砍掉头，七个只剩六。<br>六个小士兵，捅了马蜂窝；蜂来无处躲，六个只剩五。<br>五个小士兵，同去做律师；皇庭判了死，五个只剩四。<br>四个小士兵，结伴去海边；青鱼吞下腹，四个只剩三。<br>三个小士兵，动物园里耍；狗熊一巴掌，三个只剩俩。<br>两个小士兵，日头下面栖；毒日把命夺，两个只剩一。<br>一个小士兵，落单孤零零；悬梁了此生，一个也不剩。</p></blockquote><p>之后这十人按照童谣的内容一个接一个的死去，每死一个人瓷娃娃就毁坏一个，最后杀人游戏结束，也映照本书的名字——无人生还。</p><p>小说开头从每个受邀者的角度叙述了这次的孤岛之行，一方面将入场人物角色一一刻画，使他们的性格特征得以表现，为之后人物描述做铺垫；另一方面也借他们之口交代事件同时烘托了士兵岛的神秘感，吸引眼球。在踏入士兵岛之前的旅途中，从作者的描述里也能窥探一二，知道这注定是一场不平凡的路途，带着悬疑的味道，让读者发现每个人好像都有些秘密，有点问题。比如文中的一些语句：『边走边祈祷吧，”他说，“边走边祈祷。审判的日子就在眼前。』、『海面辽阔，一眼望不到边。目及之处是一片茫茫天水，海浪在落日余晖中荡起层层涟漪。 大海……今天是如此平静，可有时它又是如此凶残……把人拖入海底深渊。淹死了……他被淹死了……在海中……淹死了……淹死了……淹死了……』、『说起士兵岛，似乎总带有某种魔力。单是这个名字就让人浮想联翩。来到岛上，与世隔绝，自成一个世界。在这个世界里，你也许真就一辈子都回不去了』等等这些都是一个个的伏笔，预示着这不简单是一个受邀旅行，而是一场命运的审判，而与世隔绝的士兵岛就是行刑之地。作者没有试图在开始掩盖故事的发展和走向，相反通过字里行间让读者主动感受到这是一个有去无回的死亡之岛，烘托出惊悚的阅读氛围。并且你也能感受到童谣中的十个小士兵一一死去的命运便是岛上十人的宿命，但是真正抓住读者的是你不知道他们如何离奇的死去，每死一个人，真相便进一步，读者参与进来猜测凶手，然后随着剧情探寻真相。过程中死亡下的紧张感让人呼吸紧凑，可见作者非凡的笔力。</p><p>另外小说中的细节描写也很到位，比如宣判他们有罪的那个唱片的标题叫『天鹅绝唱』，这不是平白起的名字，而是有寓意的，查询资料才知道：传说天鹅平素不喜发声, 然而临死之前, 必定引颈长鸣, 唱出一生中唯一的、也是最后的一次歌曲–因为声音哀婉动听，感人肺腑; 是以西方文化中，将诗人、作家、画家、音乐家等等最后的作品或是最后一次演出称为“天鹅绝唱”( SWAN  SONG )。还有『每份邀请用的都是同样的首字母：尤利克·诺尔曼·欧文、乌娜·南希·欧文，也就是说，每次都是U.N.欧文。稍微联想一下就能发现，U.N是UNKNOWN的前两个字母，意思就是无名氏！』也是一个设计巧妙的地方。『他把脖子伸得老长，环视周围的人，样子好像一只发怒的乌龟』每个人的描述都符合人设和各自的职业，充分显示出作者的刻画入微。</p><p>孤岛杀人模式营造的恐怖惊悚加上作者入木三分的描写还有童谣在故事情节中的推动作用是这部小说的经典之处。</p><p>小说还很有意思的一个事情是，虽然这十个人的罪行各异，有传统腐朽礼制的捍卫者布伦特，有在金钱诱惑下道德沦丧的之人，有自私自利不惜杀人者。。。他们的罪行或多或少都是社会时代的产物，但他们都是『无证之罪』，侥幸逃脱了法律的制裁，而具有双重性格的法官瓦格雷夫却因为性格和职业原因代替了法律『伸张正义』，把他们审判与孤岛之上。由于凶手瓦格雷夫矛盾的双重性格：『小时候起，我就知道自己对杀戮有着无比强烈的欲望。』和『我同时还拥有一种强烈的正义感。我痛恨因为我的所作所为让无辜的人或生物遭受磨难或者死亡。我一直深深地感到，正义应该战胜一切』，让他萌生出一种罪恶的想法：『让我坦白说吧，我想亲手杀人。 我意识到这就像一位艺术家极力想表现自我一样！没错，我想变成一个犯罪学艺术家。我被法官这个职业所束缚，我的想象力被压抑着，逐渐变成一股巨大的力量』，正是由于这个动机，铸就了一起孤岛杀人事件，最后凶手也选择自杀。这种代替法律的『伸张正义』也让人重新思考法律和伦理的关系，当法律触碰不到的阴暗面，究竟该如何解决？</p><p>小岛对于一些人来说是恐怖的命运终结之所，而对麦克阿瑟将军来说却是万物的归处：『他心想，小岛的好处就在于与世隔绝，谁也别想独自离开，就像是来到了万事的归处。 他忽然发现，自己根本不想离开这座岛』，虽然罪行被揭露，命运被审判，但隐藏多年的心灵枷锁被打开，内心的沉重被释放。</p><p>虽然你能逃脱法律的制裁，但最终逃离不了良心的审问。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;《无人生还》是英国侦探小说女王阿加莎·克里斯蒂的代表作，讲述了一个惊悚悬疑的孤岛杀人故事。由于作者出色的笔力和巧妙的构思，整个内容步步悬疑，营造恐怖惊悚氛围的同时也紧紧抓住读者眼球。我是一气呵成读完的，读时的畅快淋漓和结局的恍然大悟，让我感受到这部作品的魅力所在。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://image.zhangcq.vip/20180812153404739522240.png&quot; alt=&quot;无人生还.png&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="书评" scheme="http://chuanqiang.github.io/categories/%E4%B9%A6%E8%AF%84/"/>
    
    
      <category term="书评" scheme="http://chuanqiang.github.io/tags/%E4%B9%A6%E8%AF%84/"/>
    
  </entry>
  
  <entry>
    <title>天津旅游观感</title>
    <link href="http://chuanqiang.github.io/2018/07/21/%E5%A4%A9%E6%B4%A5%E6%97%85%E6%B8%B8%E8%A7%82%E6%84%9F/"/>
    <id>http://chuanqiang.github.io/2018/07/21/天津旅游观感/</id>
    <published>2018-07-21T09:03:11.000Z</published>
    <updated>2019-01-20T14:34:12.019Z</updated>
    
    <content type="html"><![CDATA[<p>说来惭愧，虽然天津离北京只一站之遥，但仍没有抽出时间去转转。总觉得这么近，什么时候去都行，然后就在这种心理下一拖再拖，忽略了许多触手可及的风景。这也是大部分人的通病吧：凡是触手可及的总不知珍惜。有些东西确确实实在不远的那里，但是如果你不走近，那便是相隔万里。</p><a id="more"></a><p>订票的时候才发现原来天津离北京这么近，高铁半个小时，打个盹的功夫，去天津简直比我在北京去公司还快。同样车票也很便宜，高铁五十几块，火车不到二十。一直比较迷惑为什么天津和北京相隔如此之近，但是口音、文还和饮食都相差如此之大。之前对天津的感触只是天津独特的口音还有天津相声以及《霍元甲》里那句『霍元甲你嘛时候成为津门第一啊』。</p><p>一下天津车站，和北京一样，无需出火车站，直接可以换乘地铁。天津西站地铁站内部的吊灯很精致，感受到了些许欧洲风情。<br><img src="http://image.zhangcq.vip/20180721153215968638222.jpg" alt="地铁站的吊灯"></p><p>先去了天津周边逛，放眼望去，能看到许多红色穹顶的略微带欧式风格的建筑，清水红砖墙配以灰色水泥檐口与墙裙带来了一丝活泼和新鲜感。当然也有现代化的高楼大厦拔地而起，现代风格和古欧洲风格并存。看这些建筑，可以感受到包容、吸收的特征，提现了天津多元化的构成和与时俱进的品位。<br><img src="http://image.zhangcq.vip/20180721153216024064543.jpg" alt="中西融合的建筑"><br><img src="http://image.zhangcq.vip/20180721153216086830588.jpg" alt=""><br><img src="http://image.zhangcq.vip/20180721153216193286699.jpg" alt="世纪钟"><br>其实，来天津游玩，很重要的是为了来看天津这个城市的建筑。天津，在近代史上很长一段时间是列强设立租界的地方，这使得天津的历史风貌建筑多以西洋建筑为代表。<br><img src="http://image.zhangcq.vip/20180721153216294055039.jpg" alt="路边雕塑"><br>位于解放北路的一组欧洲风格的银行、商家和饭店所构成的西洋古典建筑群是天津历史风貌建筑的典型代表，如采用爱奥尼柱式柱廊、严谨古典主义风格的天津汇丰银行大楼、英国古典风格的天津利顺德饭店、古典复兴主义风格的原中央银行天津分行大楼、兼具科林斯柱式和塔斯干柱式廊柱的原中法工商银行大楼等。<br><img src="http://image.zhangcq.vip/20180721153216095476840.jpg" alt=""><br><img src="http://image.zhangcq.vip/20180721153216177359235.jpg" alt=""><br>五大道上的历史风貌建筑更是在民间被称为“万国建筑博物馆”。五大道上比较有代表性的建筑有曼塞尔式红瓦坡顶的法国罗曼式原天津工商学院主楼、庆王府、疙瘩楼、达文士楼等。天津意式风情区，原为天津意租界，是意大利殖民地中唯一的租界，亦是亚洲唯一一处具有意大利风格的大型建筑群。区内云集着大量地中海风格的历史风貌建筑，如原回力球馆、意大利兵营、梁启超旧居、汤玉麟旧宅等。原处于法租界的和平路沿线也分布着劝业场、惠中饭店、浙江兴业银行、东莱银行、国民饭店、渤海大楼等历史风貌建筑。而一些优秀的西方宗教建筑如法国罗曼式风格的西开教堂、犹太教风格的天津犹太教堂、哥特式风格的望海楼教堂和安里甘教堂等也成为天津历史风貌建筑中的精品。<br><img src="http://image.zhangcq.vip/20180721153216097948845.jpg" alt="西开教堂"></p><p>着重说下『西开教堂』，这是我第一次见如此纯正壮观的教堂。西开教堂是天津市最大的罗马式建筑，也是天主教天津教区的主教座堂。西开教堂的建筑风格属于罗曼式，有三个并列的绿色穹顶，高达45米，每座穹顶上有一个青铜十字架。西开教堂建筑主体是用红黄色花砖砌造的，教堂内有许多壁画和大管风琴，前面院中有圣水坛，有左右两道大门，信徒分男女从不同的门入内。室内八角形的穹窿顶及侧窗均以彩色玻璃嵌作画。内墙彩绘壁画，装饰华丽，充满宗教神秘气息。去的时候，正赶上午间11：30的弥撒时间，是英文的祷告，不让拍照，在网上找了幅图：<br><img src="http://image.zhangcq.vip/20180721153216126956183.png" alt="西开教堂内部"></p><p>文革高峰时期，西开教堂成为红卫兵大扫荡和大批判的主要阵地，建筑墙面上贴着『砸的对，砸的好』以及炮轰黑教等巨幅标语，红卫兵焚烧《圣经》及各种宗教印刷品，捣毁堂内外诸多设施器物，甚至欲砸烂教堂。但由于教堂过于结识庞大，才得以幸存。<br><img src="http://image.zhangcq.vip/20180721153216155275132.png" alt="文革时期的西开教堂"></p><p>历史如烟，现在西开教堂人流不息，圣母玛利亚在花和蜡烛中，不时有人在那本打开的石制圣经前默默祈祷。</p><p>天津还有一个独特的建筑，真的让我大开眼界——瓷房子<br><img src="http://image.zhangcq.vip/20180721153216213492866.jpg" alt="瓷房子"><br>它的前身是历经百年的法式老洋楼，它的今生是极尽奢华的“瓷美楼奇”。<br><img src="http://image.zhangcq.vip/20180721153216222262305.png" alt="瓷房子顶部"></p><p>除了建筑，海河可以说是构筑天津风景最重要的部分，也是天津最重要的明信片。天津位于华北平原海河五大支流汇流处，东临渤海，北依燕山，海河在城中蜿蜒而过，海河是天津的母亲河，海哥横穿天津市区，形成一副美丽的都市风情画卷。<br><img src="http://image.zhangcq.vip/20180721153216184457321.jpg" alt="海河静静流过"><br>最让人眷恋的还是夜幕笼罩之后的海河，华灯初上，海河流水映照着两岸波澜的灯光，落霞与高楼齐飞，灯光与流水共舞。她有一个很好听的名字，叫做『沽水流霞』。<br><img src="http://image.zhangcq.vip/20180721153216201265147.jpg" alt="暮色下的天津和海河"><br>当然还有天津之眼，夜晚的摩天轮披上华丽的服饰，像巨人伫立在那里，用巨大的独眸，注释着喧嚣热闹的尘世。<br><img src="http://image.zhangcq.vip/20180721153216206353085.jpg" alt="天津之眼"><br>海河两岸的人民是幸福的，闲暇时分，夕阳西下，漫步在海河两岸，看大河东去，祥云渺茫，灯光闪闪，不禁会让人生出美好的记忆。</p><p>在天津去了两条街，一条是『意大利风情街』，满满的欧式风格建筑群；另一条是『古文化街』，扑面而来的中式风韵。<br><img src="http://image.zhangcq.vip/20180721153216257134156.png" alt="意大利风情街"><br><img src="http://image.zhangcq.vip/20180721153216238424396.jpg" alt="古文化街"></p><p>去古文化节看杨柳青的年画，赏泥人张的泥塑，吃东北角总店的耳朵眼，喝津门的杨氏茶汤，当然还有天津大麻花。<br><img src="http://image.zhangcq.vip/20180721153216280493045.png" alt="泥人张"></p><p>天津这个城市，有自己的特色和内涵，独特的建筑、美丽的海河风景、特色的口音和饮食都是她的明信片，是个值得去一次的城市。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;说来惭愧，虽然天津离北京只一站之遥，但仍没有抽出时间去转转。总觉得这么近，什么时候去都行，然后就在这种心理下一拖再拖，忽略了许多触手可及的风景。这也是大部分人的通病吧：凡是触手可及的总不知珍惜。有些东西确确实实在不远的那里，但是如果你不走近，那便是相隔万里。&lt;/p&gt;
    
    </summary>
    
      <category term="游记" scheme="http://chuanqiang.github.io/categories/%E6%B8%B8%E8%AE%B0/"/>
    
    
      <category term="游记" scheme="http://chuanqiang.github.io/tags/%E6%B8%B8%E8%AE%B0/"/>
    
      <category term="天津" scheme="http://chuanqiang.github.io/tags/%E5%A4%A9%E6%B4%A5/"/>
    
  </entry>
  
  <entry>
    <title>信息侵袭时代的生存指南</title>
    <link href="http://chuanqiang.github.io/2018/06/30/%E4%BF%A1%E6%81%AF%E4%BE%B5%E8%A2%AD%E6%97%B6%E4%BB%A3%E7%9A%84%E7%94%9F%E5%AD%98%E6%8C%87%E5%8D%97/"/>
    <id>http://chuanqiang.github.io/2018/06/30/信息侵袭时代的生存指南/</id>
    <published>2018-06-30T08:54:33.000Z</published>
    <updated>2018-08-10T10:54:40.224Z</updated>
    
    <content type="html"><![CDATA[<p>我们已经从一个信息匮乏的时代，走到了一个信息过剩的时代。但我们的大脑，却仍然保持着数十年、甚至上百年前的信息处理能力，没有任何提升。这带来的结果是什么呢？就是「信息」和「处理」的严重不匹配。</p><p>我们的信息触觉越来越敏锐，但却同时也越来越「空虚」。</p><p>信息大爆炸时代，其实正在不知不觉之中，侵袭着我们的生活，把我们变得又懒又笨。</p><a id="more"></a><h3 id="1-大脑"><a href="#1-大脑" class="headerlink" title="1. 大脑"></a>1. 大脑</h3><p>这几年，互联网整体的戾气，越来越重了。</p><p>拿知乎举例。很多人说，12-14年，是知乎的黄金时期。黄金在何处？不仅仅是因为内容质量高，也因为整体气氛十分和谐。有不同意见？另起一个回答反驳便是。攻方有礼有节，守方不卑不亢。一轮讨论下来，仍旧一片融洽，几无烟火气。但如今呢？不说知乎，在整个中文互联网上，随便一个帖子下面，总会见到各种谩骂、嘲讽、攻讦、抬杠、阴阳怪气……无论讨论什么问题，永远都要先分清楚「站队」和「友军」；只要跟自己意见相左，要么扣上帽子，要么口出恶言，一定要从气势上压倒对方；「理客中」开始成为一个贬义词，大家越来越倾向于极端、情绪化，但凡中立，都会被目为「洗地」；</p><p>当然，这种现象的原因是极其复杂的。有用户下沉的缘故，有网民整体素质的缘故，也有平台吸引流量的缘故……但不可忽视的原因，是海量信息所带来的「群体极化」：简单来说，假设有一个小群体，由100个人组成，每个人都有着某种倾向（比如「反对特朗普」）。那么，他们所组成的群体，总体的倾向跟个人一样，但是在程度上，会更极端、更激进。（这是社会学里一个非常经典的理论，也有着非常多的论述）</p><p>有论文指出：在网络讨论中，许多人到最后，都会形成一个同质的「兴趣共同体」。他们会主动搜索和传播己方观点，并借此辨别朋友和敌人。这个兴趣共同体一旦形成，就会自发地形成一层「盾牌」，排斥一切对立观点，从而维护其稳定性。</p><p>那么，为什么会产生「群体极化」和「兴趣共同体」呢？一个很重要的原因，是人天生具备两种倾向：<strong>证实性偏见，以及逆火效应</strong>。</p><p><strong>前者是说：对我们接触到的信息，我们会给「立场一致」的信息赋予更高权重，更容易接受它们。而后者是说：当我们接触到立场相反的信息时，如果信息的说服力不够，反而会加强我们对原有立场的信念。</strong>简单来说就是：「你的反驳如此拙劣，看来我的观点一定是对的，你才无话可说。」</p><p>重点是什么呢？在这个时代，各种媒体为了吸引眼球，喜欢剑走偏锋。能撩拨情绪、走极端方向的，就一定不会中立。每个人都在追热点、制造争议，越是有争议的内容，越是石破天惊的观点，就越容易吸引关注。</p><p>他们的套路是什么？制造对立。只要你内心里有偏向，他们就会竭力让你敌视另一方，找到「归属感」，从而给你贴上标签，成为他们的「铁粉」和「基本盘」。哪怕是比较善良的媒体，在这个「理客中」被人嫌弃的时代，你也很难要求他们做到毫无偏颇，客观呈现对立双方观点。</p><p>所以，这就是一个恶性循环。只要你有倾向 —— 哪怕只是10% —— 你也很容易被各种信息所影响、扭曲、站队。它们就如同引力一般，不断地往同一个方向拉扯着你。最终的结果，就是变成20%、30%，乃至100%。</p><h3 id="2-眼睛"><a href="#2-眼睛" class="headerlink" title="2. 眼睛"></a>2. 眼睛</h3><p>信息大爆炸，不但会促进「群体极化」，还会把我们困在一个个「信息气泡」之中。</p><p>什么是信息气泡呢？我举个例子。</p><p>正常刷知乎时，我只看「关注」频道 —— 基本是一堆博士生、优秀回答者，在聊心理学、经济学、神经科学。偶尔翻翻推荐，也都还在水准之上。因此，我一直对「知乎越来越水了」不以为然。直到有一天，账号掉线，需要重新登陆，我得以用游客模式看到知乎，不禁倒吸一口凉气：满屏幕的「网赚兼职」、娱乐八卦、地摊文学、「擦边球」，甚至还有看相算命的……</p><p>这是如何造成的？很大程度上，是各种内容分发平台「顺应喜好」「千人千面」「私人订制」的结果。</p><p>传播学大师李普曼提出过一个「拟态世界」的理论。他说：<strong>我们对真实世界的感知，并不是客观的，而是由各种媒介把信息进行加工、筛选之后，灌输给我们的。每个人接收到的信息都不同，所感知到的世界也就都不同。</strong></p><p>这些不同的感知世界，就是「拟态世界」，也就是一个个「信息气泡」。</p><p>我们都活在由自己筛选出来的信息所构筑的「气泡」里。<strong>这些气泡反射着外面的世界，让我们以为，那就是真实</strong>。</p><p>这些气泡是如何构筑的呢？</p><p>我们总会有一种倾向：在日常生活中，我们对某个对象越熟悉、信息越多，就越倾向于把它放到重要的位置上。也就是说，在我们的认知中，世界是这样的：最核心的位置是我们自己，内层是我们的朋友、同行、所处的行业，更外层是我们感兴趣的领域，常看的内容平台，再外层是我们向往的阶层……诸如此类。</p><p>而在这个「气泡」之外，有大量的人和事物（可能超过99%），是永远不会落入我们视野的。</p><p>这就是「信息气泡」所造成的，拟态世界与真实世界的脱节。</p><p>更可怕的是，这种现象对每个人都不例外。很多非常优秀的人，都多多少少存在同样的问题：视野狭窄，对「气泡」之外的世界非常陌生，甚至是戒备和轻视 —— 因为，在他们的「气泡」中，这些东西是看不到的，因而也是无价值的。</p><p>一旦熟悉的环境发生变化，所造成的冲击，很可能十分严重。</p><p>所以，我经常说，<strong>最难得的品质，是能够不断颠覆自己，拓展认知边界</strong> —— 尽管这是一件非常痛苦的事情。</p><p>但只有这样，你才能看到更广阔的世界。</p><h3 id="3-手"><a href="#3-手" class="headerlink" title="3. 手"></a>3. 手</h3><p>当大量信息变得触手可及的同时，也就磨灭了我们的动手能力。</p><p>这个时代，花大量时间去获取信息，成为一件性价比很低的事情 —— 有的是平台把信息做好，打包，整合，喂给你，为什么要花心思、花力气去获取呢？</p><p>但你有没有想过：信息的获取门槛非常低，就意味着什么？意味着谁都能够触及。亦即它失去了竞争力。</p><p>所以，我很少会去看畅销书，也很少去跟热门的产品。原因很简单。一个东西变得「热门」了，只能说明两件事：</p><blockquote><p>第一，它为了适应大众，把自己给简单化和庸俗化了。<br>第二，它已经成为家喻户晓的「常识」，你再去掌握它，已经没有太大意义。</p></blockquote><p>被动依赖于某个系统，你就永远无法超越这个系统，只会一直受制于它。</p><p>重要的信息，哪怕是可靠的来源，我也不会照盘全收，而是会退一步，先审视，再验证。</p><p>需要的东西，我绝不会假手于人，一定会自己亲手去搜索和获取。然后，再把它跟别人所提供的，做一个对比和整合。</p><p>比起「热门」，我更重视「前沿」。比起「别人都在聊什么」「我如何才能跟上他们」，我更注重「别人不知道什么」「别人可能需要什么」「我如何才能为他们提供价值」。</p><p>这就是我强调独立思考和深度思考的缘故：永远不要把自己思考、判断、决策的权利，拱手交给别人。否则，你就是在被别人所操纵。</p><p>不要让别人的大脑替你去思考。</p><h3 id="如何帮助我们在这个信息爆炸时代，不被外界所同化"><a href="#如何帮助我们在这个信息爆炸时代，不被外界所同化" class="headerlink" title="如何帮助我们在这个信息爆炸时代，不被外界所同化"></a>如何帮助我们在这个信息爆炸时代，不被外界所同化</h3><h4 id="1-化被动为主动"><a href="#1-化被动为主动" class="headerlink" title="1. 化被动为主动"></a>1. 化被动为主动</h4><p>时刻记住：「我」才是思考和决策的核心。不要依赖外界。不要做「伸手党」。</p><h4 id="2-化认同为破壁"><a href="#2-化认同为破壁" class="headerlink" title="2. 化认同为破壁"></a>2. 化认同为破壁</h4><p>拓展认知边界，最基本的，就是不断去接触自己不了解的领域，以及不同意的立场。这是一个艰难的过程 —— 你需要不断跟内心作斗争，需要耐心。但是，你会慢慢发现，很多观点，也许并不如你最初所想的那样。甚至，有的时候，你需要放弃自己习以为常的思维模式，完全跳脱出来，去理解新的事物 —— 训练营第一课的同学，对此一定深有感触。</p><p>有一个方法是：当自己阅读一本书、学习一个知识点的时候，不断反问自己：</p><p>关于这个领域，我的基本假设和立场是什么？</p><p>如果站到对立面去，会怎么样？</p><p>如果完全抛弃这些框架，从零接触这些信息，会怎么样？</p><p>这很困难，但只有这样，你才能从更高的层次审视自己，发现自己原本所看到的世界，只是很小的一个角落；自己原本所坚持的信念，也未必完全100%正确。</p><p>这就是一个「正 - 反 - 合」的过程。也是不断认知升级、自我迭代的过程。</p><h4 id="3-化断定为假设"><a href="#3-化断定为假设" class="headerlink" title="3. 化断定为假设"></a>3. 化断定为假设</h4><p>我们的大脑有一个缺陷：喜欢确定的东西，不喜欢不确定、不可控和不可知。但现实中呢？我们所生存着的，是一个概率世界。绝大多数情况下，能够100%确定的场合，极其稀少。更多的时候是什么？先做出一个假设，再去检验它，然后谨慎应用它，寻找它的漏洞并不断完善。这其实就是科学的思维方法和研究范式。</p><p>所以，在生活中，我会极其慎重地使用「绝对性」的语言：我很少告诉你「它一定如何如何」「必然怎样怎样」，而会说「很大程度」「一个重要原因」「很多时候是」……同样，我不希望你100%全盘接受我的内容，我希望你同步去思考：他说得对不对？有没有什么漏洞？我可以如何获取信息来增加了解？如果有不同的观点，更好的做法是什么呢？是自己寻找资料，来支撑或削弱自己的观点，然后把两个观点放到一起，进行对比，看哪一方更有说服力，更具备普遍性。与此同时，做好它被推翻和证伪的心理准备。</p><p>没有什么东西是永恒不变的，除了变化本身。这才是让自己跳出信息的枷锁，让信息「为我所用」的方式。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我们已经从一个信息匮乏的时代，走到了一个信息过剩的时代。但我们的大脑，却仍然保持着数十年、甚至上百年前的信息处理能力，没有任何提升。这带来的结果是什么呢？就是「信息」和「处理」的严重不匹配。&lt;/p&gt;
&lt;p&gt;我们的信息触觉越来越敏锐，但却同时也越来越「空虚」。&lt;/p&gt;
&lt;p&gt;信息大爆炸时代，其实正在不知不觉之中，侵袭着我们的生活，把我们变得又懒又笨。&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://chuanqiang.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="观点" scheme="http://chuanqiang.github.io/tags/%E8%A7%82%E7%82%B9/"/>
    
  </entry>
  
</feed>
