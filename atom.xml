<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>七弦桐</title>
  
  <subtitle>以梦为马，随处可栖</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://chuanqiang.github.io/"/>
  <updated>2018-07-21T09:12:47.287Z</updated>
  <id>http://chuanqiang.github.io/</id>
  
  <author>
    <name>七弦桐</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>天津旅游观感</title>
    <link href="http://chuanqiang.github.io/2018/07/21/%E5%A4%A9%E6%B4%A5%E6%97%85%E6%B8%B8%E8%A7%82%E6%84%9F/"/>
    <id>http://chuanqiang.github.io/2018/07/21/天津旅游观感/</id>
    <published>2018-07-21T09:03:11.000Z</published>
    <updated>2018-07-21T09:12:47.287Z</updated>
    
    <content type="html"><![CDATA[<p>说来惭愧，虽然天津离北京只一站之遥，但仍没有抽出时间去转转。总觉得这么近，什么时候去都行，然后就在这种心理下一拖再拖，忽略了许多触手可及的风景。这也是大部分人的通病吧：凡是触手可及的总不知珍惜。有些东西确确实实在不远的那里，但是如果你不走近，那便是相隔万里。</p><a id="more"></a><p>订票的时候才发现原来天津离北京这么近，高铁半个小时，打个盹的功夫，去天津简直比我在北京去公司还快。同样车票也很便宜，高铁五十几块，火车不到二十。一直比较迷惑为什么天津和北京相隔如此之近，但是口音、文还和饮食都相差如此之大。之前对天津的感触只是天津独特的口音还有天津相声以及《霍元甲》里那句『霍元甲你嘛时候成为津门第一啊』。</p><p>一下天津车站，和北京一样，无需出火车站，直接可以换乘地铁。天津西站地铁站内部的吊灯很精致，感受到了些许欧洲风情。<br><img src="http://oeckzejn4.bkt.clouddn.com/20180721153215968638222.jpg" alt="地铁站的吊灯"></p><p>先去了天津周边逛，放眼望去，能看到许多红色穹顶的略微带欧式风格的建筑，清水红砖墙配以灰色水泥檐口与墙裙带来了一丝活泼和新鲜感。当然也有现代化的高楼大厦拔地而起，现代风格和古欧洲风格并存。看这些建筑，可以感受到包容、吸收的特征，提现了天津多元化的构成和与时俱进的品位。<br><img src="http://oeckzejn4.bkt.clouddn.com/20180721153216024064543.jpg" alt="中西融合的建筑"><br><img src="http://oeckzejn4.bkt.clouddn.com/20180721153216086830588.jpg" alt=""><br><img src="http://oeckzejn4.bkt.clouddn.com/20180721153216193286699.jpg" alt="世纪钟"><br>其实，来天津游玩，很重要的是为了来看天津这个城市的建筑。天津，在近代史上很长一段时间是列强设立租界的地方，这使得天津的历史风貌建筑多以西洋建筑为代表。<br><img src="http://oeckzejn4.bkt.clouddn.com/20180721153216294055039.jpg" alt="路边雕塑"><br>位于解放北路的一组欧洲风格的银行、商家和饭店所构成的西洋古典建筑群是天津历史风貌建筑的典型代表，如采用爱奥尼柱式柱廊、严谨古典主义风格的天津汇丰银行大楼、英国古典风格的天津利顺德饭店、古典复兴主义风格的原中央银行天津分行大楼、兼具科林斯柱式和塔斯干柱式廊柱的原中法工商银行大楼等。<br><img src="http://oeckzejn4.bkt.clouddn.com/20180721153216095476840.jpg" alt=""><br><img src="http://oeckzejn4.bkt.clouddn.com/20180721153216177359235.jpg" alt=""><br>五大道上的历史风貌建筑更是在民间被称为“万国建筑博物馆”。五大道上比较有代表性的建筑有曼塞尔式红瓦坡顶的法国罗曼式原天津工商学院主楼、庆王府、疙瘩楼、达文士楼等。天津意式风情区，原为天津意租界，是意大利殖民地中唯一的租界，亦是亚洲唯一一处具有意大利风格的大型建筑群。区内云集着大量地中海风格的历史风貌建筑，如原回力球馆、意大利兵营、梁启超旧居、汤玉麟旧宅等。原处于法租界的和平路沿线也分布着劝业场、惠中饭店、浙江兴业银行、东莱银行、国民饭店、渤海大楼等历史风貌建筑。而一些优秀的西方宗教建筑如法国罗曼式风格的西开教堂、犹太教风格的天津犹太教堂、哥特式风格的望海楼教堂和安里甘教堂等也成为天津历史风貌建筑中的精品。<br><img src="http://oeckzejn4.bkt.clouddn.com/20180721153216097948845.jpg" alt="西开教堂"></p><p>着重说下『西开教堂』，这是我第一次见如此纯正壮观的教堂。西开教堂是天津市最大的罗马式建筑，也是天主教天津教区的主教座堂。西开教堂的建筑风格属于罗曼式，有三个并列的绿色穹顶，高达45米，每座穹顶上有一个青铜十字架。西开教堂建筑主体是用红黄色花砖砌造的，教堂内有许多壁画和大管风琴，前面院中有圣水坛，有左右两道大门，信徒分男女从不同的门入内。室内八角形的穹窿顶及侧窗均以彩色玻璃嵌作画。内墙彩绘壁画，装饰华丽，充满宗教神秘气息。去的时候，正赶上午间11：30的弥撒时间，是英文的祷告，不让拍照，在网上找了幅图：<br><img src="http://oeckzejn4.bkt.clouddn.com/20180721153216126956183.png" alt="西开教堂内部"></p><p>文革高峰时期，西开教堂成为红卫兵大扫荡和大批判的主要阵地，建筑墙面上贴着『砸的对，砸的好』以及炮轰黑教等巨幅标语，红卫兵焚烧《圣经》及各种宗教印刷品，捣毁堂内外诸多设施器物，甚至欲砸烂教堂。但由于教堂过于结识庞大，才得以幸存。<br><img src="http://oeckzejn4.bkt.clouddn.com/20180721153216155275132.png" alt="文革时期的西开教堂"></p><p>历史如烟，现在西开教堂人流不息，圣母玛利亚在花和蜡烛中，不时有人在那本打开的石制圣经前默默祈祷。</p><p>天津还有一个独特的建筑，真的让我大开眼界——瓷房子<br><img src="http://oeckzejn4.bkt.clouddn.com/20180721153216213492866.jpg" alt="瓷房子"><br>它的前身是历经百年的法式老洋楼，它的今生是极尽奢华的“瓷美楼奇”。<br><img src="http://oeckzejn4.bkt.clouddn.com/20180721153216222262305.png" alt="瓷房子顶部"></p><p>除了建筑，海河可以说是构筑天津风景最重要的部分，也是天津最重要的明信片。天津位于华北平原海河五大支流汇流处，东临渤海，北依燕山，海河在城中蜿蜒而过，海河是天津的母亲河，海哥横穿天津市区，形成一副美丽的都市风情画卷。<br><img src="http://oeckzejn4.bkt.clouddn.com/20180721153216184457321.jpg" alt="海河静静流过"><br>最让人眷恋的还是夜幕笼罩之后的海河，华灯初上，海河流水映照着两岸波澜的灯光，落霞与高楼齐飞，灯光与流水共舞。她有一个很好听的名字，叫做『沽水流霞』。<br><img src="http://oeckzejn4.bkt.clouddn.com/20180721153216201265147.jpg" alt="暮色下的天津和海河"><br>当然还有天津之眼，夜晚的摩天轮披上华丽的服饰，像巨人伫立在那里，用巨大的独眸，注释着喧嚣热闹的尘世。<br><img src="http://oeckzejn4.bkt.clouddn.com/20180721153216206353085.jpg" alt="天津之眼"><br>海河两岸的人民是幸福的，闲暇时分，夕阳西下，漫步在海河两岸，看大河东去，祥云渺茫，灯光闪闪，不禁会让人生出美好的记忆。</p><p>在天津去了两条街，一条是『意大利风情街』，满满的欧式风格建筑群；另一条是『古文化街』，扑面而来的中式风韵。<br><img src="http://oeckzejn4.bkt.clouddn.com/20180721153216257134156.png" alt="意大利风情街"><br><img src="http://oeckzejn4.bkt.clouddn.com/20180721153216238424396.jpg" alt="古文化街"></p><p>去古文化节看杨柳青的年画，赏泥人张的泥塑，吃东北角总店的耳朵眼，喝津门的杨氏茶汤，当然还有天津大麻花。<br><img src="http://oeckzejn4.bkt.clouddn.com/20180721153216280493045.png" alt="泥人张"></p><p>天津这个城市，有自己的特色和内涵，独特的建筑、美丽的海河风景、特色的口音和饮食都是她的明信片，是个值得去一次的城市。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;说来惭愧，虽然天津离北京只一站之遥，但仍没有抽出时间去转转。总觉得这么近，什么时候去都行，然后就在这种心理下一拖再拖，忽略了许多触手可及的风景。这也是大部分人的通病吧：凡是触手可及的总不知珍惜。有些东西确确实实在不远的那里，但是如果你不走近，那便是相隔万里。&lt;/p&gt;
    
    </summary>
    
      <category term="游记" scheme="http://chuanqiang.github.io/categories/%E6%B8%B8%E8%AE%B0/"/>
    
    
      <category term="游记" scheme="http://chuanqiang.github.io/tags/%E6%B8%B8%E8%AE%B0/"/>
    
      <category term="天津" scheme="http://chuanqiang.github.io/tags/%E5%A4%A9%E6%B4%A5/"/>
    
  </entry>
  
  <entry>
    <title>信息侵袭时代的生存指南</title>
    <link href="http://chuanqiang.github.io/2018/06/30/%E4%BF%A1%E6%81%AF%E4%BE%B5%E8%A2%AD%E6%97%B6%E4%BB%A3%E7%9A%84%E7%94%9F%E5%AD%98%E6%8C%87%E5%8D%97/"/>
    <id>http://chuanqiang.github.io/2018/06/30/信息侵袭时代的生存指南/</id>
    <published>2018-06-30T08:54:33.000Z</published>
    <updated>2018-06-30T08:57:04.361Z</updated>
    
    <content type="html"><![CDATA[<p>我们已经从一个信息匮乏的时代，走到了一个信息过剩的时代。但我们的大脑，却仍然保持着数十年、甚至上百年前的信息处理能力，没有任何提升。这带来的结果是什么呢？就是「信息」和「处理」的严重不匹配。</p><p>我们的信息触觉越来越敏锐，但却同时也越来越「空虚」。</p><p>信息大爆炸时代，其实正在不知不觉之中，侵袭着我们的生活，把我们变得又懒又笨。</p><a id="more"></a><h3 id="1-大脑"><a href="#1-大脑" class="headerlink" title="1. 大脑"></a>1. 大脑</h3><p>这几年，互联网整体的戾气，越来越重了。</p><p>拿知乎举例。很多人说，12-14年，是知乎的黄金时期。黄金在何处？不仅仅是因为内容质量高，也因为整体气氛十分和谐。有不同意见？另起一个回答反驳便是。攻方有礼有节，守方不卑不亢。一轮讨论下来，仍旧一片融洽，几无烟火气。但如今呢？不说知乎，在整个中文互联网上，随便一个帖子下面，总会见到各种谩骂、嘲讽、攻讦、抬杠、阴阳怪气……无论讨论什么问题，永远都要先分清楚「站队」和「友军」；只要跟自己意见相左，要么扣上帽子，要么口出恶言，一定要从气势上压倒对方；「理客中」开始成为一个贬义词，大家越来越倾向于极端、情绪化，但凡中立，都会被目为「洗地」；</p><p>当然，这种现象的原因是极其复杂的。有用户下沉的缘故，有网民整体素质的缘故，也有平台吸引流量的缘故……但不可忽视的原因，是海量信息所带来的「群体极化」：简单来说，假设有一个小群体，由100个人组成，每个人都有着某种倾向（比如「反对特朗普」）。那么，他们所组成的群体，总体的倾向跟个人一样，但是在程度上，会更极端、更激进。（这是社会学里一个非常经典的理论，也有着非常多的论述）</p><p>有论文指出：在网络讨论中，许多人到最后，都会形成一个同质的「兴趣共同体」。他们会主动搜索和传播己方观点，并借此辨别朋友和敌人。这个兴趣共同体一旦形成，就会自发地形成一层「盾牌」，排斥一切对立观点，从而维护其稳定性。</p><p>那么，为什么会产生「群体极化」和「兴趣共同体」呢？一个很重要的原因，是人天生具备两种倾向：<strong>证实性偏见，以及逆火效应</strong>。</p><p><strong>前者是说：对我们接触到的信息，我们会给「立场一致」的信息赋予更高权重，更容易接受它们。而后者是说：当我们接触到立场相反的信息时，如果信息的说服力不够，反而会加强我们对原有立场的信念。</strong>简单来说就是：「你的反驳如此拙劣，看来我的观点一定是对的，你才无话可说。」</p><p>重点是什么呢？在这个时代，各种媒体为了吸引眼球，喜欢剑走偏锋。能撩拨情绪、走极端方向的，就一定不会中立。每个人都在追热点、制造争议，越是有争议的内容，越是石破天惊的观点，就越容易吸引关注。</p><p>他们的套路是什么？制造对立。只要你内心里有偏向，他们就会竭力让你敌视另一方，找到「归属感」，从而给你贴上标签，成为他们的「铁粉」和「基本盘」。哪怕是比较善良的媒体，在这个「理客中」被人嫌弃的时代，你也很难要求他们做到毫无偏颇，客观呈现对立双方观点。</p><p>所以，这就是一个恶性循环。只要你有倾向 —— 哪怕只是10% —— 你也很容易被各种信息所影响、扭曲、站队。它们就如同引力一般，不断地往同一个方向拉扯着你。最终的结果，就是变成20%、30%，乃至100%。</p><h3 id="2-眼睛"><a href="#2-眼睛" class="headerlink" title="2. 眼睛"></a>2. 眼睛</h3><p>信息大爆炸，不但会促进「群体极化」，还会把我们困在一个个「信息气泡」之中。</p><p>什么是信息气泡呢？我举个例子。</p><p>正常刷知乎时，我只看「关注」频道 —— 基本是一堆博士生、优秀回答者，在聊心理学、经济学、神经科学。偶尔翻翻推荐，也都还在水准之上。因此，我一直对「知乎越来越水了」不以为然。直到有一天，账号掉线，需要重新登陆，我得以用游客模式看到知乎，不禁倒吸一口凉气：满屏幕的「网赚兼职」、娱乐八卦、地摊文学、「擦边球」，甚至还有看相算命的……</p><p>这是如何造成的？很大程度上，是各种内容分发平台「顺应喜好」「千人千面」「私人订制」的结果。</p><p>传播学大师李普曼提出过一个「拟态世界」的理论。他说：<strong>我们对真实世界的感知，并不是客观的，而是由各种媒介把信息进行加工、筛选之后，灌输给我们的。每个人接收到的信息都不同，所感知到的世界也就都不同。</strong></p><p>这些不同的感知世界，就是「拟态世界」，也就是一个个「信息气泡」。</p><p>我们都活在由自己筛选出来的信息所构筑的「气泡」里。<strong>这些气泡反射着外面的世界，让我们以为，那就是真实</strong>。</p><p>这些气泡是如何构筑的呢？</p><p>我们总会有一种倾向：在日常生活中，我们对某个对象越熟悉、信息越多，就越倾向于把它放到重要的位置上。也就是说，在我们的认知中，世界是这样的：最核心的位置是我们自己，内层是我们的朋友、同行、所处的行业，更外层是我们感兴趣的领域，常看的内容平台，再外层是我们向往的阶层……诸如此类。</p><p>而在这个「气泡」之外，有大量的人和事物（可能超过99%），是永远不会落入我们视野的。</p><p>这就是「信息气泡」所造成的，拟态世界与真实世界的脱节。</p><p>更可怕的是，这种现象对每个人都不例外。很多非常优秀的人，都多多少少存在同样的问题：视野狭窄，对「气泡」之外的世界非常陌生，甚至是戒备和轻视 —— 因为，在他们的「气泡」中，这些东西是看不到的，因而也是无价值的。</p><p>一旦熟悉的环境发生变化，所造成的冲击，很可能十分严重。</p><p>所以，我经常说，<strong>最难得的品质，是能够不断颠覆自己，拓展认知边界</strong> —— 尽管这是一件非常痛苦的事情。</p><p>但只有这样，你才能看到更广阔的世界。</p><h3 id="3-手"><a href="#3-手" class="headerlink" title="3. 手"></a>3. 手</h3><p>当大量信息变得触手可及的同时，也就磨灭了我们的动手能力。</p><p>这个时代，花大量时间去获取信息，成为一件性价比很低的事情 —— 有的是平台把信息做好，打包，整合，喂给你，为什么要花心思、花力气去获取呢？</p><p>但你有没有想过：信息的获取门槛非常低，就意味着什么？意味着谁都能够触及。亦即它失去了竞争力。</p><p>所以，我很少会去看畅销书，也很少去跟热门的产品。原因很简单。一个东西变得「热门」了，只能说明两件事：</p><blockquote><p>第一，它为了适应大众，把自己给简单化和庸俗化了。<br>第二，它已经成为家喻户晓的「常识」，你再去掌握它，已经没有太大意义。</p></blockquote><p>被动依赖于某个系统，你就永远无法超越这个系统，只会一直受制于它。</p><p>重要的信息，哪怕是可靠的来源，我也不会照盘全收，而是会退一步，先审视，再验证。</p><p>需要的东西，我绝不会假手于人，一定会自己亲手去搜索和获取。然后，再把它跟别人所提供的，做一个对比和整合。</p><p>比起「热门」，我更重视「前沿」。比起「别人都在聊什么」「我如何才能跟上他们」，我更注重「别人不知道什么」「别人可能需要什么」「我如何才能为他们提供价值」。</p><p>这就是我强调独立思考和深度思考的缘故：永远不要把自己思考、判断、决策的权利，拱手交给别人。否则，你就是在被别人所操纵。</p><p>不要让别人的大脑替你去思考。</p><h3 id="如何帮助我们在这个信息爆炸时代，不被外界所同化"><a href="#如何帮助我们在这个信息爆炸时代，不被外界所同化" class="headerlink" title="如何帮助我们在这个信息爆炸时代，不被外界所同化"></a>如何帮助我们在这个信息爆炸时代，不被外界所同化</h3><h4 id="1-化被动为主动"><a href="#1-化被动为主动" class="headerlink" title="1. 化被动为主动"></a>1. 化被动为主动</h4><p>时刻记住：「我」才是思考和决策的核心。不要依赖外界。不要做「伸手党」。</p><h4 id="2-化认同为破壁"><a href="#2-化认同为破壁" class="headerlink" title="2. 化认同为破壁"></a>2. 化认同为破壁</h4><p>拓展认知边界，最基本的，就是不断去接触自己不了解的领域，以及不同意的立场。这是一个艰难的过程 —— 你需要不断跟内心作斗争，需要耐心。但是，你会慢慢发现，很多观点，也许并不如你最初所想的那样。甚至，有的时候，你需要放弃自己习以为常的思维模式，完全跳脱出来，去理解新的事物 —— 训练营第一课的同学，对此一定深有感触。</p><p>有一个方法是：当自己阅读一本书、学习一个知识点的时候，不断反问自己：</p><p>关于这个领域，我的基本假设和立场是什么？</p><p>如果站到对立面去，会怎么样？</p><p>如果完全抛弃这些框架，从零接触这些信息，会怎么样？</p><p>这很困难，但只有这样，你才能从更高的层次审视自己，发现自己原本所看到的世界，只是很小的一个角落；自己原本所坚持的信念，也未必完全100%正确。</p><p>这就是一个「正 - 反 - 合」的过程。也是不断认知升级、自我迭代的过程。</p><h4 id="3-化断定为假设"><a href="#3-化断定为假设" class="headerlink" title="3. 化断定为假设"></a>3. 化断定为假设</h4><p>我们的大脑有一个缺陷：喜欢确定的东西，不喜欢不确定、不可控和不可知。但现实中呢？我们所生存着的，是一个概率世界。绝大多数情况下，能够100%确定的场合，极其稀少。更多的时候是什么？先做出一个假设，再去检验它，然后谨慎应用它，寻找它的漏洞并不断完善。这其实就是科学的思维方法和研究范式。</p><p>所以，在生活中，我会极其慎重地使用「绝对性」的语言：我很少告诉你「它一定如何如何」「必然怎样怎样」，而会说「很大程度」「一个重要原因」「很多时候是」……同样，我不希望你100%全盘接受我的内容，我希望你同步去思考：他说得对不对？有没有什么漏洞？我可以如何获取信息来增加了解？如果有不同的观点，更好的做法是什么呢？是自己寻找资料，来支撑或削弱自己的观点，然后把两个观点放到一起，进行对比，看哪一方更有说服力，更具备普遍性。与此同时，做好它被推翻和证伪的心理准备。</p><p>没有什么东西是永恒不变的，除了变化本身。这才是让自己跳出信息的枷锁，让信息「为我所用」的方式。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我们已经从一个信息匮乏的时代，走到了一个信息过剩的时代。但我们的大脑，却仍然保持着数十年、甚至上百年前的信息处理能力，没有任何提升。这带来的结果是什么呢？就是「信息」和「处理」的严重不匹配。&lt;/p&gt;
&lt;p&gt;我们的信息触觉越来越敏锐，但却同时也越来越「空虚」。&lt;/p&gt;
&lt;p&gt;信息大爆炸时代，其实正在不知不觉之中，侵袭着我们的生活，把我们变得又懒又笨。&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://chuanqiang.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="观点" scheme="http://chuanqiang.github.io/tags/%E8%A7%82%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>Quartz 入门教程</title>
    <link href="http://chuanqiang.github.io/2018/06/24/Quartz%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/"/>
    <id>http://chuanqiang.github.io/2018/06/24/Quartz 入门教程/</id>
    <published>2018-06-24T11:57:57.000Z</published>
    <updated>2018-06-25T02:07:58.459Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、关于-Quartz"><a href="#一、关于-Quartz" class="headerlink" title="一、关于 Quartz"></a>一、关于 Quartz</h2><p><img src="http://oeckzejn4.bkt.clouddn.com/20180623152976524823664.png" alt="Quartz logo"></p><a id="more"></a><ul><li>Quartz 是一个完全由 Java 编写的开源作业调度框架，为在 Java 应用程序中进行作业调度提供了简单却强大的机制。</li><li>Quartz 可以与 J2EE 与 J2SE 应用程序相结合也可以单独使用。</li><li>Quartz 允许程序开发人员根据时间的间隔来调度作业。</li><li>Quartz 实现了作业和触发器的多对多的关系，还能把多个作业与不同的触发器关联。</li></ul><h2 id="二、Quartz-核心概念"><a href="#二、Quartz-核心概念" class="headerlink" title="二、Quartz 核心概念"></a>二、Quartz 核心概念</h2><p><img src="http://oeckzejn4.bkt.clouddn.com/20180623152976577089638.png" alt="核心组件"></p><ul><li>Scheduler：调度容器</li><li>Job：Job接口类，即被调度的任务</li><li>JobDetail ：Job的描述类，job执行时的依据此对象的信息反射实例化出Job的具体执行对象。</li><li>Trigger：触发器，存放Job执行的时间策略。用于定义任务调度时间规则。</li><li>JobStore： 存储作业和调度期间的状态</li><li>Calendar：指定排除的时间点（如排除法定节假日）</li></ul><h4 id="job"><a href="#job" class="headerlink" title="job"></a>job</h4><p>  Job 是一个接口，只有一个方法  <code>void execute(JobExecutionContext context)</code>，开发者实现接口来定义任务。<code>JobExecutionContext</code> 类提供了调度上下文的各种信息。Job 运行时的信息保存在 <code>JobDataMap</code> 实例中。例如：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloJob</span> <span class="keyword">implements</span> <span class="title">BaseJob</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Logger _log = LoggerFactory.getLogger(HelloJob.class);  </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">HelloJob</span><span class="params">()</span> </span>&#123; &#125;  </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">(JobExecutionContext context)</span> <span class="keyword">throws</span> JobExecutionException </span>&#123;</div><div class="line">        _log.error(<span class="string">"Hello Job执行时间: "</span> + <span class="keyword">new</span> Date());</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h4 id="JobDetailImpl-类-JobDetail-接口"><a href="#JobDetailImpl-类-JobDetail-接口" class="headerlink" title="JobDetailImpl 类 / JobDetail 接口"></a>JobDetailImpl 类 / JobDetail 接口</h4><p><code>JobDetailImpl</code>类实现了<code>JobDetail</code>接口，用来描述一个 job，定义了job所有属性及其 <code>get/set</code> 方法。下面是 job 内部的主要属性：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">属性名 | 说明</div><div class="line">class  |必须是job实现类（比如`JobImpl`），用来绑定一个具体`job`  </div><div class="line">name  | job 名称。如果未指定，会自动分配一个唯一名称。所有job都必须拥有一个唯一`name`，如果两个 job 的`name`重复，则只有最前面的 job 能被调度 </div><div class="line">group  | job 所属的组名  </div><div class="line">description | job描述 </div><div class="line">durability  |是否持久化。如果job设置为非持久，当没有活跃的`trigger`与之关联的时候，job 会自动从`scheduler`中删除。也就是说，非持久`job`的生命期是由`trigger`的存在与否决定的  </div><div class="line">shouldRecover | 是否可恢复。如果 job 设置为可恢复，一旦 job 执行时`scheduler`发生`hard shutdown`（比如进程崩溃或关机），当`scheduler`重启后，该`job`会被重新执行  </div><div class="line">jobDataMap | 除了上面常规属性外，用户可以把任意`kv`数据存入`jobDataMap`，实现 job 属性的无限制扩展，执行 job 时可以使用这些属性数据。此属性的类型是`JobDataMap`，实现了`Serializable`接口，可做跨平台的序列化传输</div></pre></td></tr></table></figure></p><h4 id="Trigger"><a href="#Trigger" class="headerlink" title="Trigger"></a>Trigger</h4><p>是一个类，描述触发Job执行的时间触发规则。主要有  <code>SimpleTrigger</code>  和  <code>CronTrigger</code>  这两个子类。当仅需触发一次或者以固定时间间隔周期执行，<code>SimpleTrigger</code>是最适合的选择；而<code>CronTrigger</code>则可以通过<code>Cron</code>表达式定义出各种复杂时间规则的调度方案：如每早晨9:00执行，周一、周三、周五下午5:00执行等；</p><p>以下是 trigger 的属性：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">属性名 | 属性类型  | 说明   </div><div class="line">name  | 所有trigger通用  | trigger名称 </div><div class="line"> group  | 所有trigger通用 |  trigger所属的组名  </div><div class="line">description  | 所有trigger通用  | trigger描述  </div><div class="line">calendarName  | 所有trigger通用  | 日历名称，指定使用哪个Calendar类，经常用来从trigger的调度计划中排除某些时间段  </div><div class="line">misfireInstruction  | 所有trigger通用  | 错过job（未在指定时间执行的job）的处理策略，默认为MISFIRE\_INSTRUCTION\_SMART\_POLICY。详见这篇[blog](https://link.jianshu.com?t=http%3A%2F%2Fblog.csdn.net%2Fspbdev%2Farticle%2Fdetails%2F41679477)[^Quartz misfire](https://link.jianshu.com?t=%255BSpbDev%255D%28http%3A%2F%2Fmy.csdn.net%2FSpbDev%29%25EF%25BC%259A%255BQuartz%25E7%259A%2584misfire%255D%28http%3A%2F%2Fblog.csdn.net%2Fspbdev%2Farticle%2Fdetails%2F41679477%29)   </div><div class="line">priority  | 所有trigger通用  | 优先级，默认为5。当多个trigger同时触发job时，线程池可能不够用，此时根据优先级来决定谁先触发  </div><div class="line">jobDataMap  | 所有trigger通用 |  同job的jobDataMap。假如job和trigger的jobDataMap有同名key，通过getMergedJobDataMap()获取的jobDataMap，将以trigger的为准  </div><div class="line">startTime  | 所有trigger通用  | 触发开始时间，默认为当前时间。决定什么时间开始触发job  </div><div class="line">endTime  | 所有trigger通用  | 触发结束时间。决定什么时间停止触发job  </div><div class="line">nextFireTime |  SimpleTrigger私有  | 下一次触发job的时间 </div><div class="line">previousFireTime |  SimpleTrigger私有  | 上一次触发job的时间  </div><div class="line">repeatCount  | SimpleTrigger私有  | 需触发的总次数 </div><div class="line">timesTriggered  | SimpleTrigger私有  | 已经触发过的次数  </div><div class="line">repeatInterval  | SimpleTrigger私有  | 触发间隔时间</div></pre></td></tr></table></figure></p><h4 id="Calendar"><a href="#Calendar" class="headerlink" title="Calendar"></a>Calendar</h4><p><code>org.quartz.Calendar</code>和 <code>java.util.Calendar</code>不同，它是一些日历特定时间点的集合（可以简单地将<code>org.quartz.Calendar</code>看作<code>java.util.Calendar</code>的集合——<code>java.util.Calendar</code>代表一个日历时间点，无特殊说明后面的<code>Calendar</code>即指<code>org.quartz.Calendar</code>）。一个Trigger可以和多个Calendar关联，以便排除或包含某些时间点。假设，我们安排每周星期一早上10:00执行任务，但是如果碰到法定的节日，任务则不执行，这时就需要在<code>Trigger</code>触发机制的基础上使用Calendar进行定点排除。</p><h4 id="Scheduler"><a href="#Scheduler" class="headerlink" title="Scheduler"></a>Scheduler</h4><p>调度器，代表一个<strong>Quartz</strong>的独立运行容器，好比一个『大管家』，这个大管家应该可以接受 <code>Job</code>， 然后按照各种<code>Trigger</code>去运行，<strong>Trigger</strong>和<strong>JobDetail</strong>可以注册到Scheduler中，两者在Scheduler中拥有各自的组及名称，组及名称是Scheduler查找定位容器中某一对象的依据，<strong>Trigger的组及名称必须唯一，JobDetail的组和名称也必须唯一</strong>（但可以和Trigger的组和名称相同，因为它们是不同类型的）。Scheduler定义了多个接口方法，允许外部通过组及名称访问和控制容器中Trigger和JobDetail。</p><p><img src="http://oeckzejn4.bkt.clouddn.com/20180623152976544130422.png" alt=""><br>Scheduler 可以将 Trigger 绑定到某一 JobDetail 中，这样当 Trigger 触发时，对应的 Job 就被执行。可以通过 SchedulerFactory创建一个 Scheduler 实例。Scheduler 拥有一个 SchedulerContext，它类似于 ServletContext，保存着 Scheduler 上下文信息，Job 和 Trigger 都可以访问 SchedulerContext 内的信息。SchedulerContext 内部通过一个 Map，以键值对的方式维护这些上下文数据，SchedulerContext 为保存和获取数据提供了多个 put() 和 getXxx() 的方法。可以通过<code>Scheduler# getContext()</code>获取对应的<code>SchedulerContext</code>实例；</p><h4 id="ThreadPool"><a href="#ThreadPool" class="headerlink" title="ThreadPool"></a>ThreadPool</h4><p>Scheduler 使用一个线程池作为任务运行的基础设施，任务通过共享线程池中的线程提高运行效率。</p><h4 id="进行一个定时任务的简单实例"><a href="#进行一个定时任务的简单实例" class="headerlink" title="进行一个定时任务的简单实例"></a>进行一个定时任务的简单实例</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JobTest</span> <span class="keyword">implements</span> <span class="title">BaseJob</span> </span>&#123;</div><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> org.slf4j.Logger log = LoggerFactory.getLogger(JobTest.class);</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">(JobExecutionContext context)</span> <span class="keyword">throws</span> JobExecutionException </span>&#123;</div><div class="line">log.error(<span class="string">"JobTest 执行时间: "</span> + <span class="keyword">new</span> Date());</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">quartzTest</span><span class="params">()</span> <span class="keyword">throws</span> SchedulerException</span>&#123;</div><div class="line">    <span class="comment">// 1. 创建 SchedulerFactory</span></div><div class="line">    SchedulerFactory factory = <span class="keyword">new</span> StdSchedulerFactory();</div><div class="line">    <span class="comment">// 2. 从工厂中获取调度器实例</span></div><div class="line">    Scheduler scheduler = factory.getScheduler();</div><div class="line"></div><div class="line">    <span class="comment">// 3. 引进作业程序</span></div><div class="line">    JobDetail jobDetail = JobBuilder.newJob(JobTest.class).withDescription(<span class="string">"this is a ram job"</span>) <span class="comment">//job的描述</span></div><div class="line">            .withIdentity(<span class="string">"jobTest"</span>, <span class="string">"jobTestGrip"</span>) <span class="comment">//job 的name和group</span></div><div class="line">            .build();</div><div class="line"></div><div class="line">    <span class="keyword">long</span> time=  System.currentTimeMillis() + <span class="number">3</span>*<span class="number">1000L</span>; <span class="comment">//3秒后启动任务</span></div><div class="line">    Date statTime = <span class="keyword">new</span> Date(time);</div><div class="line"></div><div class="line">    <span class="comment">// 4. 创建Trigger</span></div><div class="line">    <span class="comment">//使用SimpleScheduleBuilder或者CronScheduleBuilder</span></div><div class="line">    Trigger trigger = TriggerBuilder.newTrigger()</div><div class="line">            .withDescription(<span class="string">"this is a cronTrigger"</span>)</div><div class="line">            .withIdentity(<span class="string">"jobTrigger"</span>, <span class="string">"jobTriggerGroup"</span>)</div><div class="line">            <span class="comment">//.withSchedule(SimpleScheduleBuilder.simpleSchedule())</span></div><div class="line">            .startAt(statTime)  <span class="comment">//默认当前时间启动</span></div><div class="line">            .withSchedule(CronScheduleBuilder.cronSchedule(<span class="string">"0/2 * * * * ?"</span>)) <span class="comment">//两秒执行一次</span></div><div class="line">            .build();</div><div class="line"></div><div class="line">    <span class="comment">// 5. 注册任务和定时器</span></div><div class="line">    scheduler.scheduleJob(jobDetail, trigger);</div><div class="line"></div><div class="line">    <span class="comment">// 6. 启动 调度器</span></div><div class="line">    scheduler.start();</div><div class="line">    _log.info(<span class="string">"启动时间 ： "</span> + <span class="keyword">new</span> Date());</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="三、Quartz-设计分析"><a href="#三、Quartz-设计分析" class="headerlink" title="三、Quartz 设计分析"></a>三、Quartz 设计分析</h2><h3 id="quartz-properties文件"><a href="#quartz-properties文件" class="headerlink" title="quartz.properties文件"></a>quartz.properties文件</h3><p>Quartz 有一个叫做<code>quartz.properties</code>的配置文件，它允许你修改框架运行时环境。缺省是使用 <code>Quartz.jar</code> 里面的<code>quartz.properties</code> 文件。你应该创建一个 <code>quartz.properties</code> 文件的副本并且把它放入你工程的 classes 目录中以便类装载器找到它。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">// 调度标识名 集群中每一个实例都必须使用相同的名称 （区分特定的调度器实例） </div><div class="line">org.quartz.scheduler.instanceName：DefaultQuartzScheduler </div><div class="line">// ID设置为自动获取 每一个必须不同 （所有调度器实例中是唯一的） </div><div class="line">org.quartz.scheduler.instanceId ：AUTO </div><div class="line">// 数据保存方式为持久化 </div><div class="line">org.quartz.jobStore.class ：org.quartz.impl.jdbcjobstore.JobStoreTX </div><div class="line">// 表的前缀 </div><div class="line">org.quartz.jobStore.tablePrefix ： QRTZ_ </div><div class="line">// 设置为TRUE不会出现序列化非字符串类到 BLOB 时产生的类版本问题 </div><div class="line">// org.quartz.jobStore.useProperties ： true </div><div class="line">// 加入集群 true 为集群 false不是集群 </div><div class="line">org.quartz.jobStore.isClustered ： false </div><div class="line">// 调度实例失效的检查时间间隔 </div><div class="line">org.quartz.jobStore.clusterCheckinInterval：20000 </div><div class="line">// 容许的最大作业延长时间 </div><div class="line">org.quartz.jobStore.misfireThreshold ：60000 </div><div class="line">// ThreadPool 实现的类名 </div><div class="line">org.quartz.threadPool.class：org.quartz.simpl.SimpleThreadPool </div><div class="line">// 线程数量 </div><div class="line">org.quartz.threadPool.threadCount ： 10 </div><div class="line">// 线程优先级 </div><div class="line">// threadPriority 属性的最大值是常量 java.lang.Thread.MAX_PRIORITY，等于10。最小值为常量 java.lang.Thread.MIN_PRIORITY，为1</div><div class="line">org.quartz.threadPool.threadPriority ： 5</div><div class="line">// 自创建父线程 </div><div class="line">//org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread： true </div><div class="line">// 数据库别名 </div><div class="line">org.quartz.jobStore.dataSource ： qzDS </div><div class="line">// 设置数据源 </div><div class="line">org.quartz.dataSource.qzDS.driver:com.mysql.jdbc.Driver </div><div class="line">org.quartz.dataSource.qzDS.URL:jdbc:mysql://localhost:3306/quartz </div><div class="line">org.quartz.dataSource.qzDS.user:root </div><div class="line">org.quartz.dataSource.qzDS.password:123456 </div><div class="line">org.quartz.dataSource.qzDS.maxConnection:10</div></pre></td></tr></table></figure></p><h3 id="Quartz-调度器"><a href="#Quartz-调度器" class="headerlink" title="Quartz 调度器"></a>Quartz 调度器</h3><p>Quartz框架的核心是调度器。调度器负责管理Quartz应用运行时环境。启动时，框架初始化一套<code>worker</code>线程，这套线程被调度器用来执行预定的作业。这就是 Quartz 怎样能并发运行多个作业的原理。Quartz 依赖一套松耦合的线程池管理部件来管理线程环境。</p><h3 id="两种作业存储方式"><a href="#两种作业存储方式" class="headerlink" title="两种作业存储方式"></a>两种作业存储方式</h3><h4 id="1-RAMJobStore"><a href="#1-RAMJobStore" class="headerlink" title="1. RAMJobStore"></a>1. RAMJobStore</h4><pre><code>- 通常的内存来持久化调度程序信息。这种作业存储类型最容易配置、构造和运行。- 因为这种方式的调度程序信息是被分配到 JVM 内存中，所以，当应用程序停止运行时，所有调度信息将被丢失。如果你需要在重新启动之间持久化调度信息，则将需要第二种类型的作业存储。 </code></pre><h4 id="2-JDBC作业存储"><a href="#2-JDBC作业存储" class="headerlink" title="2. JDBC作业存储"></a>2. JDBC作业存储</h4><pre><code>- 需要JDBC驱动程序和后台数据库来持久化调度程序信息（支持集群）</code></pre><h5 id="表关系和解释"><a href="#表关系和解释" class="headerlink" title="表关系和解释"></a>表关系和解释</h5><p><img src="http://oeckzejn4.bkt.clouddn.com/20180624152983097394657.png" alt="表关系"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">表名称 | 说明</div><div class="line">qrtz_blob_triggers | Trigger作为Blob类型存储(用于Quartz用户用JDBC创建他们自己定制的Trigger类型，JobStore 并不知道如何存储实例的时候)</div><div class="line">qrtz_calendars | 以Blob类型存储Quartz的Calendar日历信息， quartz可配置一个日历来指定一个时间范围</div><div class="line">qrtz_cron_triggers | 存储Cron Trigger，包括Cron表达式和时区信息。</div><div class="line">qrtz_fired_triggers | 存储与已触发的Trigger相关的状态信息，以及相联Job的执行信息</div><div class="line">qrtz_job_details | 存储每一个已配置的Job的详细信息</div><div class="line">qrtz_locks | 存储程序的非观锁的信息(假如使用了悲观锁)</div><div class="line">qrtz_paused_trigger_graps | 存储已暂停的Trigger组的信息</div><div class="line">qrtz_scheduler_state | 存储少量的有关 Scheduler的状态信息，和别的 Scheduler 实例(假如是用于一个集群中)</div><div class="line">qrtz_simple_triggers | 存储简单的 Trigger，包括重复次数，间隔，以及已触的次数</div><div class="line">qrtz_triggers | 存储已配置的 Trigger的信息</div><div class="line">qrzt_simprop_triggers</div></pre></td></tr></table></figure></p><h2 id="利用-SpringBoot-Quartz-搭建的界面化的-Demo"><a href="#利用-SpringBoot-Quartz-搭建的界面化的-Demo" class="headerlink" title="利用 SpringBoot + Quartz 搭建的界面化的 Demo"></a>利用 SpringBoot + Quartz 搭建的界面化的 Demo</h2><p>在网上找到一个搭好的 Demo，感谢大神！原文： <a href="https://blog.csdn.net/u012907049/article/details/73801122/" target="_blank" rel="external">Spring Boot集成持久化Quartz定时任务管理和界面展示</a></p><h4 id="本工程所用到的技术或工具"><a href="#本工程所用到的技术或工具" class="headerlink" title="本工程所用到的技术或工具"></a>本工程所用到的技术或工具</h4><blockquote><p> Spring Boot<br>Mybatis<br>Quartz<br>PageHelper<br>VueJS<br>ElementUI<br>MySql数据库</p></blockquote><h4 id="先看图："><a href="#先看图：" class="headerlink" title="先看图："></a>先看图：</h4><p><img src="http://oeckzejn4.bkt.clouddn.com/20180624152983342415181.png" alt="效果图.png"><br><img src="http://oeckzejn4.bkt.clouddn.com/20180624152983345244946.png" alt="新建任务.png"></p><h4 id="源码地址"><a href="#源码地址" class="headerlink" title="源码地址"></a>源码地址</h4><ul><li><a href="https://github.com/chuanqiang/QuartzDemo" target="_blank" rel="external">我的github</a></li><li><a href="https://gitee.com/zhang_cq/QuartzDemo" target="_blank" rel="external">我的码云</a></li><li><a href="https://github.com/tjfy1992/SpringBootQuartz" target="_blank" rel="external">原项目github</a></li></ul><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://www.jianshu.com/p/bab8e4e32952#fn3" target="_blank" rel="external">quartz原理揭秘和源码解读</a></li><li><a href="https://blog.csdn.net/guolong1983811/article/details/51501346" target="_blank" rel="external">quartz由浅入深</a></li><li><a href="https://www.w3cschool.cn/quartz_doc/" target="_blank" rel="external">Quartz官方文档</a></li><li><a href="https://blog.csdn.net/u012907049/article/details/73801122/" target="_blank" rel="external">Spring Boot集成持久化Quartz定时任务管理和界面展示</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、关于-Quartz&quot;&gt;&lt;a href=&quot;#一、关于-Quartz&quot; class=&quot;headerlink&quot; title=&quot;一、关于 Quartz&quot;&gt;&lt;/a&gt;一、关于 Quartz&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://oeckzejn4.bkt.clouddn.com/20180623152976524823664.png&quot; alt=&quot;Quartz logo&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://chuanqiang.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="技术" scheme="http://chuanqiang.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
      <category term="定时任务" scheme="http://chuanqiang.github.io/tags/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/"/>
    
      <category term="quartz" scheme="http://chuanqiang.github.io/tags/quartz/"/>
    
  </entry>
  
  <entry>
    <title>Solr 入门</title>
    <link href="http://chuanqiang.github.io/2018/06/18/Solr%20%E5%85%A5%E9%97%A8/"/>
    <id>http://chuanqiang.github.io/2018/06/18/Solr 入门/</id>
    <published>2018-06-18T05:10:21.000Z</published>
    <updated>2018-06-24T15:01:53.394Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、介绍"><a href="#一、介绍" class="headerlink" title="一、介绍"></a>一、介绍</h2><h3 id="企业站内搜索技术选型"><a href="#企业站内搜索技术选型" class="headerlink" title="企业站内搜索技术选型"></a>企业站内搜索技术选型</h3><p>在一些大型门户网站、电子商务网站等都需要站内搜索功能，使用传统的数据库查询方式实现搜索无法满足一些高级的搜索需求，比如：搜索速度要快、搜索结果按相关度排序、搜索内容格式不固定等，这里就需要使用全文检索技术实现搜索功能。</p><a id="more"></a><h4 id="1-单独使用Lucene实现"><a href="#1-单独使用Lucene实现" class="headerlink" title="1. 单独使用Lucene实现"></a>1. 单独使用Lucene实现</h4><p>单独使用Lucene实现站内搜索需要<strong>开发的工作量较大</strong>，主要表现在：索引维护、索引性能优化、搜索性能优化等，因此<strong>不建议采用</strong>。</p><h4 id="2-使用Google或Baidu接口"><a href="#2-使用Google或Baidu接口" class="headerlink" title="2. 使用Google或Baidu接口"></a>2. 使用Google或Baidu接口</h4><p>通过第三方搜索引擎提供的接口实现站内搜索，这样和第三方引擎系统依赖紧密，<strong>不方便扩展，不建议采用</strong>。</p><h4 id="3-使用Solr实现"><a href="#3-使用Solr实现" class="headerlink" title="3. 使用Solr实现"></a>3. 使用Solr实现</h4><p>基于Solr实现站内搜索扩展性较好并且可以减少程序员的工作量，因为Solr提供了较为完备的搜索引擎解决方案，因此在门户、论坛等系统中常用此方案。</p><h3 id="什么是Solr"><a href="#什么是Solr" class="headerlink" title="什么是Solr"></a>什么是Solr</h3><p>Solr 是Apache下的一个顶级开源项目，采用Java开发，它是基于<code>Lucene</code>的全文搜索服务器。Solr提供了比Lucene更为丰富的查询语言，同时实现了可配置、可扩展，并对索引、搜索性能进行了优化</p><p>Solr可以独立运行，运行在 Jetty、Tomcat 等这些 Servlet 容器中，Solr 索引的实现方法很简单，用 POST 方法向 Solr 服务器发送一个描述 Field 及其内容的 XML 文档，Solr根据xml文档添加、删除、更新索引 。Solr 搜索只需要发送 HTTP GET 请求，然后对 Solr 返回 Xml、json 等格式的查询结果进行解析，组织页面布局。Solr不提供构建UI的功能，Solr提供了一个管理界面，通过管理界面可以查询Solr的配置和运行情况。</p><p><strong>solr是基于lucene开发企业级搜索服务器，实际上就是封装了lucene。</strong></p><p>Solr 是一个独立的企业级搜索应用服务器，它对外提供类似于 Web-service的API 接口。用户可以通过 http 请求，向搜索引擎服务器提交一定格式的文件，生成索引；也可以通过提出查找请求，并得到返回结果</p><p>Solr类似 webservice，调用接口，实现增加，修改，删除，查询索引库。</p><h5 id="solr特性"><a href="#solr特性" class="headerlink" title="solr特性"></a>solr特性</h5><ul><li>高级的全文搜索功能</li><li>专为高通量的网络流量进行的优化</li><li>基于开放接口（xml和http）的标准</li><li>综合的html管理界面</li><li>可伸缩性－能够有效地复制到另外一个Solr搜索服务器</li><li>使用xml配置达到灵活性和适配性</li><li>可扩展的插件体系</li></ul><h3 id="Solr与Lucene的区别"><a href="#Solr与Lucene的区别" class="headerlink" title="Solr与Lucene的区别"></a>Solr与Lucene的区别</h3><p><strong>Lucene是一个开放源代码的全文检索引擎工具包，它不是一个完整的全文检索引擎</strong>，Lucene提供了完整的查询引擎和索引引擎，目的是为软件开发人员提供一个简单易用的工具包，以方便的在目标系统中实现全文检索的功能，或者以Lucene为基础构建全文检索引擎。</p><p><strong>Solr的目标是打造一款企业级的搜索引擎系统，它是一个搜索引擎服务，可以独立运行</strong>，通过Solr可以非常快速的构建企业的搜索引擎，通过Solr也可以高效的完成站内搜索功能。</p><p>Solr 类似 webservice，提供接口，调用接口，发送一些特点语句，实现增加，删除，修改，查询。</p><h2 id="二、solr-安装（mac）"><a href="#二、solr-安装（mac）" class="headerlink" title="二、solr 安装（mac）"></a>二、solr 安装（mac）</h2><ul><li><a href="http://lucene.apache.org/solr/" target="_blank" rel="external">官网</a></li></ul><ol><li>首先安装 jdk 和 jre</li><li>安装solr：<code>brew install solr</code>安装solr，可以通过<code>brew edit solr</code>修改要安装的版本</li><li>启动 solr：<code>solr start</code>。<ul><li>默认端口号<code>8083</code>，如果该端口被占用，则会自动切换可用的端口。<br><img src="http://upload-images.jianshu.io/upload_images/763193-6b12572c69b72862.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="solr start"></li><li>启动成功后再浏览器输入URL<a href="http://127.0.0.1:8983" target="_blank" rel="external">http://127.0.0.1:8983</a>，访问 solr 后台管理界面<br><img src="http://upload-images.jianshu.io/upload_images/763193-ef8ccf420e832507.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="浏览器效果"></li></ul></li><li>创建 core(可以理解为mysql中的数据库，即一个服务可以有多个库)：<code>solr create -c test_core</code><br>  <img src="http://upload-images.jianshu.io/upload_images/763193-76d7e403aa6b55f3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="创建成功的 core"></li><li>测试分词<br> <img src="http://upload-images.jianshu.io/upload_images/763193-6a5a43ca8452ec60.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="测试分词"></li></ol><p>由于solr自带的分词器无法将中文根据语义分词，需要引入中文分词器 IKAnalyzer</p><h2 id="三、IKAnalyzer-安装"><a href="#三、IKAnalyzer-安装" class="headerlink" title="三、IKAnalyzer 安装"></a>三、IKAnalyzer 安装</h2><p>下载地址：<a href="https://github.com/jxlwqq/Installing-Solr-and-indexing-MySQL-on-macOS/tree/master/file" target="_blank" rel="external">https://github.com/jxlwqq/Installing-Solr-and-indexing-MySQL-on-macOS/tree/master/file</a></p><h3 id="1-下载必要的组件"><a href="#1-下载必要的组件" class="headerlink" title="1. 下载必要的组件"></a>1. 下载必要的组件</h3><ul><li>IKAnalyzer jar 包: ik-analyzer-solr5-5.x.jar</li><li>IKAnalyzer 配置文件: IKAnalyzer.cfg.xml</li><li>词库: mydict.dic 和 stopword.dic</li></ul><p>下载后，将相关文件复制到相应的目录中，操作目录如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">cp ik-analyzer-solr5-5.x.jar /usr/local/Cellar/solr/7.3.1/server/solr-webapp/webapp/WEB-INF/lib/ </div><div class="line">mkdir /usr/local/Cellar/solr/7.3.1/server/solr-webapp/webapp/WEB-INF/lib/classes/</div><div class="line"></div><div class="line">cp IKAnalyzer.cfg.xml /usr/local/Cellar/solr/7.3.1/server/solr-webapp/webapp/WEB-INF/lib/classes/</div><div class="line">cp mydict.dic /usr/local/Cellar/solr/7.3.1/server/solr-webapp/webapp/WEB-INF/lib/classes/</div><div class="line">cp stopword.dic /usr/local/Cellar/solr/7.3.1/server/solr-webapp/webapp/WEB-INF/lib/classes/</div></pre></td></tr></table></figure></p><h3 id="2-修改-managed-schema-文件"><a href="#2-修改-managed-schema-文件" class="headerlink" title="2. 修改 managed-schema 文件"></a>2. 修改 managed-schema 文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">// test_core 仓库下</div><div class="line">vi /usr/local/Cellar/solr/7.3.1/server/solr/test_core/conf/managed-schema</div></pre></td></tr></table></figure><p>在<code>schema</code>标签内追加以下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;fieldType name=&quot;text_ik&quot; class=&quot;solr.TextField&quot;&gt;</div><div class="line">    &lt;analyzer class=&quot;org.wltea.analyzer.lucene.IKAnalyzer&quot;/&gt;</div><div class="line">&lt;/fieldType&gt;</div><div class="line">&lt;field name=&quot;text_ik&quot; type=&quot;text_ik&quot; indexed=&quot;true&quot; stored=&quot;true&quot; multiValued=&quot;false&quot;/&gt;</div></pre></td></tr></table></figure></p><h3 id="3-重启测试"><a href="#3-重启测试" class="headerlink" title="3. 重启测试"></a>3. 重启测试</h3><p>进行重启：<code>solr restart</code><br>进行测试：刷新页面，进入到 test_core 仓库下<br><img src="http://upload-images.jianshu.io/upload_images/763193-206cdceddb2ffc41.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="测试页面2"></p><p>测试成功！</p><h2 id="四、solr-常用命令"><a href="#四、solr-常用命令" class="headerlink" title="四、solr 常用命令"></a>四、solr 常用命令</h2><ol><li>其他命令<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">查看版本：solr -version</div><div class="line">重启：solr restart</div><div class="line">关闭：solr stop -all（或者指定端口号：solr stop -p 8983）</div><div class="line">创建集合：solr create -c [集合名称]</div><div class="line">删除集合：solr delete -c [集合名称]</div></pre></td></tr></table></figure></li></ol><h4 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;delete&gt;</div><div class="line">    &lt;query&gt;*:*&lt;/query&gt;</div><div class="line">&lt;/delete&gt;</div><div class="line">&lt;commit/&gt;</div></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/763193-c7341df0943093cf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="solr 删除数据"></p><h4 id="删除字段"><a href="#删除字段" class="headerlink" title="删除字段"></a>删除字段</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;delete-field&quot; : &#123;</div><div class="line">        &quot;name&quot; : &quot;字段名称&quot;</div><div class="line">    &#125;,</div><div class="line">    &quot;delete-field&quot; : &#123;</div><div class="line">        &quot;name&quot; : &quot;字段名称&quot;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>提交的地址<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">POST    http://localhost:8983/solr/集合名称/schema</div></pre></td></tr></table></figure></p><h4 id="添加字段"><a href="#添加字段" class="headerlink" title="添加字段"></a>添加字段</h4><blockquote><p>name: 字段名称<br>type: 字段类型<br>stored: 是否保存<br>indexed: 是否索引</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;add-field&quot; : &#123;</div><div class="line">        &quot;name&quot; : &quot;字段名称&quot;,</div><div class="line">        &quot;type&quot; : &quot;text_ik&quot;,</div><div class="line">        &quot;stored&quot; : &quot;true&quot;,</div><div class="line">        &quot;indexed&quot; : &quot;true&quot;</div><div class="line">    &#125;,</div><div class="line">    &quot;add-field&quot; : &#123;</div><div class="line">        &quot;name&quot; : &quot;字段名称&quot;,</div><div class="line">        &quot;type&quot; : &quot;text_ik&quot;,</div><div class="line">        &quot;stored&quot; : &quot;true&quot;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>提交地址<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">POST    http://localhost:8983/solr/集合名称/schema</div></pre></td></tr></table></figure></p><p>还可以在管理员界面添加<br><img src="http://upload-images.jianshu.io/upload_images/763193-09d787dad75b7b69.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="solr 管理页面添加字段"></p><h2 id="五、solrJ"><a href="#五、solrJ" class="headerlink" title="五、solrJ"></a>五、solrJ</h2><p>SolrJ 是操作 Solr官方提供的Java客户端，它底层使用<code>HttpClient</code>封装了大量的方法，使用它可以非常方便的对Solr索引进行增加、删除、修改、查询操作。</p><h4 id="1-增加maven依赖"><a href="#1-增加maven依赖" class="headerlink" title="1. 增加maven依赖"></a>1. 增加maven依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.solr<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>solr-solrj<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>7.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure><h4 id="2-创建-Model"><a href="#2-创建-Model" class="headerlink" title="2. 创建 Model"></a>2. 创建 Model</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Man</span> </span>&#123;</div><div class="line"><span class="meta">@Field</span>(<span class="string">"id"</span>)</div><div class="line"><span class="keyword">private</span> String id;</div><div class="line"><span class="meta">@Field</span>(<span class="string">"name"</span>)</div><div class="line"><span class="keyword">private</span> String name;</div><div class="line"><span class="meta">@Field</span>(<span class="string">"age"</span>)</div><div class="line"><span class="keyword">private</span> Integer age;</div><div class="line">        <span class="comment">// get()、set() ...</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="3-创建演示类"><a href="#3-创建演示类" class="headerlink" title="3. 创建演示类"></a>3. 创建演示类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SolrJExample</span> </span>&#123;</div><div class="line"><span class="keyword">private</span> HttpSolrClient solrClient;</div><div class="line"><span class="comment">//由于目前只有一个Core，就直接写在url上拉，这里不写的话CRUD操作前都要声明被操作的Core，切记。</span></div><div class="line"><span class="keyword">private</span> <span class="keyword">final</span> String solrUrl = <span class="string">"http://localhost:8983/solr/test_core"</span>;</div><div class="line"></div><div class="line"><span class="comment">// 初始化客户端</span></div><div class="line"><span class="meta">@Before</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span> </span>&#123;</div><div class="line">solrClient = <span class="keyword">new</span> HttpSolrClient.Builder(solrUrl)</div><div class="line">.withConnectionTimeout(<span class="number">10000</span>)</div><div class="line">.withSocketTimeout(<span class="number">60000</span>)</div><div class="line">.build();</div><div class="line"><span class="comment">//由于目前只有一个Core，就直接写在url上拉，这里不写的话CRUD操作前都要声明被操作的Core，切记。</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 提交，关闭会话</span></div><div class="line"><span class="meta">@After</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span> <span class="keyword">throws</span> IOException, SolrServerException </span>&#123;</div><div class="line">solrClient.commit();</div><div class="line">solrClient.close();</div><div class="line"></div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="4-添加索引"><a href="#4-添加索引" class="headerlink" title="4. 添加索引"></a>4. 添加索引</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 添加一个用户</span></div><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addOne</span><span class="params">()</span> <span class="keyword">throws</span> IOException, SolrServerException </span>&#123;</div><div class="line">    solrClient.addBean(<span class="keyword">new</span> Man(<span class="string">"2"</span>, <span class="string">"张三"</span>, <span class="number">48</span>));</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 添加多个用户</span></div><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addList</span><span class="params">()</span> <span class="keyword">throws</span> IOException, SolrServerException </span>&#123;</div><div class="line">    <span class="keyword">int</span> i = <span class="number">1</span>;</div><div class="line">    <span class="keyword">int</span> max = <span class="number">100</span>;</div><div class="line"></div><div class="line">    List&lt;Man&gt; userList = <span class="keyword">new</span> ArrayList&lt;Man&gt;(<span class="number">100</span>);</div><div class="line"></div><div class="line">    <span class="keyword">while</span> (i &lt;= max) &#123;</div><div class="line">        userList.add(<span class="keyword">new</span> Man(String.valueOf(i), <span class="string">"土豆-"</span> + i, i));</div><div class="line">        i++;</div><div class="line">    &#125;</div><div class="line">    solrClient.addBeans(userList);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><img src="http://oeckzejn4.bkt.clouddn.com/20180624152985103015701.png" alt="效果.png"></p><h4 id="5-删除、查询及类完整代码"><a href="#5-删除、查询及类完整代码" class="headerlink" title="5. 删除、查询及类完整代码"></a>5. 删除、查询及类完整代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SolrJExample</span> </span>&#123;</div><div class="line"><span class="keyword">private</span> HttpSolrClient solrClient;</div><div class="line"><span class="comment">//由于目前只有一个Core，就直接写在url上拉，这里不写的话CRUD操作前都要声明被操作的Core，切记。</span></div><div class="line"><span class="keyword">private</span> <span class="keyword">final</span> String solrUrl = <span class="string">"http://localhost:8983/solr/test_core"</span>;</div><div class="line"></div><div class="line"><span class="comment">// 初始化客户端</span></div><div class="line"><span class="meta">@Before</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span> </span>&#123;</div><div class="line">solrClient = <span class="keyword">new</span> HttpSolrClient.Builder(solrUrl)</div><div class="line">.withConnectionTimeout(<span class="number">10000</span>)</div><div class="line">.withSocketTimeout(<span class="number">60000</span>)</div><div class="line">.build();</div><div class="line"><span class="comment">//由于目前只有一个Core，就直接写在url上拉，这里不写的话CRUD操作前都要声明被操作的Core，切记。</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 提交，关闭会话</span></div><div class="line"><span class="meta">@After</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span> <span class="keyword">throws</span> IOException, SolrServerException </span>&#123;</div><div class="line">solrClient.commit();</div><div class="line">solrClient.close();</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 添加一个用户</span></div><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addOne</span><span class="params">()</span> <span class="keyword">throws</span> IOException, SolrServerException </span>&#123;</div><div class="line">solrClient.addBean(<span class="keyword">new</span> Man(<span class="string">"2"</span>, <span class="string">"张三"</span>, <span class="number">48</span>));</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 添加多个用户</span></div><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addList</span><span class="params">()</span> <span class="keyword">throws</span> IOException, SolrServerException </span>&#123;</div><div class="line"><span class="keyword">int</span> i = <span class="number">1</span>;</div><div class="line"><span class="keyword">int</span> max = <span class="number">100</span>;</div><div class="line"></div><div class="line">List&lt;Man&gt; userList = <span class="keyword">new</span> ArrayList&lt;Man&gt;(<span class="number">100</span>);</div><div class="line"></div><div class="line"><span class="keyword">while</span> (i &lt;= max) &#123;</div><div class="line">userList.add(<span class="keyword">new</span> Man(String.valueOf(i), <span class="string">"土豆-"</span> + i, i));</div><div class="line">i++;</div><div class="line">&#125;</div><div class="line">solrClient.addBeans(userList);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span> <span class="keyword">throws</span> IOException, SolrServerException </span>&#123;</div><div class="line">solrClient.deleteById(<span class="string">"1"</span>);<span class="comment">//删除一个</span></div><div class="line"></div><div class="line">solrClient.deleteByQuery(<span class="string">"*:*"</span>);<span class="comment">//删除所有</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Test</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">query</span><span class="params">()</span> <span class="keyword">throws</span> IOException, SolrServerException </span>&#123;</div><div class="line"><span class="comment">//构造查询参数</span></div><div class="line">SolrQuery query = <span class="keyword">new</span> SolrQuery(<span class="string">"name:土豆*"</span>);<span class="comment">//查询姓名包含土豆的User</span></div><div class="line">query.set(<span class="string">"fl"</span>, <span class="string">"id,name"</span>);<span class="comment">//返回字段值，不返回则为null</span></div><div class="line">query.setSort(<span class="string">"age"</span>, SolrQuery.ORDER.asc);<span class="comment">//按年龄升序</span></div><div class="line">query.setHighlight(<span class="keyword">true</span>);                <span class="comment">//开启高亮</span></div><div class="line">query.setHighlightFragsize(<span class="number">10</span>);          <span class="comment">//返回的字符个数</span></div><div class="line">query.setHighlightRequireFieldMatch(<span class="keyword">true</span>);</div><div class="line">query.setHighlightSimplePre(<span class="string">"&lt;font color=\"red\"&gt;"</span>);    <span class="comment">//前缀</span></div><div class="line">query.setHighlightSimplePost(<span class="string">"&lt;/font&gt;"</span>);    <span class="comment">//后缀</span></div><div class="line">query.setParam(<span class="string">"hl.fl"</span>, <span class="string">"name"</span>);      <span class="comment">//高亮字段</span></div><div class="line">query.setStart(<span class="number">0</span>);  <span class="comment">//分页参数</span></div><div class="line">query.setRows(<span class="number">10</span>); <span class="comment">//分页参数</span></div><div class="line"></div><div class="line"><span class="comment">//获得查询结果</span></div><div class="line">QueryResponse response = solrClient.query(query);</div><div class="line"></div><div class="line"><span class="comment">//转换为Java Bean</span></div><div class="line">List&lt;Man&gt; userList = response.getBeans(Man.class);</div><div class="line"></div><div class="line">Assert.assertNotNull(userList);</div><div class="line">Assert.assertTrue(userList.size() == <span class="number">10</span>);</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><hr><p>参考资料</p><ul><li><a href="http://lucene.apache.org/solr/6_2_0/solr-solrj/" target="_blank" rel="external">Solr 6.2.0 solr-solrj API</a></li><li><a href="https://www.linuxidc.com/Linux/2016-11/137006.htm" target="_blank" rel="external">macOS安装Solr并索引MySQL</a></li><li><a href="https://blog.csdn.net/yuruixin_china/article/details/80037873" target="_blank" rel="external">solr安装、使用、配置中文分词器</a></li><li><a href="https://blog.csdn.net/column/details/14165.html" target="_blank" rel="external">solr 学习与测试</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、介绍&quot;&gt;&lt;a href=&quot;#一、介绍&quot; class=&quot;headerlink&quot; title=&quot;一、介绍&quot;&gt;&lt;/a&gt;一、介绍&lt;/h2&gt;&lt;h3 id=&quot;企业站内搜索技术选型&quot;&gt;&lt;a href=&quot;#企业站内搜索技术选型&quot; class=&quot;headerlink&quot; title=&quot;企业站内搜索技术选型&quot;&gt;&lt;/a&gt;企业站内搜索技术选型&lt;/h3&gt;&lt;p&gt;在一些大型门户网站、电子商务网站等都需要站内搜索功能，使用传统的数据库查询方式实现搜索无法满足一些高级的搜索需求，比如：搜索速度要快、搜索结果按相关度排序、搜索内容格式不固定等，这里就需要使用全文检索技术实现搜索功能。&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://chuanqiang.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="solr" scheme="http://chuanqiang.github.io/tags/solr/"/>
    
      <category term="搜索" scheme="http://chuanqiang.github.io/tags/%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>干杯，朋友</title>
    <link href="http://chuanqiang.github.io/2018/06/17/%E5%B9%B2%E6%9D%AF%EF%BC%8C%E6%9C%8B%E5%8F%8B/"/>
    <id>http://chuanqiang.github.io/2018/06/17/干杯，朋友/</id>
    <published>2018-06-17T09:36:11.000Z</published>
    <updated>2018-06-18T04:30:31.131Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://oeckzejn4.bkt.clouddn.com/20180617152922829457807.png" alt=""></p><a id="more"></a><p>离职代表着离别，<br>诗人说，每一次告别是一次死亡。<br>看你消失在暮霭里，<br>连同一段春天的记忆。</p><p>短暂的午餐，<br>融洽的交谈，<br>吃的很少，犹如你的话语和矜持。<br>丝毫不像个东北汉子，<br>细致、单纯而又孩子气。</p><p>你走后，<br>宛如一阵风拂过，<br>亦如一种味道的消散。<br>交点过后飞驰而过的直线，<br>有过焦点，<br>却又相去甚远。</p><p>某个发呆的午后，<br>思绪蔓延，<br>回忆里，<br>阳光映照我们的脸。</p><p>干杯，朋友！<br>喝下这杯酒，<br>味道消散，<br>时光永远。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oeckzejn4.bkt.clouddn.com/20180617152922829457807.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="为你写诗" scheme="http://chuanqiang.github.io/categories/%E4%B8%BA%E4%BD%A0%E5%86%99%E8%AF%97/"/>
    
    
      <category term="诗" scheme="http://chuanqiang.github.io/tags/%E8%AF%97/"/>
    
  </entry>
  
  <entry>
    <title>iPad 初体验</title>
    <link href="http://chuanqiang.github.io/2018/06/04/iPad%20%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
    <id>http://chuanqiang.github.io/2018/06/04/iPad 初体验/</id>
    <published>2018-06-04T05:40:52.000Z</published>
    <updated>2018-06-04T05:41:35.398Z</updated>
    
    <content type="html"><![CDATA[<p>趁着 618 的有活动，终于入手了 2018 new iPad ，至此我的 Apple 生态圈又壮大了一步：现在手中有 mac book pro、iPhone7、new iPad 2018 以及 Beats  Solo 3。不得不说苹果生态圈的强大，一旦你有超过两台的  apple 产品，你就会体会到苹果自家产品间的交互和共生互利的优质体验。不管在 App上，在云服务，数据的传输和共享方面都存在效率和体验上的升华。</p><p><img src="http://oeckzejn4.bkt.clouddn.com/20180604152809073239290.jpg" alt="iPad.jpg"></p><a id="more"></a><p>比如，我的新 iPad 刚到手一开机，我的iPhone 就有一个弹框，通过指纹确认的方式来把新 iPad 加入到你的 icloud，然后你的手机数据就会自动同步过去，不管是照片、软件、文件，哪怕是 WIFI 都会自动保存密码并连接。如此的便利性，让你上手 iPad 变得低成本化。同样的 ios 系统，我用起 ipad 来得心应手，当然有一些手势交互因为大屏幕的关系会有适配从而和 iPhone 不同。</p><p>iPad 用起来，就一个字：爽。那种大屏幕大视野带来的视觉冲击感，主要集中体现在阅读、视频和游戏。Retina 显示屏，一整块的玻璃宛如一汪清水，晶莹剔透，水下是一个精彩纷呈的互联网世界，鞠一捧清水，尝一口甘冽，就像刚换了座驾的机车爱好者，尽情享受耳旁呼啸而过的风和动人的风景。</p><p><img src="http://oeckzejn4.bkt.clouddn.com/20180604152809081247753.jpg" alt="iPad.jpg"></p><p>这款 iPad 是 9.7.英寸的 Retina 屏幕，配置是32G WLAN版/A10 芯片/银色，和以往的 iPad 相差无几，做工一流，一股浓浓的苹果风格。当然关于硬件上的缺点也是有的：</p><ol><li>没有 3D touch，这是一个用顺手就再也回不去的功能。</li><li>边框宽，尤其是额头和下巴，这几年被全面屏调教的审美已经看不惯这种大额头下巴的设计（此处心疼魅族一分钟）。</li></ol><p>当然，对于两千多的售价，也不能对它太苛刻，这样的性价比已经感觉很值了。</p><p>关于 iPad 的生产力之说，网上也是沸沸扬扬，莫衷一是。其实我觉得虽然这是一个『萝卜白菜各有所爱』的话题，但也并不是没有讨论的必要，通过这种探讨可以拓宽我们对 iPad 的使用场景的认知，以及对自己所需的生产力和生产工具的辩证思考。</p><p>现代人常常陷入到一种工具迷思中。所谓工具迷思，就是希望通过某个特定工具完成一系列任务的念想，然而在越来越复杂的现代社会里，即便是某个特定领域，一方面由于应用或工具自身的局限性，另一方面则是事件的复杂性，很难出现这样一个能够完成所有流程的工具。</p><p>所以不要陷入工具的迷思，任何工具的使用都应该从自身的需求出发，从而让工具服务于生活，再而延伸我们的生活场景。</p><p>相信通过一段时间的探索，我能找到这款设备在生活中最佳的适应点，然后让它最大化的发光发热，并且在上边发现和探索一些有趣有用有料的 APP ，让科技产品更好的为生活造就幸福感。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;趁着 618 的有活动，终于入手了 2018 new iPad ，至此我的 Apple 生态圈又壮大了一步：现在手中有 mac book pro、iPhone7、new iPad 2018 以及 Beats  Solo 3。不得不说苹果生态圈的强大，一旦你有超过两台的  apple 产品，你就会体会到苹果自家产品间的交互和共生互利的优质体验。不管在 App上，在云服务，数据的传输和共享方面都存在效率和体验上的升华。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://oeckzejn4.bkt.clouddn.com/20180604152809073239290.jpg&quot; alt=&quot;iPad.jpg&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="独白" scheme="http://chuanqiang.github.io/categories/%E7%8B%AC%E7%99%BD/"/>
    
    
      <category term="产品" scheme="http://chuanqiang.github.io/tags/%E4%BA%A7%E5%93%81/"/>
    
      <category term="iPad" scheme="http://chuanqiang.github.io/tags/iPad/"/>
    
      <category term="apple" scheme="http://chuanqiang.github.io/tags/apple/"/>
    
  </entry>
  
  <entry>
    <title>大千世界 - 歌评</title>
    <link href="http://chuanqiang.github.io/2018/06/01/%E5%A4%A7%E5%8D%83%E4%B8%96%E7%95%8C%20-%20%E6%AD%8C%E8%AF%84/"/>
    <id>http://chuanqiang.github.io/2018/06/01/大千世界 - 歌评/</id>
    <published>2018-06-01T03:40:37.000Z</published>
    <updated>2018-06-04T05:39:20.405Z</updated>
    
    <content type="html"><![CDATA[<p>今天是 2018年6月1号，国际儿童节，当我们沉浸在儿童节的氛围中时（虽然我们都已不再是儿童，但并不妨碍我们过节日），许嵩已经在另一座山头像我们招手了。他选择在这一天发布一首新歌，叫做《大千世界》。开始没听懂，听了几遍才明白这不是一首普通的歌，而是这是一首献给叙利亚儿童的儿童节反战礼物。<br><img src="http://oeckzejn4.bkt.clouddn.com/20180601152782485610264.jpg" alt="大千世界 专辑封面.jpg"><br><a id="more"></a></p><p>歌词如下：</p><blockquote><p>大到有些滑稽，<br>像沙漠连夜大雨，<br>规则缺席，<br>亦真亦假的玩具，<br>还握在你手里，<br>吃透温柔的暴力就不称奇，<br>我的黑框眼镜在Assad湖边走火，<br>风马牛齐聚，<br>你被带走时我亲吻了你下颌的伤疤，<br>表情很平静，<br>你是大千世界一汪清泉，<br>还是泉边那只神秘孔雀，<br>在和你灵魂谋面之前，<br>让贪念趁火打劫，<br>你是大千世界尘埃等闲，<br>也是我仅有的风花雪月，<br>爱死或是恨终我都感谢，<br>万花筒里消受幻影碎片，<br>你穿着我的T恤，<br>大到有些滑稽，<br>像沙漠连夜大雨，<br>规则缺席，<br>亦真亦假的玩具，<br>还握在你手里，<br>吃透温柔的暴力就不称奇，<br>我的黑框眼镜在Assad湖边走火，<br>风马牛齐聚，<br>你被带走时我亲吻了你下颌的伤疤，<br>表情很平静，<br>你是大千世界一汪清泉，<br>还是泉边那只神秘孔雀，<br>在和你灵魂谋面之前，<br>让贪念趁火打劫，<br>你是大千世界尘埃等闲，<br>也是我仅有的风花雪月，<br>爱死或是恨终我都感谢，<br>万花筒里消受，<br>你是大千世界一汪清泉，<br>还是泉边那只神秘孔雀，<br>在和你灵魂谋面之前，<br>让贪念趁火打劫，<br>你是大千世界过眼云烟，<br>也是我仅有的夺目闪电，<br>躁动或是寡言我都奉献，<br>万花筒里留下真切纪念。</p></blockquote><p>歌词信息量大，像是一篇深刻的现代诗。歌词内容有许多映射和隐喻的东西，让人想起村上春树的小说。比如歌长4分15秒，映射17年4月15日致68名儿童死亡的叙利亚炸弹袭袭击事件。还有写『孔雀』的歌词，那是2月26日，在瑞士日内瓦联合国万国宫，一只孔雀落在正举行叙利亚和谈的建筑门上，之后25日发生在叙利亚中部城市霍姆斯的恐怖袭击案搅动了正在进行的日内瓦和谈。再有歌中颤音的失真处理是表达战火连天里那个失真世界的荒诞感。</p><p>大千世界寓意东方的禅意——但又以西方的音乐形态作为曲风基地，令人耳目一新。整首歌都以一种荒诞黑色的曲调来叙述一些荒诞和蒙太奇风格的场景，但是你能感受到一种讽刺、控诉和对现实的悲情以及无力感。</p><p>作品围绕一场救赎展开叙事，逐步推演至对『幻想与现实』、『大千世界与小我』展开思辨，在精心拣选的意向中传达多层次含义，这是许嵩标志性的一词多义的语言系统。他的作品总有鲜明的个人腔调和深刻的内核，他的作品已经不完全是一首歌本身，而是借助音乐的载体表达更多东西，那是每一个艺术家都在追求的。</p><p>总之，为歌点赞，同时也为战争中的儿童祈愿。</p><ul><li>参考资料：网易云音乐iPad 初体验</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天是 2018年6月1号，国际儿童节，当我们沉浸在儿童节的氛围中时（虽然我们都已不再是儿童，但并不妨碍我们过节日），许嵩已经在另一座山头像我们招手了。他选择在这一天发布一首新歌，叫做《大千世界》。开始没听懂，听了几遍才明白这不是一首普通的歌，而是这是一首献给叙利亚儿童的儿童节反战礼物。&lt;br&gt;&lt;img src=&quot;http://oeckzejn4.bkt.clouddn.com/20180601152782485610264.jpg&quot; alt=&quot;大千世界 专辑封面.jpg&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="乐评" scheme="http://chuanqiang.github.io/categories/%E4%B9%90%E8%AF%84/"/>
    
    
      <category term="许嵩" scheme="http://chuanqiang.github.io/tags/%E8%AE%B8%E5%B5%A9/"/>
    
      <category term="乐评" scheme="http://chuanqiang.github.io/tags/%E4%B9%90%E8%AF%84/"/>
    
  </entry>
  
  <entry>
    <title>如何做一个优秀的开发工程师</title>
    <link href="http://chuanqiang.github.io/2018/05/28/%E5%A6%82%E4%BD%95%E5%81%9A%E4%B8%80%E4%B8%AA%E4%BC%98%E7%A7%80%E7%9A%84%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88/"/>
    <id>http://chuanqiang.github.io/2018/05/28/如何做一个优秀的开发工程师/</id>
    <published>2018-05-28T14:55:19.000Z</published>
    <updated>2018-05-28T15:11:24.704Z</updated>
    
    <content type="html"><![CDATA[<p>写代码是一个程序员的本职工作，但是除了写出出色的代码，还有其他什么也是一个优秀工程师的必备？最近刚从百度离职的大牛陆奇有一个百度内部的分享 Engineering Leadership Talk，我觉得对自己很有启发。他提到五点：<br><img src="http://oeckzejn4.bkt.clouddn.com/20180528152752026159444.png" alt="陆奇.png"><br><a id="more"></a></p><h3 id="Believe-in-技术"><a href="#Believe-in-技术" class="headerlink" title="Believe in 技术"></a>Believe in 技术</h3><p>盖茨提到微软公司的宗旨就是：<strong>写软件代表的是世界的将来</strong>。未来任何一个工业都会变成软件工业。盖茨是对的，因为任何工业任何行业自动化的程度会越来越高，最后你所处理的就是信息和知识。但现在软件的做法又往前提了一次，因为在人工智能时代，不光是写代码，你必须懂算法，懂硬件，懂数据，整个人工智能的开发过程有一个很大程度的提高，但是，技术，特别是我们这个工业所代表的技术一定是将来任何工业的前沿。</p><p>所以我们一定要有一个坚定不移的深刻的理念，相信<strong>整个世界终究是为技术所驱动的。</strong></p><h3 id="站在巨人的肩膀上做创新"><a href="#站在巨人的肩膀上做创新" class="headerlink" title="站在巨人的肩膀上做创新"></a>站在巨人的肩膀上做创新</h3><p>为什么现在创新速度那么快？主要是起点高了。我们可以使用的代码模块，使用的服务的能力，都是大大的提升。</p><p>我现在的要求是，每一次你写一行新的代码，第一要做的，先想一想你这行代码值得不值得写，是不是有人已经做了同样的工作，可能做得比你还好一点。有没有其他人已经解决这个问题，然后你可以<strong>把你的时间放在更好的创新上</strong>。</p><p>我再强调，在大公司内部，你写代码之前想一想，你这行代码要不要写，是不是别人已经有了，站在别人的肩膀上去做这件事情。</p><h3 id="追求Engineering-Excellence"><a href="#追求Engineering-Excellence" class="headerlink" title="追求Engineering Excellence"></a>追求Engineering Excellence</h3><p>Engineering Excellence，工程的技术的卓越性和能力。</p><p>所以 Engineering Excellence 是一个永无止境的、个人的、团队的，能力的追求和工具平台的创新，综合在一起可以给我们带来的长期的、核心的竞争力，为社会创造价值，最终的目的是给每个用户、每个企业、整个社会创造价值。</p><p>我另外还要在这里强调的一点就是Relentless pursuit of excellence：永无止境的不断的持续的追求。</p><h3 id="每天学习"><a href="#每天学习" class="headerlink" title="每天学习"></a>每天学习</h3><p>每天学习，可能是对每个人都是最最重要的。</p><p>我今天分享一下，我自己怎么想我自己的。就很简单一个概念，<strong>我把自己想象是一个软件、一个代码，今天的版本一定要比昨天版本好，明天的版本肯定会比今天好</strong>，因为即使犯了错误，我里面有If statement，说如果见到这个错误，绝对不要再犯。英语，另外有一句说法就是Life is too short, don’t live the same day twice. 同样一天不要重活两次。每天都是不一样，每天为什么不一样，因为每天都变成最好，每天都变得更好。今天的版本一定要比昨天好，每个好的、杰出的工程师，杰出的技术领袖，一定要保持自己学习的能力，特别是学习的范围。</p><h3 id="Ownership"><a href="#Ownership" class="headerlink" title="Ownership"></a>Ownership</h3><p>最后是从我做起。</p><p>我们公司有个非常大的使命，用科技让复杂的世界更简单。整个世界非常非常复杂，人其实所做的事情基本上都是Reduce entropy。</p><p>因为从热力学第二定律来讲，世界是会变得越来越乱的，我们想做的事情就是把它变的更简单，让我们生活变得更美好。</p><hr><p>Believe in 技术、站在巨人的肩膀上做创新、追求Engineering Excellence、每天学习、Ownership，陆奇送给每一位工程师的建议，你 get 到了吗 ？</p><ul><li><a href="https://mp.weixin.qq.com/s?__biz=MzAxNjc1OTc2Mg==&amp;mid=2653629370&amp;idx=1&amp;sn=24d58a79d7ac0cf30f6748ec6caa9898&amp;chksm=80306507b747ec11c0d3cfbea832d6a925d6e3873562018e1abfcadaed1f68c4962d0695fba4&amp;mpshare=1&amp;scene=1&amp;srcid=0528NpKUBXAUaOQNBqj83MZy#rd" target="_blank" rel="external">原文</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;写代码是一个程序员的本职工作，但是除了写出出色的代码，还有其他什么也是一个优秀工程师的必备？最近刚从百度离职的大牛陆奇有一个百度内部的分享 Engineering Leadership Talk，我觉得对自己很有启发。他提到五点：&lt;br&gt;&lt;img src=&quot;http://oeckzejn4.bkt.clouddn.com/20180528152752026159444.png&quot; alt=&quot;陆奇.png&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="成长" scheme="http://chuanqiang.github.io/categories/%E6%88%90%E9%95%BF/"/>
    
    
      <category term="成长" scheme="http://chuanqiang.github.io/tags/%E6%88%90%E9%95%BF/"/>
    
  </entry>
  
  <entry>
    <title>我的第一块滑板</title>
    <link href="http://chuanqiang.github.io/2018/05/26/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E5%9D%97%E6%BB%91%E6%9D%BF/"/>
    <id>http://chuanqiang.github.io/2018/05/26/我的第一块滑板/</id>
    <published>2018-05-26T08:36:28.000Z</published>
    <updated>2018-05-26T08:49:18.955Z</updated>
    
    <content type="html"><![CDATA[<p>昨天我的滑板到了，是的，我买了一个滑板，在25岁的年纪。</p><p><img src="http://oeckzejn4.bkt.clouddn.com/20180526152732152825243.png" alt="滑板.png"></p><a id="more"></a><p>这是一个大鱼板，一豹大鲨鱼3，枫木鱼板。之所以买个滑板玩，是因为『冲动』。没错，一开始是偶然看到一款电动滑板——小飞板，想用来代步，但是转念一想，同样都是滑板，为什么不纯粹一点，直接买个普通滑板呢？此时脑海中出现了一幅幅旧时的画面。高中大学的时候，看到那些酷酷的少年划着滑板在街上飞驰，在人群中呼啸而过，看着这些自由自在的追风少年，当时我也是好生羡慕，也畅想自己要是也这样该多特么帅。然后，就没有然后了，到底什么时候把这些忘却了的呢？</p><p>现在，这点小火苗在心中摇曳，禁不住的想买一个滑板，完成旧时的愿望。这种想法如星星之火，终于以燎原之势，促使我『冲动』的买了这款滑板。决心多加练习，早起成为御风而行的『滑板少年』。</p><p>有时候冲动是魔鬼，有时候冲动也是勇气，抑制住自己往往可能会擦肩而过，而选择放心大胆干却能有不一样的结果。</p><p><img src="http://oeckzejn4.bkt.clouddn.com/20180526152732304011579.png" alt="滑板.png"><br>滑板 Skateboard 项目不但是刷街耍帅必备，也是极限运动历史的鼻祖，许多的极限运动项目均由滑板项目延伸而来。20世纪50年代末60年代初由冲浪运动演变而成的滑板运动。因为冲浪受地理和气候条件影响比较大，而滑板拥有非常大的自由性，所以在阳光明媚的南加州海滩社区就诞生了世界上第一块滑板。滑板等极限运动与传统的体育运动项目有着明显的区别，它不拘泥于单一形式，需要滑手发挥自己的想象力，在运动的过程中发挥自己的灵感，发挥潜力，注重身心的自由，从而体验创造的喜悦感。</p><p>上班后的生活枯燥而充满压力，滑板可以在刺激和挥汗如雨中排解压力，挑战自己的极限，挑战你本能上就惧怕的东西，就像我看到的一句话：</p><blockquote><p>滑板不仅仅是一种生活方式，更是一种追求自由与冒险的生活态度。超越地心引力和规则的束缚，才是真正玩滑板的魂。踏着一块四方板，怀揣着永不言败的信仰，书写着不羁的生活。在青春中张扬自我，在运动中不负韶光。</p></blockquote><p>希望通过滑板能够更多的发现生活中的乐趣，更加热爱自己的生活，找到另外一个真实的自己。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;昨天我的滑板到了，是的，我买了一个滑板，在25岁的年纪。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://oeckzejn4.bkt.clouddn.com/20180526152732152825243.png&quot; alt=&quot;滑板.png&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="独白" scheme="http://chuanqiang.github.io/categories/%E7%8B%AC%E7%99%BD/"/>
    
    
      <category term="滑板" scheme="http://chuanqiang.github.io/tags/%E6%BB%91%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title>锤子新品发布会</title>
    <link href="http://chuanqiang.github.io/2018/05/21/%E9%94%A4%E5%AD%90%E6%96%B0%E5%93%81%E5%8F%91%E5%B8%83%E4%BC%9A/"/>
    <id>http://chuanqiang.github.io/2018/05/21/锤子新品发布会/</id>
    <published>2018-05-21T14:38:43.000Z</published>
    <updated>2018-05-26T08:27:06.771Z</updated>
    
    <content type="html"><![CDATA[<p>锤子终于发布了新产品，2018年5月15日，老罗在鸟巢发布新品。这次的发布会宣传空前，因为号称要发布革命性的产品，并且在官网上上架了成人纸尿裤，意思是『不要被吓尿』。这样的噱头当然也获得了万众瞩目，大麦网上一票难求，偌大的鸟巢体育场座无虚席。</p><p><img src="http://oeckzejn4.bkt.clouddn.com/20180521152691323158781.png" alt="20180521152691323158781.png"></p><a id="more"></a><p>发布会发布了两款产品，手机 R1 和 Smartisan  TNT 工作站。手机颜值很高，采用了『美人尖』异形屏，3499起，四曲面3D玻璃后壳带来的剔透感很难用言语来形容，从某种意义上讲，坚果R1的背部让我想起了曾经的T2。黑得纯粹、摸着舒服，配上红铜色的logo，使得其观感相当不俗。采用了6.17寸显示屏，长宽比为18.7:9，屏占比84%，分辨率为2242x1080，对比度1500:1，覆盖100% P3色域，外观十分优秀。遗憾的是仍旧没有把屏占比做到极致。另外，最高达1T的内存肯定不是只给手机用的，而是揭示了以后锤子科技要做生态的野心。之后发布的 TNT 工作站也同样有所映射。不同于 Windows 10、MacOS，锤子直接在这款工作站上启用了新的Smartisan OS 6.0系统，依然是基于Android系统，老罗称之为“次时代的Smartisan OS”，并由TNT、Crystal Ball和Poker Dealer 三大功能构成。采用触屏 + 语音控制的交互方式。<br><img src="http://oeckzejn4.bkt.clouddn.com/20180521152691301388839.png" alt="20180521152691301388839.png"></p><p>从心底说，TNT的产品形态并不具有颠覆性，也实在称不上是『革命性』的产品，原因只有一个，使用场景狭窄，不具备高效的生产力。它对普通用户来说，和一款大屏幕的可触摸操作的平板电脑、拓展坞并没有本质的不同，而对需要编程或者CAD、Photoshop 这样的用户来说，可以说是很鸡肋的产品，并且售价过高，很难笼络消费者。老罗最大的误区，在我看来，就是错把个人的需求当做大众用户的需求了。当然创新是有的，而且作为一家小公司，在摸爬滚打6年里，求生存立住脚跟的同时，竟然能有自己的追求和创新，这一点在日益同质化的当下科技圈实属珍贵。</p><p>这场发布会我认为在内容上是成功的，提升了锤子的影响力和观众认知度，开拓了新航线，展示了这家公司的实力和野心；但在运营上是失败的，开始给观众的期望值太高了，发布会看下来远远没有达到心理预期，这就会对市场造成很大的影响。</p><p>无论老罗这次发布会成功与否，我相信都不会影响锤子这家公司的命运，也不会影响老罗的命运，因为在我看来老罗正是海明威笔下只能被打到，不能被战胜的那类人，并且欣赏老罗这种想去改变一下这个世界并且真的为之付出努力的人，也愿意看着他颠覆世界。</p><p>老罗，加油。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;锤子终于发布了新产品，2018年5月15日，老罗在鸟巢发布新品。这次的发布会宣传空前，因为号称要发布革命性的产品，并且在官网上上架了成人纸尿裤，意思是『不要被吓尿』。这样的噱头当然也获得了万众瞩目，大麦网上一票难求，偌大的鸟巢体育场座无虚席。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://oeckzejn4.bkt.clouddn.com/20180521152691323158781.png&quot; alt=&quot;20180521152691323158781.png&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="科技" scheme="http://chuanqiang.github.io/categories/%E7%A7%91%E6%8A%80/"/>
    
    
      <category term="科技" scheme="http://chuanqiang.github.io/tags/%E7%A7%91%E6%8A%80/"/>
    
      <category term="手机" scheme="http://chuanqiang.github.io/tags/%E6%89%8B%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>唐人街探案 2</title>
    <link href="http://chuanqiang.github.io/2018/04/16/%E5%94%90%E4%BA%BA%E8%A1%97%E6%8E%A2%E6%A1%88%202/"/>
    <id>http://chuanqiang.github.io/2018/04/16/唐人街探案 2/</id>
    <published>2018-04-16T09:52:32.000Z</published>
    <updated>2018-05-26T07:57:03.735Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>世上没有真正完美的犯罪，其实真相一直就在我们眼前，只不过还没有被发现。</p></blockquote><p><img src="http://oeckzejn4.bkt.clouddn.com/20180416152387178896838.png" alt="唐人街探案海报.png"></p><a id="more"></a><p>因为『唐人街探案1』的惊艳，所以一直就想看陈思诚之后会给观众带来的什么惊喜。果然，《唐人街探案2》，更大的制作成本，更浓重的商业娱乐模式，更宏大的结构逻辑，也讲述了一副更复杂的牌局，是一部精心打磨的悬疑喜剧商业大片。</p><p>这次的故事发生在纽约，讲述的是一个杀人连环案，犯罪分子是一个拥有华人女友的美国法医，因为妻子癌症去世和自己也患上癌症而对科学和上帝都失去了信心，转而通过中国的『道』来拯救自己，策划了一个按照道家阴阳五行金木水火土来选择受害人、作案时间和地点来进行犯罪并活人取器官完成祭祀的行动。当然，案情肯定不止这么简单，局中局，骗中骗，案中案，一直是这个系列的招牌，这次也是，另一个主线是宋义借助这个连环杀人案进行了一次『顺风车』作案，杀死了贩卖自己妹妹的恶霸陆国富。这是两条案件并行一起走，一条是法医杀人取器官连环杀人案件，一条是Q主导的一场“完美犯罪”杀陆国富案件。看起来剧情是这样的，但是到最后却有许多地方让案件的真相有了迷雾，就像『盗梦空间』结尾旋转的陀螺，给了观众讨论展开的空间。</p><p>看了网上的一些深层推理，还是很有意思的:</p><h2 id="1：Q是谁"><a href="#1：Q是谁" class="headerlink" title="1：Q是谁"></a>1：Q是谁</h2><p>Q就目前的资料来看，是“侦探界ppt”的第一名，他有着贯穿始终的神秘感，他有着和这个案件千丝万缕的联系。</p><p>开始以为Q是宋义，看到最后发现并不是。首先影片最后蓝发女孩已经查过ip了，Q不在美国也不在加拿大，总而言之Q有完美的不在场证明。此外，如果Q是宋义，假设秦风推理正确，宋义想杀陆国富为妹妹报仇，那么凭借宋义是Q的智商，根本不会在案发现场被监控拍到，也不会在图书馆留下在场证据，所有的线索都在表明，宋义应该只是Q很重要的棋子。宋义和他妹妹是美国黑户，在唐人街没有地位没有身份，长期被陆国富地霸欺负，最终陆国富害死了宋义的妹妹，导致宋义怀恨在心。</p><p>同时宋义也有一颗当侦探的心，并把Q当成偶像，应该在这案件之前，宋义就时不时在Q下面留言或私信，来表达自己的仰慕之情。在这次案件发生的时候，Q当然也参与到了其中，但他和其他侦探不一样，他不露脸并始终保持神秘，那么他了解案情并推动案情，就必须找到一个有力并信得过的助手，Q首先想到的就是宋义。</p><p>等Q联系上宋义以后，Q同时还得知宋义妹妹的事情，于是Q告诉宋义，如果宋义能按照他的指示去做，在这个案件中，宋义就能顺手杀掉陆国富。</p><p>网上有人推测，Q是秦风的父亲，还有一种是第一部里的小女孩，都有一些道理，这个坑估计要到第三部中看陈导怎么填了。</p><h2 id="2-Q为什么要这么做"><a href="#2-Q为什么要这么做" class="headerlink" title="2: Q为什么要这么做"></a>2: Q为什么要这么做</h2><p>第一，Q对这些案件的探案很上瘾，并很有天赋，所以这是天性使然，秦风也一样，他们这些天生是侦探命的人，探案不是为了钱，而是为了真相。</p><p>第二，Q不光想要侦破这个案件，而且他还想在这个案件中插入一个自己的“完美犯罪”。</p><p>这个也正是秦风在《唐人街探案1》中，他考刑警学院面试的回答，秦风想制造一次完美犯罪。</p><p>所以说在侦探界另一个更高段位的侦探成就，就是自己制作一个完美犯罪。那么这一次Q的制作完美犯罪的原材料，正是宋义心中想要报的仇。</p><h2 id="3-秦风黑化？"><a href="#3-秦风黑化？" class="headerlink" title="3: 秦风黑化？"></a>3: 秦风黑化？</h2><p>一种黑化是说秦风完全变成坏人，为了达到“完美犯罪”也去做一些真正犯罪的事情，比如作出一些和Q一样的举动。</p><p>另一种黑化是秦风游走在“神性和兽性，还有人性”之间，最后他选择了“神性和兽性”的结合体，也就是最后在他心中，自成一套法律，他有自己对案件的判决书，摒弃掉社会的法律。</p><p>影片中宋义有说过：</p><blockquote><p>当你凝视深渊时，深渊也在凝视你。看可以，但别看太久。wo</p></blockquote><p>这里的深渊，其实就是人性的恶，也就是兽性。兽性有魔力，会让你对你着迷的东西上瘾，比如“完美犯罪”的瘾，比如找到真相的瘾，比如探案的瘾，比如杀人的瘾等等。</p><p>宋义他说他曾经凝视深渊很久，这是和他妹妹有关，所以他始终放不下这个恨，于是当Q愿意为他制造一次机会的时候，他愿意去做了。这就是宋义自己的“兽性”，明知道是犯罪，但他依然要去冒险。</p><p>而宋义之所以要对秦风说这些，很大的原因可能是秦风对他推理错了，也就是他把宋义说成是Q，秦风上瘾了。宋义从秦风的举动看到了Q的影子，所以以此来警醒秦风，不要看深渊太久。</p><p>从秦风的身世来看，也不难看出他也是一张半遮半掩的底牌，在《唐人街探案1》中，他的父亲为什么被抓，对他造成了什么影响，这些到了《唐人街探案2》都没有交代清楚。</p><p>而且秦风所说的制造一场“完美的犯罪”，和他的身世又有多少关系，我们几乎也不知道前因后果，所以秦风这个角色，还能继续深挖。</p><h2 id="一些经典台词"><a href="#一些经典台词" class="headerlink" title="一些经典台词"></a>一些经典台词</h2><blockquote><p>当你凝视深渊时，深渊也在凝视你。看可以，但别看太久。</p><p>一阴一阳谓之道，你白天救人，夜晚屠杀。无论是拯救生灵的神，还是夜晚屠杀的兽，都将阴阳割裂走向了极端。可二者之间，才是万物抱阴负阳冲气以为和的人性。</p><p>所谓推理，不过就是把重要的细节放大。</p><p>杀死员外的是狗，但把狗换成恶犬来杀人的，却是员外老婆，杀人的不是兽，是兽性。</p><p>一阴一阳谓之道，你白天救人,夜晚屠杀,无论是拯救生灵的神，还是嗜血屠杀的兽，都将阴阳割裂走向了极端，可二者之间，才是万物抱阴负阳，冲气以为和的人性，你曲解了道义，不是做神，就是做兽，却忘了怎么做人。</p><p>在侦探界另一个更高段位的侦探成就，就是自己制作一个完美犯罪。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;世上没有真正完美的犯罪，其实真相一直就在我们眼前，只不过还没有被发现。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://oeckzejn4.bkt.clouddn.com/20180416152387178896838.png&quot; alt=&quot;唐人街探案海报.png&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="电影" scheme="http://chuanqiang.github.io/categories/%E7%94%B5%E5%BD%B1/"/>
    
    
      <category term="影评" scheme="http://chuanqiang.github.io/tags/%E5%BD%B1%E8%AF%84/"/>
    
  </entry>
  
  <entry>
    <title>春雪初融</title>
    <link href="http://chuanqiang.github.io/2018/04/05/%E6%98%A5%E9%9B%AA%E5%88%9D%E8%9E%8D/"/>
    <id>http://chuanqiang.github.io/2018/04/05/春雪初融/</id>
    <published>2018-04-05T11:53:21.000Z</published>
    <updated>2018-04-05T11:56:45.302Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://oeckzejn4.bkt.clouddn.com/2018040515229279371558.jpg" alt="花一朵.jpg"></p><blockquote><p>万物生长此时，皆清洁而明净，故谓之清明。</p></blockquote><a id="more"></a><p>清明节又叫踏青节，在仲春与暮春之交，所以清明不只是祭祖扫墓的节日，也是踏青游玩的好时候。怎奈再好的风景架不住人潮人海的喧嚣，使美丽的景色打了折扣，所以建议这个时候出去游玩最好避开人多的旅游景点，与其人挤人走马观花还不如宅在家里休养生息。</p><p>另外，昨天北京竟然下雪了，是的，在『人间四月天』里俄而雪骤，去年北京可一年无雪，看来是要『雪债雪还』的。突如其来的降雪倒是给这个清明节带来了不一样的惊喜。虽然我不迷信，但总隐隐觉得这种奇怪的气候是年前北京发生一些不光彩的事招来的天谴。好吧，不能不承认降雪虽然让我一下地铁站就懵逼淋成雪人，但是也净化了北京的雾霾，让北京城『清洁而明净』。</p><p><img src="http://oeckzejn4.bkt.clouddn.com/20180405152292797947319.jpg" alt="穿衣指南.jpg"></p><p>这周看完了古龙的『绝代双骄』，第一次看是在高中，那时读古龙的小说是满满的快感和遗世独立的孤独，现在细细品味才发现里面的人性和温情。</p><p><img src="http://oeckzejn4.bkt.clouddn.com/20180405152292770083254.png" alt="绝代双骄.png"></p><p>花无缺虽然叫无缺，武功盖世、相貌英俊、彬彬有礼，看似也完美无瑕，但是却没有自由人性的一面，像是移花宫邀月宫主的提线木偶，因此虽然是主角却没小鱼儿刻画的那么出彩。小鱼儿虽然在恶人谷长大，混迹于市井，从小跟着十大恶人，但是依旧保留纯真和善良，人物性格也比花无缺丰富的多。从开始的用手段和计谋制敌，到最后明白『黑暗不能驱逐黑暗，但光明可以；仇恨不能驱逐仇恨，但爱可以』，不但冒死去救十大恶人，而且宽恕了罪行累累的江别鹤父子，把安排到了一个适合他们生存的『安全』地方，这是他成长之后的属于英雄的复仇方式。总之，古龙小说里从不缺少惊喜和意外，虽然有一些看上去像是喝酒断片儿写的，但是瑕不掩瑜，这已是古龙特色了。</p><blockquote><p>醉笑陪公三万场，这是古龙，也是他早夭的原因，他就是要活得无可替代，曾因酒醉鞭名马，生怕情多累美人，何等落拓又何等气概！这还不够吗？对于平平仄仄了无生趣的弱者，这是他们想也不敢想的广袤宇宙。 (摘自豆瓣影评)</p></blockquote><p>今天把房间收拾了一下，去了趟超市备了些粮食，然后下午就宅在家里美滋滋的看美剧。北极星小姐姐已经追完了，准备看部重口味的『行尸走肉』。最近还玩一个游戏，叫做『第五人格』，很有意思，这个游戏是荒诞哥特画风，悬疑烧脑剧情，玩家可以选择扮演监管者或求生者，展开激烈的对抗。<br><img src="http://oeckzejn4.bkt.clouddn.com/20180405152292879235004.png" alt="第五人格海报.png"></p><p>看吧，生活并没有那么无聊，虽然有时候枯燥而重复，但我们始终渴望将它过成诗，在这个属于我的小地方里，恬静怡然，没有灯红酒绿的浮躁，唯有安宁与舒心伴我左右。<br><img src="http://oeckzejn4.bkt.clouddn.com/20180405152292902655046.jpg" alt="卧室一角.jpg"></p><p>明天准备出去溜溜，因为春雪初融，明天定是个好天气!</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oeckzejn4.bkt.clouddn.com/2018040515229279371558.jpg&quot; alt=&quot;花一朵.jpg&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;万物生长此时，皆清洁而明净，故谓之清明。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="独白" scheme="http://chuanqiang.github.io/categories/%E7%8B%AC%E7%99%BD/"/>
    
    
      <category term="小说" scheme="http://chuanqiang.github.io/tags/%E5%B0%8F%E8%AF%B4/"/>
    
      <category term="随笔" scheme="http://chuanqiang.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="生活" scheme="http://chuanqiang.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>春暖花开</title>
    <link href="http://chuanqiang.github.io/2018/03/26/%E6%98%A5%E6%9A%96%E8%8A%B1%E5%BC%80/"/>
    <id>http://chuanqiang.github.io/2018/03/26/春暖花开/</id>
    <published>2018-03-26T15:07:05.000Z</published>
    <updated>2018-03-27T02:00:19.275Z</updated>
    
    <content type="html"><![CDATA[<p>有些东西放下了，就很难再拾起了。<br><img src="http://oeckzejn4.bkt.clouddn.com/20180326152207560388958.jpg" alt="pic.jpg"></p><a id="more"></a><p>经过一个春节的浸染，巨大的安逸像滔天巨浪把之前养成的好习惯一冲而去，一直到浑浑噩噩上班一段时间后才后知后觉。</p><p>生活有时候就是靠着惯性在一点一点前进的，从一百到一百零一容易，从零到一很难，因为一个东西一旦放下了，尤其是放下了一段时间之后再拾起，就相当于重新培养，心性、身体都需要新一轮的适应，难度自然增加。</p><p>后悔当初的『放下』，现在决定再次『拾起』。写作、阅读、学习，还有一直没做好的运动。无论做什么事，最晚的时间是『明天』，最合适的时间是『现在』。越来越觉得坚持和自律是最难做到的，精神和意志力的消磨是最不易克服的。做一个计划很容易，很亢奋，也斗志昂扬，但是保持做下去的动作却大多三天热度。有一种五部工作法：</p><blockquote><p>第一，设定目标<br>第二，发现通向目标的障碍<br>第三，诊断问题所在并制定计划<br>第四，列出解决问题的任务清单<br>第五，坚决执行任务</p></blockquote><p>最重要的是第五步的『坚决』俩字，最难的也是它。要想克服，别无他法，只能不断告诫自己，管控自己，对自己狠一点。</p><blockquote><p>你有多自律，就有多自由。</p></blockquote><p>春分了，三月二十一日，太阳直射赤道的日子，昼夜相等，黑白均分。天气也愈来愈暖，万物复苏，人也充满了活力，好像无论做什么都能比其他时候拥有更大的信心和乐观的心情。</p><blockquote><p>忧郁的日子里需要镇定，<br>相信吧，快乐的日子将会来临。<br>心儿永远向往着未来；<br>现在却常是忧郁。<br>一切都是瞬息，<br>一切都将会过去；<br>而那过去了的，<br>就会成为亲切的怀恋。</p></blockquote><p>北京和济南一样，春天美好但短暂，从雪落到花开，倏然而至，紧接着就气温陡升，忽的奔向炎夏。早穿皮袄午穿纱的不一定只是新疆，温差高达20度，大街上羽绒服与短袖齐飞，昆明四季如春，北京春如四季。<br><img src="http://oeckzejn4.bkt.clouddn.com/2018032615220773153828.jpg" alt="pic.jpg"><br>把卧室换到主卧了，宽敞了不少，越来越有家的味道，房子是租来的，但生活是自己的，人生苦短，干嘛不让自己过得舒服一点。去花卉市场买了绿植，给卧室点缀 一点生机，感受一抹春意。生活虽然枯燥而重复，但我们始终渴望将它过成诗，既文艺又不失追求。在这个属于我的小地方里，恬静怡然，没有灯红酒绿的浮躁，唯有安宁与舒心伴我左右。</p><p>周一到周五的繁忙，周末两天的安逸和消遣，一周也是一个轮回，所以不必在工作日翘首以盼周末的到来，也不必在周末过度放浪。没有什么生活是永恒的，唯有生命滚滚向前。</p><p>生活开始步入正轨，并逐渐加速。成长是相对运动的，相对于周围的人、相对于世界。你的脚步相对慢了，你就是在退步。这或许有点『人在江湖，身不由己』的悲凉。</p><p>最近一直在读古龙的小说，虽然不是第一遍了，但依旧痴迷，痴迷于古龙笔下人物透露出的对世间万物满满的善意，永远的乐观和巨大的同情心。古龙笔下没有完全的恶人，只有潇潇洒洒的江湖。</p><p>喜欢牛仔在决斗时的潇洒与严肃，喜欢浪子行走在天涯尽头时拖着长长的背影，喜欢让自己的血液滴在中原一点红的剑尖上，喜欢用一支笔来塑造一把剑能够刺穿的世界。</p><p>春光正好，微风不燥，生命自由缱绻，这是属于我们的春暖花开。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有些东西放下了，就很难再拾起了。&lt;br&gt;&lt;img src=&quot;http://oeckzejn4.bkt.clouddn.com/20180326152207560388958.jpg&quot; alt=&quot;pic.jpg&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="独白" scheme="http://chuanqiang.github.io/categories/%E7%8B%AC%E7%99%BD/"/>
    
    
      <category term="随笔" scheme="http://chuanqiang.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="生活" scheme="http://chuanqiang.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>胡适精选集 文摘</title>
    <link href="http://chuanqiang.github.io/2018/02/14/%E8%83%A1%E9%80%82%E7%B2%BE%E9%80%89%E9%9B%86%20%E6%96%87%E6%91%98/"/>
    <id>http://chuanqiang.github.io/2018/02/14/胡适精选集 文摘/</id>
    <published>2018-02-14T02:32:00.000Z</published>
    <updated>2018-02-14T02:56:30.172Z</updated>
    
    <content type="html"><![CDATA[<p>胡适（1891年12月17日—1962年2月24日），原名嗣穈，学名洪骍，字希疆，笔名胡适，字适之。著名思想家、文学家、哲学家。 徽州绩溪人，以倡导“白话文”、领导新文化运动闻名于世。</p><a id="more"></a><hr><ul><li><p>生命本身不过是一件生物学的事实，有什么意义可说？一个人与一只猫，一只狗，有什么分别？人生的意义不在于何以有生，而在自己怎样生活。你若情愿把这六尺之躯葬送在白昼作梦之上，那就是你这一生的意义。你若发愤振作起来，决心去寻求生命的意义，去创造自己的生命的意义，那么，你活一日便有一日的意义，作一事便添一事的意义，生命无穷，生命的意义也无穷了。</p></li><li><p>总之，生命本没有意义，你要能给他什么意义，他就有什么意义。与其终日冥想人生有何意义，不如试用此生作点有意义的事……</p></li><li><p>一个人应该把自己培养成器，使自己有了足够的知识、能力与感情之后，才能再去为别人。</p></li><li><p>人生的快乐，就是知识的快乐，做研究的快乐，找真理的快乐，求证据的快乐。</p></li><li><p>人生观不过是一个人对于世界万物同人类的态度，这种态度是随着人的神经构造，经验，知识等而变的。</p></li><li><p>『易经』“系辞”里面几句话翻成外国文给外国人看。这几句话是：“见乃谓之象；形乃谓之器；制而用之谓之法；利用出人，民咸用之，谓之神。”看见一个意思，叫做象；把这个意象变成一种东西——形，叫做器；大规模的制造出来，叫做法；老百姓用工程师制造出来的这些器具，都说好呀！好呀！但是不晓得这器具是从一种意象来的，所以看见工程师便叫做神。</p></li><li><p>社会的不朽论”的大旨是：我这个“小我”不是独立存在的，是和无量数小我有直接或间接的交互关系的；是和社会的全体和世界的全体都有互为影响的关系的；是和社会世界的过去和未来都有因果关系的。</p></li><li><p>拜金主义只有三个信条： 第一，要自己能挣饭吃。 第二，不可抢别人的饭吃。 第三，要能想出法子来，开出生路来，叫别人有挣饭吃的机会。</p></li><li><p>贫穷便是一切罪恶的来源。《珠砂痣》里那个男子因为贫穷，便肯卖妻子，卖妻子便是一桩罪恶。你仔细想想，哪一件罪恶不是由于贫穷的？小偷、大盗、扒儿手、绑票、卖姐、贪赃、卖国，哪一件不是由于贫穷？ 所以古人说：衣食足而后知荣辱，仓廪实而后知礼节。 这便是拜金主义的人生观。</p></li><li><p>一个头脑受过训练的人在看一件事时用批判和客观的态度，而且也用适当的知识学问为凭依。他不容许偏见和个人的利益来影响他的判断，左右他的观点。他一直都是好奇的，但是他绝对不会轻易相信人。他并不仓促的下结论，也不轻易的附合他人的意见，他宁愿耽搁一段时间，一直等到他有充分的时间来查事实和证据后，才下结论。</p></li><li><p>有责任心的思考至少含着三个主要的要求：第一，把我们的事实加以证明，把证据加以考查；第二，如有差错，谦虚的承认错误，慎防偏见和武断；第三，愿意尽量彻底获致一切会随着我们的观点和理论而来的可能后果，并且道德上对这些后果负责任。</p></li><li><p>渺小的个人在那强烈的社会炉火里，往往经不起长时期的烤炼就镕化了，一点高尚的理想不久就幻灭了。</p></li><li><p>一个人应该有他的职业，又应该有他的非职业的玩艺儿，可以叫做业余活动。凡一个人用他的闲暇来做的事业，都是他的业余活动。往往他的业余活动比他的职业还更重要，因为一个人的前程往往全靠他怎样用他的闲暇时间。</p></li><li><p>特别在这个组织不健全的中国社会，职业不容易适合我们性情，我们要想生活不苦痛或不堕落，只有多方发展业余的兴趣，使我们的精神有所寄托，使我们的剩余精力有所施展。</p></li><li><p>佛典里有一句话：“福不唐捐。”唐捐就是白白的丢了。我们也应该说：“功不唐捐！”没有一点努力是会白白的丢了的。</p></li><li><p>不到二十年前，那些老先生们，如叶德辉、王益吾之流，出了死力去驳康有为，所以这书叫做《翼教丛编》。我们今日也痛骂康有为。但二十年前的中国，骂康有为太新；二十年后的中国，却骂康有为太旧。如今康有为没有皇帝可保了，很可以做一部《翼教续编》来骂陈独秀了。这两部“翼教”的书的不同之处，便是中国二十年来的进步了。</p></li><li><p>古时小孩生下地之后，要请一位专门术家来听小孩的哭声，声中某律，然后取名字。魂怎么叫呢？到那跌跤的地方，撒把米，高叫小孩子的名字，一路叫回家。叫名便是叫魂了。</p></li><li><p>现在大多数喊口号，贴标语的，也不外这两种理由：一是心理上的过瘾，一是无意义的盲从。</p></li><li><p>少年人抱着一腔热沸的血，无处发泄，只好在墙上大书“打倒卖国贼”或“打倒日本帝国主义”。写完之后，那二尺见方的大字，那颜鲁公的书法，个个挺出来，好生威武，他自己看着，血也不沸了，气也稍稍平了，心里觉得舒服的多，可以坦然回去休息了。于是他的一腔义愤，不曾收敛回去，在他的行为上与人格上发生有益的影响，却轻轻地发泄在墙头的标语上面了。</p></li><li><p>格涅夫的人性观是二元论，认定这二元论是一个人生的全部生活的根本法则。他说：“人的全部生活，是不外乎继续不断忽分忽合的两个原则的永久的冲突和永久的调解。”</p></li><li><p>安阳是商朝最后一个都邑的遗址，</p></li><li><p>伟大的每年周而复始的日祀——周祭也消逝了，大规模的人殉也消逝了。博学的皇家祭祀阶级也贬降为职业的巫史阶级（Professional Class of Scribes and Priests），而靠着在大多数平民和少数统治贵族的家庭中表演和协助殡葬和祭祀讨生活，国家的灾患和个人的贫困已经深深地给他们灌输了谦逊温顺的教训。因此这一巫史阶级便获得了“儒”的统称，意思就是温顺和懦弱。他们仍然传授和表演殡丧和祖先崇拜的传统仪式。</p></li><li><p>鲁国的一个聪明人叔孙豹曾说过几句名言，即所谓有三个不朽：“大上有立德；其次有立功；其次有立言。虽久不废，此之谓不朽。”</p></li><li><p>我的思想受两个人的影响最大：一个是赫胥黎，一个是杜威先生。赫胥黎教我怎样怀疑，教我不信任一切没有充分证据的东西。杜威先生教我怎样思想，教我处处顾到当前的问题，教我把一切学说理想都看作待证的假设，教我处处顾到思想的结果。</p></li><li><p>但狭义的共产主义者却似乎忘了这个原则，所以武断的虚悬一个共产共有的理想境界，以为可以用阶级斗争的方法一蹴即到，既到之后又可以用一阶级专政方法把持不变。这样的化复杂为简单，这样的根本否定演变的继续便是十足的达尔文以前的武断思想，比那顽固的黑格尔更顽固了。</p></li><li><p>人同畜生的分别，就在这个“为什么”上。</p></li><li><p>救出自己的唯一法子便是把你自己这块材料铸造成器。</p></li><li><p>现在有人对你们说：“牺牲你们个人的自由，去求国家的自由！”我对你们说：“争你们个人的自由，便是为国家争自由！争你们自己的人格，便是为国家争人格！自由平等的国家不是一群奴才建造得起来的！”</p></li><li><p>他也许“一言可以兴邦，一言可以丧邦”。善亦不朽，恶亦不朽；功盖万世固然不朽，种一担谷子也可以不朽，喝一杯酒，吐一口痰也可以不朽。古人说：“一出言而不敢忘父母，一举足而不敢忘父母。”我们应该说：“说一句话而不敢忘这句话的社会影响，走一步路而不敢忘这步路的社会影响。”这才是对于大我负责任。能如此做，便是道德，便是宗教。</p></li><li><p>美国开国前期争自由的名言“不自由，毋宁死”（原文是Patric Henry在1775年的“给我自由，否则给我死”“Give me liberty，or give me death”），</p></li><li><p>范文正《灵乌赋》曰：“宁鸣而死，不默而生。”其言可以立儒。</p></li><li><p>我实在不要儿子， 儿子自己来了。 “无后主义”的招牌， 于今挂不起来了！ 譬如树上开花， 花落偶然结果。 那果便是你， 那树便是我。 树本无心结子， 我也无恩于你。 但是你既来了， 我不能不养你教你， 那是我对人道的义务， 并不是待你的恩谊。 将来你长大时， 莫忘了我怎样教训儿子： 我要你做一个堂堂的人， 不要你做我的孝顺儿子。</p></li><li><p>年纪越大，越觉得容忍比自由还更重要”</p></li><li><p>当年我要“杀”人，后来人要“杀”我，动机是一样的：都只因为动了一点正义的火气，就都失掉容忍的度量了。</p></li><li><p>我自己不信神，但我能诚心地谅解一切信神的人，也能诚心地容忍并且敬重一切信仰有神的宗教。</p></li><li><p>人类的习惯总是喜同而恶异的，总不喜欢和自己不同的信仰、思想、行为。这就是不容忍的根源。</p></li><li><p>一切对异端的迫害，一切对“异己”的摧残，一切宗教自由的禁止，一切思想言论的被压迫，都由于这一点深信自己是不会错的心理。因为深信自己是不会错的，所以不能容忍任何和自己不同的思想信仰了。</p></li><li><p>容忍是一切自由的根本；没有容忍“异己”的雅量，就不会承认“异己”的宗教信仰可以享受自由。但因为不容忍的态度是基于“我的信念不会错”的心理习惯，所以容忍“异己”是最难得，最不容易养成的雅量。</p></li><li><p>我们若想别人容忍谅解我们的见解，我们必须先养成能够容忍谅解别人的见解的度量。</p></li><li><p>哲学是研究人生切要的问题，从意义上着想，去找一个比较可普遍适用的意义。”</p></li><li><p>我们再举一个例：譬如我们睡到夜半醒来，听见贼来偷东西，我那就将他捉住，送县究办。假如我们没有哲性，就这么了事，再想不到“人为什么要作贼”等等的问题；或者那贼竟苦苦哀求起来，说他所以作贼的原故，因为母老，妻病，子女待哺，无处谋生，迫于不得已而为之。假如没哲性的人，对于这种吁求，也不见有甚良心上的反动。至于富于哲性的人就要问了，为什么不得已而为之？天下不得已而为之的事有多少？为什么社会没得给他做工？为什么子女这样多？为什么老病死？这种偷窃的行为，是由于社会的驱策，还是由于个人的堕落？为什么不给穷人偷？为什么他没有我有？他没有我有是否应该？拿这种问题，逐一推思下去，就成为哲学。由此看来，哲学是由小事放大，从意义着想而得来的，并非空说高谈能够了解的。</p></li><li><p>据我看来，欲求意义唯一的方法，只有走笨路，就是日积月累地去做刻苦的工夫，直觉不过是熟能生巧的结果，所以直觉是积累最后的境界，而不是豁然贯通的。</p></li><li><p>如若欲过理性生活，必得将从前积得的知识，一件一件用怀疑的态度去评估他们的价值，重新建设一个理性的是非。</p></li><li><p>自由”在中国古文里的意思是：“由于自己”，就是不由于外力，是“自己作主”。</p></li><li><p>我们现在说的“自由”，是不受外力拘束压迫的权利，是在某一方面的生活不受外力限制束缚的权利。</p></li><li><p>在宗教信仰方面不受外力限制，就是宗教信仰自由；在思想方面就是思想自由；在著作出版方面，就是言论自由，出版自由。这些自由都不是天生的，不是上帝赐给我们的，是一些先进民族用长期的奋斗努力争出来的。</p></li><li><p>唐朝后期的韩愈出来，大胆地批评佛教，攻击那在当时气焰熏天的佛教。大家都还记得韩愈攻击佛教的结果是：“一封朝奏九重天，夕贬潮阳路八千”。</p></li><li><p>容忍反对党，尊重少数人权利，正是和平的政治社会改革的唯一基础。反对党的对立，第一是为政府树立最严格的批评监督机关，第二是使人民可以有选择的机会，使国家可以用法定的和平方式来转移政权。</p></li><li><p>近代一百六七十年的历史，很清楚地指示我们，凡主张彻底改革的人，在政治上没有一个不走上绝对专制的路，这是很自然的，只有绝对的专制政权可以铲除一切反对党，消灭一切阻力；也只有绝对的专制政治可以不择手段，不惜代价，用最残酷的方法做到他们认为根本改革的目的。他们不承认他们的见解会有错误，他们也不能承认反对的人会有值得考虑的理由，所以他们绝对不能容忍异己，也绝对不能容许自由的思想与言论。所以我很坦白地说，自由主义为了尊重自由与容忍，当然反对暴力革命与暴力革命必然引起来的暴力专制政治。</p></li><li><p>自由主义的第一个意义是自由，第二个意义是民主，第三个意义是容忍——容忍反对党，第四个意义是和平的渐进的改革。</p></li><li><p>勿可专读死书，却去教实在的事物，勿可专被书中意思所束缚，却当估量这种意思是否有实际的效果，勿可专信仰前人的说话，却当去推求这些信条是否合于实情。</p></li><li><p>宋朝王安石有首白话诗： 风吹屋顶瓦， 正打破我头。 我终不恨瓦， 此瓦不自由。</p></li><li><p>在东汉到南北朝佛教极盛的时候，其中的一位君王梁武帝也迷信佛教。当时有个范缜，他著述几篇重要文章，其中一篇《神灭论》，就是驳斥当时盛行的灵魂不灭，认为“身体”与“灵魂”，有如“刀”之与“利”。假如刀不存在，则无所谓利不利。</p></li><li><p>多研究些问题，少谈些“主义”</p></li><li><p>高谈主义，不研究问题的人，只是畏难求易，只是懒。</p></li><li><p>我们由历史方面看，国家是一种最有用的工具，用的好就可以替社会造福。社会改良家一定要利用它，因为它可以帮助我们做好些事。</p></li><li><p>新生活就是有意思的生活。</p></li><li><p>凡是自己说不出“为什么这样做”的事，都是没有意思的生活。</p></li><li><p>生活的“为什么”，就是生活的意思。</p></li><li><p>假的个人主义——就是为我主义（Egoism）。他的性质是自私自利：只顾自己的利益，不管群众的利益。 （2）真的个人主义——就是个性主义（Individuality）。他的特性有两种：一是独立思想，不肯把别人的耳朵当耳朵，不肯把别人的眼睛当眼睛，不肯把别人的脑力当自己的脑力；二是个人对于自己思想信仰的结果要负完全责任，不怕权威，不怕监禁杀身，只认得真理，不认得个人的利害。</p></li><li><p>人人都是一个无冠的帝王，人人都可以做一些改良社会的事。</p></li><li><p>孔子说：“修己以敬，修己以安人，修己以安百姓。”修己就是把自己弄好。我们应当先把自己弄好，然后帮助别人；独善其身然后能兼善天下。</p></li><li><p>我这“社会的不朽论”的大旨是： 我这个“小我”不是独立存在的，是和无量数小我有直接或间接的交互关系的，是和社会的全体和世界的全体都有互为影响的关系的，是和社会世界的过去和未来都有因果关系的。</p></li><li><p>那边“一座低低的土墙，遮着一个弹三弦的人。”那三弦的声浪，在空间起了无数波澜；那被冲动的空气质点，直接间接冲动无数旁的空气质点；这种波澜，由近而远，至于无穷空间；由现在而将来，由此刹那以至于无量刹那，至于无穷时间：这已是不灭不朽了。那时间，那“低低的土墙”外边来了一位诗人，听见那三弦的声音，忽然起了一个念头；由这一个念头，就成了一首好诗；这首好诗传诵了许多人；人读了这诗，各起种种念头；由这种种念头，更发生无量数的念头，更发生无数的动作，以至于无穷。然而那“低低的土墙”里面那个弹三弦的人又如何知道他所发生的影响呢？</p></li><li><p>人世的大悲剧是无数的人们终身做血汗的生活，而不能得着最低限度的人生幸福，不能避免冻与饿。人世的更大悲剧是人类的先知先觉者眼看无数人们的冻饿，不能设法增进他们的幸福，却把“乐天”、“安命”、“知足”、“安贫”种种催眠药给他们吃，叫他们自己欺骗自己，安慰自己。</p></li><li><p>自然（Nature）是一个最狡猾的妖魔，只有敲打逼拶可以逼她吐露真情。不思不虑的懒人只好永永作愚昧的人，永永走不进真理之门。</p></li><li><p>中国八百年的理学工夫居然看不见二万万妇女缠足的惨无人道！明心见性，何补于人道的苦痛困穷！坐禅主敬，不过造成许多“四体不勤，五谷不分”的废物！</p></li><li><p>然而人的阅历就像一座穹门， 从那里露出那不曾走过的世界， 越走越远，永永望不到他的尽头。</p></li><li><p>孔夫子不说过吗？“制而用之谓之器。利用出入，民咸用之，谓之神。”孔老先生还嫌“圣”字不够，他简直要尊他们为“神”呢！</p></li><li><p>但是你若把这班老百姓请到上海来，请他们从先施公司走到永安公司去，他们便不能不用耳目手足了。走过大马路的人，真如《封神传》上黄天化说的“须要眼观四处，耳听八方”。你若眼不明，耳不听，手足不灵动，必难免危险。这便是摩托车文明的训练。</p></li><li><p>这种开车的训练真是“胜读十年书”！你开着汽车，两手各有职务，两脚也各有职务，眼要观四处，耳要听八方，还要手足眼耳一时并用，同力合作。你不但要会开车，还要会修车；随你是什么大学教授、诗人诗哲，到了半路车坏的时候，也不能不卷起袖管，替机器医病。什么书呆子、书踱头、傻瓜，若受了这种训练，都不会四体不勤，五官不灵了。</p></li><li><p>社会革命的目的就是要做到向来被压迫的社会分子能站在大庭广众之中歌颂他的时代为人类有史以来最好的时代。</p></li><li><p>只有这第四害，麻将，还是日兴月盛，没有一点衰歇的样子，没有人说它是可以亡国的大害。新近麻将先生居然大摇大抛地跑到西洋去招摇一次，几乎做了鸦片与杨梅疮的还敬礼物。但如今它仍旧缩回来了，仍旧回来做东方精神文明的国家的国粹，国戏！</p></li><li><p>三百年以前，培根说了句很聪明的话，他说，世上治学的人可分为三种，那就是，第一蜘蛛式的，亦是靠自己肚子里分泌出丝来，把网作得很美很漂亮，也很有经纬，下点雨的时候，网上挂着雨丝，从侧面看过去，那种斜光也是很美。但是虽然好，那点学问却只是从他自己的肚子造出来的。第二种是蚂蚁式的，只知道集聚，这里有一颗米，把上三三两两的抬了去，死了一个苍蝇，也把他抬了去，在地洞里堆起很多东西，能消化不能消化却不管，有用没有用也是不管，这是勤力而理解不足。第三种是蜜蜂式的，这种最高，蜜蜂采了花去，更加上一度制造，取其精华而去其糟粕，是经过改造制造出新的成绩的。孔子说过，学而不思则罔，思而不学则殆。蜜蜂的方法，是又学又思，是理想的作学方法。</p></li><li><p>就是说受过教育，就认识清社会的恶习，而发不满意的批评。这种不满意社会的批评，最容易引起社会的反感。但是人受教育，求知识，原是为发现社会的弊端，若是受了教育，而对于社会仍是处处觉得满意，那就是你的眼镜配错了光了，应该返回去审查一审查，重配一副光度合适的才好。</p></li><li><p>老子是“儒”，孔子也是“儒”。“儒”的职业是替人家主持丧礼、葬礼、祭礼的。有人认为“儒”是到孔子时才有的，这是错误的观念。</p></li><li><p>而老子最有名的一句话，就是“太上，下知有之”。就是说：最高的政府，使下面的人仅仅知道这个政府。另外一个本子把这句话多加了一个字，作“太上下不知有之”。就是说：上面有个政府，下面的人民还不知道有政府的存在。下面又说：“其次，亲之誉之；其次，畏之；其次，侮之。”就是，比较次一等的政府，人民亲近他，称誉他；第三等政府，人民畏惧他；第四等政府，人民看不起他。所以第一句“太上，下知有之”六个字是很了不得的，是人类政治思想史上最早有这个观念。</p></li><li><p>论语》中有“性相近也，习相远也，唯上智与下愚不移。”就是说，除了绝顶聪明与绝顶笨的人没有法教育以外，其他都是平等的，</p></li><li><p>孔子提出四个字，可以说是中国的民主主义教育哲学，就是：“有教无类”。“类”是种类，是阶级。若是看了墨子讲的“类”和荀子讲的“类”，然后再来解释孔子的“有教无类”，可以知道此处的“类”就是种类，就是阶级。有了教育就没有种类，就没有阶级。后世的考试制度，可以说是根据这种教育哲学为背景的。</p></li><li><p>（一）白话文学是起来替古文发丧的，下讣文的。 （二）二千年中之白话文学有许多有价值的作品，什么人也不能否认。 （三）中国将来之一切著作，切应当用白话去作。 白话是活的，用白话去作，成绩一定好，死文字不能产生活文学，要创造活文学，所以就要用白话。</p></li><li><p>白话是活的，用白话去作，成绩一定好，死文字不能产生活文学，要创造活文学，所以就要用白话。</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;胡适（1891年12月17日—1962年2月24日），原名嗣穈，学名洪骍，字希疆，笔名胡适，字适之。著名思想家、文学家、哲学家。 徽州绩溪人，以倡导“白话文”、领导新文化运动闻名于世。&lt;/p&gt;
    
    </summary>
    
      <category term="读书" scheme="http://chuanqiang.github.io/categories/%E8%AF%BB%E4%B9%A6/"/>
    
    
      <category term="书摘" scheme="http://chuanqiang.github.io/tags/%E4%B9%A6%E6%91%98/"/>
    
      <category term="胡适" scheme="http://chuanqiang.github.io/tags/%E8%83%A1%E9%80%82/"/>
    
  </entry>
  
  <entry>
    <title>第二十六周 - 回家</title>
    <link href="http://chuanqiang.github.io/2018/02/12/%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AD%E5%91%A8%20-%20%E5%9B%9E%E5%AE%B6/"/>
    <id>http://chuanqiang.github.io/2018/02/12/第二十六周 - 回家/</id>
    <published>2018-02-12T11:54:28.000Z</published>
    <updated>2018-02-12T12:49:30.205Z</updated>
    
    <content type="html"><![CDATA[<p>终于挨到放年假了，这周一直充斥着一种幸福来临前的焦躁和急迫。人们面对即将到来的幸福生活，总会过早的沉浸，从而忽视身边的小确幸，但是到来的生活真如你所料的那么幸福吗？被爸妈从『亲的了不得』到『嫌弃』的转换能超过三天吗？😂</p><a id="more"></a><p>早上一早就睡不着了，内心比行李打包的更快，迫不及待要奔回济南。起床整理要带的东西，一边听歌一边收拾行李和整理屋子，秋阳甚暖，阳光挥洒进卧室，晒的屋里暖意浓浓，心底突然一刹那涌出了浓浓的不舍，对北京这个城市突然有了感情。毕竟在北京待了也有快两年了，可以说北京是我的第二个故乡，虽然平时嫌弃她的拥堵、她的快节奏、她的不近人情，但是毕竟在时间长河的流淌中沉淀下了一些东西，一些感情，和这座城市相处了两年，已经习惯了她的性情和脾气。有时候我想，如果当时没下决心来北京，现在的我会是怎样的斑驳光景，我一直觉得来北京是我毕业之后做出的最正确的事情之一。歌放的是陈升的《北京一夜》，结合中国风的曲调很是动听，也很应景。<br><img src="http://upload-images.jianshu.io/upload_images/763193-e878547bb2bab208.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="北京一夜"></p><p>整理了一下要带的东西，心血来潮把他们一一摆开，弄了一个 EDC Show，算做是一个仪式，一个对北京的这一段生活和对这些日夜陪伴我的老朋友的纪念吧。这些个电子用品和小东西，不光是生活的物件，更是组成我生活的一部分，他们承载了我的时光，陪伴了我的成长，所以他们对于我来说有着特殊的意义。马克思说：『人的本质在其现实性上是一切社会关系的总和』，但是我总觉得这样说否定了人本身的主体性和物质性，<strong>我们人是物质和精神的总和，精神依托于物质，但不只是我们的肉体，还有我们生活的环境和使用的一切物质，所以我相信这些生活中朝夕相处的物件，也是我们精神的延伸，使我们生命得以完整和延续的一部分</strong><br><img src="http://upload-images.jianshu.io/upload_images/763193-b2cac75ce9e207f8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="My EDC"></p><p>北京南站，熙熙攘攘，大包小包满是归乡的游子。年，确实是一个独具意味的东西，年是地球绕太阳一周的时间，也是辞旧迎新，代表旧一年的结束，迎接新一年开始的节点，更是具有让中华大地的子民相约在同一个时段跨过千山万水，把他们送到亲人身边的魔力。这种盛大的『回归』，是任何节日都取代不了的。<br><img src="http://upload-images.jianshu.io/upload_images/763193-a3fbfc1382f0cdb5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="北京南站"></p><p>在高铁上一直看古龙的小说，感觉没一会就到济南了，经常和家住在河北的同事开玩笑说，别看你近，你都没我回家快。的确，从北京南站做高铁到济南西站，快的话一个半小时就到了，等今年房子下来，下了南站回家也就十几分钟，总共两个小时就能从北京到济南新房子里，确实特方便。这也是当初选择去北京而没有去上海的一个理由。最近两次回来发现济南边干净了，发展也挺快，只是城市规模还是太小，交通也不完善，重要的是牛逼的互联网公司还是太少，相信过几年等济南这边发展发展还是会选择会济南的。<br><img src="http://upload-images.jianshu.io/upload_images/763193-c93f8d4c1fc96ef1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="济南西站"></p><p>有了远行，才会凸显故乡的可贵，毕竟再美的风景和财富都比不过家乡的默默温情。故乡承载了太多美好的回忆，等着我再次去重温。过年了，在家多陪陪父母，毕竟亲人比什么都重要。以前古人说，『父母在，不远行』，现在交通发达了，也要『父母在，勤回家』。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;终于挨到放年假了，这周一直充斥着一种幸福来临前的焦躁和急迫。人们面对即将到来的幸福生活，总会过早的沉浸，从而忽视身边的小确幸，但是到来的生活真如你所料的那么幸福吗？被爸妈从『亲的了不得』到『嫌弃』的转换能超过三天吗？😂&lt;/p&gt;
    
    </summary>
    
      <category term="周志" scheme="http://chuanqiang.github.io/categories/%E5%91%A8%E5%BF%97/"/>
    
    
      <category term="独白" scheme="http://chuanqiang.github.io/tags/%E7%8B%AC%E7%99%BD/"/>
    
      <category term="随笔" scheme="http://chuanqiang.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>工作中的时间管理</title>
    <link href="http://chuanqiang.github.io/2018/01/30/%E5%B7%A5%E4%BD%9C%E4%B8%AD%E7%9A%84%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86/"/>
    <id>http://chuanqiang.github.io/2018/01/30/工作中的时间管理/</id>
    <published>2018-01-30T12:04:04.000Z</published>
    <updated>2018-01-30T12:05:56.566Z</updated>
    
    <content type="html"><![CDATA[<p>今天看到一篇文章，是左耳朵耗子写的一篇公众号，是讲如何进行时间管理的。与其他时间管理的文章不同，作者提出<strong>你要主动管理的不是你的时间，而是管理你的同事，管理你的信息。</strong> 我总结了下文章的观点和内容。如下。</p><a id="more"></a><h3 id="主动管理"><a href="#主动管理" class="headerlink" title="主动管理"></a>主动管理</h3><p>首先，不要做一个被动的人，要学会『反转控制』，化被动为主动，把握自己。如果在工作中老是被人打断，作者分享了三个解决的方法：</p><ol><li>在自己的工位上挂了一个条幅，上面写着“正在努力写代码中，请勿打断……</li><li>跑到公司别的空闲工位上工作。</li><li>把你的工作安排预先设置到一个可以共享的日历上，然后分享给大家，让大家了解你的日程。</li><li>要求你的同事，重要的事，不要发微信，而是要发邮件，因为微信会有很大概率看不到。信息管理真的非常重要，因为将信息做好分类，才方便检索，方便你通过自己的优先级来处理信息。而目前看来，这些只有邮件才能够更好地完成（邮件可以帮你通过邮件标题聚合，你可以设置很多规则来自动化分类邮件，还可以帮你设置自动化回复）。</li></ol><h3 id="学会说“不”"><a href="#学会说“不”" class="headerlink" title="学会说“不”"></a>学会说“不”</h3><p>当你面对做不到的需求时，你不要说这个需求做不到。尤其是，你不要马上说做不到，你要先想一下，这样让别人觉得你是想做的，但是，在认真思考过后，你觉得做不到，并且给出一个你觉得做得到的方案。这里的诀窍是——给出另一个你可以做到的方案，而不是把对方的方案直接回绝掉。</p><p>当你面对过于复杂的需求时，你不要说不。你要反问一下，为什么要这样做？这样做的目的是什么？当了解完目的以后，你可以给出一个自己的方案，或是和对方讨论一个性价比更好的方案。你可以回复说，这个需求好复杂，我们能不能先干这个，再做那个，这样会更经济一些。这里的诀窍是——我不说我不能完全满足你，但我说我可以部分满足你。</p><p>当你面对时间完全不够的需求时，你也不要说不。既然对方把压力给你，你要想办法把这个压力还回去，或是让对方来和你一同分担这个压力。</p><p>惯用的方式是给回三个选择：</p><ol><li>我可以加班加点完成，但是我不保证好的质量，有 bug 你得认，而且事后你要给我 1 个月的时间还债。</li><li>我可以加班加点，还能保证质量，但我没办法完成这么多需求，能不能减少一些？</li><li>我可以保质保量地完成所有的需求，但是，能不能多给我 2 周时间？</li></ol><p>这里的诀窍是——我不能说不，但是我要有条件地说是。 而且，我要把你给我的压力再反过来还给你，看似我给了需求方选择，实际上，我掌握了主动。</p><h3 id="加班和开会"><a href="#加班和开会" class="headerlink" title="加班和开会"></a>加班和开会</h3><p>国内的公司之所以会有这么多的加班和会议，主要原因还是管理者在管理上只会使用低级的通过劳动密集型的方式来做事。在国内的公司，老板们看到团队在拼命加班，会很高兴，而在国外的公司，老板看到团队在拼命加班，会觉得这个团队一定是哪里出了问题，老板会比较焦虑。</p><p>加班干出来了质量不好的软件，于是线上故障很多，要花时间处理，而后面的需求也过来了，发现复杂代码的扩展性很差，越干越慢，越干越烂，越干故障越多。于是，你会被抱怨得越来越多。果怎么做都要受伤害，那么两害相权取其轻。在项目延期和线上故障两者选择前者。</p><p>开会，不是讨论问题，而是讨论方案，开会不是要有议题，而是要有议案。所以，作为与会者，如果你发现没有议案，大家海了去说，那么你有两种选择，跳出来帮大家理一理，或者也可以说一下，如果会上讨论不清，要不先线下讨论，有了方案再来评审。也许在一些会上你不敢这么干，但是有些会你是可以这么干的。能影响的这些都能为你争取到很多时间。</p><p>只有将使用时间的主动权掌握在自己手上，才能更好地利用时间，才能更为高效率的工作。所以，这是时间管理中非常关键的事！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天看到一篇文章，是左耳朵耗子写的一篇公众号，是讲如何进行时间管理的。与其他时间管理的文章不同，作者提出&lt;strong&gt;你要主动管理的不是你的时间，而是管理你的同事，管理你的信息。&lt;/strong&gt; 我总结了下文章的观点和内容。如下。&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://chuanqiang.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="管理" scheme="http://chuanqiang.github.io/tags/%E7%AE%A1%E7%90%86/"/>
    
      <category term="时间" scheme="http://chuanqiang.github.io/tags/%E6%97%B6%E9%97%B4/"/>
    
  </entry>
  
  <entry>
    <title>Redis 基础 一</title>
    <link href="http://chuanqiang.github.io/2018/01/29/Redis%20%E5%9F%BA%E7%A1%80%20%E4%B8%80/"/>
    <id>http://chuanqiang.github.io/2018/01/29/Redis 基础 一/</id>
    <published>2018-01-29T14:53:11.000Z</published>
    <updated>2018-06-25T13:59:58.316Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍了 Redis 的简介、安装、常用命令和基础类型。</p><a id="more"></a><h2 id="简介和安装"><a href="#简介和安装" class="headerlink" title="简介和安装"></a>简介和安装</h2><h3 id="1-NoSQL-简介"><a href="#1-NoSQL-简介" class="headerlink" title="1. NoSQL 简介"></a>1. NoSQL 简介</h3><p>NoSQL，泛指非关系型数据库，NoSQL数据库分四类</p><ol><li>键值(key-value)存储数据库，这一类数据库会使用一个哈希表，这个表中一个特定的键和一个指针指向特定的数据，如Redis，Voldmort，Oracle BDB</li><li>列存储数据库，通常用来因对分布式存储的海量诗句，键仍然存在，但是它们的特点是指向多个列。如HBASE，Riak。</li><li>文档型数据库，数据模型是版本化的文档，半结构化的文档以特定的格式存储，比如JSON。文档型数据库可以看做是键值数据库的升级版，允许之间嵌套键值。而且文档数据库比键值数据库的查询效率更高。如:CouchDB，MongoDB。</li><li>图形数据库，与其他行列以及刚性结构的SQL数据库不同，它是使用灵活的图形模型，能够扩展到过个服务器上。</li></ol><p>NoSQL数据库没有表中的查询语言(SQL)，因此进行数据查询需要定制数据模型。许多NoSQL数据库都有TEST式的数据接口或者API。如:Neo4J，InfoGrid，Infinite Graph。</p><h3 id="2-非关系型数据库的特点"><a href="#2-非关系型数据库的特点" class="headerlink" title="2. 非关系型数据库的特点"></a>2. 非关系型数据库的特点</h3><ol><li>数据模型比较简单</li><li>需要灵活性更强的IT系统</li><li>对数据库性能要求较高</li><li>不需要高度的数据一致性</li><li>对于给定的key，比较容易映射复杂值得环境</li></ol><h2 id="Redis-简介"><a href="#Redis-简介" class="headerlink" title="Redis 简介"></a>Redis 简介</h2><p>是以key-value形式存储，data structure service 数据结构服务器。键可以包含:(String) 字符串，哈希，(list)链表，(set)集合，(zset)有序集合。这些数据集合都支持push/pop、add/remove级取交集、并集已经更复杂的操作。Redis支持各种不同的方式排序。为了保证效率，数据都是缓存在内存中，它可以周期性的把更新的数据写入磁盘或者把修改的操作追加到文件中。</p><ul><li>优点<ul><li>对数据高并发读写</li><li>对海量数据的高效率存储和访问</li><li>对数据的可扩展性和高可用性</li></ul></li><li>缺点<ul><li>redis 无法做到太复杂的关系数据库模型</li></ul></li></ul><h3 id="3-一些特性"><a href="#3-一些特性" class="headerlink" title="3. 一些特性"></a>3. 一些特性</h3><ul><li>扩展性<ul><li>水平扩展。在原有的主（可读可写）从（只读）服务器集群（读写分离的），横向的扩充，增加主从节点</li><li>垂直扩展。把原有的主从服务器上加硬件来增加容量</li></ul></li><li>高可用：在原来的主节点挂掉时，从节点连接到其他的主节点。</li><li>可靠性：持久化后的数据不丢失（同步到硬盘）<ul><li>RDB: 周期性的把内存中的数据同步到硬盘上</li><li>只要DML操作，把持久化操作记录到日志<code>appendonly.aof</code>中（相当于Oracle中的undo的概念）。主要。</li></ul></li></ul><h3 id="4-Redis-的三种内容解决方案"><a href="#4-Redis-的三种内容解决方案" class="headerlink" title="4. Redis 的三种内容解决方案"></a>4. Redis 的三种内容解决方案</h3><ol><li><strong>主从形式</strong>: 普通的一个主节点，多个从节点。当主节点挂掉的话，整个集群挂掉。</li><li>哨兵形式（redis 2.x）：在主从的基础上增加一个哨兵节点，来监视主从节点的状态。当主节点挂掉的时候，在从节点里通过选举方式选择一个从节点来当主节点。当主节点修复，会默认变成从节点。</li><li>集群模式（redis 3.x）:多主多从，可以做数据的分布（把数据均摊到多台机器）</li></ol><h3 id="5-关于Redis的面试问题"><a href="#5-关于Redis的面试问题" class="headerlink" title="5. 关于Redis的面试问题"></a>5. 关于Redis的面试问题</h3><h4 id="1-Redis-慢"><a href="#1-Redis-慢" class="headerlink" title="1. Redis 慢"></a>1. Redis 慢</h4><p><strong>原因</strong>：在写入的时候，redis 使用AOF模式来维持高可用，因此要不断的记录日志。导致写慢读快（读自内存）。</p><p><strong>解决方法</strong>：2.0时候可以调节虚拟机的参数；3.0集群后参数不可调，多加服务器；增加结合SSDB，来增加写的速度。</p><h4 id="2-如何综合的解决高并发问题"><a href="#2-如何综合的解决高并发问题" class="headerlink" title="2. 如何综合的解决高并发问题"></a>2. 如何综合的解决高并发问题</h4><p><strong>前端</strong>：lvs（负载兼容器） + nginx（业务拆分）</p><p><strong>后台</strong>：数据库的分表分库 / redis缓存（提高性能，给数据库降压）</p><h4 id="3-业务场景"><a href="#3-业务场景" class="headerlink" title="3. 业务场景"></a>3. 业务场景</h4><p>不需要实时返回数据，不需要强一致性 </p><ul><li>缓存（应用最多，功能是秒杀，抢购，抢红包）</li><li>任务队列（聊天多条消息）</li><li>应用排行榜</li><li>网站访问统计</li><li>投票数、微博转发,评论、浏览量</li><li>数据过期处理</li><li>分布式集群架构中的session 分离</li></ul><h2 id="Redis-安装和常用命令"><a href="#Redis-安装和常用命令" class="headerlink" title="Redis 安装和常用命令"></a>Redis 安装和常用命令</h2><h3 id="1-Linux-系统"><a href="#1-Linux-系统" class="headerlink" title="1. Linux 系统"></a>1. Linux 系统</h3><h4 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a><a href="http://redis.io/download" target="_blank" rel="external">下载地址</a></h4><h4 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h4><ol><li>首先安装 gcc，把下载好的<code>redis-3.0.0-rc2.tar.gz</code>放到 Linux <code>/usr/local</code>文件夹下；</li><li>进行解压 <code>tar -zxvf redis-3.0.0-rc2.tar.gz</code>；</li><li>进入到 <code>redis-3.0.0</code>目录下，进行编译 <code>make</code>；</li><li>进入到<code>src</code>下进行安装 <code>make install</code> ，验证(查看 src 目录下，有<code>redis-server</code>、<code>redis-cli</code>即可)；</li><li>建立两个文件夹存放 redis 命令和配置文件。<ul><li><code>mkdir -p /usr/local/redis/etc</code></li><li><code>mkdir -p /usr/local/redis/bin</code></li></ul></li><li>把<code>redis-3.0.0</code>下的<code>redis.conf</code>移动到<code>/usr/local/redis/etc</code>下。<ul><li><code>cp redis.conf /usr/local/redis/etc</code></li></ul></li><li>把<code>redis-3.0.0/src</code>里的以下文件移动到 <code>bin</code> 下。<ul><li><code>mv mkreleasehdr.sh redis-benchmark redis-check-aof redis-check-dump redis-cli redis-server /usr/local/redis/bin</code></li></ul></li><li>启动时并制定配置文件=: <code>./redis-server /usr/local/redis/etc/redis.conf</code>。(注意使用后台启动，所以修改<code>redis.conf</code>里的<code>9 daemonize</code> 改为<code>yes</code>)</li><li>验证是否启动成功<ul><li><code>ps -ef | grep redis</code> 或查看端口号<code>netstat -tunpl | grep 6379</code></li><li>进入redis客户端<code>redis-cli</code>，退出客户端<code>quit</code></li><li>退出redis服务<code>pkill redis-server</code>，或kill进程号，或<code>/usr/local/redis/bin/redis cli shutdown</code></li></ul></li></ol><h4 id="安装命令补充"><a href="#安装命令补充" class="headerlink" title="安装命令补充"></a>安装命令补充</h4><ol><li><code>linux yum rz</code>安装(使可以上传下载文件): <code>sudo yum install lrzsz -y</code></li><li>上传文件 <code>rz</code>(<code>sc</code>: 下载文件)</li><li>gcc 安装: <code>sudo yum install gcc-c++</code></li><li>进入redis加压后的文件夹，执行<code>make</code>，报错的话执行<code>make MALLOC=libc</code></li><li>启动redis服务器:<code>/usr/local/redis/bin/redis-server /usr/local/redis/etc/redis.conf</code>；启动客户端<code>/usr/local/redis/bin/redis-cli</code></li><li>格式解压<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">.tar.gz     格式解压为          tar   -zxvf   xx.tar.gz</div><div class="line">.tar.bz2   格式解压为          tar   -jxvf    xx.tar.bz2</div></pre></td></tr></table></figure></li></ol><h3 id="2-Mac-系统"><a href="#2-Mac-系统" class="headerlink" title="2. Mac 系统"></a>2. Mac 系统</h3><p>使用<code>Homebrew</code>安装 Redis<br>安装命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install redis</div></pre></td></tr></table></figure></p><p>安装完成后的提示信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">To have launchd start redis at login: </div><div class="line">ln -sfv /usr/local/opt/redis/*.plist ~/Library/LaunchAgents </div><div class="line">Then to load redis now: </div><div class="line">launchctl load ~/Library/LaunchAgents/homebrew.mxcl.redis.plist </div><div class="line">Or, if you don’t want/need launchctl, you can just run: </div><div class="line">redis-server /usr/local/etc/redis.conf</div></pre></td></tr></table></figure></p><h3 id="3-常用命令"><a href="#3-常用命令" class="headerlink" title="3. 常用命令"></a>3. 常用命令</h3><p>开机启动 Redis 命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ln -sfv /usr/local/opt/redis/*.plist ~/Library/LaunchAgents</div></pre></td></tr></table></figure></p><p>检查服务是否启动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ redis-cli ping 返回 PONG 启动</div><div class="line">$ ps aux | grep redis // 查看redis进程</div></pre></td></tr></table></figure></p><p>使用配置文件启动 Redis 命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ redis-server /usr/local/etc/redis.conf</div><div class="line">或 $ redis-server</div><div class="line">另 $ redis-server &amp; // 后台程序式运行</div></pre></td></tr></table></figure></p><p>停止 Redis 服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ redis-cli shutdown</div><div class="line">// Redis收到命令后，服务端会断开所有客户端的连接，然后根据配置执行持久化，最后退出</div></pre></td></tr></table></figure></p><p>启动客户端<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">// 1. 按照默认配置连接Redis（127.0.0.1:6379）</div><div class="line">$ redis-cli</div><div class="line">// 2. 指定地址和端口号</div><div class="line">redis-cli -h 127.0.0.1 -p 6379</div></pre></td></tr></table></figure></p><p>停止客户端<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ctrl + c 或 quit</div></pre></td></tr></table></figure></p><p>redis 配置文件的位置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/local/etc/redis.conf</div></pre></td></tr></table></figure></p><p>卸载redis和它的文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brewuninstall redis rm ~/Library/LaunchAgents/homebrew.mxcl.redis.plist</div></pre></td></tr></table></figure></p><h3 id="4-其他命令"><a href="#4-其他命令" class="headerlink" title="4. 其他命令"></a>4. 其他命令</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="comment">-- 修改为守护模式</span></div><div class="line">daemonize yes</div><div class="line"></div><div class="line"><span class="comment">-- 设置进程锁文件</span></div><div class="line">pidfile /usr/local/redis/redis.pid</div><div class="line"></div><div class="line"><span class="comment">-- 端口</span></div><div class="line">port 6379</div><div class="line"></div><div class="line"><span class="comment">-- 客户端超时时间</span></div><div class="line">timeout 300</div><div class="line"></div><div class="line"><span class="comment">-- 日志级别</span></div><div class="line">loglevel debug</div><div class="line"></div><div class="line"><span class="comment">-- 日志文件位置</span></div><div class="line">logfile /usr/local/redis/log-redis.log</div><div class="line"></div><div class="line"><span class="comment">-- 设置数据库的数量，默认数据库为16，可以使用SELECT 命令在连接上指定数据库id</span></div><div class="line">databases 16</div><div class="line"></div><div class="line"><span class="comment">-- 指定在多长时间内，有多少次更新操作，就将数据同步到数据文件，可以多个条件配合</span></div><div class="line"><span class="comment">-- save</span></div><div class="line"></div><div class="line"><span class="comment">-- Redis默认配置文件中提供了三个条件：</span></div><div class="line">save 900 1</div><div class="line">save 300 10</div><div class="line">save 60 10000</div><div class="line"></div><div class="line"><span class="comment">-- 指定存储至本地数据库时是否压缩数据，默认为yes，Redis采用LZF压缩，如果为了节省CPU时间，</span></div><div class="line"><span class="comment">-- 可以关闭该#选项，但会导致数据库文件变的巨大</span></div><div class="line">rdbcompression yes</div><div class="line"></div><div class="line"><span class="comment">-- 指定本地数据库文件名</span></div><div class="line">dbfilename dump.rdb</div><div class="line"></div><div class="line"><span class="comment">-- 指定本地数据库路径</span></div><div class="line">dir /usr/local/redis/db/</div><div class="line"></div><div class="line"><span class="comment">-- 指定是否在每次更新操作后进行日志记录，Redis在默认情况下是异步的把数据写入磁盘，如果不开启，可能</span></div><div class="line"><span class="comment">-- 会在断电时导致一段时间内的数据丢失。因为 redis本身同步数据文件是按上面save条件来同步的，所以有</span></div><div class="line"><span class="comment">-- 的数据会在一段时间内只存在于内存中</span></div><div class="line">appendonly no</div><div class="line"><span class="comment">-- 指定更新日志条件，共有3个可选值：</span></div><div class="line"><span class="comment">-- no：表示等操作系统进行数据缓存同步到磁盘（快）</span></div><div class="line"><span class="comment">-- always：表示每次更新操作后手动调用fsync()将数据写到磁盘（慢，安全）</span></div><div class="line"><span class="comment">-- everysec：表示每秒同步一次（折衷，默认值）</span></div><div class="line">appendfsync everysec</div></pre></td></tr></table></figure><h2 id="Redis-基础类型讲解"><a href="#Redis-基础类型讲解" class="headerlink" title="Redis 基础类型讲解"></a>Redis 基础类型讲解</h2><p>redis 一共5种基本数据类型: String、Hash、List、Set、ZSet</p><ul><li><p><code>flushdb</code>，直接清空</p><h3 id="1-String-类型"><a href="#1-String-类型" class="headerlink" title="1. String 类型"></a>1. String 类型</h3><p>String 类型是包含很多种类型的特殊类型，并且是二进制安全的。比如序列化对象进行存储，比如一张二进制图片进行二进制存储，比如一个简单的字符串、数值等。</p></li><li><p>设置值 <code>set name zcq</code></p></li><li>取值 <code>get name</code>(设置name多次会覆盖)</li><li>删除值 <code>del name</code></li><li><code>setnx(not exist) name</code>: 如果不存在进行设置，就不需要设置了，返回零</li><li><code>setex(expired)</code>，<code>setex color 10 red</code>设置color的有效期为10秒，10秒后返回nil(redis中nil表示空)</li><li>使用<code>setrange</code>替换字符串<ul><li><code>set email 123456789@qq.com</code></li><li><code>setrange email 10 ww</code>(表示从第10位开始替换，后面跟上替换的字符串)</li></ul></li><li>mset 、mget 一次性设置和获取多个值<ul><li><code>mset k1 v1 k2 v2</code></li><li><code>mget k1 k2</code></li></ul></li><li>一次性设置和取值 <code>getset</code> 方法<ul><li>getset key value</li></ul></li><li><code>incr</code>和<code>decr</code>方法: 对某一值进行递增和递减<code>incr  int_a</code></li><li><code>incrby</code>和<code>decrby</code>方法: 对某个值进行指定长度的递增和递减<ul><li><code>incrby int_a 4</code></li></ul></li><li><code>append key value</code>: 为某个值追加方法<ul><li><code>append name chuanqiang</code></li></ul></li><li><code>strlen key</code> 获取字符串的长度 </li></ul><h3 id="2-Hash-类型"><a href="#2-Hash-类型" class="headerlink" title="2. Hash 类型"></a>2. Hash 类型</h3><p>Hash 类型是 String 类型的 field 和 value 的映射，或者说一个 String 几何，适合存储对象，会比把一个对象类型存储到String 中更减少空间，并方便存储整个对象。</p><ul><li><code>hset myhash field1 hello</code> 存储值</li><li><code>hget myhash field1</code> 获取内容</li><li><code>hmset myhash field1 v1 field v2</code> 批量存储多个键值对</li><li><code>hmget myhash field1 field2</code> 批量获取键值对</li><li><code>hincrby</code>、<code>hdecrby</code> 几何递增和递减</li><li><code>hexists</code> 是否存在 key，如果存在返回，不存在返回 0 </li><li><code>hlen</code> 返回 Hash 集合里所有的键数值</li><li><code>hdel</code> 删除指定 hash 里所有的字段</li><li><code>hkeys</code> 返回 Hash 里所有的字段</li><li><code>hvals</code> 返回 Hash 的所有 value</li><li><code>hgetall</code> 返回 Hash 里所有的 key 和 value</li></ul><h3 id="3-List-类型"><a href="#3-List-类型" class="headerlink" title="3. List 类型"></a>3. List 类型</h3><p>List 类型是一个链表结构的集合，其主要功能有 <code>push</code>、<code>pop</code>、获取元素等。List类是一个双端链表结构。我们可以进行集合的头部和尾部添加或删除元素。List 可以作为栈，又可以作为队列。</p><ul><li><code>lpush</code>: 从头部加入元素(栈)，先进后出<ul><li><code>lpush list1 &quot;hello&quot;; lpush list1 &quot;world&quot;</code></li><li><code>lrange list1 0 -1</code>: 表示从头取到尾。结果是<code>world hello</code></li></ul></li><li><code>rpush</code>: 从尾部加入元素(队列)，先进先出<ul><li><code>rpush list2 &quot;one; rpush list2&quot;</code></li><li><code>lrange list2 0 -1</code> 结果是<code>hello world</code></li></ul></li><li><code>linsert</code> 方法: 插入元素<ul><li><code>linsert list3 before[集合的元素][插入的元素]</code></li><li>如<code>linsert list2 before &quot;world&quot; &quot;hi&quot;</code>，结果是<code>hello hi world</code></li></ul></li><li><code>lset</code> 方法: 将指定下标的元素替换掉<ul><li><code>lset list1 0 &quot;aaa&quot;</code>，把list1 的第一个数据替换为 aaa</li></ul></li><li><code>lrem</code> 方法: 删除元素，返回删除的个数<ul><li><code>lrem list1 2 aaa</code>，删除两个 aaa</li></ul></li><li><code>ltrim</code> 方法: 保留指定 key 的值范围内的数据<ul><li>eg <code>ltrim list1 1 5</code>，保留第2到第6的值，删除第一个值</li></ul></li><li><code>lpop</code>: 从list 的头部删除元素，并返回删除元素<code>lpop list1</code></li><li><code>rpop</code>: 从list 的尾部删除元素，并返回删除元素<code>rpop list1</code></li><li><code>rpoplpush</code>: 移除列表的最后一个元素，并将该元素添加到另一个列表并返回</li><li><code>lindex</code>: 通过索引获取列表中的元素。也可以使用负数下标，以 -1 表示列表的最后一个元素， -2 表示列表的倒数第二个元素，以此类推。</li><li><code>llen</code>: 返回元素的个数</li></ul><h3 id="4-Set-类型和-Zset-类型"><a href="#4-Set-类型和-Zset-类型" class="headerlink" title="4. Set 类型和 Zset 类型"></a>4. Set 类型和 Zset 类型</h3><p>set 集合是 String 类型的无序集合，set 是通过<code>hashtable</code>实现的，对集合我们可以取交集、并集、差集。</p><h4 id="set-类型"><a href="#set-类型" class="headerlink" title="set 类型"></a>set 类型</h4><ul><li><code>sadd set1 name</code>: 向集合中添加元素。</li><li><code>smembers set:</code> 查看set集合中的元素</li><li><code>srem set name</code>: 删除set中name元素</li><li><code>spop set:</code> 随机返回删除的key</li><li><code>sdiff set1 set2:</code> 返回两个集合的不同元素(以前面的集合为标准)</li><li><code>sdiffstore set3 set1 set2</code>: 将返回的不同元素存储到set3中</li><li><code>sinter set1 set2</code>: 返回集合的交集</li><li><code>sinterstroe set3 set1 set2</code>: 返回交集结果，存储到set3中</li><li><code>sunion set1 set2</code>: 取并集</li><li><code>sunionstore set3 set1 set2</code>: 取并集，存到set3中</li><li><code>smove set1 set2 a</code>: 将set1中的元素移动到set2中去</li><li><code>scard set</code>: 查看集合里面的元素个数</li><li><code>sismember set name</code>: 判断某元素是否为集合中的元素。返回1代表是，0代表否</li><li><code>srandmember set</code>: 随机返回一个元素</li></ul><h4 id="zset-类型"><a href="#zset-类型" class="headerlink" title="zset 类型"></a>zset 类型</h4><ul><li><code>zadd</code>向有序集合中添加一个元素，该元素如果存在，则更新顺序。<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">zadd zset1 3 five;</div><div class="line">zadd zset1 1 one;</div><div class="line">zadd zset1 2 two;</div><div class="line"></div><div class="line">zrange zset1 0 -1 withscores;  -- 展示所有元素</div></pre></td></tr></table></figure></li></ul><p>zset可以做搜索排行</p><ul><li><code>zrem zset1 one</code>: 删除名称为key的zset中的元素</li><li><code>zincrby</code>: 以指定去自动递增或减少</li><li><code>zrangebyscore</code>: 找到指定区间范围的拘束进行返回</li><li><code>zremrangebyrank</code>: 只删除索引1</li><li><code>zremrangebyscore</code>: 删除指定序列号</li><li><code>zrank zset1 three</code>: 升序排序后再找到索引值返回</li><li><code>zrevrank zset1 tow</code>: 降序排序后再找到索引值返回</li><li><code>zrangebyscore zset1 2 3 withscores</code>: 找到指定区间范围的数据尽兴返回</li><li><code>zcard zset</code>: 返回集合里所有的元素个数</li><li><code>zcount zset1 1 4</code>: 返回集合中给定区间中的数量</li><li><code>zremrangebyrank zset1 0 1</code>:删除索引从0到1的元素</li><li>[x] <code>zremrangebyscore zset1  5 5</code>: 删除指定序号</li></ul><h2 id="Redis-高级命令"><a href="#Redis-高级命令" class="headerlink" title="Redis 高级命令"></a>Redis 高级命令</h2><h3 id="1-Redis高级命令及特性"><a href="#1-Redis高级命令及特性" class="headerlink" title="1. Redis高级命令及特性"></a>1. Redis高级命令及特性</h3><ul><li><code>keys *</code>: 返回满足的所有键(可以模糊匹配)</li><li><code>exists key</code>: 是否存在指定的key</li><li><code>expire name 5</code>: 设置过期时间</li><li><code>persist name</code>: 取消过期时间</li><li><code>move name 1</code>: 将当前数据库中的key转移到其他数据库中</li><li><code>randomkey</code>: 随机返回数据库的一个key</li><li><code>rename</code>: 重命名key</li><li><code>echo</code>: 打印命令</li><li><code>dbsize</code>: 查看数据库的key数量</li><li><code>info</code>: 获取数据库的信息</li><li><code>config get</code>: 实时存储收到的请求(返回相关的配置信息<ul><li><code>config get *</code>: 返回所有配置(其实就是redis.config的缩影)</li></ul></li><li><code>flushdb</code>: 清空当前数据库</li><li><code>flushall</code>: 清空所有数据库<br>redis 分为16个数据库，单只是逻辑上的概念，不是物理上的划分</li></ul><h3 id="2-Redis-的安全性"><a href="#2-Redis-的安全性" class="headerlink" title="2. Redis 的安全性"></a>2. Redis 的安全性</h3><p>因为Redis的速度相当快，一个外部用户1秒内可以进行15w次的密码尝试，这意味着需要设定非常强大的密码来防止暴力破解。</p><p><code>vi</code>编辑<code>redis.conf</code>文件，找到下面进行保存修改<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#requirepass foobared</div><div class="line">requirepass ****</div></pre></td></tr></table></figure></p><p>重启服务器<code>pkill redis-server</code>，再次进入<code>keys *</code>，会发型没有权限进行查询<code>(erro)NOAUTH Authentication required</code>。输入密码则能成功进入<code>auth bhz</code>。</p><p>每次进入的时候都需要输入密码，有种简单的方式直接登录授权:<code>#/usr/local/redis/bin/redis-cli -a bhz</code></p><h3 id="3-主从复制"><a href="#3-主从复制" class="headerlink" title="3. 主从复制"></a>3. 主从复制</h3><p><strong>主从复制</strong></p><ol><li>Master可以拥有多个slave(层服务器)</li><li>多个slave可以连接同一个master外，还可以连接到其他slave</li><li>主从复制不会阻塞master，在同步时master可以继续处理client请求</li><li>提供系统的伸缩性<br><strong>主从复制过程</strong></li><li>slave与master建立连接，发送sync同步命令</li><li>master会开启一个后台进程，将数据库快照保存到文件中，同时master主进程会开始收集新的命令并缓存。</li><li>后台完成保存后，就将文件发送给slave</li><li>slave将此文件保存到硬盘上<br><strong>主从复制配置</strong></li><li>clone 服务器之后修改 slave 的 IP 地址</li><li>修改配置文件:<code>/usr/local/redis/etc/redis.conf</code><ul><li>第一步，<code>slaveof&lt;masterip&gt;&lt;mastport&gt;</code></li><li>第二部，<code>masterauth&lt;master-password&gt;</code><br>使用<code>info</code>查看 role 角色即可知道是主服务或从服务</li></ul></li></ol><h4 id="克隆服务器"><a href="#克隆服务器" class="headerlink" title="克隆服务器"></a>克隆服务器</h4><ol><li>关掉当前的虚拟机</li><li>VMware 在当前服务器上右键『管理』–『克隆』– 『下一步，下一步』–『创建完整克隆』</li><li>克隆出的新服务的『网络适配器』–右边的『高级』–『确定』</li></ol><h4 id="设置IP"><a href="#设置IP" class="headerlink" title="设置IP"></a>设置IP</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># ifconfig eth0  192.168.149.129 netmask 255.255.255.0</div></pre></td></tr></table></figure><p><strong>其他方式资料参考</strong></p><ul><li><a href="http://biancheng.dnbcw.net/linux/293227.html" target="_blank" rel="external">资料1</a></li><li><a href="http://www.jb51.net/LINUXjishu/64000.html" target="_blank" rel="external">资料2</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍了 Redis 的简介、安装、常用命令和基础类型。&lt;/p&gt;
    
    </summary>
    
      <category term="编程技术" scheme="http://chuanqiang.github.io/categories/%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Redis" scheme="http://chuanqiang.github.io/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>第二十五周 - 年会和第二技能</title>
    <link href="http://chuanqiang.github.io/2018/01/21/%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%94%E5%91%A8%20-%20%E5%B9%B4%E4%BC%9A%E5%92%8C%E7%AC%AC%E4%BA%8C%E6%8A%80%E8%83%BD/"/>
    <id>http://chuanqiang.github.io/2018/01/21/第二十五周 - 年会和第二技能/</id>
    <published>2018-01-21T15:06:46.000Z</published>
    <updated>2018-01-21T15:19:45.499Z</updated>
    
    <content type="html"><![CDATA[<p>年会临近，同事们都开始准备节目。在同事的威逼利诱下，我也无奈的参加了他们准备的小品《吃面》，在里面试演员『会计』一角色。这个角色台词少，另外可以和同事们一块乐呵乐呵，不然以为我尿性肯定玩不来。另一个更重要的原因是，看他们确实找不到人了，眼看节目就夭折了，想作为朋友帮他们一把。既然踏入贼船，就尽量把节目准备好吧。</p><a id="more"></a><p><img src="http://oeckzejn4.bkt.clouddn.com/20180121151654632445262.jpg" alt="积极准备节目的小伙伴"><br>我好像真的不适合演戏，不能游刃有余的控制自己的表情和动作，经常能自己感觉到面部的僵硬。我感觉自己是内心挺丰富一人啊，难道大隐隐身于内心，不轻易流露于表面？周末去了北京棕榈泉国际俱乐部，我们年会的宴会厅就在这里，今天是去排练年会的节目。<br><img src="http://oeckzejn4.bkt.clouddn.com/20180121151654635728305.jpg" alt="相当认真"><br>通过这个事，有一个感悟，人还是要多准备第二第三技能。不论是生存生活还是怡情交际，多一门技能，多一个特长都能极大的扩展你的生活面，提高生活的幸福感。比如，多一门技能，如写作、理财，完全可以成为创收的另一途径，此所谓『技多不压力身』，因为面对风起云涌的社会发展，不一定什么时候，你的本业就不保，那时你的副业很可能成为你安身立命之本。也要多些特长，比如绘画、唱歌、舞蹈，乐器。你可以发现，你身边有某种特长的人更比较自信和受欢迎，不但可以闲暇之时，怡情自乐，陶冶自己，也能关键时候，登临舞台，绽放自己，赢得关注。特长的培养不要当做小时候做的事情，长大后一样可以从头学习一样东西。人生的可能性可以自己塑造，不要拘泥于一些外接环境和消极的心态。我就是那种没什么特长的人，但是我已经做了自己的『孵化』项目，所谓『孵化』就是培养兴趣，练习技能，暗帝规划自己的潜力股。<br><img src="http://oeckzejn4.bkt.clouddn.com/2018012115165469937725.jpg" alt="感觉这图很溜"></p><p>从俱乐部出来，看到一栋建筑很有气势，赶忙按下快门。<br><img src="http://oeckzejn4.bkt.clouddn.com/20180121151654710637407.jpg" alt="建筑"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;年会临近，同事们都开始准备节目。在同事的威逼利诱下，我也无奈的参加了他们准备的小品《吃面》，在里面试演员『会计』一角色。这个角色台词少，另外可以和同事们一块乐呵乐呵，不然以为我尿性肯定玩不来。另一个更重要的原因是，看他们确实找不到人了，眼看节目就夭折了，想作为朋友帮他们一把。既然踏入贼船，就尽量把节目准备好吧。&lt;/p&gt;
    
    </summary>
    
      <category term="周志" scheme="http://chuanqiang.github.io/categories/%E5%91%A8%E5%BF%97/"/>
    
    
      <category term="独白" scheme="http://chuanqiang.github.io/tags/%E7%8B%AC%E7%99%BD/"/>
    
      <category term="随笔" scheme="http://chuanqiang.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>胡适四十自述 - 书摘</title>
    <link href="http://chuanqiang.github.io/2018/01/21/%E8%83%A1%E9%80%82%E5%9B%9B%E5%8D%81%E8%87%AA%E8%BF%B0%20-%20%E4%B9%A6%E6%91%98/"/>
    <id>http://chuanqiang.github.io/2018/01/21/胡适四十自述 - 书摘/</id>
    <published>2018-01-21T13:32:19.000Z</published>
    <updated>2018-01-21T13:38:23.420Z</updated>
    
    <content type="html"><![CDATA[<h3 id="内容简介"><a href="#内容简介" class="headerlink" title="内容简介"></a>内容简介</h3><p>《胡适四十自述》是胡适生前唯一亲笔撰写的记录其早年经历和心路历程的自传，也是中国现代传记文学的名篇之作。在《胡适:四十自述(图文典藏版)》中，胡适回顾了自己童年、少年与青年时代的人生经历，全面总结了自己早年的心路成长历程。</p><a id="more"></a><p>《胡适:四十自述》是胡适先生与自己的过去进行的“心灵对话”，读《胡适:四十自述》我们可以从中感受胡适先生特有的睿智、幽默与文化气质，有助于我们了解一个真实的胡适，特别是胡适青少年时代的心路成长历程。</p><h3 id="作者简介"><a href="#作者简介" class="headerlink" title="作者简介"></a>作者简介</h3><p>胡适（1891—1962），安徽绩溪人。现代著名学者、诗人、历史家、文学家、哲学家，因提倡文学革命而成为新文化运动的领袖之一。曾任北京大学校长、台湾“中央研究院”院长等。有《胡适全集》44卷存世。</p><h3 id="关于为什么写传记"><a href="#关于为什么写传记" class="headerlink" title="关于为什么写传记"></a>关于为什么写传记</h3><p>我在这十几年中，因为深深的感觉中国最缺乏传记的文学，所以到处劝我的老辈朋友写他们的自传。不幸得很，这班老辈朋友虽然都答应了，终不肯下笔。最可悲的一个例子是林长民先生，他答应了写他的五十自述作他五十岁生日的纪念；到了生日那一天，他对我说：“适之，今年实在太忙了，自述写不成了；明年生日我一定补写出来。”不幸他庆祝了五十岁的生日之后，不上半年，他就死在郭松龄的战役里，他那富于浪漫意味的一生就成了一部人间永不能读的逸书了！</p><p>我们赤裸裸的叙述我们少年时代的琐碎生活，为的是希望社会上做过一番事业的人也会赤裸裸的记载他们的生活，给史家做材料，给文学开生路。</p><p>我在学堂里的名字是胡洪骍。有一天的早晨，我请我二哥代我想一个表字，二哥一面洗脸，一面说：“就用‘物竞天择，适者生存’的‘适’字。(胡适名字的来源)</p><h3 id="关于文学革命"><a href="#关于文学革命" class="headerlink" title="关于文学革命"></a>关于文学革命</h3><p>你这与奴才做奴才的奴才！我们若把这句话改作古文，“汝奴之奴”或他种译法，总不能有原文的力量。这岂不是因为死的文字不能表现活的话语？此种例证，何止千百？所以我们可以说：历史上的“文学革命”全是文学工具的革命。叔永诸人全不知道工具的重要，所以说“徒于文字形式上讨论，无当也”。他们忘了欧洲近代文学史的大教训！若没有各国的活语言作新工具，若近代欧洲文人都还须用那已死的拉丁文作工具，欧洲近代文学的勃兴是可能的吗？欧洲各国的文学革命只是文学工具的革命。中国文学史上几番革命也都是文学工具的革命。这是我的新觉悟。</p><p>国文要旨在通解普通语言文字，能自由发表思想，并使略解高深文字，涵养文学之兴趣，兼以启发智德。</p><h3 id="关于读书"><a href="#关于读书" class="headerlink" title="关于读书"></a>关于读书</h3><p>为什么要读书？有三点可以讲：第一，因为书是过去已经知道的智识学问和经验的一种记录，我们读书便是要接受这人类的遗产；第二，为要读书而读书，读了书便可以多读书；第三，读书可以帮助我们解决困难，应付环境，并可获得思想材料的来源。</p><h3 id="关于民气"><a href="#关于民气" class="headerlink" title="关于民气"></a>关于民气</h3><p>但群众的运动总是不能持久的。这并非中国人的“虎头蛇尾”“五分钟的热度”。这是世界人类的通病。所谓“民气”，所谓“群众运动”，都只是一时的大问题刺激起来的一种感情上的反应。感情的冲动是没有持久性的；无组织又无领袖的群众行动是最容易松散的。我们不看见北京大街的墙上大书着“打倒英日”“不要五分钟的热度”吗？其实写那些大字的人，写成之后，自己看着很满意，他的“热度”早已消除大半了；他回到家里，坐也坐得下了，睡也睡得着了。所谓“民气”，无论在中国在欧美，都是这样：突然而来，悠然而去。几天一次的公民大会，几天一次的示威游行，虽然可以勉强多维持一会儿，然而那回天安门打架之后，国民大会也就不容易召集了。</p><p>民气可以督促政府，政府可以利用民气：民气与政府相为声援方才可以收效。没有一个像样的政府，虽有民气，终不能单独成功。因为外国政府决不能直接和我们的群众办交涉；民众运动的影响（无论是一时的示威或是较有组织的经济抵制），终是间接的。一个健全的政府可以利用民气作后盾，在外交上可以多得胜利，至少也可以少吃点亏。若没有一个能运用民气的政府，我们可以断定民众运动的牺牲的大部分是白白地糟蹋了的。</p><h3 id="关于救国"><a href="#关于救国" class="headerlink" title="关于救国"></a>关于救国</h3><p>救国是一件顶大的事业：排队游街，高喊着“打倒英日强盗”，算不得救国事业；甚至于砍下手指写血书，甚至于蹈海投江，杀身殉国，都算不得救国的事业。救国的事业须要有各色各样的人才；真正的救国的预备在于把自己造成一个有用的人才。</p><p>易卜生说的好：真正的个人主义在于把你自己这块材料铸造成个东西。他又说：有时候我觉得这个世界就好像大海上翻了船，最要紧的是救出我自己。在这个高唱国家主义的时期，我们要很诚恳的指出：易卜生说的“真正的个人主义”正是到国家主义的唯一大路。救国须从救出你自己下手！</p><p>今日最大的危险是当国的人不明白他们干的事是一件绝大繁难的事。以一班没有现代学术训练的人，统治一个没有现代物质基础的大国家，天下的事有比这个更繁难的吗？要把这件大事办的好，没有别的法子，只有充分请教专家，充分运用科学。然而“行易”之说可以作一班不学无术的军人政客的护身符！此说不修正，专家政治决不会实现。</p><h3 id="关于做人"><a href="#关于做人" class="headerlink" title="关于做人"></a>关于做人</h3><p>为人之道，在率其性。子臣弟友，循理之正；谨乎庸言，勉乎庸行；以学为人，以期作圣。</p><p>范缜盛称无佛。子良曰，“君不信因果，何得有富贵贫贱？”缜曰，“人生如树花同发，随风而散，或拂帘幌，坠茵席之上；或关篱墙，落粪溷之中。坠茵席者，殿下是也。落粪溷者，下官是也。贵贱虽复殊途，因果竟在何处？”子良无以难。</p><p>世间最可厌恶的事莫如一张生气的脸；世间最下流的事莫如把生气的脸摆给旁人看。这比打骂还难受。</p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>『金瓶梅』这一部书，大家以为淫书，在禁止之列，其实也是极好的历史材料。日本的佛教大学，还把他当做课本呢，这个就可见他有历史的眼光。</p><p>未有四肢已断，五脏已瘵，筋脉已伤，血轮已涸，而身犹能存者；则亦未有其民愚陋怯弱涣散混浊而国犹能立者……苟有新民，何患无新制度，无新政府，无新国家！——《新民说》叙论他的根本主张是：吾思之，吾重思之，今日中国群治之现象殆无一不当从根柢处摧陷廓清，除旧而布新者也。——《新民议》</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;内容简介&quot;&gt;&lt;a href=&quot;#内容简介&quot; class=&quot;headerlink&quot; title=&quot;内容简介&quot;&gt;&lt;/a&gt;内容简介&lt;/h3&gt;&lt;p&gt;《胡适四十自述》是胡适生前唯一亲笔撰写的记录其早年经历和心路历程的自传，也是中国现代传记文学的名篇之作。在《胡适:四十自述(图文典藏版)》中，胡适回顾了自己童年、少年与青年时代的人生经历，全面总结了自己早年的心路成长历程。&lt;/p&gt;
    
    </summary>
    
      <category term="读书" scheme="http://chuanqiang.github.io/categories/%E8%AF%BB%E4%B9%A6/"/>
    
    
      <category term="书摘" scheme="http://chuanqiang.github.io/tags/%E4%B9%A6%E6%91%98/"/>
    
      <category term="传记" scheme="http://chuanqiang.github.io/tags/%E4%BC%A0%E8%AE%B0/"/>
    
      <category term="胡适" scheme="http://chuanqiang.github.io/tags/%E8%83%A1%E9%80%82/"/>
    
  </entry>
  
  <entry>
    <title>第二十四周 - 时间利用理想值</title>
    <link href="http://chuanqiang.github.io/2018/01/14/%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%9B%9B%E5%91%A8%20-%20%E6%97%B6%E9%97%B4%E5%88%A9%E7%94%A8%E7%90%86%E6%83%B3%E5%80%BC/"/>
    <id>http://chuanqiang.github.io/2018/01/14/第二十四周 - 时间利用理想值/</id>
    <published>2018-01-14T13:48:03.000Z</published>
    <updated>2018-01-14T15:03:06.009Z</updated>
    
    <content type="html"><![CDATA[<p>随着假期临近，心开始变得漂浮。就像飞行员坠机频率最高的时候恰恰是快要任务完成回国着陆的时候，面对即将迎面而来的美好时光，心潮澎湃，不能自已。告诉自己，别嘚瑟。</p><a id="more"></a><p>每周末，会眼巴巴的看着自己一周的耕耘和收获，像一个盼收的老农。而这一周，可以说是失败的一周，具体内容如下:</p><ul><li>影视 -  7小时30分钟 - 1小时4分钟/天<ul><li>动画『瑞克和莫蒂』第三季</li><li>纪录片『极地』</li><li>综艺『圆桌派』</li><li>电影『猫妖传』</li><li>其他</li></ul></li><li>阅读 - 6小时 30分钟 - 56分钟/天<ul><li>『北方的空地』</li><li>公众号文章</li><li>博客</li></ul></li><li>运动 - 4小时 - 34分钟/天<ul><li>快走</li><li>哑铃</li><li>腹肌撕裂者</li><li>跳绳</li></ul></li><li>写作 - 3小时 - 26分钟/天<ul><li>北方的空地 - 书摘</li><li>北方的空地 - 书评</li><li>中国国民性演变历程</li><li>第二十四周 - 浮躁</li></ul></li></ul><p>由于初用『时间块』这款软件，还没有养成时间记录的习惯，所以数据不尽完善。比如『音频』、『学习』和『工作』这三个板块的时间就十分残缺，以至没有列出。另外每个板块下的类目没有添加，使得时间的使用不细致。相信以后会记录的日臻完善，然后再进行统计、归纳、分析、评判的时候就更加有依据性。<br><img src="http://oeckzejn4.bkt.clouddn.com/20180114151594216645057.png" alt="时间块 APP.png"><br>通过上面的归纳，也能看出，『正能量』的时间段太少，除去影视栏，总共才只有13个小时。我理想的时间利用计算如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">时间利用的理想值 = 24*7 - 10*5 - 10*7 = 48h</div><div class="line">(可利用时间 = 一周总时间 - 工作时间 - 睡眠、饮食等必要时间)</div></pre></td></tr></table></figure></p><p>但是，因为一些事情，肯定是达不到这个理想值的，我的当下目标是30小时，也就是 62.5%，这也就是一个及格的分数，可以说是对自己的要求并不高。但是这一周只有13小时，分数是27%，显示这是一个令人失望的不及格的分数。</p><p>虽然有一部分是统计上的问题，这个是工具上的完善。但是失败的本质是掩盖不住的。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;随着假期临近，心开始变得漂浮。就像飞行员坠机频率最高的时候恰恰是快要任务完成回国着陆的时候，面对即将迎面而来的美好时光，心潮澎湃，不能自已。告诉自己，别嘚瑟。&lt;/p&gt;
    
    </summary>
    
      <category term="周志" scheme="http://chuanqiang.github.io/categories/%E5%91%A8%E5%BF%97/"/>
    
    
      <category term="独白" scheme="http://chuanqiang.github.io/tags/%E7%8B%AC%E7%99%BD/"/>
    
      <category term="随笔" scheme="http://chuanqiang.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
